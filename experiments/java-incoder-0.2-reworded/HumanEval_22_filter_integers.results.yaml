language: java
name: HumanEval_22_filter_integers
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            } else if (value instanceof Number) {\n\
    \                result.add(((Number)value).longValue());\n            }\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp080b_xb0.java:27: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> filtered = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                filtered.add((Long)\
    \ value);\n            }\n        }\n        return filtered;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0xyo__77.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ o : values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_48ud6f4.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ o : values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_48ud6f4.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(v -> v.getClass().isInstance(v)).map(v\
    \ -> (Long)v).collect(Collectors.toCollection(ArrayList::new));\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphiw9qyno.java:19: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> filtered = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  filtered.add((Long) value);\n            }\n        }\n        return filtered;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpofee82z0.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm_o2aflt.java:21: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(v -> v.getClass().isAssignableFrom(Long.class)).map(v\
    \ -> (Long)v).collect(Collectors.toList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptii2qrx7.java:15: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return values.stream().filter(v -> v.getClass().isAssignableFrom(Long.class)).map(v\
    \ -> (Long)v).collect(Collectors.toList());\n                                \
    \                                                                            \
    \   ^\n    equality constraints: List<Long>\n    upper bounds: ArrayList<Long>,Object\n\
    \  where R,A,T are type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    T extends Object declared in interface Stream\n/tmp/tmptii2qrx7.java:19:\
    \ error: cannot find symbol\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \                                                                            \
    \                 ^\n  symbol:   method of()\n  location: interface Map\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> filtered = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  filtered.add((Long) value);\n            }\n        }\n        return filtered;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpofee82z0.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            } else if (value instanceof Integer)\
    \ {\n                result.add((Long)value);\n            } else if (value instanceof\
    \ Number) {\n                result.add(((Number)value).longValue());\n      \
    \      } else if (value instanceof String) {\n                result.add(((String)value).longValue());\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().flatMap(e\
    \ -> e.getValue().stream()).collect(Collectors.toList()).stream().mapToLong(Long::longValue).collect(Collectors.toList()));\n\
    \            } else if (value instanceof List) {\n                result.add(((List)value).stream().flatMap(e\
    \ -> e).collect(Collectors.toList()).stream().mapToLong(Long::longValue).collect(Collectors.toList()));\n\
    \            } else {\n                result.add(0);\n            }\n       \
    \ }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6sce2o7q.java:24: error: cannot find symbol\n                result.add(((String)value).longValue());\n\
    \                                          ^\n  symbol:   method longValue()\n\
    \  location: class String\n/tmp/tmp6sce2o7q.java:26: error: cannot find symbol\n\
    \                result.add(((Map)value).entrySet().stream().flatMap(e -> e.getValue().stream()).collect(Collectors.toList()).stream().mapToLong(Long::longValue).collect(Collectors.toList()));\n\
    \                                                                          ^\n\
    \  symbol:   method getValue()\n  location: variable e of type Object\n/tmp/tmp6sce2o7q.java:26:\
    \ error: cannot find symbol\n                result.add(((Map)value).entrySet().stream().flatMap(e\
    \ -> e.getValue().stream()).collect(Collectors.toList()).stream().mapToLong(Long::longValue).collect(Collectors.toList()));\n\
    \                                                                            \
    \                                                ^\n  symbol:   method stream()\n\
    \  location: class Object\n/tmp/tmp6sce2o7q.java:26: error: invalid method reference\n\
    \                result.add(((Map)value).entrySet().stream().flatMap(e -> e.getValue().stream()).collect(Collectors.toList()).stream().mapToLong(Long::longValue).collect(Collectors.toList()));\n\
    \                                                                            \
    \                                                                    ^\n  non-static\
    \ method longValue() cannot be referenced from a static context\n/tmp/tmp6sce2o7q.java:28:\
    \ error: cannot find symbol\n                result.add(((List)value).stream().flatMap(e\
    \ -> e).collect(Collectors.toList()).stream().mapToLong(Long::longValue).collect(Collectors.toList()));\n\
    \                                                                            \
    \                  ^\n  symbol:   method stream()\n  location: class Object\n\
    /tmp/tmp6sce2o7q.java:28: error: invalid method reference\n                result.add(((List)value).stream().flatMap(e\
    \ -> e).collect(Collectors.toList()).stream().mapToLong(Long::longValue).colle"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjaw9h55a.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ o : values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            } else if (o instanceof Number) {\n                result.add(((Number)o).longValue());\n\
    \            } else {\n                result.add(0l);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfsym_2rz.java:29: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object o :\
    \ values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0pobayo_.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for(Object o\
    \ : values) {\n            if(o instanceof Long) {\n                result.add((Long)o);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuzg5lpaj.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Integer) {\n              \
    \  result.add((Long) value);\n            } else if (value instanceof String)\
    \ {\n                result.add((Long) value);\n            } else if (value instanceof\
    \ Map) {\n                result.add((Long) value);\n            } else if (value\
    \ instanceof List) {\n                result.add((Long) value);\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5i3suwa9.java:33: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> filtered = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  filtered.add((Long) value);\n            }\n        }\n        return filtered;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpofee82z0.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            } else if (value instanceof Integer)\
    \ {\n                result.add((Long) value);\n            } else {\n       \
    \         result.add(0l);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvcm7rk4k.java:29)\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(v\
    \ -> v instanceof Long).forEach(l -> result.add(Long.parseLong(String.valueOf(l))));\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> filtered = new ArrayList<Long>();\n        for (Object\
    \ o : values) {\n            if (o instanceof Long) {\n                filtered.add((Long)o);\n\
    \            }\n        }\n        return filtered;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm_o2aflt.java:21: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ o : values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_48ud6f4.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for(Object value\
    \ : values) {\n            if(value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Integer) {\n                result.add((Integer)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpljan4vx9.java:20: error: incompatible types: Integer cannot be\
    \ converted to Long\n                result.add((Integer)value);\n           \
    \                ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(value -> value instanceof Long).map(Long::valueOf).collect(Collectors.toList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaddt3id.java:15: error: incompatible types: cannot infer type-variable(s)\
    \ R\n        return values.stream().filter(value -> value instanceof Long).map(Long::valueOf).collect(Collectors.toList());\n\
    \                                                                         ^\n\
    \    (argument mismatch; invalid method reference\n      no suitable method found\
    \ for valueOf(Object)\n          method Long.valueOf(String) is not applicable\n\
    \            (argument mismatch; Object cannot be converted to String)\n     \
    \     method Long.valueOf(long) is not applicable\n            (argument mismatch;\
    \ Object cannot be converted to long))\n  where R,T are type-variables:\n    R\
    \ extends Object declared in method <R>map(Function<? super T,? extends R>)\n\
    \    T extends Object declared in interface Stream\n1 error\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Number) {\n               \
    \ result.add(((Number) value).longValue());\n            } else if (value instanceof\
    \ String) {\n                result.add(Long.parseLong((String) value));\n   \
    \         } else if (value instanceof Map) {\n                result.add(((Map)\
    \ value).entrySet().stream().flatMap(entry -> entry.getValue().stream()).collect(Collectors.toList()));\n\
    \            } else if (value instanceof List) {\n                result.add(((List)\
    \ value).stream().flatMap(value -> filterIntegers((ArrayList<Object>) value)).collect(Collectors.toList()));\n\
    \            } else {\n                result.add(value);\n            }\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf2y_tx4g.java:24: error: incompatible types: Object cannot be converted\
    \ to Long\n                result.add(((Map) value).entrySet().stream().flatMap(entry\
    \ -> entry.getValue().stream()).collect(Collectors.toList()));\n             \
    \                                                                            \
    \                       ^\n/tmp/tmpf2y_tx4g.java:24: error: cannot find symbol\n\
    \                result.add(((Map) value).entrySet().stream().flatMap(entry ->\
    \ entry.getValue().stream()).collect(Collectors.toList()));\n                \
    \                                                                   ^\n  symbol:\
    \   method getValue()\n  location: variable entry of type Object\n/tmp/tmpf2y_tx4g.java:26:\
    \ error: incompatible types: Object cannot be converted to Long\n            \
    \    result.add(((List) value).stream().flatMap(value -> filterIntegers((ArrayList<Object>)\
    \ value)).collect(Collectors.toList()));\n                                   \
    \                                                                            \
    \       ^\n/tmp/tmpf2y_tx4g.java:26: error: variable value is already defined\
    \ in method filterIntegers(ArrayList<Object>)\n                result.add(((List)\
    \ value).stream().flatMap(value -> filterIntegers((ArrayList<Object>) value)).collect(Collectors.toList()));\n\
    \                                                           ^\n/tmp/tmpf2y_tx4g.java:28:\
    \ error: incompatible types: Object cannot be converted to Long\n            \
    \    result.add(value);\n                           ^\nNote: /tmp/tmpf2y_tx4g.java\
    \ uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked\
    \ for details.\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n5 errors\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(v -> v.getClass().isAssignableFrom(Long.class)).map(v\
    \ -> (Long)v).collect(Collectors.toList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptii2qrx7.java:15: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return values.stream().filter(v -> v.getClass().isAssignableFrom(Long.class)).map(v\
    \ -> (Long)v).collect(Collectors.toList());\n                                \
    \                                                                            \
    \   ^\n    equality constraints: List<Long>\n    upper bounds: ArrayList<Long>,Object\n\
    \  where R,A,T are type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    T extends Object declared in interface Stream\n/tmp/tmptii2qrx7.java:19:\
    \ error: cannot find symbol\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \                                                                            \
    \                 ^\n  symbol:   method of()\n  location: interface Map\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> filtered = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  filtered.add((Long) value);\n            }\n        }\n        return filtered;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpofee82z0.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ o : values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_48ud6f4.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(o -> o instanceof Long).map(o -> (Long)o).collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Number) {\n               \
    \ result.add(((Number) value).longValue());\n            }\n        }\n      \
    \  return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwxe5x1wn.java:27)\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Integer) {\n              \
    \  result.add((Long) value);\n            } else {\n                result.add(0l);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcfnnzle7.java:29)\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        values.stream().filter(v\
    \ -> v instanceof Long).forEach(result ::add);\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm9qs36tm.java:16: error: incompatible types: invalid method reference\n\
    \        values.stream().filter(v -> v instanceof Long).forEach(result ::add);\n\
    \                                                               ^\n    incompatible\
    \ types: Object cannot be converted to Long\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm_o2aflt.java:21: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for(Object o\
    \ : values) {\n            if(o instanceof Long) {\n                result.add((Long)o);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuzg5lpaj.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(v\
    \ -> v instanceof Long).forEach(result ::add);\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx_kok8tf.java:16: error: incompatible types: invalid method reference\n\
    \        values.stream().filter(v -> v instanceof Long).forEach(result ::add);\n\
    \                                                               ^\n    incompatible\
    \ types: Object cannot be converted to Long\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(v -> v.getClass().isAssignableFrom(Long.class)).map(v\
    \ -> (Long)v).collect(Collectors.toList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptii2qrx7.java:15: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return values.stream().filter(v -> v.getClass().isAssignableFrom(Long.class)).map(v\
    \ -> (Long)v).collect(Collectors.toList());\n                                \
    \                                                                            \
    \   ^\n    equality constraints: List<Long>\n    upper bounds: ArrayList<Long>,Object\n\
    \  where R,A,T are type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    T extends Object declared in interface Stream\n/tmp/tmptii2qrx7.java:19:\
    \ error: cannot find symbol\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \                                                                            \
    \                 ^\n  symbol:   method of()\n  location: interface Map\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ o : values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_48ud6f4.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm_o2aflt.java:21: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for(Object value\
    \ : values) {\n            if(value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm_o2aflt.java:21: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm_o2aflt.java:21: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for(Object o\
    \ : values) {\n            if(o instanceof Long) {\n                result.add((Long)o);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuzg5lpaj.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjaw9h55a.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ o : values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_48ud6f4.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> filtered = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                filtered.add((Long)\
    \ value);\n            }\n        }\n        return filtered;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0xyo__77.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object o :\
    \ values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0pobayo_.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Number) {\n                result.add(((Number)value).longValue());\n\
    \            } else if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().flatMap(e\
    \ -> e.getValue().stream()).collect(Collectors.toList()));\n            } else\
    \ if (value instanceof List) {\n                result.add(((List)value).stream().flatMap(e\
    \ -> e).collect(Collectors.toList()));\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkuv_roee.java:24: error: incompatible types: Object cannot be converted\
    \ to Long\n                result.add(((Map)value).entrySet().stream().flatMap(e\
    \ -> e.getValue().stream()).collect(Collectors.toList()));\n                 \
    \                                                                            \
    \          ^\n/tmp/tmpkuv_roee.java:24: error: cannot find symbol\n          \
    \      result.add(((Map)value).entrySet().stream().flatMap(e -> e.getValue().stream()).collect(Collectors.toList()));\n\
    \                                                                          ^\n\
    \  symbol:   method getValue()\n  location: variable e of type Object\n/tmp/tmpkuv_roee.java:26:\
    \ error: incompatible types: Object cannot be converted to Long\n            \
    \    result.add(((List)value).stream().flatMap(e -> e).collect(Collectors.toList()));\n\
    \                                                                         ^\n\
    Note: /tmp/tmpkuv_roee.java uses unchecked or unsafe operations.\nNote: Recompile\
    \ with -Xlint:unchecked for details.\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            } else if (value instanceof Number) {\n\
    \                result.add(((Number)value).longValue());\n            } else\
    \ {\n                result.add(0l);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp538v2zz6.java:29)\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjaw9h55a.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Integer) {\n              \
    \  result.add((Long) value);\n            } else if (value instanceof Number)\
    \ {\n                result.add(((Number) value).longValue());\n            }\
    \ else {\n                result.add(0l);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp905yfc_.java:31)\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm_o2aflt.java:21: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(v\
    \ -> v.getClass().isAssignableFrom(Long.class)).forEach(result ::add);\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptzv5apz4.java:16: error: incompatible types: invalid method reference\n\
    \        values.stream().filter(v -> v.getClass().isAssignableFrom(Long.class)).forEach(result\
    \ ::add);\n                                                                  \
    \                     ^\n    incompatible types: Object cannot be converted to\
    \ Long\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> filtered = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Integer) {\n           \
    \     filtered.add((Long)value);\n            }\n        }\n        return filtered;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp3v63mzk.java:25)\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjaw9h55a.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm_o2aflt.java:21: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            } else if (value instanceof Integer) {\n                result.add((Integer)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpljan4vx9.java:20: error: incompatible types: Integer cannot be\
    \ converted to Long\n                result.add((Integer)value);\n           \
    \                ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(v\
    \ -> v.getClass().isInstance(v)).map(v -> (Long)v).forEach(result::add);\n   \
    \     return result;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ClassCastException: class java.util.HashMap\
    \ cannot be cast to class java.lang.Long (java.util.HashMap and java.lang.Long\
    \ are in module java.base of loader 'bootstrap')\n\tat Problem.lambda$filterIntegers$1(tmpfu1y2wew.java:16)\n\
    \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\
    \tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n\
    \tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\
    \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\
    \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\
    \tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\
    \tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\
    \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\
    \tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\
    \tat Problem.filterIntegers(tmpfu1y2wew.java:16)\n\tat Problem.main(tmpfu1y2wew.java:21)\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(o -> o instanceof Long).map(o -> (Long)o).collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> filtered = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  filtered.add((Long)value);\n            }\n        }\n        return filtered;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> filtered = new ArrayList<Long>();\n        for (Object\
    \ o : values) {\n            if (o instanceof Long) {\n                filtered.add((Long)o);\n\
    \            }\n        }\n        return filtered;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Number) {\n               \
    \ result.add(((Number) value).longValue());\n            } else {\n          \
    \      result.add(0l);\n            }\n        }\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp06xblr96.java:29)\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795194
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(value -> value instanceof Long).map(Long::valueOf).collect(Collectors.toList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaddt3id.java:15: error: incompatible types: cannot infer type-variable(s)\
    \ R\n        return values.stream().filter(value -> value instanceof Long).map(Long::valueOf).collect(Collectors.toList());\n\
    \                                                                         ^\n\
    \    (argument mismatch; invalid method reference\n      no suitable method found\
    \ for valueOf(Object)\n          method Long.valueOf(String) is not applicable\n\
    \            (argument mismatch; Object cannot be converted to String)\n     \
    \     method Long.valueOf(long) is not applicable\n            (argument mismatch;\
    \ Object cannot be converted to long))\n  where R,T are type-variables:\n    R\
    \ extends Object declared in method <R>map(Function<? super T,? extends R>)\n\
    \    T extends Object declared in interface Stream\n1 error\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> filtered = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  filtered.add((Long) value);\n            }\n        }\n        return filtered;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpofee82z0.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Integer) {\n           \
    \     result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptzxa_d31.java:25)\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ o : values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_48ud6f4.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(v\
    \ -> v instanceof Long).forEach(result ::add);\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx_kok8tf.java:16: error: incompatible types: invalid method reference\n\
    \        values.stream().filter(v -> v instanceof Long).forEach(result ::add);\n\
    \                                                               ^\n    incompatible\
    \ types: Object cannot be converted to Long\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> filtered = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  filtered.add((Long) value);\n            }\n        }\n        return filtered;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpofee82z0.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object o :\
    \ values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0pobayo_.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjaw9h55a.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjaw9h55a.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(v -> v instanceof Long).map(v -> (Long)v).collect(Collectors.toList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8h3n6qo5.java:15: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return values.stream().filter(v -> v instanceof\
    \ Long).map(v -> (Long)v).collect(Collectors.toList());\n                    \
    \                                                                   ^\n    equality\
    \ constraints: List<T#2>\n    lower bounds: ArrayList<Long>,Object\n  where R,A,T#1,T#2\
    \ are type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T#1,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T#1,A,R>)\n    T#1 extends Object declared in interface Stream\n    T#2\
    \ extends Object declared in method <T#2>toList()\n1 error\n"
  stdout: ''
  timestamp: 1659795272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> filtered = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  filtered.add((Long)value);\n            }\n        }\n        return filtered;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkj7u05e1.java:25)\n"
  stdout: ''
  timestamp: 1659795272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        values.stream().filter(v\
    \ -> v instanceof Long).forEach(result ::add);\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm9qs36tm.java:16: error: incompatible types: invalid method reference\n\
    \        values.stream().filter(v -> v instanceof Long).forEach(result ::add);\n\
    \                                                               ^\n    incompatible\
    \ types: Object cannot be converted to Long\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjaw9h55a.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object o :\
    \ values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0pobayo_.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        values.stream().filter(v\
    \ -> v.getClass().isAssignableFrom(Long.class)).forEach(result ::add);\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp72iao5ju.java:16: error: incompatible types: invalid method reference\n\
    \        values.stream().filter(v -> v.getClass().isAssignableFrom(Long.class)).forEach(result\
    \ ::add);\n                                                                  \
    \                     ^\n    incompatible types: Object cannot be converted to\
    \ Long\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659795272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            } else if (value instanceof Number)\
    \ {\n                result.add(((Number) value).longValue());\n            }\
    \ else if (value instanceof String) {\n                result.add((String) value).replaceAll(\"\
    [^0-9]\", \"\");\n            }\n        }\n        return result;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp54drphes.java:22: error: incompatible types: String cannot be converted\
    \ to Long\n                result.add((String) value).replaceAll(\"[^0-9]\", \"\
    \");\n                           ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659795272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Number) {\n               \
    \ result.add(((Number) value).longValue());\n            } else if (value instanceof\
    \ String) {\n                result.add(Long.parseLong((String) value));\n   \
    \         } else if (value instanceof Map) {\n                result.add(((Map)\
    \ value).keySet().stream().map(Long::parseLong).collect(Collectors.toList()));\n\
    \            } else if (value instanceof List) {\n                result.add(((List)\
    \ value).stream().map(Long::parseLong).collect(Collectors.toList()));\n      \
    \      } else {\n                result.add(value);\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1xbxvb9m.java:24: error: incompatible types: invalid method reference\n\
    \                result.add(((Map) value).keySet().stream().map(Long::parseLong).collect(Collectors.toList()));\n\
    \                                                               ^\n    incompatible\
    \ types: Object cannot be converted to String\n/tmp/tmp1xbxvb9m.java:26: error:\
    \ incompatible types: invalid method reference\n                result.add(((List)\
    \ value).stream().map(Long::parseLong).collect(Collectors.toList()));\n      \
    \                                                 ^\n    incompatible types: Object\
    \ cannot be converted to String\n/tmp/tmp1xbxvb9m.java:28: error: incompatible\
    \ types: Object cannot be converted to Long\n                result.add(value);\n\
    \                           ^\nNote: /tmp/tmp1xbxvb9m.java uses unchecked or unsafe\
    \ operations.\nNote: Recompile with -Xlint:unchecked for details.\nNote: Some\
    \ messages have been simplified; recompile with -Xdiags:verbose to get full output\n\
    3 errors\n"
  stdout: ''
  timestamp: 1659795272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Integer) {\n              \
    \  result.add((Long) value);\n            } else {\n                result.add(0l);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcfnnzle7.java:29)\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        values.stream().filter(Objects::nonNull).forEach(value\
    \ -> {\n            try {\n                result.add((Long)value);\n        \
    \    } catch (ClassCastException e) {\n                result.add(0l);\n     \
    \       }\n        });\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx2rn6pny.java:27)\n"
  stdout: ''
  timestamp: 1659795272
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> filtered = new ArrayList<Long>();\n        for (Object\
    \ o : values) {\n            if (o instanceof Long) {\n                filtered.add((Long)o);\n\
    \            }\n        }\n        return filtered;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkj7u05e1.java:25)\n"
  stdout: ''
  timestamp: 1659795272
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(v\
    \ -> v.getClass().isAssignableFrom(Long.class)).map(v -> (Long)v).forEach(result\
    \ ::add);\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ o : values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_48ud6f4.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            } else if (value instanceof Integer)\
    \ {\n                result.add((Long)value);\n            } else if (value instanceof\
    \ Number) {\n                result.add(((Number) value).longValue());\n     \
    \       }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9cetmjyy.java:29)\n"
  stdout: ''
  timestamp: 1659795272
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object o :\
    \ values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0pobayo_.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjaw9h55a.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm_o2aflt.java:21: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for(Object value\
    \ : values) {\n            if(value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(v\
    \ -> v instanceof Long).forEach(result ::add);\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx_kok8tf.java:16: error: incompatible types: invalid method reference\n\
    \        values.stream().filter(v -> v instanceof Long).forEach(result ::add);\n\
    \                                                               ^\n    incompatible\
    \ types: Object cannot be converted to Long\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            } else if (value instanceof Integer)\
    \ {\n                result.add((Long) value);\n            } else {\n       \
    \         result.add(0l);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvcm7rk4k.java:29)\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(v\
    \ -> v instanceof Long).forEach(l -> result.add(l));\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps8dmlumm.java:16: error: incompatible types: Object cannot be converted\
    \ to Long\n        values.stream().filter(v -> v instanceof Long).forEach(l ->\
    \ result.add(l));\n                                                          \
    \                     ^\nNote: Some messages have been simplified; recompile with\
    \ -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659795272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(value -> value instanceof Long).map(Long::valueOf).collect(Collectors.toList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppaddt3id.java:15: error: incompatible types: cannot infer type-variable(s)\
    \ R\n        return values.stream().filter(value -> value instanceof Long).map(Long::valueOf).collect(Collectors.toList());\n\
    \                                                                         ^\n\
    \    (argument mismatch; invalid method reference\n      no suitable method found\
    \ for valueOf(Object)\n          method Long.valueOf(String) is not applicable\n\
    \            (argument mismatch; Object cannot be converted to String)\n     \
    \     method Long.valueOf(long) is not applicable\n            (argument mismatch;\
    \ Object cannot be converted to long))\n  where R,T are type-variables:\n    R\
    \ extends Object declared in method <R>map(Function<? super T,? extends R>)\n\
    \    T extends Object declared in interface Stream\n1 error\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm_o2aflt.java:21: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> filtered = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  filtered.add((Long) value);\n            }\n        }\n        return filtered;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpofee82z0.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(v\
    \ -> v instanceof Long).forEach(result ::add);\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx_kok8tf.java:16: error: incompatible types: invalid method reference\n\
    \        values.stream().filter(v -> v instanceof Long).forEach(result ::add);\n\
    \                                                               ^\n    incompatible\
    \ types: Object cannot be converted to Long\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(value -> value instanceof Long).map(value\
    \ -> (Long)value).collect(Collectors.toList());\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1u0ydhyq.java:15: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return values.stream().filter(value -> value\
    \ instanceof Long).map(value -> (Long)value).collect(Collectors.toList());\n \
    \                                                                            \
    \                          ^\n    equality constraints: List<T#2>\n    lower bounds:\
    \ ArrayList<Long>,Object\n  where R,A,T#1,T#2 are type-variables:\n    R extends\
    \ Object declared in method <R,A>collect(Collector<? super T#1,A,R>)\n    A extends\
    \ Object declared in method <R,A>collect(Collector<? super T#1,A,R>)\n    T#1\
    \ extends Object declared in interface Stream\n    T#2 extends Object declared\
    \ in method <T#2>toList()\n1 error\n"
  stdout: ''
  timestamp: 1659795272
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> filtered = new ArrayList<>();\n        for (Object o\
    \ : values) {\n            if (o instanceof Long) {\n                filtered.add((Long)o);\n\
    \            }\n        }\n        return filtered;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> filtered = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  filtered.add((Long) value);\n            }\n        }\n        return filtered;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpofee82z0.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(Objects::nonNull).forEach(value\
    \ -> {\n            try {\n                result.add((Long)value);\n        \
    \    } catch (ClassCastException cce) {\n                result.add(0l);\n   \
    \         }\n        });\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd0lg6pnw.java:27)\n"
  stdout: ''
  timestamp: 1659795272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long)value);\n            } else if (value instanceof Number) {\n\
    \                result.add(((Number)value).longValue());\n            } else\
    \ if (value instanceof String) {\n                result.add(Long.parseLong((String)value));\n\
    \            } else if (value instanceof Map) {\n                result.add(((Map)value).entrySet().stream().map(e\
    \ -> ((Map.Entry)e).getValue()).collect(Collectors.toList()));\n            }\
    \ else if (value instanceof List) {\n                result.add(((List)value).stream().map(e\
    \ -> ((Long)e)).collect(Collectors.toList()));\n            }\n        }\n   \
    \     return result;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf6fn4po3.java:24: error: incompatible types: Object cannot be converted\
    \ to Long\n                result.add(((Map)value).entrySet().stream().map(e ->\
    \ ((Map.Entry)e).getValue()).collect(Collectors.toList()));\n                \
    \                                                                            \
    \           ^\n/tmp/tmpf6fn4po3.java:26: error: incompatible types: Object cannot\
    \ be converted to Long\n                result.add(((List)value).stream().map(e\
    \ -> ((Long)e)).collect(Collectors.toList()));\n                             \
    \                                                ^\nNote: /tmp/tmpf6fn4po3.java\
    \ uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked\
    \ for details.\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659795272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object o :\
    \ values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0pobayo_.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Integer) {\n           \
    \     result.add((Long)value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptzxa_d31.java:25)\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        values.stream().filter(value\
    \ -> value instanceof Long).forEach(value -> result.add((Long)value));\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for(Object value\
    \ : values) {\n            if(value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> filtered = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  filtered.add((Long) value);\n            }\n        }\n        return filtered;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpofee82z0.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(v\
    \ -> v.getClass().isAssignableFrom(Long.class)).forEach(result ::add);\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptzv5apz4.java:16: error: incompatible types: invalid method reference\n\
    \        values.stream().filter(v -> v.getClass().isAssignableFrom(Long.class)).forEach(result\
    \ ::add);\n                                                                  \
    \                     ^\n    incompatible types: Object cannot be converted to\
    \ Long\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object o :\
    \ values) {\n            if (o instanceof Integer) {\n                result.add((Long)o);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpotoz67ki.java:25)\n"
  stdout: ''
  timestamp: 1659795272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            } else if (value instanceof Number)\
    \ {\n                result.add(((Number) value).longValue());\n            }\
    \ else if (value instanceof String) {\n                result.add((String) value).replaceAll(\"\
    [^0-9]\", \"\").length() == 0 ? null : Long.parseLong((String) value);\n     \
    \       }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpplz_usoe.java:22: error: not a statement\n                result.add((String)\
    \ value).replaceAll(\"[^0-9]\", \"\").length() == 0 ? null : Long.parseLong((String)\
    \ value);\n                                                                  \
    \                ^\n1 error\n"
  stdout: ''
  timestamp: 1659795272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> filtered = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  filtered.add((Long) value);\n            }\n        }\n        return filtered;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpofee82z0.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(v\
    \ -> v instanceof Long).forEach(l -> result.add(l));\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps8dmlumm.java:16: error: incompatible types: Object cannot be converted\
    \ to Long\n        values.stream().filter(v -> v instanceof Long).forEach(l ->\
    \ result.add(l));\n                                                          \
    \                     ^\nNote: Some messages have been simplified; recompile with\
    \ -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659795272
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object o :\
    \ values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            } else if (o instanceof Integer) {\n                result.add((Integer)o);\n\
    \            } else {\n                result.add(null);\n            }\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2xwyeb4b.java:20: error: incompatible types: Integer cannot be\
    \ converted to Long\n                result.add((Integer)o);\n               \
    \            ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659795272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ o : values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_48ud6f4.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ o : values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_48ud6f4.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for(Object value\
    \ : values) {\n            if(value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Integer) {\n              \
    \  result.add((Long) value);\n            } else {\n                result.add(0l);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcfnnzle7.java:29)\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(v -> v.getClass().isAssignableFrom(Long.class)).map(v\
    \ -> (Long)v).collect(Collectors.toList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptii2qrx7.java:15: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return values.stream().filter(v -> v.getClass().isAssignableFrom(Long.class)).map(v\
    \ -> (Long)v).collect(Collectors.toList());\n                                \
    \                                                                            \
    \   ^\n    equality constraints: List<Long>\n    upper bounds: ArrayList<Long>,Object\n\
    \  where R,A,T are type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T,A,R>)\n    T extends Object declared in interface Stream\n/tmp/tmptii2qrx7.java:19:\
    \ error: cannot find symbol\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \                                                                            \
    \                 ^\n  symbol:   method of()\n  location: interface Map\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> filtered = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  filtered.add((Long) value);\n            }\n        }\n        return filtered;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpofee82z0.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Number) {\n               \
    \ result.add(((Number) value).longValue());\n            } else if (value instanceof\
    \ String) {\n                result.add(Long.parseLong((String) value));\n   \
    \         } else if (value instanceof Map) {\n                result.add(((Map)\
    \ value).entrySet().stream().map(Map.Entry::getValue).collect(Collectors.toList()));\n\
    \            } else if (value instanceof List) {\n                result.add(((List)\
    \ value).stream().map(Object::toString).collect(Collectors.toList()));\n     \
    \       }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsgto588a.java:24: error: incompatible types: invalid method reference\n\
    \                result.add(((Map) value).entrySet().stream().map(Map.Entry::getValue).collect(Collectors.toList()));\n\
    \                                                                 ^\n    method\
    \ getValue in interface Entry<K,V> cannot be applied to given types\n      required:\
    \ no arguments\n      found:    Object\n      reason: actual and formal argument\
    \ lists differ in length\n  where K,V are type-variables:\n    K extends Object\
    \ declared in interface Entry\n    V extends Object declared in interface Entry\n\
    /tmp/tmpsgto588a.java:26: error: incompatible types: Object cannot be converted\
    \ to Long\n                result.add(((List) value).stream().map(Object::toString).collect(Collectors.toList()));\n\
    \                                                                            \
    \    ^\nNote: /tmp/tmpsgto588a.java uses unchecked or unsafe operations.\nNote:\
    \ Recompile with -Xlint:unchecked for details.\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659795272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjaw9h55a.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ o : values) {\n            if (o instanceof Long) {\n                result.add((Long)o);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_48ud6f4.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> filtered = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  filtered.add((Long) value);\n            }\n        }\n        return filtered;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpofee82z0.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> filtered = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  filtered.add((Long) value);\n            }\n        }\n        return filtered;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpofee82z0.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        values.stream().filter(v\
    \ -> v instanceof Long).forEach(l -> result.add((Long)l));\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Number) {\n               \
    \ result.add(((Number) value).longValue());\n            }\n        }\n      \
    \  return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwxe5x1wn.java:27)\n"
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        return values.stream().filter(v -> v instanceof Long).map(v -> (Long)v).collect(Collectors.toList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8h3n6qo5.java:15: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return values.stream().filter(v -> v instanceof\
    \ Long).map(v -> (Long)v).collect(Collectors.toList());\n                    \
    \                                                                   ^\n    equality\
    \ constraints: List<T#2>\n    lower bounds: ArrayList<Long>,Object\n  where R,A,T#1,T#2\
    \ are type-variables:\n    R extends Object declared in method <R,A>collect(Collector<?\
    \ super T#1,A,R>)\n    A extends Object declared in method <R,A>collect(Collector<?\
    \ super T#1,A,R>)\n    T#1 extends Object declared in interface Stream\n    T#2\
    \ extends Object declared in method <T#2>toList()\n1 error\n"
  stdout: ''
  timestamp: 1659795272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            } else if (value instanceof Number) {\n               \
    \ result.add(((Number) value).longValue());\n            } else if (value instanceof\
    \ String) {\n                result.add(Long.parseLong((String) value));\n   \
    \         }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"adasd\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Long.parseLong(Long.java:711)\n\tat java.base/java.lang.Long.parseLong(Long.java:836)\n\
    \tat Problem.filterIntegers(tmpne6e_rqb.java:22)\n\tat Problem.main(tmpne6e_rqb.java:29)\n"
  stdout: ''
  timestamp: 1659795272
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  result.add((Long) value);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Integer) {\n                result.add((Long)value);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkj7u05e1.java:25)\n"
  stdout: ''
  timestamp: 1659795272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given array list of any javathon values only for\
    \ integers\n    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList((String)\"\
    a\", (String)3.14f, (String)5l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l)))\n\
    \    // >>> filterIntegers((new ArrayList<Object>(Arrays.asList(1l, 2l, 3l, \"\
    abc\", new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList())))))\n\
    \    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))\n \
    \   public static ArrayList<Long> filterIntegers(ArrayList<Object> values) {\n\
    \        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpdiydsg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  stdout: ''

language: java
name: HumanEval_108_count_nums
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for(Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpalg48r9r.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for(Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpalg48r9r.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long i : arr) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiw5fjw_8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long i : arr) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiw5fjw_8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for(long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph4956oee.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for(Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpalg48r9r.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long i : arr) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiw5fjw_8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long i : arr) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiw5fjw_8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (Long l : arr) {\n            if\
    \ (l < 0) {\n                l = -l;\n            }\n            long sum = 0;\n\
    \            while (l > 0) {\n                sum += l % 10;\n               \
    \ l /= 10;\n            }\n            if (sum > 0) {\n                count++;\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv7osy8b6.java:38)\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (long num : arr) {\n          \
    \  count += count_nums(num);\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp01o1t_lo.java:22: error: cannot find symbol\n            count\
    \ += count_nums(num);\n                     ^\n  symbol:   method count_nums(long)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (Long num : arr) {\n          \
    \  count += num.intValue();\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcyzjtspu.java:28)\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        long digitSum = 0;\n        long firstSignedDigit\
    \ = Long.MIN_VALUE;\n        for (Long num : arr) {\n            sum += num;\n\
    \            digitSum += num % 10;\n            firstSignedDigit = Math.min(firstSignedDigit,\
    \ num % 10);\n        }\n        if (sum < 0) {\n            firstSignedDigit\
    \ = -firstSignedDigit;\n        }\n        return sum - digitSum + firstSignedDigit;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz0fnld3y.java:34)\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for(Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpalg48r9r.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long i : arr) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiw5fjw_8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for(long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph4956oee.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcag2eexw.java:28)\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (Long l : arr) {\n            count\
    \ += countDigits(l);\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpax2knp3y.java:22: error: cannot find symbol\n            count\
    \ += countDigits(l);\n                     ^\n  symbol:   method countDigits(Long)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            if\
    \ (num > 0) {\n                sum += num;\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph5fx721s.java:31)\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long i : arr) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiw5fjw_8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long i : arr) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiw5fjw_8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        long firstSignedDigit = -1;\n       \
    \ for (Long l : arr) {\n            sum += l;\n            firstSignedDigit =\
    \ Math.max(firstSignedDigit, Math.abs(l % 10));\n        }\n        return sum\
    \ - firstSignedDigit;\n    }\n    public static void main(String[] args) {\n \
    \   assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)0l)))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l,\
    \ (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l, (long)-6l, (long)0l,\
    \ (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)100l, (long)98l, (long)-7l, (long)1l, (long)-1l)))) == (4l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)12l, (long)23l, (long)34l, (long)-45l, (long)-56l,\
    \ (long)0l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l)))) == (1l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4ijlf3uh.java:29)\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (long num : arr) {\n          \
    \  if (num > 0) {\n                count += num;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)0l)))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l,\
    \ (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l, (long)-6l, (long)0l,\
    \ (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)100l, (long)98l, (long)-7l, (long)1l, (long)-1l)))) == (4l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)12l, (long)23l, (long)34l, (long)-45l, (long)-56l,\
    \ (long)0l)))) == (5l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)1l)))) == (1l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp334usx9a.java:31)\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcag2eexw.java:28)\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (Long i : arr) {\n            count\
    \ += i;\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw6_vga44.java:28)\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (long num : arr) {\n          \
    \  if (num > 0) {\n                long sum = 0;\n                while (num >\
    \ 0) {\n                    sum += num % 10;\n                    num /= 10;\n\
    \                }\n                if (sum > 0) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv3idalnr.java:41)\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for(Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpalg48r9r.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for(Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpalg48r9r.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for(long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph4956oee.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long i : arr) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiw5fjw_8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long i : arr) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiw5fjw_8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += Math.abs(l);\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph0ioc7ti.java:28)\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (long i : arr) {\n            count\
    \ += i;\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpah6gl14u.java:28)\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long i : arr) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiw5fjw_8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long i : arr) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiw5fjw_8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        long count = 0;\n        for (Long l\
    \ : arr) {\n            sum += l;\n            if (sum > 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5dt0ypaa.java:33)\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for(long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph4956oee.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for(Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg45xg6dp.java:28)\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long i : arr) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiw5fjw_8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long i : arr) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiw5fjw_8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (Long l : arr) {\n            count\
    \ += Math.abs(l);\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplvr8cbo8.java:28)\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += Math.abs(l);\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph0ioc7ti.java:28)\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        long sum = 0;\n        for (Long l\
    \ : arr) {\n            sum += l;\n            if (sum > 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprlix7257.java:33)\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for(long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph4956oee.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (long num : arr) {\n          \
    \  if (num < 0) {\n                num = -num;\n            }\n            long\
    \ sum = 0;\n            while (num != 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpan_gz8as.java:38)\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += Math.abs(l);\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph0ioc7ti.java:28)\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for(Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpalg48r9r.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long i : arr) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpffg74gfd.java:28)\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for(long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph4956oee.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for(long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph4956oee.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            if\
    \ (l < 0) {\n                l = -l;\n            }\n            sum += l;\n \
    \       }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4elrskfj.java:31)\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long i : arr) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiw5fjw_8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long i : arr) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiw5fjw_8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (long num : arr) {\n          \
    \  count += num;\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpps5g3mgw.java:28)\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (Long i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpat9lzn2y.java:31)\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long i : arr) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiw5fjw_8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        long digitSum = 0;\n        long firstDigitSum\
    \ = 0;\n        long firstDigit = 0;\n        long firstDigitNum = 0;\n      \
    \  long firstDigitNum2 = 0;\n        long firstDigitNum3 = 0;\n        long firstDigitNum4\
    \ = 0;\n        long firstDigitNum5 = 0;\n        long firstDigitNum6 = 0;\n \
    \       long firstDigitNum7 = 0;\n        long firstDigitNum8 = 0;\n        long\
    \ firstDigitNum9 = 0;\n        long firstDigitNum10 = 0;\n        long firstDigitNum11\
    \ = 0;\n        long firstDigitNum12 = 0;\n        long firstDigitNum13 = 0;\n\
    \        long firstDigitNum14 = 0;\n        long firstDigitNum15 = 0;\n      \
    \  long firstDigitNum16 = 0;\n        long firstDigitNum17 = 0;\n        long\
    \ firstDigitNum18 = 0;\n        long firstDigitNum19 = 0;\n        long firstDigitNum20\
    \ = 0;\n        long firstDigitNum21 = 0;\n        long firstDigitNum22 = 0;\n\
    \        long firstDigitNum23 = 0;\n        long firstDigitNum24 = 0;\n      \
    \  long firstDigitNum25 = 0;\n        long firstDigitNum26 = 0;\n        long\
    \ firstDigitNum27 = 0;\n        long firstDigitNum28 = 0;\n        long firstDigitNum29\
    \ = 0;\n        long firstDigitNum30 = 0;\n        long firstDigitNum31 = 0;\n\
    \        long firstDigitNum32 = 0;\n        long firstDigitNum33 = 0;\n      \
    \  long firstDigitNum34 = 0;\n        long firstDigitNum35 = 0;\n        long\
    \ firstDigitNum36 = 0;\n        long firstDigitNum37 = 0;\n        long firstDigitNum38\
    \ = 0;\n        long firstDigitNum39 = 0;\n        long firstDigitNum40 = 0;\n\
    \        long firstDigitNum41 = 0;\n        long firstDigitNum42 = 0;\n      \
    \  long firstDigitNum43 = 0;\n        long firstDigitNum44 = 0;\n        long\
    \ firstDigitNum45 = 0;\n        long firstDigitNum46 = 0;\n        long firstDigitNum47\
    \ = 0;\n        long firstDigitNum48 = 0;\n        long firstDigitNum49 = 0;\n\
    \        long firstDigitNum50 = 0;\n        long firstDigitNum51 = 0;\n      \
    \  long firstDigitNum52 = 0;\n        long firstDigitNum53 = 0;\n        long\
    \ firstDigitNum54 = 0;\n        long firstDigitNum55 = 0;\n        long firstDigitNum56\
    \ = 0;\n        long firstDigitNum57 = 0;\n        long firstDigitNum58 = 0;\n\
    \        long firstDigitNum59 = 0;\n        long firstDigitNum60 = 0;\n      \
    \  long firstDigitNum61 = 0;\n        long firstDigitNum\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx7uu77_u.java:85: error: ';' expected\n        long firstDigitNum\n\
    \                          ^\n1 error\n"
  stdout: ''
  timestamp: 1659798584
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long i : arr) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiw5fjw_8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long i : arr) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiw5fjw_8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for(long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph4956oee.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (Long l : arr) {\n            count\
    \ += Math.abs(l);\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplvr8cbo8.java:28)\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long i : arr) {\n            if\
    \ (i != 0) {\n                sum += i;\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqs_v3_oi.java:30)\n"
  stdout: ''
  timestamp: 1659798586
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for(long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph4956oee.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (long num : arr) {\n          \
    \  if (num < 0) {\n                num *= -1;\n            }\n            long\
    \ sum = 0;\n            while (num != 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (sum > 0) {\n     \
    \           count++;\n            }\n        }\n        return count;\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfpbwg2ay.java:38)\n"
  stdout: ''
  timestamp: 1659798586
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        long sumOfDigits = 0;\n        for (Long\
    \ l : arr) {\n            sum += l;\n            sumOfDigits += Math.abs(l);\n\
    \        }\n        return sumOfDigits > 0 ? sum : sumOfDigits;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm0r_w6db.java:30)\n"
  stdout: ''
  timestamp: 1659798586
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long i : arr) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiw5fjw_8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (Long i : arr) {\n            if\
    \ (i >= 0) {\n                count += i;\n            } else {\n            \
    \    count += Math.abs(i);\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm9ep6b35.java:32)\n"
  stdout: ''
  timestamp: 1659798586
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long i : arr) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiw5fjw_8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long count = 0;\n        for (long num : arr) {\n          \
    \  count += num;\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpps5g3mgw.java:28)\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long i : arr) {\n            sum\
    \ += i;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiw5fjw_8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbo8_4n5w.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcag2eexw.java:28)\n"
  stdout: ''
  timestamp: 1659798585
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        long sum2 = 0;\n        for (Long num\
    \ : arr) {\n            sum += num;\n            sum2 += num * num;\n        }\n\
    \        if (sum < 0) {\n            sum = -sum;\n            sum2 = -sum2;\n\
    \        }\n        return sum2 - (sum * sum) % 10;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList())))\
    \ == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfrjp0k90.java:34)\n"
  stdout: ''
  timestamp: 1659798586
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long num : arr) {\n            sum\
    \ += num;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpygc3pm5v.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array array\
    \ list of integers and returns\n    // the number of elements which has a sum\
    \ of digits > 0.\n    // If a number is negative, then its first signed digit\
    \ will be negative:\n    // e.g. -123 has signed digits -1, 2, and 3.\n    //\
    \ >>> countNums((new ArrayList<Long>(Arrays.asList())))\n    // (0l)\n    // >>>\
    \ countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)11l, (long)-11l))))\n\
    \    // (1l)\n    // >>> countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l))))\n    // (3l)\n    public static long countNums(ArrayList<Long>\
    \ arr) {\n        long sum = 0;\n        for (Long l : arr) {\n            sum\
    \ += l;\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Long>(Arrays.asList()))) == (0l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)0l)))) == (0l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)1l, (long)2l, (long)-2l, (long)3l, (long)4l, (long)5l)))) == (6l));\n\
    \    assert(countNums((new ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)9l,\
    \ (long)-6l, (long)0l, (long)1l, (long)5l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)100l, (long)98l, (long)-7l, (long)1l,\
    \ (long)-1l)))) == (4l));\n    assert(countNums((new ArrayList<Long>(Arrays.asList((long)12l,\
    \ (long)23l, (long)34l, (long)-45l, (long)-56l, (long)0l)))) == (5l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))) == (1l));\n    assert(countNums((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgglrs48_.java:28)\n"
  stdout: ''

language: java
name: HumanEval_30_get_positive
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the array list.\n    //\
    \ >>> getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)-4l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)5l, (long)6l)))\n    // >>> getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)9l, (long)123l, (long)1l)))\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0l) {\n                positive.add(i);\n            }\n        }\n     \
    \   return positive;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzz9ey0zo.java:25)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the array list.\n    //\
    \ >>> getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)-4l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)5l, (long)6l)))\n    // >>> getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)9l, (long)123l, (long)1l)))\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0l) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc_kmwcz4.java:25)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the array list.\n    //\
    \ >>> getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)-4l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)5l, (long)6l)))\n    // >>> getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)9l, (long)123l, (long)1l)))\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        return l.stream().filter(i\
    \ -> i >= 0l).collect(Collectors.toList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp48ul2mcz.java:15: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return l.stream().filter(i -> i >= 0l).collect(Collectors.toList());\n\
    \                                                      ^\n    equality constraints:\
    \ List<Long>\n    upper bounds: ArrayList<Long>,Object\n  where R,A,T are type-variables:\n\
    \    R extends Object declared in method <R,A>collect(Collector<? super T,A,R>)\n\
    \    A extends Object declared in method <R,A>collect(Collector<? super T,A,R>)\n\
    \    T extends Object declared in interface Stream\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the array list.\n    //\
    \ >>> getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)-4l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)5l, (long)6l)))\n    // >>> getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)9l, (long)123l, (long)1l)))\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0l)\n                result.add(i);\n        }\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6zzwdig.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the array list.\n    //\
    \ >>> getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)-4l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)5l, (long)6l)))\n    // >>> getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)9l, (long)123l, (long)1l)))\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        return l.stream().filter(x\
    \ -> x > 0).collect(Collectors.toList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd62zvqv2.java:15: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return l.stream().filter(x -> x > 0).collect(Collectors.toList());\n\
    \                                                    ^\n    equality constraints:\
    \ List<Long>\n    upper bounds: ArrayList<Long>,Object\n  where R,A,T are type-variables:\n\
    \    R extends Object declared in method <R,A>collect(Collector<? super T,A,R>)\n\
    \    A extends Object declared in method <R,A>collect(Collector<? super T,A,R>)\n\
    \    T extends Object declared in interface Stream\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the array list.\n    //\
    \ >>> getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)-4l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)5l, (long)6l)))\n    // >>> getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)9l, (long)123l, (long)1l)))\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        l.stream().filter(x -> x > 0).forEach(x\
    \ -> result.add(x));\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the array list.\n    //\
    \ >>> getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)-4l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)5l, (long)6l)))\n    // >>> getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)9l, (long)123l, (long)1l)))\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (Long i : l) {\n            if\
    \ (i >= 0l)\n                result.add(i);\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqpmsew10.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the array list.\n    //\
    \ >>> getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)-4l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)5l, (long)6l)))\n    // >>> getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)9l, (long)123l, (long)1l)))\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        l.stream().filter(i -> i >= 0l).forEach(i\
    \ -> result.add(i));\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpapnvzt7a.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the array list.\n    //\
    \ >>> getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)-4l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)5l, (long)6l)))\n    // >>> getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)9l, (long)123l, (long)1l)))\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<>();\n        for (Long i : l) {\n            if (i\
    \ >= 0l)\n                positive.add(i);\n        }\n        return positive;\n\
    \    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxqqiw_eh.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the array list.\n    //\
    \ >>> getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)-4l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)5l, (long)6l)))\n    // >>> getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)9l, (long)123l, (long)1l)))\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        return l.stream().filter(i\
    \ -> i >= 0l).collect(Collectors.toCollection(ArrayList::new));\n    }\n    public\
    \ static void main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd1wkx6p2.java:19)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the array list.\n    //\
    \ >>> getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)-4l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)5l, (long)6l)))\n    // >>> getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)9l, (long)123l, (long)1l)))\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0l) result.add(i);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp97fpulhg.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the array list.\n    //\
    \ >>> getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)-4l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)5l, (long)6l)))\n    // >>> getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)9l, (long)123l, (long)1l)))\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        return l.stream().filter(n\
    \ -> n > 0).collect(Collectors.toList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa_8e4t8g.java:15: error: incompatible types: inference variable\
    \ R has incompatible bounds\n        return l.stream().filter(n -> n > 0).collect(Collectors.toList());\n\
    \                                                    ^\n    equality constraints:\
    \ List<Long>\n    upper bounds: ArrayList<Long>,Object\n  where R,A,T are type-variables:\n\
    \    R extends Object declared in method <R,A>collect(Collector<? super T,A,R>)\n\
    \    A extends Object declared in method <R,A>collect(Collector<? super T,A,R>)\n\
    \    T extends Object declared in interface Stream\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the array list.\n    //\
    \ >>> getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)-4l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)5l, (long)6l)))\n    // >>> getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)9l, (long)123l, (long)1l)))\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        return l.stream().filter(l\
    \ -> l > 0).collect(Collectors.toCollection(ArrayList::new));\n    }\n    public\
    \ static void main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr8ymkjwg.java:15: error: variable l is already defined in method\
    \ getPositive(ArrayList<Long>)\n        return l.stream().filter(l -> l > 0).collect(Collectors.toCollection(ArrayList::new));\n\
    \                                 ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the array list.\n    //\
    \ >>> getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)-4l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)5l, (long)6l)))\n    // >>> getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)9l, (long)123l, (long)1l)))\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        return l.stream().filter(x\
    \ -> x >= 0l).collect(Collectors.toCollection(ArrayList::new));\n    }\n    public\
    \ static void main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmf6ixh6g.java:19)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the array list.\n    //\
    \ >>> getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)-4l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)5l, (long)6l)))\n    // >>> getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)9l, (long)123l, (long)1l)))\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        return l.stream().filter(l\
    \ -> l > 0).collect(Collectors.toCollection(ArrayList::new));\n    }\n    public\
    \ static void main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr8ymkjwg.java:15: error: variable l is already defined in method\
    \ getPositive(ArrayList<Long>)\n        return l.stream().filter(l -> l > 0).collect(Collectors.toCollection(ArrayList::new));\n\
    \                                 ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the array list.\n    //\
    \ >>> getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)-4l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)5l, (long)6l)))\n    // >>> getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)9l, (long)123l, (long)1l)))\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0l) result.add(i);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp97fpulhg.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the array list.\n    //\
    \ >>> getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)-4l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)5l, (long)6l)))\n    // >>> getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)9l, (long)123l, (long)1l)))\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ positive = new ArrayList<Long>();\n        for (Long i : l) {\n            if\
    \ (i >= 0l) {\n                positive.add(i);\n            }\n        }\n  \
    \      return positive;\n    }\n    public static void main(String[] args) {\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l,\
    \ (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfw24hf8w.java:25)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the array list.\n    //\
    \ >>> getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)-4l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)5l, (long)6l)))\n    // >>> getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)9l, (long)123l, (long)1l)))\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0l) result.add(i);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)3l, (long)9l, (long)123l, (long)1l)))));\n\
    \    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp97fpulhg.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the array list.\n    //\
    \ >>> getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)-4l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)5l, (long)6l)))\n    // >>> getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)9l, (long)123l, (long)1l)))\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0l)\n                result.add(i);\n        }\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6zzwdig.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return only positive numbers in the array list.\n    //\
    \ >>> getPositive((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)-4l,\
    \ (long)5l, (long)6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)5l, (long)6l)))\n    // >>> getPositive((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)-5l, (long)2l, (long)-3l, (long)3l, (long)9l, (long)0l, (long)123l,\
    \ (long)1l, (long)-10l))))\n    // (new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)3l, (long)2l, (long)3l, (long)9l, (long)123l, (long)1l)))\n    public\
    \ static ArrayList<Long> getPositive(ArrayList<Long> l) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for (Long i : l) {\n            if (i >=\
    \ 0l) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-2l, (long)4l, (long)5l, (long)6l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)-5l, (long)2l, (long)3l,\
    \ (long)3l, (long)9l, (long)0l, (long)123l, (long)1l, (long)-10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)2l, (long)3l, (long)3l,\
    \ (long)9l, (long)123l, (long)1l)))));\n    assert(getPositive((new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n    assert(getPositive((new\
    \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc_kmwcz4.java:25)\n"
  stdout: ''

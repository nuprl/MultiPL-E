language: java
name: HumanEval_49_modp
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      r = r*p;\n            n = n-1l;\n        }\n        return r;\n    }\n\
    \    public static void main(String[] args) {\n    assert(modp((3l), (5l)) ==\
    \ (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l))\
    \ == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbnorkm9f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            n = n/p;\n            r = r*p + m;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyyj6ujad.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n > 0) {\n  \
    \          long t = n & p;\n            n >>>= p;\n            res = (res * t)\
    \ % p;\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpglx_gz6u.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       r = r * p % n;\n            n = n / 2;\n        }\n        return r;\n\
    \    }\n    public static void main(String[] args) {\n    assert(modp((3l), (5l))\
    \ == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzg26d5bv.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            n = p;\n            p = t;\n        }\n     \
    \   return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmpuh_1eino.java:23)\n\tat Problem.main(tmpuh_1eino.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n-- > 0) {\n  \
    \          r = (r * p) % p;\n        }\n        return r;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo8psb7n2.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long t = n%p;\n            if (t>r) r = t;\n            n = n/p;\n    \
    \    }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprecnidw_.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            if (m>0) {\n                r = (r*p)%p;\n  \
    \          }\n            n = (n*p)%p;\n        }\n        return r;\n    }\n\
    \    public static void main(String[] args) {\n    assert(modp((3l), (5l)) ==\
    \ (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l))\
    \ == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmd_s8e0d.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while ((r << 1) <= n)\
    \ {\n            r <<= 1;\n        }\n        while ((r >> 1) >= p) {\n      \
    \      r >>= 1;\n        }\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp839y7qn9.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       long m = n & -p;\n            n >>>= p;\n            r = (r * m) % p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpadxrgb0l.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            n = p;\n            p = t;\n            r = (r*p)%p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmpm8wpaknu.java:26)\n\tat Problem.main(tmpm8wpaknu.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            r = (r*m)%p;\n            n = n/p;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn5bacs0o.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     r = r*p;\n            n = n-1;\n        }\n        return r;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n\
    \    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) ==\
    \ (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjpmipldx.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      r = r*p;\n            n = n-1l;\n        }\n        return r;\n    }\n\
    \    public static void main(String[] args) {\n    assert(modp((3l), (5l)) ==\
    \ (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l))\
    \ == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbnorkm9f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long result = 1l;\n        while (n-- > 0) {\n\
    \            result *= p;\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n \
    \   assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n\
    \    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n\
    \    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkdgajprs.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       r = r * p % n;\n            n = n / 2;\n        }\n        return r;\n\
    \    }\n    public static void main(String[] args) {\n    assert(modp((3l), (5l))\
    \ == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzg26d5bv.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while ((n & 1) == 0) {\n\
    \            n >>>= 1;\n            r *= p;\n        }\n        while ((n & 1)\
    \ == 1) {\n            n >>>= 1;\n            r *= p;\n        }\n        return\
    \ r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8wm0gl4g.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n) {\n      \
    \      long t = n;\n            n &= n - 1l;\n            res = (res * t) % p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj37g66_3.java:22: error: incompatible types: long cannot be converted\
    \ to boolean\n        while (n) {\n               ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l) return 1l;\n        if (n == 1l)\
    \ return p;\n        if (n == 2l) return p;\n        if (n == 3l) return p;\n\
    \        if (n == 4l) return p;\n        if (n == 5l) return p;\n        if (n\
    \ == 6l) return p;\n        if (n == 7l) return p;\n        if (n == 8l) return\
    \ p;\n        if (n == 9l) return p;\n        if (n == 10l) return p;\n      \
    \  if (n == 11l) return p;\n        if (n == 12l) return p;\n        if (n ==\
    \ 13l) return p;\n        if (n == 14l) return p;\n        if (n == 15l) return\
    \ p;\n        if (n == 16l) return p;\n        if (n == 17l) return p;\n     \
    \   if (n == 18l) return p;\n        if (n == 19l) return p;\n        if (n ==\
    \ 20l) return p;\n        if (n == 21l) return p;\n        if (n == 22l) return\
    \ p;\n        if (n == 23l) return p;\n        if (n == 24l) return p;\n     \
    \   if (n == 25l) return p;\n        if (n == 26l) return p;\n        if (n ==\
    \ 27l) return p;\n        if (n == 28l) return p;\n        if (n == 29l) return\
    \ p;\n        if (n == 30l) return p;\n        if (n == 31l) return p;\n     \
    \   if (n == 32l) return p;\n        if (n == 33l) return p;\n        if (n ==\
    \ 34l) return p;\n        if (n == 35l) return p;\n        if (n == 36l) return\
    \ p;\n        if (n == 37l) return p;\n        if (n == 38l) return p;\n     \
    \   if (n == 39l) return p;\n        if (n == 40l) return p;\n        if (n ==\
    \ 41l) return p;\n        if (n == 42l) return p;\n        if (n == 43l) return\
    \ p;\n        if (n == 44l) return p;\n        if (n == 45l) return p;\n     \
    \   if (n == 46l) return p;\n        if (n == 47l) return p;\n        if (n ==\
    \ 48l) return p;\n        if (n == 49l) return p;\n        if (n == 50l) return\
    \ p;\n        if (n == 51l) return p;\n        if (n == 52l) return p;\n     \
    \   if (n == 53l) return p;\n        if (n == 54l) return p;\n        if (n ==\
    \ 55l) return p;\n        if (n == 56l) return p;\n        if (n == 57l) return\
    \ p;\n        if (n == 58l) return p;\n        if (n == 59l) return p;\n     \
    \   if (n == 60l) return p;\n        if (n == 61l) return p;\n        if (n ==\
    \ 62l) return p;\n        if (n == 63l) return p;\n        if (n == 64l) return\
    \ p;\n        if (n == 65l) return p;\n        if (n == 66l) return p;\n     \
    \   if (n == 67l) return p;\n        if (n == 68l) return p;\n        if (n ==\
    \ 69l) return p;\n        if (n == 70l) return p;\n        if (n == 71l) return\
    \ p;\n        if (n == 72l) return p;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoxaqao0o.java:94: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      r = r*p;\n            n = n-1l;\n        }\n        return r;\n    }\n\
    \    public static void main(String[] args) {\n    assert(modp((3l), (5l)) ==\
    \ (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l))\
    \ == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbnorkm9f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (r < p) {\n    \
    \        r <<= 1l;\n        }\n        r %= p;\n        while (r < n) {\n    \
    \        r <<= 1l;\n        }\n        return r;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsg42z6an.java:33)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long m = n%p;\n            if (m==0l) break;\n            r = r*p+m;\n\
    \            n = n/p;\n        }\n        return r;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi0y4vgk1.java:31)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            n = p;\n            p = t;\n        }\n     \
    \   return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmpuh_1eino.java:23)\n\tat Problem.main(tmpuh_1eino.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n != 0) {\n    \
    \        r = r * p % n;\n            n = n / 2;\n        }\n        return r;\n\
    \    }\n    public static void main(String[] args) {\n    assert(modp((3l), (5l))\
    \ == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsspvf9t2.java:29)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n-- > 0) {\n  \
    \          r = (r * p) % p;\n        }\n        return r;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo8psb7n2.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l && p == 0l) {\n            return\
    \ 1l;\n        }\n        if (n == 0l && p != 0l) {\n            return p + 1l;\n\
    \        }\n        if (n != 0l && p == 0l) {\n            return n - 1l;\n  \
    \      }\n        if (n != 0l && p != 0l) {\n            return ((n % p) + p)\
    \ % p;\n        }\n        if (n != 0l && p != 0l && n % p == 0) {\n         \
    \   return ((n / p) + p) % p;\n        }\n        if (n != 0l && p != 0l && n\
    \ % p != 0) {\n            return ((n % p) + p) % p;\n        }\n        if (n\
    \ != 0l && p != 0l && n % p == 0) {\n            return ((n / p) + p) % p;\n \
    \       }\n        if (n != 0l && p != 0l && n % p != 0) {\n            return\
    \ ((n % p) + p) % p;\n        }\n        if (n != 0l && p != 0l && n % p == 0)\
    \ {\n            return ((n / p) + p) % p;\n        }\n        if (n != 0l &&\
    \ p != 0l && n % p != 0) {\n            return ((n % p) + p) % p;\n        }\n\
    \        if (n != 0l && p != 0l && n % p == 0) {\n            return ((n / p)\
    \ + p) % p;\n        }\n        if (n != 0l && p != 0l && n % p != 0) {\n    \
    \        return ((n % p) + p) % p;\n        }\n        if (n != 0l && p != 0l\
    \ && n % p == 0) {\n            return ((n / p) + p) % p;\n        }\n       \
    \ if (n != 0l && p != 0l && n % p != 0) {\n            return ((n % p) + p) %\
    \ p;\n        }\n        if (n != 0l && p != 0l && n % p == 0) {\n           \
    \ return ((n / p) + p) % p;\n        }\n        if (n != 0l && p != 0l && n %\
    \ p != 0) {\n            return ((n % p) + p) % p;\n        }\n        if (n !=\
    \ 0l && p != 0l && n % p == 0) {\n            return ((n / p) + p) % p;\n    \
    \    }\n        if (n != 0l && p != 0l && n % p != 0) {\n            return ((n\
    \ % p) + p) % p;\n        }\n        if (n != 0l && p != 0l && n % p == 0) {\n\
    \            return ((n / p) + p) % p;\n        }\n        if (n != 0l && p !=\
    \ 0l && n % p != 0) {\n            return ((n % p) + p) % p;\n        }\n    \
    \    if (n != 0l && p != 0\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw9gqsfs8.java:81: error: ')' expected\n        if (n != 0l && p\
    \ != 0\n                             ^\n/tmp/tmpw9gqsfs8.java:82: error: illegal\
    \ start of statement\n    }\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n > 0) {\n  \
    \          long tmp = n % p;\n            if (tmp > 0) {\n                res\
    \ = (res * p) % p;\n            }\n            n /= p;\n        }\n        return\
    \ res;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpme9v5cz4.java:32)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       r = r * p % n;\n            n = n / 2;\n        }\n        return r;\n\
    \    }\n    public static void main(String[] args) {\n    assert(modp((3l), (5l))\
    \ == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzg26d5bv.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            n = p;\n            p = t;\n            r = (r*p)%p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmpm8wpaknu.java:26)\n\tat Problem.main(tmpm8wpaknu.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        if (n%p==0) {\n                res*=p;\n            }\n            n/=p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeqgsguvy.java:31)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            n = p;\n            p = t;\n            r = (r*p)%p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmpm8wpaknu.java:26)\n\tat Problem.main(tmpm8wpaknu.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        long t = n;\n        long\
    \ m = 1;\n        while (t != 0) {\n            long r = r * t % p;\n        \
    \    t = t / p;\n            m = m * p % p;\n        }\n        return r;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(modp((3l), (5l))\
    \ == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk2b6oykq.java:25: error: variable r is already defined in method\
    \ modp(long,long)\n            long r = r * t % p;\n                 ^\n1 error\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        res = (res * n) % p;\n            n /= p;\n        }\n        return\
    \ res;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcsyiaxj5.java:30)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long d = n%p;\n            res = (res * d) % p;\n            n = n/p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9tx1mxw4.java:31)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long r = n%p;\n            res = (res * r) % p;\n            n = n/p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphsdd1_tf.java:31)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n-- > 0) {\n\
    \            res = (res * p) % p;\n        }\n        return res;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n\
    \    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) ==\
    \ (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg32n19ys.java:28)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n != 0l) {\n\
    \            long t = n;\n            n -= (res * (t % p));\n            res =\
    \ t;\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long t = n%p;\n            n = p;\n            p = t;\n        }\n    \
    \    return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmpcgtukfjb.java:23)\n\tat Problem.main(tmpcgtukfjb.java:30)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n > 0) {\n  \
    \          long tmp = n % p;\n            if (tmp < 0l)\n                tmp +=\
    \ p;\n            res = (res * tmp) % p;\n            n /= p;\n        }\n   \
    \     return res;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx9cvemdv.java:33)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            n /= p;\n            r = r*m+m;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzcxxn_wr.java:30)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n > 0) {\n    \
    \        r = r * p % n;\n            n = n / 2;\n        }\n        return r;\n\
    \    }\n    public static void main(String[] args) {\n    assert(modp((3l), (5l))\
    \ == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdv_z0eqg.java:29)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n > 0) {\n    \
    \        r = r * p % n;\n            n = n / 2;\n        }\n        return r;\n\
    \    }\n    public static void main(String[] args) {\n    assert(modp((3l), (5l))\
    \ == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdv_z0eqg.java:29)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      r = r*p;\n            n = n-1l;\n        }\n        return r;\n    }\n\
    \    public static void main(String[] args) {\n    assert(modp((3l), (5l)) ==\
    \ (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l))\
    \ == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbnorkm9f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n > 0) {\n  \
    \          res = (res*2l) % (p+1l);\n            n /= 2l;\n        }\n       \
    \ return res;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbtb_18z_.java:29)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while ((n & 1) == 0) {\n\
    \            n >>>= 1;\n            r *= p;\n        }\n        while ((n & 1)\
    \ == 1) {\n            n >>>= 1;\n            r *= p;\n        }\n        return\
    \ r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8wm0gl4g.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n-- > 0) {\n\
    \            res = (res*p) % p;\n        }\n        return res;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n \
    \   assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n\
    \    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n\
    \    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmqo673b.java:28)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            n = n/p;\n            r = r*p;\n            r\
    \ = r%m; \n        }\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprv2v0m0r.java:31)\n"
  stdout: ''
  timestamp: 1659800237
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long t = n%p;\n            if (t>0) {\n                r = (r*p)%p;\n \
    \           }\n            n = t;\n        }\n        return r;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n \
    \   assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n\
    \    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n\
    \    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n\
    \    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        if (n%p==0) {\n                res*=p;\n            }\n            n/=p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeqgsguvy.java:31)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long result = 1l;\n        while (n>0) {\n \
    \           long r = n%p;\n            n = p;\n            p = r;\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmpzczcpbjv.java:23)\n\tat Problem.main(tmpzczcpbjv.java:30)\n"
  stdout: ''
  timestamp: 1659800237
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       long m = n & -p;\n            n ^= m;\n            r = (r * m) % p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800241
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        long m = n;\n        while\
    \ (m != 0) {\n            long t = m;\n            m = r * m % p;\n          \
    \  r = t;\n        }\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800242
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            n = p;\n            p = t;\n            r = (r*p)%p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmpm8wpaknu.java:26)\n\tat Problem.main(tmpm8wpaknu.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n-- > 0) {\n  \
    \          r = (r * p) % p;\n        }\n        return r;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo8psb7n2.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long r = n%p;\n            res = (res * r) % p;\n            n = n/p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphsdd1_tf.java:31)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            r = (r*t) % p;\n            n = n/p;\n      \
    \  }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4msu3qb4.java:31)\n"
  stdout: ''
  timestamp: 1659800237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        long m = p;\n        while\
    \ (m != 0) {\n            r = r * m % p;\n            m = m / p;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6jq5t27t.java:30)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            n = n/p;\n            r = r*p + m;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyyj6ujad.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     r = r*p;\n            n = n>>1;\n        }\n        return r;\n    }\n \
    \   public static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n\
    \    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) ==\
    \ (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppmtxj604.java:29)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       long m = n & -p;\n            n ^= m;\n            r = (r * m) % p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long m = n%p;\n            n = n/p;\n            r = r*p + m;\n       \
    \ }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprl7bpnqv.java:30)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        if (n%p == 0) return res;\n            res *= p;\n            n /= p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8fu5m6xj.java:30)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long t = n%p;\n            n = p;\n            p = t;\n        }\n    \
    \    return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmpcgtukfjb.java:23)\n\tat Problem.main(tmpcgtukfjb.java:30)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            n = p;\n            p = t;\n            r = (r*p)%p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmpm8wpaknu.java:26)\n\tat Problem.main(tmpm8wpaknu.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long r = n%p;\n            res = (res * r) % p;\n            n = n/p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphsdd1_tf.java:31)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            if (t==0) return r;\n            r = r*p;\n \
    \           n = t;\n        }\n        return r;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800243
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long m = n%p;\n            n = n/p;\n            r = r*p + m;\n       \
    \ }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprl7bpnqv.java:30)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long t = n%p;\n            res = (res * t) % p;\n            n = n/p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_ckqaq6f.java:31)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while ((n & 1) == 0) {\n\
    \            n >>>= 1;\n            r *= p;\n        }\n        while ((n & 1)\
    \ == 1) {\n            n >>>= 1;\n            r *= p;\n        }\n        return\
    \ r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8wm0gl4g.java:33)\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        long m = n;\n        while\
    \ (m != 0) {\n            long t = m;\n            m = r * m % p;\n          \
    \  r = t;\n        }\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800242
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        if (n%p==0) {\n                res=res*p;\n            }\n          \
    \  n=n/p;\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpstpf65vd.java:31)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            r = (r*t)%p;\n            n = n/p;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpocusf0vs.java:31)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        long m = n;\n        while\
    \ (m != 0) {\n            long r = r * m % p;\n            m = m / p;\n      \
    \  }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyzngg8fl.java:24: error: variable r is already defined in method\
    \ modp(long,long)\n            long r = r * m % p;\n                 ^\n1 error\n"
  stdout: ''
  timestamp: 1659800237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       r = r * p % n;\n            n = n / 2;\n        }\n        return r;\n\
    \    }\n    public static void main(String[] args) {\n    assert(modp((3l), (5l))\
    \ == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzg26d5bv.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l) return 1l;\n        if (n == 1l)\
    \ return p;\n        if (p == 0l) return 0l;\n        if (p == 1l) return 1l;\n\
    \        if (p == 2l) return 2l;\n        if (p == 3l) return 3l;\n        if\
    \ (p == 4l) return 4l;\n        if (p == 5l) return 5l;\n        if (p == 6l)\
    \ return 6l;\n        if (p == 7l) return 7l;\n        if (p == 8l) return 8l;\n\
    \        if (p == 9l) return 9l;\n        if (p == 10l) return 10l;\n        if\
    \ (p == 11l) return 11l;\n        if (p == 12l) return 12l;\n        if (p ==\
    \ 13l) return 13l;\n        if (p == 14l) return 14l;\n        if (p == 15l) return\
    \ 15l;\n        if (p == 16l) return 16l;\n        if (p == 17l) return 17l;\n\
    \        if (p == 18l) return 18l;\n        if (p == 19l) return 19l;\n      \
    \  if (p == 20l) return 20l;\n        if (p == 21l) return 21l;\n        if (p\
    \ == 22l) return 22l;\n        if (p == 23l) return 23l;\n        if (p == 24l)\
    \ return 24l;\n        if (p == 25l) return 25l;\n        if (p == 26l) return\
    \ 26l;\n        if (p == 27l) return 27l;\n        if (p == 28l) return 28l;\n\
    \        if (p == 29l) return 29l;\n        if (p == 30l) return 30l;\n      \
    \  if (p == 31l) return 31l;\n        if (p == 32l) return 32l;\n        if (p\
    \ == 33l) return 33l;\n        if (p == 34l) return 34l;\n        if (p == 35l)\
    \ return 35l;\n        if (p == 36l) return 36l;\n        if (p == 37l) return\
    \ 37l;\n        if (p == 38l) return 38l;\n        if (p == 39l) return 39l;\n\
    \        if (p == 40l) return 40l;\n        if (p == 41l) return 41l;\n      \
    \  if (p == 42l) return 42l;\n        if (p == 43l) return 43l;\n        if (p\
    \ == 44l) return 44l;\n        if (p == 45l) return 45l;\n        if (p == 46l)\
    \ return 46l;\n        if (p == 47l) return 47l;\n        if (p == 48l) return\
    \ 48l;\n        if (p == 49l) return 49l;\n        if (p == 50l) return 50l;\n\
    \        if (p == 51l) return 51l;\n        if (p == 52l) return 52l;\n      \
    \  if (p == 53l) return 53l;\n        if (p == 54l) return 54l;\n        if (p\
    \ == 55l) return 55l;\n        if (p == 56l) return 56l;\n        if (p\n    }\n\
    \    public static void main(String[] args) {\n    assert(modp((3l), (5l)) ==\
    \ (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l))\
    \ == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2tqr26be.java:80: error: ')' expected\n        if (p\n        \
    \     ^\n/tmp/tmp2tqr26be.java:81: error: illegal start of statement\n    }\n\
    \    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659800237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n > 0) {\n    \
    \        long t = r * n;\n            if (t % p != 0l) {\n                return\
    \ r;\n            }\n            r = t;\n            n /= p;\n        }\n    \
    \    return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpem0uowwk.java:33)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n-- > 0) {\n  \
    \          r = (r * p) % p;\n        }\n        return r;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo8psb7n2.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     r = r*p;\n            n = n-1;\n        }\n        return r;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n\
    \    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) ==\
    \ (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjpmipldx.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n-- > 0) {\n  \
    \          r = (r * p) % p;\n        }\n        return r;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo8psb7n2.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            n = p;\n            p = t;\n            r = (r*p)%p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmpm8wpaknu.java:26)\n\tat Problem.main(tmpm8wpaknu.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while ((n & 1l) != 0l)\
    \ {\n            n >>>= 1l;\n            r <<= 1l;\n        }\n        while ((p\
    \ & 1l) != 0l) {\n            p >>>= 1l;\n            r <<= 1l;\n        }\n \
    \       r %= p;\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpht9xsjpw.java:34)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long t = n%p;\n            res = (res * t) % p;\n            n = n/p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_ckqaq6f.java:31)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            n /= p;\n            r = r*p + m;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp24f52mna.java:30)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n != 0l) {\n\
    \            long r = n % p;\n            if (r != 0l) {\n                res\
    \ = (res * r) % p;\n            }\n            n = n / p;\n        }\n       \
    \ return res;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0r8ajsjp.java:33)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            n = p;\n            p = t;\n            r = (r*p)%p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmpm8wpaknu.java:26)\n\tat Problem.main(tmpm8wpaknu.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l && p == 0l) {\n            return\
    \ 0l;\n        }\n        if (n == 0l && p != 0l) {\n            return 1l;\n\
    \        }\n        if (n != 0l && p == 0l) {\n            return 1l;\n      \
    \  }\n        if (n == 0l && p != 0l) {\n            return 1l;\n        }\n \
    \       if (n == 0l) {\n            return 1l;\n        }\n        if (p == 0l)\
    \ {\n            return 1l;\n        }\n        if (n == 1l) {\n            return\
    \ p;\n        }\n        if (p == 1l) {\n            return p;\n        }\n  \
    \      if (n % 2 == 0l) {\n            return modp(n / 2l, p * p) % p;\n     \
    \   }\n        return modp(n / 2l, p * p + p) % p;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9fap76eg.java:51)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long m = n%p;\n            r = (r*m)%p;\n            n = n/p;\n       \
    \ }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp89rro9xx.java:31)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       long t = r * n;\n            if (t % p != 0) {\n                return\
    \ r;\n            }\n            r = t;\n            n /= p;\n        }\n    \
    \    return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8bijngso.java:33)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        if (n&1l) res = (res * p) % p;\n            n >>>= 1l;\n        }\n \
    \       return res;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpod7qi2nb.java:23: error: incompatible types: long cannot be converted\
    \ to boolean\n            if (n&1l) res = (res * p) % p;\n                 ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n > 0) {\n  \
    \          long t = n;\n            n -= (t & -p);\n            res *= t;\n  \
    \      }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800243
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long r = n%p;\n            res = (res * r) % p;\n            n = n/p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphsdd1_tf.java:31)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long result = 1l;\n        while (n-- > 0) {\n\
    \            result *= p;\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n \
    \   assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n\
    \    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n\
    \    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkdgajprs.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n != 0l) {\n\
    \            long r = n % p;\n            n /= p;\n            res = (res * r)\
    \ % p;\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmgou63qh.java:31)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long m = n%p;\n            n = n/p;\n            r = r*p + m;\n       \
    \ }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprl7bpnqv.java:30)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       long t = r % p;\n            r = t;\n            n -= t;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr46cqlmh.java:30)\n"
  stdout: ''
  timestamp: 1659800239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n > 0) {\n    \
    \        long m = n & -p;\n            n ^= m;\n            r ^= m;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx6ck_g6t.java:30)\n"
  stdout: ''
  timestamp: 1659800239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            r = (r*t+p)%p;\n            n = n/p;\n      \
    \  }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx853fwa4.java:31)\n"
  stdout: ''
  timestamp: 1659800239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while ((n & 1l) != 0l)\
    \ {\n            n >>>= 1l;\n            r <<= 1l;\n        }\n        r %= p;\n\
    \        if ((r & (1l << 63)) != 0l)\n            r -= p;\n        return r;\n\
    \    }\n    public static void main(String[] args) {\n    assert(modp((3l), (5l))\
    \ == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2c9ivsj_.java:32)\n"
  stdout: ''
  timestamp: 1659800239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n > 0) {\n  \
    \          res = (res*2l) % (p+1l);\n            n /= 2l;\n        }\n       \
    \ return res;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbtb_18z_.java:29)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            n = p;\n            p = t;\n            r = (r*p)%p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmpm8wpaknu.java:26)\n\tat Problem.main(tmpm8wpaknu.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long t = n%p;\n            n = p;\n            p = t;\n        }\n    \
    \    return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmpcgtukfjb.java:23)\n\tat Problem.main(tmpcgtukfjb.java:30)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (r < n) {\n    \
    \        r *= p;\n        }\n        return r;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpni8h_6_r.java:28)\n"
  stdout: ''
  timestamp: 1659800239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n-- > 0) {\n  \
    \          r = (r * p) % p;\n        }\n        return r;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo8psb7n2.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long r = n%p;\n            res = (res * r) % p;\n            n = n/p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphsdd1_tf.java:31)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            n = p;\n            p = t;\n        }\n     \
    \   return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmpuh_1eino.java:23)\n\tat Problem.main(tmpuh_1eino.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       long m = n & -p;\n            n >>>= p;\n            r = (r * m) % p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpadxrgb0l.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n > 0) {\n    \
    \        r = r * p % n;\n            n = n / 2;\n        }\n        return r;\n\
    \    }\n    public static void main(String[] args) {\n    assert(modp((3l), (5l))\
    \ == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdv_z0eqg.java:29)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (p > 0) {\n     \
    \       if (p & 1) r *= n;\n            n /= 2;\n            p >>= 1;\n      \
    \  }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm2e0s5_w.java:23: error: incompatible types: long cannot be converted\
    \ to boolean\n            if (p & 1) r *= n;\n                  ^\n1 error\n"
  stdout: ''
  timestamp: 1659800239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (r < p) {\n     \
    \       r *= 2;\n        }\n        return n % p;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpig_dxqpb.java:29)\n"
  stdout: ''
  timestamp: 1659800239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long m = n%p;\n            n /= p;\n            r = r*p + m;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5_b4ab5.java:30)\n"
  stdout: ''
  timestamp: 1659800239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long m = n%p;\n            n /= p;\n            r = r*p + m;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5_b4ab5.java:30)\n"
  stdout: ''
  timestamp: 1659800239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       long t = n & p;\n            n >>>= p;\n            r = r * t % p;\n \
    \       }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph_y1v9t8.java:30)\n"
  stdout: ''
  timestamp: 1659800239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            n /= p;\n            r = r*p + m;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp24f52mna.java:30)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n > 0) {\n    \
    \        long t = r * n;\n            if (t < p) {\n                r = (r * r)\
    \ % p;\n            } else {\n                r = (r * r + p) % p;\n         \
    \   }\n            n /= 2;\n        }\n        return r;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_hsicqf0.java:34)\n"
  stdout: ''
  timestamp: 1659800239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l && p == 0l) {\n            return\
    \ 0l;\n        }\n        if (n == 0l && p != 0l) {\n            return 1l;\n\
    \        }\n        if (n != 0l && p == 0l) {\n            return -1l;\n     \
    \   }\n        if (n == 0l && p == 0l) {\n            return n;\n        }\n \
    \       if (n == 0l) {\n            return 1l;\n        }\n        if (p == 0l)\
    \ {\n            return -1l;\n        }\n        if (n == 1l) {\n            return\
    \ p;\n        }\n        if (p == 1l) {\n            return n;\n        }\n  \
    \      if (n == -1l) {\n            return p;\n        }\n        if (p == -1l)\
    \ {\n            return n;\n        }\n        if (n == 1l && p == 1l) {\n   \
    \         return p;\n        }\n        if (n == -1l && p == -1l) {\n        \
    \    return n;\n        }\n        if (n == 1l && p == -1l) {\n            return\
    \ p;\n        }\n        if (n == -1l && p == 1l) {\n            return p;\n \
    \       }\n        if (n == 1l && p == -1l) {\n            return p;\n       \
    \ }\n        if (n == -1l && p == -1l) {\n            return p;\n        }\n \
    \       if (n == 1l && p == 1l) {\n            return p;\n        }\n        if\
    \ (n == -1l && p == -1l) {\n            return p;\n        }\n        if (n ==\
    \ 1l && p == -1l) {\n            return p;\n        }\n        if (n == -1l &&\
    \ p == 1l) {\n            return p;\n        }\n        if (n == 1l && p == -1l)\
    \ {\n            return p;\n        }\n        if (n == -1l && p == -1l) {\n \
    \           return p;\n        }\n        if (n == 1l && p == 1l) {\n        \
    \    return p;\n        }\n        if (n == -1l && p == -1l) {\n            return\
    \ p;\n        }\n        if (n == 1l && p == -1l) {\n            return p;\n \
    \       }\n        if (n == -1l && p == 1l) {\n            return p;\n       \
    \ }\n        if (n == 1l && p == -1l) {\n            return p;\n        }\n  \
    \      if (n == -1l && p == -1l) {\n            return p;\n        }\n       \
    \ if (n == 1l && p == 1l) {\n            return p;\n        }\n        if (n ==\
    \ -1l && p == -1l) {\n            return p;\n        }\n        if (n == 1l &&\
    \ p == -1l) {\n            return p;\n        }\n        if (n == -1l && p ==\
    \ 1l) {\n            return p;\n        }\n        if (n == 1l && p == -1l) {\n\
    \            return p;\n        }\n        if (n == -1l && p == -1l) {\n     \
    \       return p;\n        }\n        if (n == 1l && p == 1l) {\n            return\
    \ p;\n        }\n        if (n == -1l && p == -1l) {\n            return p;\n\
    \        }\n        if (n == 1l && p == -1\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmstkug7k.java:129: error: ')' expected\n        if (n == 1l &&\
    \ p == -1\n                              ^\n/tmp/tmpmstkug7k.java:130: error:\
    \ illegal start of statement\n    }\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long t = n%p;\n            if (t==0l) break;\n            r = r*p + t;\n\
    \            n = n/p;\n        }\n        return r;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj3vqiauo.java:31)\n"
  stdout: ''
  timestamp: 1659800239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l) return 1l;\n        if (n == 1l)\
    \ return p;\n        if (p == 0l) return 0l;\n        if (p == 1l) return 1l;\n\
    \        if (p == 2l) return 2l;\n        if (p == 3l) return 3l;\n        if\
    \ (p == 4l) return 4l;\n        if (p == 5l) return 5l;\n        if (p == 6l)\
    \ return 6l;\n        if (p == 7l) return 7l;\n        if (p == 8l) return 8l;\n\
    \        if (p == 9l) return 9l;\n        if (p == 10l) return 10l;\n        if\
    \ (p == 11l) return 11l;\n        if (p == 12l) return 12l;\n        if (p ==\
    \ 13l) return 13l;\n        if (p == 14l) return 14l;\n        if (p == 15l) return\
    \ 15l;\n        if (p == 16l) return 16l;\n        if (p == 17l) return 17l;\n\
    \        if (p == 18l) return 18l;\n        if (p == 19l) return 19l;\n      \
    \  if (p == 20l) return 20l;\n        if (p == 21l) return 21l;\n        if (p\
    \ == 22l) return 22l;\n        if (p == 23l) return 23l;\n        if (p == 24l)\
    \ return 24l;\n        if (p == 25l) return 25l;\n        if (p == 26l) return\
    \ 26l;\n        if (p == 27l) return 27l;\n        if (p == 28l) return 28l;\n\
    \        if (p == 29l) return 29l;\n        if (p == 30l) return 30l;\n      \
    \  if (p == 31l) return 31l;\n        if (p == 32l) return 32l;\n        if (p\
    \ == 33l) return 33l;\n        if (p == 34l) return 34l;\n        if (p == 35l)\
    \ return 35l;\n        if (p == 36l) return 36l;\n        if (p == 37l) return\
    \ 37l;\n        if (p == 38l) return 38l;\n        if (p == 39l) return 39l;\n\
    \        if (p == 40l) return 40l;\n        if (p == 41l) return 41l;\n      \
    \  if (p == 42l) return 42l;\n        if (p == 43l) return 43l;\n        if (p\
    \ == 44l) return 44l;\n        if (p == 45l) return 45l;\n        if (p == 46l)\
    \ return 46l;\n        if (p == 47l) return 47l;\n        if (p == 48l) return\
    \ 48l;\n        if (p == 49l) return 49l;\n        if (p == 50l) return 50l;\n\
    \        if (p == 51l) return 51l;\n        if (p == 52l) return 52l;\n      \
    \  if (p == 53l) return 53l;\n        if (p == 54l) return 54l;\n        if (p\
    \ == 55l) return 55l;\n        if (p == 56l) return 56l;\n        if (p\n    }\n\
    \    public static void main(String[] args) {\n    assert(modp((3l), (5l)) ==\
    \ (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l))\
    \ == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2tqr26be.java:80: error: ')' expected\n        if (p\n        \
    \     ^\n/tmp/tmp2tqr26be.java:81: error: illegal start of statement\n    }\n\
    \    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659800237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        if (n%p == 0) return res;\n            res *= p;\n            n /= p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8fu5m6xj.java:30)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long result = 1l;\n        while (n>p) {\n \
    \           result *= p;\n            n -= p;\n        }\n        return result\
    \ * n;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpane8idti.java:30)\n"
  stdout: ''
  timestamp: 1659800239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while ((n & 1) == 0) {\n\
    \            r <<= 1;\n            n >>>= 1;\n        }\n        while ((p & 1)\
    \ == 0) {\n            p >>>= 1;\n        }\n        while ((p & 1) == 0) {\n\
    \            p >>>= 1;\n        }\n        while ((p & 1) == 0) {\n          \
    \  p >>>= 1;\n        }\n        while ((p & 1) == 0) {\n            p >>>= 1;\n\
    \        }\n        while ((p & 1) == 0) {\n            p >>>= 1;\n        }\n\
    \        while ((p & 1) == 0) {\n            p >>>= 1;\n        }\n        while\
    \ ((p & 1) == 0) {\n            p >>>= 1;\n        }\n        while ((p & 1) ==\
    \ 0) {\n            p >>>= 1;\n        }\n        while ((p & 1) == 0) {\n   \
    \         p >>>= 1;\n        }\n        while ((p & 1) == 0) {\n            p\
    \ >>>= 1;\n        }\n        while ((p & 1) == 0) {\n            p >>>= 1;\n\
    \        }\n        while ((p & 1) == 0) {\n            p >>>= 1;\n        }\n\
    \        while ((p & 1) == 0) {\n            p >>>= 1;\n        }\n        while\
    \ ((p & 1) == 0) {\n            p >>>= 1;\n        }\n        while ((p & 1) ==\
    \ 0) {\n            p >>>= 1;\n        }\n        while ((p & 1) == 0) {\n   \
    \         p >>>= 1;\n        }\n        while ((p & 1) == 0) {\n            p\
    \ >>>= 1;\n        }\n        while ((p & 1) == 0) {\n            p >>>= 1;\n\
    \        }\n        while ((p & 1) == 0) {\n            p >>>= 1;\n        }\n\
    \        while ((p & 1) == 0) {\n            p >>>= 1;\n        }\n        while\
    \ ((p & 1) == 0) {\n            p >>>= 1;\n        }\n        while ((p & 1) ==\
    \ 0) {\n            p >>>= 1;\n        }\n        while ((p & 1) == 0) {\n   \
    \         p >>>= 1;\n        }\n        while ((p & 1) == 0) {\n            p\
    \ >>>= 1;\n        }\n        while ((p & 1) == 0) {\n            p >>>= 1;\n\
    \        }\n        while ((p & 1) == 0) {\n            p >>>= 1;\n        }\n\
    \        while ((p & 1) == 0) {\n            p >>>= 1;\n        }\n        while\
    \ ((p & 1) == 0) {\n            p >>>= 1;\n        }\n        while ((p & 1) ==\
    \ 0) {\n            p >>>= 1;\n        }\n        while ((p & 1) == 0) {\n   \
    \         p >>>= 1;\n        }\n        while ((p & 1) == 0) {\n            p\
    \ >>>= 1;\n        }\n        while ((p & 1) == 0) {\n            p >>>= 1;\n\
    \        }\n        while ((p & 1) == 0) {\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjtaszxj9.java:124: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            n = n/p;\n            r = r*p + m;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyyj6ujad.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n-- > 0) {\n\
    \            res = (res*p) % p;\n        }\n        return res;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n \
    \   assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n\
    \    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n\
    \    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmqo673b.java:28)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        long t = n;\n        long\
    \ m = p;\n        while (t != 0) {\n            if (t % m == 0) {\n          \
    \      r *= m;\n            }\n            t /= m;\n            m *= p;\n    \
    \    }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpal_j03_g.java:34)\n"
  stdout: ''
  timestamp: 1659800239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     r = r*p;\n            n = n-1;\n        }\n        return r;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n\
    \    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) ==\
    \ (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjpmipldx.java:29)\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n > 0) {\n    \
    \        long m = n & -p;\n            n &= p;\n            r = (r * m) % p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800244
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while ((n & 1) == 0) {\n\
    \            n >>>= 1;\n            r *= p;\n        }\n        while ((n & 1)\
    \ == 1) {\n            n >>>= 1;\n            r *= p;\n        }\n        return\
    \ r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8wm0gl4g.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        res = (res * 2l) % p;\n            n /= 2l;\n        }\n        return\
    \ res;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp89zrjohq.java:29)\n"
  stdout: ''
  timestamp: 1659800239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            n = n/p;\n            r = r*p + m;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyyj6ujad.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long t = n%p;\n            n = p;\n            p = t;\n        }\n    \
    \    return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmpcgtukfjb.java:23)\n\tat Problem.main(tmpcgtukfjb.java:30)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n-- > 0) {\n  \
    \          r = (r * p) % p;\n        }\n        return r;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo8psb7n2.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long m = n%p;\n            n = n/p;\n            r = r*p + m;\n       \
    \ }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprl7bpnqv.java:30)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        if (n&1l) res=res*p;\n            n >>>= 1l;\n            p *= p;\n \
    \       }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprhv0_szr.java:23: error: incompatible types: long cannot be converted\
    \ to boolean\n            if (n&1l) res=res*p;\n                 ^\n1 error\n"
  stdout: ''
  timestamp: 1659800239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            n = p;\n            p = t;\n            r = (r*p)%p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmpm8wpaknu.java:26)\n\tat Problem.main(tmpm8wpaknu.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     r = r*p;\n            n = n>>1;\n        }\n        return r;\n    }\n \
    \   public static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n\
    \    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) ==\
    \ (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppmtxj604.java:29)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        if (n&1l)\n                res*=p;\n            n >>= 1l;\n         \
    \   p *= p;\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplej3v36b.java:23: error: incompatible types: long cannot be converted\
    \ to boolean\n            if (n&1l)\n                 ^\n1 error\n"
  stdout: ''
  timestamp: 1659800239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            n = n/p;\n            r = r*p + m;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyyj6ujad.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n != 0l) {\n  \
    \          long t = r * n;\n            if (t < p) {\n                t += p;\n\
    \            }\n            r = t;\n            n >>>= 1;\n        }\n       \
    \ return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg77cfxmv.java:33)\n"
  stdout: ''
  timestamp: 1659800240
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       long m = n & -p;\n            n ^= m;\n            r = (r * m) % p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      r = r*p;\n            n = n-1l;\n        }\n        return r;\n    }\n\
    \    public static void main(String[] args) {\n    assert(modp((3l), (5l)) ==\
    \ (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l))\
    \ == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbnorkm9f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            n = p;\n            p = t;\n            r = (r*p)%p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmpm8wpaknu.java:26)\n\tat Problem.main(tmpm8wpaknu.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            n /= p;\n            r = r*p + m;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp24f52mna.java:30)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (r < n) {\n     \
    \       r *= p;\n        }\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0_9r7cnt.java:28)\n"
  stdout: ''
  timestamp: 1659800240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long r = n%p;\n            res = (res * r) % p;\n            n = n/p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphsdd1_tf.java:31)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n > 0) {\n  \
    \          if (n % 2 == 0) {\n                res = (res * p) % p;\n         \
    \   }\n            n /= 2;\n        }\n        return res;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n \
    \   assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n\
    \    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n\
    \    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpanel2idw.java:31)\n"
  stdout: ''
  timestamp: 1659800240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long d = n%p;\n            res = (res * d) % p;\n            n = n/p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9tx1mxw4.java:31)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        if (n&1l)\n                res = (res * p) % p;\n            n = n >>>\
    \ 1l;\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8ob8suzu.java:23: error: incompatible types: long cannot be converted\
    \ to boolean\n            if (n&1l)\n                 ^\n1 error\n"
  stdout: ''
  timestamp: 1659800240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       r = r * p % n;\n            n = n / 2;\n        }\n        return r;\n\
    \    }\n    public static void main(String[] args) {\n    assert(modp((3l), (5l))\
    \ == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzg26d5bv.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n > 0) {\n    \
    \        long t = r * n % p;\n            r = t;\n            n /= p;\n      \
    \  }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi6hkdwh_.java:31)\n"
  stdout: ''
  timestamp: 1659800240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long m = n%p;\n            n = n/p;\n            r = r*p + m;\n       \
    \ }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprl7bpnqv.java:30)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long r = n%p;\n            res = (res * r) % p;\n            n = n/p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphsdd1_tf.java:31)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       long t = n % p;\n            n = n / p;\n            r = r * t + p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuypcn68z.java:30)\n"
  stdout: ''
  timestamp: 1659800240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long t = n%p;\n            n = p;\n            p = t;\n        }\n    \
    \    return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmpcgtukfjb.java:23)\n\tat Problem.main(tmpcgtukfjb.java:30)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long r = n%p;\n            res = (res * r) % p;\n            n = n/p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphsdd1_tf.java:31)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n-- > 0) {\n\
    \            res = (res * p) % p;\n        }\n        return res;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n\
    \    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) ==\
    \ (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg32n19ys.java:28)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long t = n%p;\n            if (t==0) return r;\n            r = r*p;\n\
    \            n = t;\n        }\n        return r;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800245
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n > 0) {\n    \
    \        long t = r * r;\n            if (t > p) {\n                t = p - t;\n\
    \            }\n            r = t;\n            n -= 1;\n        }\n        return\
    \ r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplsre73z8.java:33)\n"
  stdout: ''
  timestamp: 1659800240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     r = r*p;\n            n = n>>1;\n        }\n        return r;\n    }\n \
    \   public static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n\
    \    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) ==\
    \ (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppmtxj604.java:29)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     r = r*p;\n            n = n>>1;\n        }\n        return r;\n    }\n \
    \   public static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n\
    \    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) ==\
    \ (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppmtxj604.java:29)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        long m = 1;\n        while\
    \ (n > 0) {\n            long t = n % p;\n            n /= p;\n            r =\
    \ r * t + m;\n            m = m * t + n;\n        }\n        return r;\n    }\n\
    \    public static void main(String[] args) {\n    assert(modp((3l), (5l)) ==\
    \ (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l))\
    \ == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfjjueguq.java:32)\n"
  stdout: ''
  timestamp: 1659800240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        res = (res * n) % p;\n            n = n / p;\n        }\n        return\
    \ res;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc08pbv8e.java:30)\n"
  stdout: ''
  timestamp: 1659800240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            n = p;\n            p = t;\n            r = (r*p)%p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmpm8wpaknu.java:26)\n\tat Problem.main(tmpm8wpaknu.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long r = n%p;\n            res = (res * r) % p;\n            n = n/p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphsdd1_tf.java:31)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            n /= p;\n            r = r*m+m;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzcxxn_wr.java:30)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l) {\n            return 1l;\n   \
    \     }\n        long r = 1l;\n        while (n > 0) {\n            long t = n\
    \ % p;\n            n /= p;\n            r = r * t % p;\n        }\n        return\
    \ r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmaibzxo3.java:34)\n"
  stdout: ''
  timestamp: 1659800240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       long t = r * n % p;\n            r = t;\n            n /= p;\n       \
    \ }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpndge59cu.java:31)\n"
  stdout: ''
  timestamp: 1659800240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n-- > 0) {\n  \
    \          r = (r * p) % p;\n        }\n        return r;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo8psb7n2.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n > 0) {\n  \
    \          long r = n % p;\n            n = n / p;\n            res = (res * r)\
    \ % p;\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdr2562h5.java:31)\n"
  stdout: ''
  timestamp: 1659800240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (p != 0) {\n    \
    \        if (p & 1l)\n                r = (r * n) % p;\n            n /= p;\n\
    \            p >>= 1;\n        }\n        return r;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprn0dc3o2.java:23: error: incompatible types: long cannot be converted\
    \ to boolean\n            if (p & 1l)\n                  ^\n1 error\n"
  stdout: ''
  timestamp: 1659800240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n-- != 0) {\n  \
    \          r = (r * p) % p;\n        }\n        return r;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8mj9isqh.java:28)\n"
  stdout: ''
  timestamp: 1659800240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       r = r * p % n;\n            n /= 2;\n        }\n        return r;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(modp((3l), (5l))\
    \ == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkkd549w1.java:29)\n"
  stdout: ''
  timestamp: 1659800241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            r = (r*m)%p;\n            n = n/p;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn5bacs0o.java:31)\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       long m = n & -p;\n            n = n ^ m;\n            r = (r * m) % p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l)\n            return 1l;\n     \
    \   if (p == 0l)\n            return n;\n        if (p > n)\n            return\
    \ modp(n, p % n);\n        long r = 1l;\n        while (p > 0) {\n           \
    \ long m = p / n;\n            long t = r * m % n;\n            r = t;\n     \
    \       p = m / n;\n        }\n        return r;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcg5lisqa.java:37)\n"
  stdout: ''
  timestamp: 1659800241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     r = r*p;\n            n = n>>1;\n        }\n        return r;\n    }\n \
    \   public static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n\
    \    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) ==\
    \ (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppmtxj604.java:29)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long t = n%p;\n            res = (res * t) % p;\n            n = n/p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_ckqaq6f.java:31)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            n = n/p;\n            r = r*p + m;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyyj6ujad.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            n = p;\n            p = t;\n        }\n     \
    \   return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmpuh_1eino.java:23)\n\tat Problem.main(tmpuh_1eino.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      r = r*p;\n            n = n-1l;\n        }\n        return r;\n    }\n\
    \    public static void main(String[] args) {\n    assert(modp((3l), (5l)) ==\
    \ (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l))\
    \ == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbnorkm9f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long m = n%p;\n            n = n/p;\n            r = r*p + m;\n       \
    \ }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprl7bpnqv.java:30)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     r = r*p;\n            n = n>>1;\n        }\n        return r;\n    }\n \
    \   public static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n\
    \    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) ==\
    \ (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppmtxj604.java:29)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            n = p;\n            p = t;\n            r = (r*p)%p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmpm8wpaknu.java:26)\n\tat Problem.main(tmpm8wpaknu.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n-- > 0) {\n  \
    \          r = (r * p) % p;\n        }\n        return r;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo8psb7n2.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n-- > 0) {\n  \
    \          r = (r * p) % p;\n        }\n        return r;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo8psb7n2.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long d = n%p;\n            r = (r*d) % p;\n            n = n/p;\n     \
    \   }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6qhkcom.java:31)\n"
  stdout: ''
  timestamp: 1659800241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      r = r*p;\n            n = n-1l;\n        }\n        return r;\n    }\n\
    \    public static void main(String[] args) {\n    assert(modp((3l), (5l)) ==\
    \ (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l))\
    \ == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbnorkm9f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while ((n & 1l) != 0l)\
    \ {\n            n >>>= 1l;\n            r <<= 1l;\n        }\n        while ((p\
    \ & 1l) != 0l) {\n            p >>>= 1l;\n            r <<= 1l;\n        }\n \
    \       r %= p;\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpht9xsjpw.java:34)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        if (n%2 == 1) {\n                res*=p;\n            }\n           \
    \ n/=2;\n            p*=p;\n        }\n        return res;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n \
    \   assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n\
    \    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n\
    \    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7lw79wb9.java:32)\n"
  stdout: ''
  timestamp: 1659800241
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (r < p) {\n    \
    \        long m = r * r;\n            if (n % m == 0) {\n                r = m;\n\
    \            } else {\n                r += p;\n            }\n        }\n   \
    \     return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       long m = n & -p;\n            n ^= m;\n            r *= p;\n         \
    \   r %= p;\n        }\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo6g65z_n.java:31)\n"
  stdout: ''
  timestamp: 1659800241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       long t = r * n;\n            if (t > p) {\n                t = p - t;\n\
    \            }\n            r = t;\n            n -= 1;\n        }\n        return\
    \ r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq24r7y6x.java:33)\n"
  stdout: ''
  timestamp: 1659800241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l)\n            return 1l;\n     \
    \   if (p == 0l)\n            return n;\n        if (p == n) // p == n\n     \
    \       return 1l;\n        if (p < n) // p < n\n            return modp(n, (p\
    \ - n + 1l));\n        long r = 1l;\n        while (p < n) {\n            r =\
    \ (r * n) % p;\n            p++;\n        }\n        return r;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n \
    \   assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n\
    \    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n\
    \    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps6hx0ngg.java:37)\n"
  stdout: ''
  timestamp: 1659800241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       r = r * p % n;\n            n = n / 2;\n        }\n        return r;\n\
    \    }\n    public static void main(String[] args) {\n    assert(modp((3l), (5l))\
    \ == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzg26d5bv.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l) return 1l;\n        if (n == 1l)\
    \ return p;\n        if (n == 2l) return p + 1l;\n        if (n % 2 == 1l) return\
    \ modp(n / 2l, p) * p + modp(n / 2l, p) % p;\n        return modp(n / 2l, p) *\
    \ p;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1l2z_0kq.java:28)\n"
  stdout: ''
  timestamp: 1659800241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        if (n&1l)\n                res=(res*p)%p;\n            n>>=1l;\n    \
    \        p>>=1l;\n        }\n        return res;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwvvyndae.java:23: error: incompatible types: long cannot be converted\
    \ to boolean\n            if (n&1l)\n                 ^\n1 error\n"
  stdout: ''
  timestamp: 1659800241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       long t = n % p;\n            n = n / p;\n            r = r * t + p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuypcn68z.java:30)\n"
  stdout: ''
  timestamp: 1659800240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        if (n&1l) res = (res*p)%p;\n            n >>>= 1l;\n        }\n     \
    \   return res;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphtiidpcq.java:23: error: incompatible types: long cannot be converted\
    \ to boolean\n            if (n&1l) res = (res*p)%p;\n                 ^\n1 error\n"
  stdout: ''
  timestamp: 1659800241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n) {\n      \
    \      if (n % 2 == 1) {\n                res *= p;\n            }\n         \
    \   n /= 2;\n            p *= p;\n        }\n        return res;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n \
    \   assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n\
    \    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n\
    \    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxhq0uc8t.java:22: error: incompatible types: long cannot be converted\
    \ to boolean\n        while (n) {\n               ^\n1 error\n"
  stdout: ''
  timestamp: 1659800241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     r = r*p % n;\n            n /= p;\n        }\n        return r;\n    }\n\
    \    public static void main(String[] args) {\n    assert(modp((3l), (5l)) ==\
    \ (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l))\
    \ == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprigdftgu.java:29)\n"
  stdout: ''
  timestamp: 1659800241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        if (n&1l)\n                res = (res * p) % p;\n            n >>>= 1;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoys41a66.java:23: error: incompatible types: long cannot be converted\
    \ to boolean\n            if (n&1l)\n                 ^\n1 error\n"
  stdout: ''
  timestamp: 1659800241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n-- > 0) {\n  \
    \          r = (r * p) % p;\n        }\n        return r;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo8psb7n2.java:28)\n"
  stdout: ''

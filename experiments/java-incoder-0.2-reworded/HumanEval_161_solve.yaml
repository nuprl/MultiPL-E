name: HumanEval_161_solve
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse\
  \ its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n\
  \    // If the string contains no letters, reverse the string.\n    // The function\
  \ should return the resulted string.\n    // Examples\n    // >>> solve((\"1234\"\
  ))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n    // (\"AB\")\n    // >>> solve((\"\
  #a@C\"))\n    // (\"#A@c\")\n    public static String solve(String s) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(solve((\"\
  AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
  \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
  #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
  #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n\
  \    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
completions: ["        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++){\n            char c = chars[i];\n            if(c == 'a' || c == 'A'){\n\
    \                c = Character.toUpperCase(c);\n            }\n            if(c\
    \ == 'b' || c == 'B'){\n                c = Character.toLowerCase(c);\n      \
    \      }\n            sb.append(c);\n        }\n        return sb.toString();",
  "        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < arr.length; i++) {\n \
    \           char c = arr[i];\n            if(c == 'a' || c == 'A') {\n       \
    \         sb.append(Character.toUpperCase(c));\n            } else if(c == 'b'\
    \ || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n     \
    \       } else {\n                sb.append(c);\n            }\n        }\n  \
    \      return sb.toString();", "        char[] chars = s.toCharArray();\n    \
    \    Arrays.sort(chars);\n        StringBuilder sb = new StringBuilder();\n  \
    \      for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if(c == 'a' || c == 'A') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'b' || c == 'B') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'c' || c == 'C') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'd' || c == 'D') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'e' || c == 'E') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'f' || c == 'F') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'g' || c == 'G') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'h' || c == 'H') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'i' || c == 'I') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'j' || c == 'J') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'k' || c == 'K') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'l' || c == 'L') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'm' || c == 'M') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'n' || c == 'N') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'o' || c == 'O') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'p' || c == 'P') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'q' || c == 'Q') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'r' || c == 'R') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 's' || c == 'S') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 't' || c == 'T') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'u' || c == 'U') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'v' || c == 'V') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'w' || c == 'W') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'x' || c == 'X') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'y' || c", "        char[] arr = s.toCharArray();\n\
    \        Arrays.sort(arr);\n        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i < arr.length; i++) {\n            if(Character.isLetter(arr[i]))\
    \ {\n                sb.append(Character.toUpperCase(arr[i]));\n            }\
    \ else {\n                sb.append(arr[i]);\n            }\n        }\n     \
    \   return sb.toString();", "        char[] chars = s.toCharArray();\n       \
    \ Arrays.sort(chars);\n        StringBuilder sb = new StringBuilder();\n     \
    \   for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if(c == 'a' || c == 'A') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if(c == 'c' || c == 'C') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == 'd' || c == 'D') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if(c == 'e' || c == 'E') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == 'f' || c == 'F') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if(c == 'g' || c == 'G') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == 'h' || c == 'H') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if(c == 'i' || c == 'I') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == 'j' || c == 'J') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if(c == 'k' || c == 'K') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == 'l' || c == 'L') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if(c == 'm' || c == 'M') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == 'n' || c == 'N') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if(c == 'o' || c == 'O') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == 'p' || c == 'P') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if(c == 'q' || c == 'Q') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == 'r' || c == 'R') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if(c == 's' || c == 'S') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == 't' || c == 'T') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if(c == 'u' || c == 'U') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if", "        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();", "        char[] chars = s.toCharArray();\n  \
    \      Arrays.sort(chars);\n        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if(c == 'a' || c == 'A') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();", "        char[] chars = s.toCharArray();\n  \
    \      Arrays.sort(chars);\n        StringBuilder sb = new StringBuilder();\n\
    \        boolean first = true;\n        for (char c : chars) {\n            if\
    \ (first) {\n                first = false;\n            } else {\n          \
    \      sb.append(c);\n            }\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n\
    \        for (char c : chars) {\n            if (Character.isLetter(c)) {\n  \
    \              sb.append(Character.toUpperCase(c));\n            } else {\n  \
    \              sb.append(c);\n            }\n        }\n        return sb.toString();",
  "        \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n", "        char[] chars = s.toCharArray();\n   \
    \     Arrays.sort(chars);\n        StringBuilder sb = new StringBuilder();\n \
    \       for (int i = 0; i < chars.length; i++) {\n            if (Character.isLetter(chars[i]))\
    \ {\n                chars[i] = Character.toUpperCase(chars[i]);\n           \
    \ } else {\n                chars[i] = Character.toLowerCase(chars[i]);\n    \
    \        }\n            sb.append(chars[i]);\n        }\n        return sb.toString();",
  "        StringBuilder sb = new StringBuilder();\n        char[] chars = s.toCharArray();\n\
    \        Arrays.sort(chars);\n        boolean isLetter = false;\n        for (int\
    \ i = 0; i < chars.length; i++) {\n            if (chars[i] == 'a' || chars[i]\
    \ == 'A') {\n                isLetter = true;\n            }\n            if (chars[i]\
    \ == 'b' || chars[i] == 'B') {\n                isLetter = true;\n           \
    \ }\n            if (chars[i] == 'c' || chars[i] == 'C') {\n                isLetter\
    \ = true;\n            }\n            if (chars[i] == 'd' || chars[i] == 'D')\
    \ {\n                isLetter = true;\n            }\n            if (chars[i]\
    \ == 'e' || chars[i] == 'E') {\n                isLetter = true;\n           \
    \ }\n            if (chars[i] == 'f' || chars[i] == 'F') {\n                isLetter\
    \ = true;\n            }\n            if (chars[i] == 'g' || chars[i] == 'G')\
    \ {\n                isLetter = true;\n            }\n            if (chars[i]\
    \ == 'h' || chars[i] == 'H') {\n                isLetter = true;\n           \
    \ }\n            if (chars[i] == 'i' || chars[i] == 'I') {\n                isLetter\
    \ = true;\n            }\n            if (chars[i] == 'j' || chars[i] == 'J')\
    \ {\n                isLetter = true;\n            }\n            if (chars[i]\
    \ == 'k' || chars[i] == 'K') {\n                isLetter = true;\n           \
    \ }\n            if (chars[i] == 'l' || chars[i] == 'L') {\n                isLetter\
    \ = true;\n            }\n            if (chars[i] == 'm' || chars[i] == 'M')\
    \ {\n                isLetter = true;\n            }\n            if (chars[i]\
    \ == 'n' || chars[i] == 'N') {\n                isLetter = true;\n           \
    \ }\n            if (chars[i] == 'o' || chars[i] == 'O') {\n                isLetter\
    \ = true;\n            }\n            if (chars[i] == 'p' || chars[i] == 'P')\
    \ {\n                isLetter = true;\n            }\n            if (chars[i]\
    \ == 'q' || chars[i] == 'Q') {\n                isLetter = true;\n           \
    \ }\n            if (chars[i] == 'r' || chars[i] == 'R') {\n                isLetter\
    \ = true;\n            }\n            if (chars[i] == 's' || chars[i] == 'S')\
    \ {\n                isLetter = true;\n            }\n            if (chars[i]\
    \ == 't' || chars[i] == 'T') {\n                isLetter = true;\n           \
    \ }\n            if (chars[i] == 'u' || chars[i] == 'U') {\n                isLetter\
    \ = true;\n            }\n            if (chars[i] == 'v' || chars[i] == 'V')\
    \ {\n                isLetter = true;\n            }\n            if (chars[i]\
    \ == 'w' || chars[i] == 'W') {\n                isLetter = true;\n           \
    \ }\n            if (chars[i] == 'x' || chars[i] == 'X') {\n                isLetter\
    \ = true;\n            }\n            if (chars[i] == 'y' || chars[i] == 'Y')\
    \ {\n                isLetter = true;\n            }\n", "        char[] chars\
    \ = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder sb =\
    \ new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n    \
    \        char c = chars[i];\n            if(c == 'a' || c == 'A') {\n        \
    \        sb.append(Character.toUpperCase(c));\n            } else if(c == 'b'\
    \ || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n     \
    \       } else {\n                sb.append(c);\n            }\n        }\n  \
    \      return sb.toString();", "        char[] chars = s.toCharArray();\n    \
    \    Arrays.sort(chars);\n        StringBuilder sb = new StringBuilder();\n  \
    \      for (int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if (Character.isLetter(c)) {\n                c = Character.toUpperCase(c);\n\
    \            } else {\n                c = Character.toLowerCase(c);\n       \
    \     }\n            sb.append(c);\n        }\n        return sb.toString();",
  "        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if (Character.isLetter(c)) {\n  \
    \              sb.append(Character.toUpperCase(c));\n            } else {\n  \
    \              sb.append(c);\n            }\n        }\n        return sb.toString();",
  "        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(Character.isLetter(c)) {\n   \
    \             sb.append(Character.toUpperCase(c));\n            } else {\n   \
    \             sb.append(c);\n            }\n        }\n        return sb.toString();",
  "        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (char c : arr) {\n            char cc\
    \ = Character.toUpperCase(c);\n            if (Character.isLetter(c)) {\n    \
    \            sb.append(cc);\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        char[] chars\
    \ = s.toCharArray();\n        Arrays.sort(chars);\n        StringBuilder sb =\
    \ new StringBuilder();\n        for (char c : chars) {\n            if (Character.isLetter(c))\
    \ {\n                c = Character.toUpperCase(c);\n            } else {\n   \
    \             c = Character.toLowerCase(c);\n            }\n            sb.append(c);\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if(c == 'a' || c == 'A') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();", "        char[] chars = s.toCharArray();\n  \
    \      Arrays.sort(chars);\n        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if(c == 'a' || c == 'A') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();"]
stop_tokens:
- "\n    }\n"

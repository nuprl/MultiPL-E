language: java
name: HumanEval_161_solve
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++){\n            char c = chars[i];\n            if(c == 'a' || c == 'A'){\n\
    \                c = Character.toUpperCase(c);\n            }\n            if(c\
    \ == 'b' || c == 'B'){\n                c = Character.toLowerCase(c);\n      \
    \      }\n            sb.append(c);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxo048826.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            char c = arr[i];\n            if(c == 'a' || c == 'A') {\n\
    \                sb.append(Character.toUpperCase(c));\n            } else if(c\
    \ == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsr0s3u2a.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                c = Character.toUpperCase(c);\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                c = Character.toLowerCase(c);\n        \
    \    } else if(c == 'c' || c == 'C') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'd' || c == 'D') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'e' || c == 'E') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'f' || c == 'F') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'g' || c == 'G') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'h' || c == 'H') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'i' || c == 'I') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'j' || c == 'J') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'k' || c == 'K') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'l' || c == 'L') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'm' || c == 'M') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'n' || c == 'N') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'o' || c == 'O') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'p' || c == 'P') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'q' || c == 'Q') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'r' || c == 'R') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 's' || c == 'S') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 't' || c == 'T') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'u' || c == 'U') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'v' || c == 'V') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'w' || c == 'W') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'x' || c == 'X') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'y' || c\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf2vygo0z.java:75: error: ')' expected\n            } else if(c\
    \ == 'y' || c\n                                   ^\n/tmp/tmpf2vygo0z.java:76:\
    \ error: illegal start of statement\n    }\n    ^\n/tmp/tmpf2vygo0z.java:77: error:\
    \ illegal start of expression\n    public static void main(String[] args) {\n\
    \    ^\n/tmp/tmpf2vygo0z.java:77: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n           ^\n/tmp/tmpf2vygo0z.java:77: error:\
    \ ';' expected\n    public static void main(String[] args) {\n               \
    \  ^\n/tmp/tmpf2vygo0z.java:77: error: '.class' expected\n    public static void\
    \ main(String[] args) {\n                                     ^\n/tmp/tmpf2vygo0z.java:77:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmpf2vygo0z.java:88: error: reached\
    \ end of file while parsing\n}\n ^\n8 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            if(Character.isLetter(arr[i])) {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg13eaw8z.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if(c == 'c' || c == 'C') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == 'd' || c == 'D') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if(c == 'e' || c == 'E') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == 'f' || c == 'F') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if(c == 'g' || c == 'G') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == 'h' || c == 'H') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if(c == 'i' || c == 'I') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == 'j' || c == 'J') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if(c == 'k' || c == 'K') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == 'l' || c == 'L') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if(c == 'm' || c == 'M') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == 'n' || c == 'N') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if(c == 'o' || c == 'O') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == 'p' || c == 'P') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if(c == 'q' || c == 'Q') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == 'r' || c == 'R') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if(c == 's' || c == 'S') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == 't' || c == 'T') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if(c == 'u' || c == 'U') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if\n    }\n    public static void main(String[] args) {\n\
    \    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0qurtlsk.java:69: error: '(' expected\n            } else if\n\
    \                     ^\n/tmp/tmp0qurtlsk.java:70: error: illegal start of expression\n\
    \    }\n    ^\n/tmp/tmp0qurtlsk.java:70: error: ')' expected\n    }\n     ^\n\
    /tmp/tmp0qurtlsk.java:71: error: illegal start of expression\n    public static\
    \ void main(String[] args) {\n           ^\n/tmp/tmp0qurtlsk.java:71: error: ';'\
    \ expected\n    public static void main(String[] args) {\n                 ^\n\
    /tmp/tmp0qurtlsk.java:71: error: '.class' expected\n    public static void main(String[]\
    \ args) {\n                                     ^\n/tmp/tmp0qurtlsk.java:71: error:\
    \ ';' expected\n    public static void main(String[] args) {\n               \
    \                          ^\n/tmp/tmp0qurtlsk.java:82: error: reached end of\
    \ file while parsing\n}\n ^\n8 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps03tggy_.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        boolean first = true;\n\
    \        for (char c : chars) {\n            if (first) {\n                first\
    \ = false;\n            } else {\n                sb.append(c);\n            }\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl7z902ew.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] chars = s.toCharArray();\n        for (char c : chars) {\n   \
    \         if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp33zrxvbq.java:34)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp17p0jstr.java:279: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ chars.length; i++) {\n            if (Character.isLetter(chars[i])) {\n    \
    \            chars[i] = Character.toUpperCase(chars[i]);\n            } else {\n\
    \                chars[i] = Character.toLowerCase(chars[i]);\n            }\n\
    \            sb.append(chars[i]);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprstlwu3n.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n      \
    \  boolean isLetter = false;\n        for (int i = 0; i < chars.length; i++) {\n\
    \            if (chars[i] == 'a' || chars[i] == 'A') {\n                isLetter\
    \ = true;\n            }\n            if (chars[i] == 'b' || chars[i] == 'B')\
    \ {\n                isLetter = true;\n            }\n            if (chars[i]\
    \ == 'c' || chars[i] == 'C') {\n                isLetter = true;\n           \
    \ }\n            if (chars[i] == 'd' || chars[i] == 'D') {\n                isLetter\
    \ = true;\n            }\n            if (chars[i] == 'e' || chars[i] == 'E')\
    \ {\n                isLetter = true;\n            }\n            if (chars[i]\
    \ == 'f' || chars[i] == 'F') {\n                isLetter = true;\n           \
    \ }\n            if (chars[i] == 'g' || chars[i] == 'G') {\n                isLetter\
    \ = true;\n            }\n            if (chars[i] == 'h' || chars[i] == 'H')\
    \ {\n                isLetter = true;\n            }\n            if (chars[i]\
    \ == 'i' || chars[i] == 'I') {\n                isLetter = true;\n           \
    \ }\n            if (chars[i] == 'j' || chars[i] == 'J') {\n                isLetter\
    \ = true;\n            }\n            if (chars[i] == 'k' || chars[i] == 'K')\
    \ {\n                isLetter = true;\n            }\n            if (chars[i]\
    \ == 'l' || chars[i] == 'L') {\n                isLetter = true;\n           \
    \ }\n            if (chars[i] == 'm' || chars[i] == 'M') {\n                isLetter\
    \ = true;\n            }\n            if (chars[i] == 'n' || chars[i] == 'N')\
    \ {\n                isLetter = true;\n            }\n            if (chars[i]\
    \ == 'o' || chars[i] == 'O') {\n                isLetter = true;\n           \
    \ }\n            if (chars[i] == 'p' || chars[i] == 'P') {\n                isLetter\
    \ = true;\n            }\n            if (chars[i] == 'q' || chars[i] == 'Q')\
    \ {\n                isLetter = true;\n            }\n            if (chars[i]\
    \ == 'r' || chars[i] == 'R') {\n                isLetter = true;\n           \
    \ }\n            if (chars[i] == 's' || chars[i] == 'S') {\n                isLetter\
    \ = true;\n            }\n            if (chars[i] == 't' || chars[i] == 'T')\
    \ {\n                isLetter = true;\n            }\n            if (chars[i]\
    \ == 'u' || chars[i] == 'U') {\n                isLetter = true;\n           \
    \ }\n            if (chars[i] == 'v' || chars[i] == 'V') {\n                isLetter\
    \ = true;\n            }\n            if (chars[i] == 'w' || chars[i] == 'W')\
    \ {\n                isLetter = true;\n            }\n            if (chars[i]\
    \ == 'x' || chars[i] == 'X') {\n                isLetter = true;\n           \
    \ }\n            if (chars[i] == 'y' || chars[i] == 'Y') {\n                isLetter\
    \ = true;\n            }\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2on6ie1b.java:104: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp2on6ie1b.java:104: error:\
    \ illegal start of expression\n    public static void main(String[] args) {\n\
    \           ^\n/tmp/tmp2on6ie1b.java:104: error: ';' expected\n    public static\
    \ void main(String[] args) {\n                 ^\n/tmp/tmp2on6ie1b.java:104: error:\
    \ '.class' expected\n    public static void main(String[] args) {\n          \
    \                           ^\n/tmp/tmp2on6ie1b.java:104: error: ';' expected\n\
    \    public static void main(String[] args) {\n                              \
    \           ^\n/tmp/tmp2on6ie1b.java:115: error: reached end of file while parsing\n\
    }\n ^\n6 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ chars.length; i++) {\n            char c = chars[i];\n            if (Character.isLetter(c))\
    \ {\n                c = Character.toUpperCase(c);\n            } else {\n   \
    \             c = Character.toLowerCase(c);\n            }\n            sb.append(c);\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp02q5frkd.java:37)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ chars.length; i++) {\n            char c = chars[i];\n            if (Character.isLetter(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2jv551p6.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(Character.isLetter(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw3es9j_p.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : arr) {\n\
    \            char cc = Character.toUpperCase(c);\n            if (Character.isLetter(c))\
    \ {\n                sb.append(cc);\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx8j_grju.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            if (Character.isLetter(c)) {\n                c = Character.toUpperCase(c);\n\
    \            } else {\n                c = Character.toLowerCase(c);\n       \
    \     }\n            sb.append(c);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqhfrtts0.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if(c == 'a' || c == 'A') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhficb_4.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        boolean isLetter = true;\n\
    \        for (int i = 0; i < chars.length; i++) {\n            if (chars[i] >=\
    \ 'a' && chars[i] <= 'z') {\n                isLetter = true;\n            } else\
    \ if (chars[i] >= 'A' && chars[i] <= 'Z') {\n                isLetter = true;\n\
    \            } else {\n                isLetter = false;\n            }\n    \
    \        if (isLetter) {\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            } else {\n                sb.append(chars[i]);\n            }\n \
    \       }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp47ke_j29.java:43)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n      \
    \  boolean isLetter = false;\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'A') {\n    \
    \            isLetter = true;\n            }\n            if(c == 'b' || c ==\
    \ 'B') {\n                isLetter = true;\n            }\n            if(c ==\
    \ 'c' || c == 'C') {\n                isLetter = true;\n            }\n      \
    \      if(c == 'd' || c == 'D') {\n                isLetter = true;\n        \
    \    }\n            if(c == 'e' || c == 'E') {\n                isLetter = true;\n\
    \            }\n            if(c == 'f' || c == 'F') {\n                isLetter\
    \ = true;\n            }\n            if(c == 'g' || c == 'G') {\n           \
    \     isLetter = true;\n            }\n            if(c == 'h' || c == 'H') {\n\
    \                isLetter = true;\n            }\n            if(c == 'i' || c\
    \ == 'I') {\n                isLetter = true;\n            }\n            if(c\
    \ == 'j' || c == 'J') {\n                isLetter = true;\n            }\n   \
    \         if(c == 'k' || c == 'K') {\n                isLetter = true;\n     \
    \       }\n            if(c == 'l' || c == 'L') {\n                isLetter =\
    \ true;\n            }\n            if(c == 'm' || c == 'M') {\n             \
    \   isLetter = true;\n            }\n            if(c == 'n' || c == 'N') {\n\
    \                isLetter = true;\n            }\n            if(c == 'o' || c\
    \ == 'O') {\n                isLetter = true;\n            }\n            if(c\
    \ == 'p' || c == 'P') {\n                isLetter = true;\n            }\n   \
    \         if(c == 'q' || c == 'Q') {\n                isLetter = true;\n     \
    \       }\n            if(c == 'r' || c == 'R') {\n                isLetter =\
    \ true;\n            }\n            if(c == 's' || c == 'S') {\n             \
    \   isLetter = true;\n            }\n            if(c == 't' || c == 'T') {\n\
    \                isLetter = true;\n            }\n            if(c == 'u' || c\
    \ == 'U') {\n                isLetter = true;\n            }\n            if(c\
    \ == 'v' || c == 'V') {\n                isLetter = true;\n            }\n   \
    \         if(c == 'w' || c == 'W') {\n                isLetter = true;\n     \
    \       }\n            if(c == 'x' || c == 'X') {\n                isLetter =\
    \ true;\n            }\n            if(c == 'y' || c == 'Y') {\n             \
    \   isLetter = true;\n            }\n            if(c == 'z' || c == 'Z') {\n\
    \                isLetter = true;\n            }\n            \n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp38kjgjdf.java:108: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        boolean first = true;\n\
    \        for (char c : chars) {\n            if (first) {\n                first\
    \ = false;\n            } else {\n                sb.append(c);\n            }\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl7z902ew.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps03tggy_.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            String upper = Character.toString((char) c);\n            String\
    \ lower = Character.toString((char) Character.toUpperCase((char) c));\n      \
    \      if (upper.length() == 1) {\n                sb.append(upper);\n       \
    \     } else if (lower.length() == 1) {\n                sb.append(lower);\n \
    \           } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkvqn3rg2.java:39)\n"
  stdout: ''
  timestamp: 1659793719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n      \
    \  boolean isLetter = true;\n        for(int i = 0; i < chars.length; i++) {\n\
    \            if(chars[i] == '@' || chars[i] == '#') {\n                isLetter\
    \ = false;\n            }\n        }\n        if(isLetter) {\n            for(int\
    \ i = 0; i < chars.length; i++) {\n                if(chars[i] == '@' || chars[i]\
    \ == '#') {\n                    sb.append(chars[i]);\n                }\n   \
    \             else {\n                    sb.append(chars[i].toUpperCase());\n\
    \                }\n            }\n        }\n        else {\n            for(int\
    \ i = 0; i < chars.length; i++) {\n                if(chars[i] == '@' || chars[i]\
    \ == '#') {\n                    sb.append(chars[i]);\n                }\n   \
    \             else {\n                    sb.append(chars[i].toLowerCase());\n\
    \                }\n            }\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp02hnmcph.java:37: error: char cannot be dereferenced\n        \
    \            sb.append(chars[i].toUpperCase());\n                            \
    \          ^\n/tmp/tmp02hnmcph.java:47: error: char cannot be dereferenced\n \
    \                   sb.append(chars[i].toLowerCase());\n                     \
    \                 ^\n2 errors\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n      \
    \  for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n \
    \           if(c == 'a' || c == 'A') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if(c == 'c' || c == 'C') {\n                sb.append(c);\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp33cwt44l.java:40)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] chars = s.toCharArray();\n        for (char c : chars) {\n   \
    \         if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp33zrxvbq.java:34)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n      \
    \  for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n \
    \           if(c == 'a' || c == 'A') {\n                chars[i] = 'A';\n    \
    \            chars[chars.length - 1] = 'a';\n            }\n            if(c ==\
    \ 'b' || c == 'B') {\n                chars[i] = 'B';\n                chars[chars.length\
    \ - 1] = 'b';\n            }\n            if(c == 'c' || c == 'C') {\n       \
    \         chars[i] = 'C';\n                chars[chars.length - 1] = 'c';\n  \
    \          }\n            if(c == 'd' || c == 'D') {\n                chars[i]\
    \ = 'D';\n                chars[chars.length - 1] = 'd';\n            }\n    \
    \        if(c == 'e' || c == 'E') {\n                chars[i] = 'E';\n       \
    \         chars[chars.length - 1] = 'e';\n            }\n            if(c == 'f'\
    \ || c == 'F') {\n                chars[i] = 'F';\n                chars[chars.length\
    \ - 1] = 'f';\n            }\n            if(c == 'g' || c == 'G') {\n       \
    \         chars[i] = 'G';\n                chars[chars.length - 1] = 'g';\n  \
    \          }\n            if(c == 'h' || c == 'H') {\n                chars[i]\
    \ = 'H';\n                chars[chars.length - 1] = 'h';\n            }\n    \
    \        if(c == 'i' || c == 'I') {\n                chars[i] = 'I';\n       \
    \         chars[chars.length - 1] = 'i';\n            }\n            if(c == 'j'\
    \ || c == 'J') {\n                chars[i] = 'J';\n                chars[chars.length\
    \ - 1] = 'j';\n            }\n            if(c == 'k' || c == 'K') {\n       \
    \         chars[i] = 'K';\n                chars[chars.length - 1] = 'k';\n  \
    \          }\n            if(c == 'l' || c == 'L') {\n                chars[i]\
    \ = 'L';\n                chars[chars.length - 1] = 'l';\n            }\n    \
    \        if(c == 'm' || c == 'M') {\n                chars[i] = 'M';\n       \
    \         chars[chars.length - 1] = 'm';\n            }\n            if(c == 'n'\
    \ || c == 'N') {\n                chars[i] = 'N';\n                chars[chars.length\
    \ - 1] = 'n';\n            }\n            if(c == 'o' || c == 'O') {\n       \
    \         chars[i] = 'O';\n                chars[chars.length - 1] = 'o';\n  \
    \          }\n            if(c == 'p' || c == 'P') {\n                chars[i]\
    \ = 'P';\n                chars[chars.length - 1] = '\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw75zqfc1.java:89: error: illegal line end in character literal\n\
    \                chars[chars.length - 1] = '\n                               \
    \           ^\n/tmp/tmpw75zqfc1.java:91: error: illegal start of expression\n\
    \    public static void main(String[] args) {\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp17p0jstr.java:279: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            if(Character.isLetter(arr[i])) {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg13eaw8z.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++){\n            if(Character.isLetter(chars[i])){\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            }else{\n                sb.append(chars[i]);\n            }\n   \
    \     }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqbc3ji3d.java:35)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            if(Character.isLetter(arr[i])) {\n                char c\
    \ = Character.toUpperCase(arr[i]);\n                sb.append(c);\n          \
    \  } else {\n                sb.append(arr[i]);\n            }\n        }\n  \
    \      return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe04q_b2t.java:36)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n      \
    \  boolean isLetter = false;\n        for (int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if (Character.isLetter(c)) {\n  \
    \              isLetter = true;\n            } else {\n                isLetter\
    \ = false;\n            }\n            if (isLetter) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1ngwkfzr.java:42)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++){\n            char c = chars[i];\n            if(c == 'a' || c == 'A'){\n\
    \                sb.append(Character.toUpperCase(c));\n            }else if(c\
    \ == 'b' || c == 'B'){\n                sb.append(Character.toLowerCase(c));\n\
    \            }else{\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaxz8v3_j.java:38)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            String str = Character.toString(c);\n            if (Character.isLetter(c))\
    \ {\n                str = Character.toUpperCase(str);\n            }\n      \
    \      sb.append(str);\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy77sdyc5.java:28: error: no suitable method found for toUpperCase(String)\n\
    \                str = Character.toUpperCase(str);\n                         \
    \      ^\n    method Character.toUpperCase(char) is not applicable\n      (argument\
    \ mismatch; String cannot be converted to char)\n    method Character.toUpperCase(int)\
    \ is not applicable\n      (argument mismatch; String cannot be converted to int)\n\
    1 error\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        boolean first = true;\n\
    \        for (char c : chars) {\n            if (Character.isLetter(c)) {\n  \
    \              if (first) {\n                    first = false;\n            \
    \    } else {\n                    sb.append(Character.toUpperCase(c));\n    \
    \            }\n            } else {\n                sb.append(c);\n        \
    \    }\n        }\n        return sb.toString();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n \
    \   assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpibwiwn88.java:40)\n"
  stdout: ''
  timestamp: 1659793719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ chars.length; i++) {\n            if (Character.isLetter(chars[i])) {\n    \
    \            chars[i] = Character.toUpperCase(chars[i]);\n            } else {\n\
    \                chars[i] = Character.toLowerCase(chars[i]);\n            }\n\
    \            sb.append(chars[i]);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprstlwu3n.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            if(Character.isLetter(arr[i])) {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg13eaw8z.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            if(Character.isLetter(arr[i])) {\n                char c\
    \ = Character.toUpperCase(arr[i]);\n                sb.append(c);\n          \
    \  } else {\n                sb.append(arr[i]);\n            }\n        }\n  \
    \      return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe04q_b2t.java:36)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ arr.length; i++) {\n            if (Character.isLetter(arr[i])) {\n        \
    \        sb.append(Character.toUpperCase(arr[i]));\n            } else {\n   \
    \             sb.append(arr[i]);\n            }\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp35lh44aw.java:35)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        \n        char[] chars = s.toCharArray();\n\
    \        \n        for(int i = 0; i < chars.length; i++){\n            if(Character.isLetter(chars[i])){\n\
    \                chars[i] = Character.toUpperCase(chars[i]);\n            }\n\
    \            else{\n                chars[i] = Character.toLowerCase(chars[i]);\n\
    \            }\n        }\n        \n        return new String(chars);\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz4lp0wv5.java:37)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n        boolean\
    \ flag = true;\n        for (int i = 0; i < arr.length; i++) {\n            if\
    \ (arr[i] >= 'a' && arr[i] <= 'z') {\n                flag = false;\n        \
    \        break;\n            }\n        }\n        if (flag) {\n            for\
    \ (int i = 0; i < arr.length; i++) {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            }\n        } else {\n            for (int i = 0; i < arr.length;\
    \ i++) {\n                sb.append(Character.toLowerCase(arr[i]));\n        \
    \    }\n        }\n        return sb.toString();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n \
    \   assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpop781ffy.java:44)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n      \
    \  boolean first = true;\n        for (int i = 0; i < chars.length; i++) {\n \
    \           if (chars[i] >= 'a' && chars[i] <= 'z') {\n                if (first)\
    \ {\n                    first = false;\n                } else {\n          \
    \          sb.append(chars[i]);\n                }\n            } else {\n   \
    \             sb.append(chars[i]);\n            }\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbh0ln1bn.java:40)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps03tggy_.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ chars.length; i++) {\n            if (Character.isLetter(chars[i])) {\n    \
    \            sb.append(Character.toUpperCase(chars[i]));\n            } else {\n\
    \                sb.append(chars[i]);\n            }\n        }\n        return\
    \ sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxqb6a403.java:35)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            char c = arr[i];\n            if(c == 'a' || c == 'A') {\n\
    \                sb.append(Character.toUpperCase(c));\n            } else if(c\
    \ == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsr0s3u2a.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n      \
    \  boolean isLetter = true;\n        for (char c : chars) {\n            if (Character.isLetter(c))\
    \ {\n                isLetter = true;\n            } else {\n                isLetter\
    \ = false;\n            }\n        }\n        if (isLetter) {\n            char[]\
    \ chars2 = s.toCharArray();\n            Arrays.sort(chars2);\n            for\
    \ (int i = 0; i < chars2.length; i++) {\n                char c = chars2[i];\n\
    \                if (Character.isUpperCase(c)) {\n                    chars2[i]\
    \ = Character.toLowerCase(c);\n                }\n            }\n            String\
    \ result = new String(chars2);\n            sb.append(result);\n        } else\
    \ {\n            String result = new String(chars);\n            sb.append(result);\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9o464f61.java:51)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ chars.length; i++) {\n            if (Character.isLetter(chars[i])) {\n    \
    \            chars[i] = Character.toUpperCase(chars[i]);\n            } else {\n\
    \                chars[i] = Character.toLowerCase(chars[i]);\n            }\n\
    \            sb.append(chars[i]);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprstlwu3n.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp17p0jstr.java:279: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++){\n            char c = chars[i];\n            if(c == 'a' || c == 'A'){\n\
    \                sb.append(Character.toUpperCase(c));\n            }else if(c\
    \ == 'b' || c == 'B'){\n                sb.append(Character.toLowerCase(c));\n\
    \            }else{\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaxz8v3_j.java:38)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps03tggy_.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp17p0jstr.java:279: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ chars.length; i++) {\n            if (Character.isLetter(chars[i])) {\n    \
    \            sb.append(Character.toUpperCase(chars[i]));\n            } else {\n\
    \                sb.append(chars[i]);\n            }\n        }\n        return\
    \ sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxqb6a403.java:35)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            if (Character.isLetter(c)) {\n                c = Character.toUpperCase(c);\n\
    \            } else {\n                c = Character.toLowerCase(c);\n       \
    \     }\n            sb.append(c);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqhfrtts0.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            if(Character.isLetter(chars[i])) {\n                chars[i]\
    \ = Character.toUpperCase(chars[i]);\n            } else {\n                chars[i]\
    \ = Character.toLowerCase(chars[i]);\n            }\n            sb.append(chars[i]);\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7bcxorzk.java:36)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++){\n            if(chars[i] >= 'a' && chars[i] <= 'z'){\n               \
    \ chars[i] = chars[i].toUpperCase();\n            }\n            else if(chars[i]\
    \ >= 'A' && chars[i] <= 'Z'){\n                chars[i] = chars[i].toLowerCase();\n\
    \            }\n            else{\n                sb.append(chars[i]);\n    \
    \        }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyco3rbks.java:27: error: char cannot be dereferenced\n        \
    \        chars[i] = chars[i].toUpperCase();\n                                \
    \   ^\n/tmp/tmpyco3rbks.java:30: error: char cannot be dereferenced\n        \
    \        chars[i] = chars[i].toLowerCase();\n                                \
    \   ^\n2 errors\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n      \
    \  boolean isLetter = false;\n        for(int i = 0; i < chars.length; i++) {\n\
    \            if(chars[i] == 'a' || chars[i] == 'A') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == 'b' || chars[i] == 'B') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'c'\
    \ || chars[i] == 'C') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'd' || chars[i] == 'D') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'e' || chars[i] == 'E') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'f'\
    \ || chars[i] == 'F') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'g' || chars[i] == 'G') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'h' || chars[i] == 'H') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'i'\
    \ || chars[i] == 'I') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'j' || chars[i] == 'J') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'k' || chars[i] == 'K') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'l'\
    \ || chars[i] == 'L') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'm' || chars[i] == 'M') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'n' || chars[i] == 'N') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'o'\
    \ || chars[i] == 'O') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'p' || chars[i] == 'P') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'q' || chars[i] == 'Q') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'r'\
    \ || chars[i] == 'R') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 's' || chars[i] == 'S') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 't' || chars[i] == 'T') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'u'\
    \ || chars[i] == 'U') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'v' || chars[i] == 'V') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'w' || chars[i] == 'W') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'x'\
    \ || chars[i] == 'X') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'y' || chars[i] == 'Y') {\n                isLetter =\
    \ true;\n            }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv1fh46am.java:104: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n        for(int\
    \ i = 0; i < arr.length; i++) {\n            char c = arr[i];\n            if(c\
    \ == 'a' || c == 'A') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5oprtq8n.java:38)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            if(Character.isLetter(arr[i])) {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg13eaw8z.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            char c = arr[i];\n            if(c == 'a' || c == 'A') {\n\
    \                sb.append(Character.toUpperCase(c));\n            } else if(c\
    \ == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsr0s3u2a.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps03tggy_.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n      \
    \  boolean flag = false;\n        for (int i = 0; i < chars.length; i++) {\n \
    \           if (chars[i] == ' ') {\n                flag = true;\n           \
    \     continue;\n            }\n            if (flag) {\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            } else {\n                sb.append(Character.toLowerCase(chars[i]));\n\
    \            }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8sft6ydr.java:40)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ chars.length; i++) {\n            if (Character.isLetter(chars[i])) {\n    \
    \            chars[i] = Character.toUpperCase(chars[i]);\n            } else {\n\
    \                chars[i] = Character.toLowerCase(chars[i]);\n            }\n\
    \            sb.append(chars[i]);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprstlwu3n.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            if(Character.isLetter(arr[i])) {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg13eaw8z.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            char c = arr[i];\n            if(c == ' ') {\n         \
    \       sb.append(c);\n            } else {\n                sb.append(Character.toUpperCase(c));\n\
    \            }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0zycsnb7.java:36)\n"
  stdout: ''
  timestamp: 1659793719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        boolean isFirst = true;\n\
    \        for (char c : chars) {\n            if (isFirst) {\n                isFirst\
    \ = false;\n                sb.append(c);\n            } else {\n            \
    \    sb.append(Character.toUpperCase(c));\n            }\n        }\n        return\
    \ sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1kyeedvi.java:37)\n"
  stdout: ''
  timestamp: 1659793719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n      \
    \  boolean isLetter = true;\n        for (int i = 0; i < chars.length; i++) {\n\
    \            if (chars[i] >= 'a' && chars[i] <= 'z') {\n                isLetter\
    \ = true;\n            } else if (chars[i] >= 'A' && chars[i] <= 'Z') {\n    \
    \            isLetter = true;\n            } else {\n                isLetter\
    \ = false;\n            }\n        }\n        if (isLetter) {\n            char[]\
    \ chars2 = new char[chars.length];\n            for (int i = 0; i < chars.length;\
    \ i++) {\n                if (chars[i] >= 'a' && chars[i] <= 'z') {\n        \
    \            chars2[i] = (char) (chars[i] + (char.MAX_VALUE - char.MIN_VALUE));\n\
    \                } else if (chars[i] >= 'A' && chars[i] <= 'Z') {\n          \
    \          chars2[i] = (char) (chars[i] - (char.MAX_VALUE - char.MIN_VALUE));\n\
    \                } else {\n                    chars2[i] = chars[i];\n       \
    \         }\n            }\n            Arrays.sort(chars2);\n            for\
    \ (int i = 0; i < chars2.length; i++) {\n                sb.append(chars2[i]);\n\
    \            }\n        } else {\n            char[] chars3 = new char[chars.length];\n\
    \            for (int i = 0; i < chars.length; i++) {\n                chars3[i]\
    \ = chars[i];\n            }\n            Arrays.sort(chars3);\n            for\
    \ (int i = 0; i < chars3.length; i++) {\n                sb.append(chars3[i]);\n\
    \            }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1wef68wu.java:39: error: class expected\n                    chars2[i]\
    \ = (char) (chars[i] + (char.MAX_VALUE - char.MIN_VALUE));\n                 \
    \                                        ^\n/tmp/tmp1wef68wu.java:39: error: class\
    \ expected\n                    chars2[i] = (char) (chars[i] + (char.MAX_VALUE\
    \ - char.MIN_VALUE));\n                                                      \
    \                    ^\n/tmp/tmp1wef68wu.java:41: error: class expected\n    \
    \                chars2[i] = (char) (chars[i] - (char.MAX_VALUE - char.MIN_VALUE));\n\
    \                                                         ^\n/tmp/tmp1wef68wu.java:41:\
    \ error: class expected\n                    chars2[i] = (char) (chars[i] - (char.MAX_VALUE\
    \ - char.MIN_VALUE));\n                                                      \
    \                    ^\n4 errors\n"
  stdout: ''
  timestamp: 1659793719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n      \
    \  boolean isLetter = false;\n        for(int i = 0; i < chars.length; i++) {\n\
    \            if(chars[i] == 'a' || chars[i] == 'A') {\n                isLetter\
    \ = true;\n            }\n            if(chars[i] == 'b' || chars[i] == 'B') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'c'\
    \ || chars[i] == 'C') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'd' || chars[i] == 'D') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'e' || chars[i] == 'E') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'f'\
    \ || chars[i] == 'F') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'g' || chars[i] == 'G') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'h' || chars[i] == 'H') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'i'\
    \ || chars[i] == 'I') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'j' || chars[i] == 'J') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'k' || chars[i] == 'K') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'l'\
    \ || chars[i] == 'L') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'm' || chars[i] == 'M') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'n' || chars[i] == 'N') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'o'\
    \ || chars[i] == 'O') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'p' || chars[i] == 'P') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'q' || chars[i] == 'Q') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'r'\
    \ || chars[i] == 'R') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 's' || chars[i] == 'S') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 't' || chars[i] == 'T') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'u'\
    \ || chars[i] == 'U') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'v' || chars[i] == 'V') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'w' || chars[i] == 'W') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'x'\
    \ || chars[i] == 'X') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'y' || chars[i] == 'Y') {\n                isLetter =\
    \ true;\n            }\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv1fh46am.java:104: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++){\n            if(Character.isLetter(chars[i])){\n                chars[i]\
    \ = Character.toUpperCase(chars[i]);\n            }\n            else{\n     \
    \           chars[i] = Character.toLowerCase(chars[i]);\n            }\n     \
    \       sb.append(chars[i]);\n        }\n        return sb.toString();\n    }\n\
    \    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpel4ueur5.java:37)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == (char) 'a') {\n\
    \                sb.append(Character.toUpperCase(c));\n            } else if(c\
    \ == (char) 'A') {\n                sb.append(Character.toLowerCase(c));\n   \
    \         } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1_dfnayq.java:38)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        boolean isLetter = false;\n\
    \        for(int i = 0; i < chars.length; i++) {\n            if(chars[i] == 'a'\
    \ || chars[i] == 'A') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'b' || chars[i] == 'B') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'c' || chars[i] == 'C') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'd'\
    \ || chars[i] == 'D') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'e' || chars[i] == 'E') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'f' || chars[i] == 'F') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'g'\
    \ || chars[i] == 'G') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'h' || chars[i] == 'H') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'i' || chars[i] == 'I') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'j'\
    \ || chars[i] == 'J') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'k' || chars[i] == 'K') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'l' || chars[i] == 'L') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'm'\
    \ || chars[i] == 'M') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'n' || chars[i] == 'N') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'o' || chars[i] == 'O') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'p'\
    \ || chars[i] == 'P') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'q' || chars[i] == 'Q') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'r' || chars[i] == 'R') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 's'\
    \ || chars[i] == 'S') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 't' || chars[i] == 'T') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'u' || chars[i] == 'U') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'v'\
    \ || chars[i] == 'V') {\n                isLetter = true;\n            }\n   \
    \         if(chars[i] == 'w' || chars[i] == 'W') {\n                isLetter =\
    \ true;\n            }\n            if(chars[i] == 'x' || chars[i] == 'X') {\n\
    \                isLetter = true;\n            }\n            if(chars[i] == 'y'\
    \ || chars[i] == 'Y') {\n                isLetter = true;\n            }\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo1zbw8w0.java:104: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1659793719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            String str = Character.toString(c);\n            if (Character.isLetter(c))\
    \ {\n                sb.append(Character.toUpperCase(str));\n            } else\
    \ {\n                sb.append(str);\n            }\n        }\n        return\
    \ sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplybocz_u.java:28: error: no suitable method found for toUpperCase(String)\n\
    \                sb.append(Character.toUpperCase(str));\n                    \
    \               ^\n    method Character.toUpperCase(char) is not applicable\n\
    \      (argument mismatch; String cannot be converted to char)\n    method Character.toUpperCase(int)\
    \ is not applicable\n      (argument mismatch; String cannot be converted to int)\n\
    1 error\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n      \
    \  boolean isLetter = false;\n        for(int i = 0; i < chars.length; i++) {\n\
    \            char c = chars[i];\n            if(c == 'a' || c == 'A') {\n    \
    \            isLetter = true;\n            }\n            if(c == 'b' || c ==\
    \ 'B') {\n                isLetter = true;\n            }\n            if(c ==\
    \ 'c' || c == 'C') {\n                isLetter = true;\n            }\n      \
    \      if(c == 'd' || c == 'D') {\n                isLetter = true;\n        \
    \    }\n            if(c == 'e' || c == 'E') {\n                isLetter = true;\n\
    \            }\n            if(c == 'f' || c == 'F') {\n                isLetter\
    \ = true;\n            }\n            if(c == 'g' || c == 'G') {\n           \
    \     isLetter = true;\n            }\n            if(c == 'h' || c == 'H') {\n\
    \                isLetter = true;\n            }\n            if(c == 'i' || c\
    \ == 'I') {\n                isLetter = true;\n            }\n            if(c\
    \ == 'j' || c == 'J') {\n                isLetter = true;\n            }\n   \
    \         if(c == 'k' || c == 'K') {\n                isLetter = true;\n     \
    \       }\n            if(c == 'l' || c == 'L') {\n                isLetter =\
    \ true;\n            }\n            if(c == 'm' || c == 'M') {\n             \
    \   isLetter = true;\n            }\n            if(c == 'n' || c == 'N') {\n\
    \                isLetter = true;\n            }\n            if(c == 'o' || c\
    \ == 'O') {\n                isLetter = true;\n            }\n            if(c\
    \ == 'p' || c == 'P') {\n                isLetter = true;\n            }\n   \
    \         if(c == 'q' || c == 'Q') {\n                isLetter = true;\n     \
    \       }\n            if(c == 'r' || c == 'R') {\n                isLetter =\
    \ true;\n            }\n            if(c == 's' || c == 'S') {\n             \
    \   isLetter = true;\n            }\n            if(c == 't' || c == 'T') {\n\
    \                isLetter = true;\n            }\n            if(c == 'u' || c\
    \ == 'U') {\n                isLetter = true;\n            }\n            if(c\
    \ == 'v' || c == 'V') {\n                isLetter = true;\n            }\n   \
    \         if(c == 'w' || c == 'W') {\n                isLetter = true;\n     \
    \       }\n            if(c == 'x' || c == 'X') {\n                isLetter =\
    \ true;\n            }\n            if(c == 'y' || c == 'Y') {\n             \
    \   isLetter = true;\n            }\n            if(c == 'z' || c == 'Z') {\n\
    \                isLetter = true;\n            }\n            if(\n    }\n   \
    \ public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp24vjs9pf.java:107: error: illegal start of expression\n    }\n\
    \    ^\n/tmp/tmp24vjs9pf.java:108: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659793719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps03tggy_.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            if(Character.isLetter(arr[i])) {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg13eaw8z.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps03tggy_.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            if(Character.isLetter(chars[i])) {\n                chars[i]\
    \ = Character.toUpperCase(chars[i]);\n            } else {\n                chars[i]\
    \ = Character.toLowerCase(chars[i]);\n            }\n            sb.append(chars[i]);\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7bcxorzk.java:36)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            if(Character.isLetter(arr[i])) {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg13eaw8z.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n      \
    \  boolean flag = false;\n        for (int i = 0; i < chars.length; i++) {\n \
    \           if (chars[i] == ' ') {\n                flag = true;\n           \
    \ } else {\n                if (flag) {\n                    sb.append(Character.toUpperCase(chars[i]));\n\
    \                } else {\n                    sb.append(Character.toLowerCase(chars[i]));\n\
    \                }\n                flag = false;\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2aletm0b.java:41)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps03tggy_.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++){\n            if(Character.isLetter(chars[i])){\n                chars[i]\
    \ = Character.toUpperCase(chars[i]);\n            }else{\n                chars[i]\
    \ = Character.toLowerCase(chars[i]);\n            }\n            sb.append(chars[i]);\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5boapq9g.java:36)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++){\n            char c = chars[i];\n            if(c == 'a' || c == 'A'){\n\
    \                sb.append(Character.toUpperCase(c));\n            }else if(c\
    \ == 'b' || c == 'B'){\n                sb.append(Character.toLowerCase(c));\n\
    \            }else{\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaxz8v3_j.java:38)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps03tggy_.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps03tggy_.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ chars.length; i++) {\n            if (Character.isLetter(chars[i])) {\n    \
    \            chars[i] = Character.toUpperCase(chars[i]);\n            } else {\n\
    \                chars[i] = Character.toLowerCase(chars[i]);\n            }\n\
    \            sb.append(chars[i]);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprstlwu3n.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps03tggy_.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if(c == 'c' || c == 'C') {\n                sb.append(c);\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjl34cbu2.java:40)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                c = Character.toUpperCase(c);\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                c = Character.toLowerCase(c);\n        \
    \    } else if(c == 'c' || c == 'C') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'd' || c == 'D') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'e' || c == 'E') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'f' || c == 'F') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'g' || c == 'G') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'h' || c == 'H') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'i' || c == 'I') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'j' || c == 'J') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'k' || c == 'K') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'l' || c == 'L') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'm' || c == 'M') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'n' || c == 'N') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'o' || c == 'O') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'p' || c == 'P') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'q' || c == 'Q') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'r' || c == 'R') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 's' || c == 'S') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 't' || c == 'T') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'u' || c == 'U') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'v' || c == 'V') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'w' || c == 'W') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'x' || c == 'X') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'y' || c\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf2vygo0z.java:75: error: ')' expected\n            } else if(c\
    \ == 'y' || c\n                                   ^\n/tmp/tmpf2vygo0z.java:76:\
    \ error: illegal start of statement\n    }\n    ^\n/tmp/tmpf2vygo0z.java:77: error:\
    \ illegal start of expression\n    public static void main(String[] args) {\n\
    \    ^\n/tmp/tmpf2vygo0z.java:77: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n           ^\n/tmp/tmpf2vygo0z.java:77: error:\
    \ ';' expected\n    public static void main(String[] args) {\n               \
    \  ^\n/tmp/tmpf2vygo0z.java:77: error: '.class' expected\n    public static void\
    \ main(String[] args) {\n                                     ^\n/tmp/tmpf2vygo0z.java:77:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmpf2vygo0z.java:88: error: reached\
    \ end of file while parsing\n}\n ^\n8 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a') {\n       \
    \         sb.append(Character.toUpperCase(c));\n            } else if(c == 'A')\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps_53vki5.java:38)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            char c = arr[i];\n            if(c == 'a' || c == 'A') {\n\
    \                c = Character.toUpperCase(c);\n            }\n            if(c\
    \ == 'b' || c == 'B') {\n                c = Character.toLowerCase(c);\n     \
    \       }\n            sb.append(c);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo96zcrmu.java:38)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if(c == 'c' || c == 'C') {\n                sb.append(c);\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjl34cbu2.java:40)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n      \
    \  for(int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n \
    \           if(c == 'a' || c == 'A') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzi293ob.java:38)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        boolean first = true;\n\
    \        for (char c : chars) {\n            if (first) {\n                first\
    \ = false;\n                sb.append(c);\n            } else {\n            \
    \    sb.append(Character.toUpperCase(c));\n            }\n        }\n        return\
    \ sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4hgt8c8n.java:37)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            char c = arr[i];\n            if(c == 'a' || c == 'A') {\n\
    \                sb.append(Character.toUpperCase(c));\n            } else if(c\
    \ == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsr0s3u2a.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++){\n            if(Character.isLetter(chars[i])){\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            }else{\n                sb.append(chars[i]);\n            }\n   \
    \     }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqbc3ji3d.java:35)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ arr.length; i++) {\n            if (Character.isLetter(arr[i])) {\n        \
    \        sb.append(Character.toUpperCase(arr[i]));\n            } else {\n   \
    \             sb.append(arr[i]);\n            }\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp35lh44aw.java:35)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            if(Character.isLetter(chars[i])) {\n                chars[i]\
    \ = Character.toUpperCase(chars[i]);\n            } else {\n                chars[i]\
    \ = Character.toLowerCase(chars[i]);\n            }\n            sb.append(chars[i]);\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7bcxorzk.java:36)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            if(Character.isLetter(arr[i])) {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg13eaw8z.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for(int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if(c == ' ') {\n                sb.append(c);\n            } else\
    \ {\n                sb.append(Character.toUpperCase(c));\n            }\n   \
    \     }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0s3e30b7.java:34)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n        for(int\
    \ i = 0; i < arr.length; i++) {\n            char c = arr[i];\n            if(c\
    \ == 'a' || c == 'A') {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5oprtq8n.java:38)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            if(Character.isLetter(arr[i])) {\n                char c\
    \ = Character.toUpperCase(arr[i]);\n                sb.append(c);\n          \
    \  } else {\n                sb.append(arr[i]);\n            }\n        }\n  \
    \      return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe04q_b2t.java:36)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n      \
    \  boolean first = true;\n        for(int i = 0; i < chars.length; i++) {\n  \
    \          char c = chars[i];\n            if(c == '#') {\n                sb.append(c);\n\
    \                sb.append(chars[++i]);\n                sb.append(chars[++i]);\n\
    \                sb.append(chars[++i]);\n                sb.append(chars[++i]);\n\
    \                sb.append(chars[++i]);\n                sb.append(chars[++i]);\n\
    \                sb.append(chars[++i]);\n                sb.append(chars[++i]);\n\
    \                sb.append(chars[++i]);\n                sb.append(chars[++i]);\n\
    \                sb.append(chars[++i]);\n                sb.append(chars[++i]);\n\
    \                sb.append(chars[++i]);\n                sb.append(chars[++i]);\n\
    \                sb.append(chars[++i]);\n                sb.append(chars[++i]);\n\
    \                sb.append(chars[++i]);\n                sb.append(chars[++i]);\n\
    \                sb.append(chars[++i]);\n                sb.append(chars[++i]);\n\
    \                sb.append(chars[++i]);\n                sb.append(chars[++i]);\n\
    \                sb.append(chars[++i]);\n                sb.append(chars[++i]);\n\
    \                sb.append(chars[++i]);\n                sb.append(chars[++i]);\n\
    \                sb.append(chars[++i]);\n                sb.append(chars[++i]);\n\
    \                sb.append(chars[++i]);\n                sb.append(chars[++i]);\n\
    \                sb.append(chars[++i]);\n                sb.append(chars[++i]);\n\
    \                sb.append(chars[++i]);\n                sb.append(chars[++i]);\n\
    \                sb.append(chars[++i]);\n                sb.append(chars[++i]);\n\
    \                sb.append(chars[++i]);\n                sb.append(chars[++i]);\n\
    \                sb.append(chars[++i]);\n                sb.append(chars[++i]);\n\
    \                sb.append(chars[++i]);\n                sb.append(chars[++i]);\n\
    \                sb.append(chars[++i]);\n                sb.append(chars[++i]);\n\
    \                sb.append(chars[++i]);\n                sb.append(chars[++\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9scfzjcg.java:76: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmp9scfzjcg.java:77: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659793719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp17p0jstr.java:279: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps03tggy_.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a') {\n       \
    \         sb.append(Character.toUpperCase(c));\n            } else if(c == 'A')\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps_53vki5.java:38)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            if(Character.isLetter(chars[i])) {\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            } else {\n                sb.append(chars[i]);\n            }\n \
    \       }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpulnr3phz.java:35)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++){\n            if(chars[i] >= 'a' && chars[i] <= 'z'){\n               \
    \ chars[i] = chars[i].toUpperCase();\n            }\n            else if(chars[i]\
    \ >= 'A' && chars[i] <= 'Z'){\n                chars[i] = chars[i].toLowerCase();\n\
    \            }\n            else{\n                sb.append(chars[i]);\n    \
    \        }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyco3rbks.java:27: error: char cannot be dereferenced\n        \
    \        chars[i] = chars[i].toUpperCase();\n                                \
    \   ^\n/tmp/tmpyco3rbks.java:30: error: char cannot be dereferenced\n        \
    \        chars[i] = chars[i].toLowerCase();\n                                \
    \   ^\n2 errors\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps03tggy_.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++){\n            char c = chars[i];\n            if(c == 'a' || c == 'A'){\n\
    \                sb.append(Character.toUpperCase(c));\n            }\n       \
    \     else{\n                sb.append(Character.toLowerCase(c));\n          \
    \  }\n        }\n        return sb.toString();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n \
    \   assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsy0jpwlw.java:37)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            if(Character.isLetter(arr[i])) {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg13eaw8z.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps03tggy_.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            String str = Character.toString(c);\n            if (str.matches(\"\
    [a-zA-Z]\")) {\n                sb.append(Character.toUpperCase(c));\n       \
    \     } else {\n                sb.append(c);\n            }\n        }\n    \
    \    return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppwdw4ori.java:36)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] chars = s.toCharArray();\n        for (int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if (Character.isLetter(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg9ci3_o4.java:35)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if(c == 'c' || c == 'C') {\n                sb.append(c);\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjl34cbu2.java:40)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n      \
    \  for (int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\
    \            if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeyy9n2go.java:36)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ chars.length; i++) {\n            char c = chars[i];\n            if (Character.isLetter(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2jv551p6.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            char c = arr[i];\n            if(Character.isLetter(c))\
    \ {\n                c = Character.toUpperCase(c);\n            } else {\n   \
    \             c = Character.toLowerCase(c);\n            }\n            sb.append(c);\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9k524m_9.java:37)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ arr.length; i++) {\n            if (Character.isLetter(arr[i])) {\n        \
    \        sb.append(Character.toUpperCase(arr[i]));\n            } else {\n   \
    \             sb.append(arr[i]);\n            }\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp35lh44aw.java:35)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            if(Character.isLetter(arr[i])) {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg13eaw8z.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps03tggy_.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] chars = s.toCharArray();\n        for (int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if (Character.isLetter(c))\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg9ci3_o4.java:35)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n      \
    \  boolean first = true;\n        for (char c : chars) {\n            if (first)\
    \ {\n                first = false;\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(Character.toLowerCase(c));\n\
    \            }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppzm2knzi.java:37)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++){\n            if(Character.isLetter(chars[i])){\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            }else{\n                sb.append(chars[i]);\n            }\n   \
    \     }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqbc3ji3d.java:35)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        boolean first = true;\n\
    \        for (char c : chars) {\n            if (first) {\n                first\
    \ = false;\n                sb.append(c);\n            } else {\n            \
    \    sb.append(Character.toUpperCase(c));\n            }\n        }\n        return\
    \ sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4hgt8c8n.java:37)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps03tggy_.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            char c = arr[i];\n            if(c == 'a' || c == 'A') {\n\
    \                sb.append(Character.toUpperCase(c));\n            } else if(c\
    \ == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsr0s3u2a.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            if(Character.isLetter(chars[i])) {\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            } else {\n                sb.append(chars[i]);\n            }\n \
    \       }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpulnr3phz.java:35)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        boolean isFirst = true;\n\
    \        for (char c : chars) {\n            if (isFirst) {\n                isFirst\
    \ = false;\n                sb.append(c);\n            } else {\n            \
    \    sb.append(Character.toUpperCase(c));\n            }\n        }\n        return\
    \ sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1kyeedvi.java:37)\n"
  stdout: ''
  timestamp: 1659793719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == ' ') {\n       \
    \         sb.append(c);\n                continue;\n            }\n          \
    \  if(c == '@') {\n                sb.append(Character.toUpperCase(c));\n    \
    \            continue;\n            }\n            if(c == '#') {\n          \
    \      sb.append(Character.toLowerCase(c));\n                continue;\n     \
    \       }\n            sb.append(c);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwtq8p7im.java:44)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == ' ') {\n       \
    \         sb.append(c);\n                continue;\n            }\n          \
    \  boolean isUpper = Character.isUpperCase(c);\n            boolean isLower =\
    \ Character.isLowerCase(c);\n            if(isUpper && !isLower) {\n         \
    \       sb.append(Character.toUpperCase(c));\n            } else if(!isUpper &&\
    \ isLower) {\n                sb.append(Character.toLowerCase(c));\n         \
    \   } else if(isUpper && isLower) {\n                sb.append(c);\n         \
    \   }\n        }\n        return sb.toString();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n \
    \   assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1_jaeqqu.java:44)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ chars.length; i++) {\n            char c = chars[i];\n            if (Character.isLetter(c))\
    \ {\n                c = Character.toUpperCase(c);\n            } else {\n   \
    \             c = Character.toLowerCase(c);\n            }\n            sb.append(c);\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp02q5frkd.java:37)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n      \
    \  boolean isLetter = false;\n        for (char c : chars) {\n            if (Character.isLetter(c))\
    \ {\n                isLetter = true;\n            } else {\n                isLetter\
    \ = false;\n            }\n            if (isLetter) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeye1i6me.java:41)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == Character.toUpperCase(c))\
    \ {\n                sb.append(Character.toLowerCase(c));\n            } else\
    \ if(c == Character.toLowerCase(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj32_ohw3.java:38)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++){\n            if(Character.isLetter(chars[i])){\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            }else{\n                sb.append(chars[i]);\n            }\n   \
    \     }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqbc3ji3d.java:35)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n      \
    \  boolean flag = false;\n        for (int i = 0; i < chars.length; i++) {\n \
    \           if (chars[i] == ' ') {\n                flag = true;\n           \
    \ } else {\n                if (flag) {\n                    sb.append(Character.toUpperCase(chars[i]));\n\
    \                } else {\n                    sb.append(Character.toLowerCase(chars[i]));\n\
    \                }\n            }\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkilobwl8.java:40)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else if(c == 'c' || c == 'C') {\n                sb.append(c);\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjl34cbu2.java:40)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            if(Character.isLetter(chars[i])) {\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            } else {\n                sb.append(chars[i]);\n            }\n \
    \       }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpulnr3phz.java:35)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        boolean first = true;\n\
    \        for (char c : chars) {\n            if (Character.isLetter(c)) {\n  \
    \              if (first) {\n                    sb.append(Character.toUpperCase(c));\n\
    \                    first = false;\n                } else {\n              \
    \      sb.append(Character.toLowerCase(c));\n                }\n            }\
    \ else {\n                sb.append(c);\n            }\n        }\n        return\
    \ sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8kihshu8.java:41)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps03tggy_.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ chars.length; i++) {\n            if (Character.isLetter(chars[i])) {\n    \
    \            chars[i] = Character.toUpperCase(chars[i]);\n            } else {\n\
    \                chars[i] = Character.toLowerCase(chars[i]);\n            }\n\
    \            sb.append(chars[i]);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprstlwu3n.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ ++i) {\n            if(Character.isLetter(chars[i])) {\n                chars[i]\
    \ = Character.toUpperCase(chars[i]);\n            } else {\n                chars[i]\
    \ = Character.toLowerCase(chars[i]);\n            }\n            sb.append(chars[i]);\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaqti3pld.java:36)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++){\n            if(Character.isLetter(chars[i])){\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            }else{\n                sb.append(chars[i]);\n            }\n   \
    \     }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqbc3ji3d.java:35)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        boolean first = true;\n\
    \        for (char c : chars) {\n            if (first) {\n                first\
    \ = false;\n            } else {\n                sb.append(c);\n            }\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl7z902ew.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++){\n            if(Character.isLetter(chars[i])){\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            }else{\n                sb.append(chars[i]);\n            }\n   \
    \     }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqbc3ji3d.java:35)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        boolean first = true;\n\
    \        for (char c : chars) {\n            if (Character.isLetter(c)) {\n  \
    \              if (first) {\n                    first = false;\n            \
    \    } else {\n                    sb.append(Character.toUpperCase(c));\n    \
    \            }\n            } else {\n                sb.append(c);\n        \
    \    }\n        }\n        return sb.toString();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n \
    \   assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpibwiwn88.java:40)\n"
  stdout: ''
  timestamp: 1659793719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            if(Character.isLetter(arr[i])) {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg13eaw8z.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps03tggy_.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps03tggy_.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp17p0jstr.java:279: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] arr = s.toCharArray();\n        for (char c : arr) {\n       \
    \     if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9363is8r.java:34)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] chars = s.toCharArray();\n        for (char c : chars) {\n   \
    \         if (Character.isLetter(c)) {\n                c = Character.toUpperCase(c);\n\
    \            } else {\n                c = Character.toLowerCase(c);\n       \
    \     }\n            sb.append(c);\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi6ibeodg.java:35)\n"
  stdout: ''
  timestamp: 1659793720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            if(Character.isLetter(arr[i])) {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg13eaw8z.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        boolean first = true;\n\
    \        for (char c : chars) {\n            if (first) {\n                first\
    \ = false;\n            } else {\n                sb.append(c);\n            }\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl7z902ew.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++){\n            if(Character.isLetter(chars[i])){\n                sb.append(Character.toUpperCase(chars[i]));\n\
    \            }else{\n                sb.append(chars[i]);\n            }\n   \
    \     }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqbc3ji3d.java:35)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n      \
    \  for(int i = 0; i < chars.length; i++){\n            char c = chars[i];\n  \
    \          if(c == 'A' || c == 'a' || c == 'B' || c == 'b' || c == 'C' || c ==\
    \ 'c' || c == 'D' || c == 'd' || c == 'E' || c == 'e' || c == 'F' || c == 'f'\
    \ || c == 'G' || c == 'g' || c == 'H' || c == 'h' || c == 'I' || c == 'i' || c\
    \ == 'J' || c == 'j' || c == 'K' || c == 'k' || c == 'L' || c == 'l' || c == 'M'\
    \ || c == 'm' || c == 'N' || c == 'n' || c == 'O' || c == 'o' || c == 'P' || c\
    \ == 'p' || c == 'Q' || c == 'q' || c == 'R' || c == 'r' || c == 'S' || c == 's'\
    \ || c == 'T' || c == 't' || c == 'U' || c == 'u' || c == 'V' || c == 'v' || c\
    \ == 'W' || c == 'w' || c == 'X' || c == 'x' || c == 'Y' || c == 'y' || c == 'Z'\
    \ || c == 'z'){\n                sb.append(Character.toUpperCase(c));\n      \
    \      }else{\n                sb.append(c);\n            }\n        }\n     \
    \   return sb.toString();\n    }\n    public static void main(String[] args) {\n\
    \    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1e5otvsf.java:36)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                c = Character.toUpperCase(c);\n            } else if(c ==\
    \ 'b' || c == 'B') {\n                c = Character.toLowerCase(c);\n        \
    \    } else if(c == 'c' || c == 'C') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'd' || c == 'D') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'e' || c == 'E') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'f' || c == 'F') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'g' || c == 'G') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'h' || c == 'H') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'i' || c == 'I') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'j' || c == 'J') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'k' || c == 'K') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'l' || c == 'L') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'm' || c == 'M') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'n' || c == 'N') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'o' || c == 'O') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'p' || c == 'P') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'q' || c == 'Q') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'r' || c == 'R') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 's' || c == 'S') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 't' || c == 'T') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'u' || c == 'U') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'v' || c == 'V') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'w' || c == 'W') {\n                c = Character.toUpperCase(c);\n\
    \            } else if(c == 'x' || c == 'X') {\n                c = Character.toLowerCase(c);\n\
    \            } else if(c == 'y' || c\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf2vygo0z.java:75: error: ')' expected\n            } else if(c\
    \ == 'y' || c\n                                   ^\n/tmp/tmpf2vygo0z.java:76:\
    \ error: illegal start of statement\n    }\n    ^\n/tmp/tmpf2vygo0z.java:77: error:\
    \ illegal start of expression\n    public static void main(String[] args) {\n\
    \    ^\n/tmp/tmpf2vygo0z.java:77: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n           ^\n/tmp/tmpf2vygo0z.java:77: error:\
    \ ';' expected\n    public static void main(String[] args) {\n               \
    \  ^\n/tmp/tmpf2vygo0z.java:77: error: '.class' expected\n    public static void\
    \ main(String[] args) {\n                                     ^\n/tmp/tmpf2vygo0z.java:77:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmpf2vygo0z.java:88: error: reached\
    \ end of file while parsing\n}\n ^\n8 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n        \n        \n\
    \        \n        \n        \n        \n        \n        \n        \n      \
    \  \n        \n        \n        \n        \n        \n        \n        \n  \
    \      \n        \n        \n        \n        \n        \n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp17p0jstr.java:279: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        boolean first = true;\n\
    \        for (char c : chars) {\n            if (first) {\n                first\
    \ = false;\n            } else {\n                sb.append(c);\n            }\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl7z902ew.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        boolean first = true;\n\
    \        for (char c : chars) {\n            if (first) {\n                first\
    \ = false;\n            } else {\n                sb.append(c);\n            }\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl7z902ew.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        StringBuilder sb = new StringBuilder();\n\
    \        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n      \
    \  boolean flag = true;\n        for(int i = 0; i < chars.length; i++) {\n   \
    \         if(chars[i] == ' ') {\n                flag = false;\n            }\n\
    \            if(flag) {\n                sb.append(chars[i]);\n            }\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptbud7hxu.java:37)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        boolean first = true;\n\
    \        for (int i = 0; i < chars.length; i++) {\n            if (chars[i] ==\
    \ ' ') {\n                if (first) {\n                    first = false;\n \
    \               } else {\n                    sb.append(\" \");\n            \
    \    }\n            } else {\n                sb.append(chars[i]);\n         \
    \   }\n        }\n        return sb.toString();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n \
    \   assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe62zoy6r.java:40)\n"
  stdout: ''
  timestamp: 1659793721
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps03tggy_.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ arr.length; i++) {\n            if (Character.isLetter(arr[i])) {\n        \
    \        sb.append(Character.toUpperCase(arr[i]));\n            } else {\n   \
    \             sb.append(arr[i]);\n            }\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp35lh44aw.java:35)\n"
  stdout: ''
  timestamp: 1659793718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] arr = s.toCharArray();\n        Arrays.sort(arr);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.length;\
    \ i++) {\n            if(Character.isLetter(arr[i])) {\n                sb.append(Character.toUpperCase(arr[i]));\n\
    \            } else {\n                sb.append(arr[i]);\n            }\n   \
    \     }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg13eaw8z.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps03tggy_.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps03tggy_.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : chars)\
    \ {\n            if (Character.isLetter(c)) {\n                sb.append(Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps03tggy_.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // >>> solve((\"1234\"))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n  \
    \  // (\"AB\")\n    // >>> solve((\"#a@C\"))\n    // (\"#A@c\")\n    public static\
    \ String solve(String s) {\n        char[] chars = s.toCharArray();\n        Arrays.sort(chars);\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < chars.length;\
    \ i++) {\n            char c = chars[i];\n            if(c == 'a' || c == 'A')\
    \ {\n                sb.append(Character.toUpperCase(c));\n            } else\
    \ if(c == 'b' || c == 'B') {\n                sb.append(Character.toLowerCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5nsbryp_.java:38)\n"
  stdout: ''

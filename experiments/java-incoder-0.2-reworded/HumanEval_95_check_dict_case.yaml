name: HumanEval_95_check_dict_case
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given a hash map, return true if all keys are strings in\
  \ lower \n    // case or all keys are strings in upper case, else return false.\n\
  \    // The function should return false is the given hash map is empty.\n    //\
  \ Examples:\n    // >>> checkDictCase((new HashMap<String,String>(Map.of(\"a\",\
  \ \"apple\", \"b\", \"banana\"))))\n    // (true)\n    // >>> checkDictCase((new\
  \ HashMap<String,String>(Map.of(\"a\", \"apple\", \"A\", \"banana\", \"B\", \"banana\"\
  ))))\n    // (false)\n    // >>> checkDictCase((new HashMap<String,String>(Map.of(\"\
  a\", \"apple\", 8l, \"banana\", \"a\", \"apple\"))))\n    // (false)\n    // >>>\
  \ checkDictCase((new HashMap<String,String>(Map.of(\"Name\", \"John\", \"Age\",\
  \ \"36\", \"City\", \"Houston\"))))\n    // (false)\n    // >>> checkDictCase((new\
  \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\"))))\n    //\
  \ (true)\n    public static boolean checkDictCase(HashMap<String,String> dict) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
  \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n\
  \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
  , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
  \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\",\
  \ \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
  Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
  \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
  \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
  , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
  \ == (false));\n    }\n\n}\n"
completions: ["        boolean result = true;\n        for (String key : dict) {\n\
    \            String value = dict.get(key);\n            if (value != null && !value.isEmpty())\
    \ {\n                try {\n                    Integer.parseInt(value);\n   \
    \             } catch (NumberFormatException e) {\n                    result\
    \ = false;\n                    break;\n                }\n            }\n   \
    \     }\n        return result;", "        boolean result = true;\n        Set<String>\
    \ keys = dict.keySet();\n        for(String key : keys) {\n            String\
    \ value = dict.get(key);\n            if(!key.isEmpty() && key.toLowerCase().equals(key)\
    \ || !key.isEmpty() && key.toUpperCase().equals(key)) {\n                result\
    \ = false;\n                break;\n            }\n        }\n        return result;",
  "        boolean result = true;\n        if (dict == null || dict.size() == 0) {\n\
    \            return result;\n        }\n        Set<String> keys = dict.keySet();\n\
    \        boolean upperCase = true;\n        boolean lowerCase = true;\n      \
    \  for (String key : keys) {\n            String value = dict.get(key);\n    \
    \        if (value == null) {\n                return false;\n            }\n\
    \            if (value.length() > 1) {\n                upperCase = false;\n \
    \           }\n            if (value.length() < 1) {\n                lowerCase\
    \ = false;\n            }\n        }\n        result = upperCase && lowerCase;\n\
    \        return result;", "        boolean result = true;\n        for(String\
    \ key : dict.keySet()) {\n            String value = dict.get(key);\n        \
    \    if(!key.isEmpty() && key.toLowerCase().equals(value.toLowerCase())) {\n \
    \               result = false;\n                break;\n            } else if(!key.isEmpty()\
    \ && key.toUpperCase().equals(value.toUpperCase())) {\n                result\
    \ = false;\n                break;\n            }\n        }\n        return result;",
  "        boolean isDictCase = true;\n        for(String key : dict.keySet()) {\n\
    \            if(!key.isLowerCase() && !key.isUpperCase()) {\n                isDictCase\
    \ = false;\n                break;\n            }\n        }\n        return isDictCase;",
  "        boolean result = true;\n        if (dict == null || dict.size() == 0) {\n\
    \            return result;\n        }\n        Set<String> keys = dict.keySet();\n\
    \        for (String key : keys) {\n            String value = dict.get(key);\n\
    \            if (key != null && value != null && key.isEmpty() && !value.isEmpty())\
    \ {\n                result = false;\n            }\n        }\n        return\
    \ result;", "        if (dict.isEmpty()) return false;\n        Set<String> keys\
    \ = dict.keySet();\n        if (keys.isEmpty()) return true;\n        boolean\
    \ upperCase = true;\n        boolean lowerCase = true;\n        for (String key\
    \ : keys) {\n            if (key.isUpperCase()) {\n                upperCase =\
    \ false;\n            } else if (key.isLowerCase()) {\n                lowerCase\
    \ = false;\n            } else {\n                return false;\n            }\n\
    \        }\n        return upperCase && lowerCase;", "        boolean result =\
    \ true;\n        Set<String> keys = dict.keySet();\n        for (String key :\
    \ keys) {\n            String lowerCase = key.toLowerCase();\n            String\
    \ upperCase = key.toUpperCase();\n            if (lowerCase.equals(upperCase))\
    \ {\n                result = false;\n                break;\n            }\n\
    \        }\n        return result;", "        boolean result = true;\n       \
    \ for (String key : dict.keySet()) {\n            if (!(key instanceof String))\
    \ {\n                result = false;\n                break;\n            }\n\
    \            String value = dict.get(key);\n            if (value.isEmpty()) {\n\
    \                result = false;\n                break;\n            }\n    \
    \        char firstChar = value.charAt(0);\n            char lastChar = value.charAt(value.length()\
    \ - 1);\n            if (firstChar >= 'a' && firstChar <= 'z') {\n           \
    \     if (lastChar >= 'A' && lastChar <= 'Z') {\n                    result =\
    \ true;\n                    break;\n                }\n            }\n      \
    \      else if (firstChar >= 'A' && firstChar <= 'Z') {\n                if (lastChar\
    \ >= 'a' && lastChar <= 'z') {\n                    result = true;\n         \
    \           break;\n                }\n            }\n        }\n        return\
    \ result;", "        boolean result = true;\n        for(String key : dict.keySet())\
    \ {\n            String value = dict.get(key);\n            if(!key.isLowerCase()\
    \ && !key.isUpperCase()) {\n                result = false;\n                break;\n\
    \            }\n        }\n        return result;", "        boolean result =\
    \ true;\n        for (String key : dict.keySet()) {\n            String value\
    \ = dict.get(key);\n            if (key != null && value != null) {\n        \
    \        if (key.toLowerCase().equals(value.toLowerCase())) {\n              \
    \      result = true;\n                } else if (key.toUpperCase().equals(value.toUpperCase()))\
    \ {\n                    result = true;\n                } else {\n          \
    \          result = false;\n                }\n            }\n        }\n    \
    \    return result;", "        boolean isAllStrings = false;\n        boolean\
    \ isAllUpperCase = false;\n        for (String key : dict) {\n            isAllStrings\
    \ = isAllStrings || key.isEmpty();\n            isAllUpperCase = isAllUpperCase\
    \ || key.toUpperCase().equals(key);\n        }\n        return isAllStrings &&\
    \ isAllUpperCase;", "        boolean result = true;\n        if (dict.isEmpty())\
    \ {\n            return result;\n        }\n        Set<String> keys = dict.keySet();\n\
    \        for (String key : keys) {\n            String value = dict.get(key);\n\
    \            if (key.isEmpty() || key.isEmpty()) {\n                return false;\n\
    \            }\n            if (key.isEmpty()) {\n                key = value.toLowerCase();\n\
    \            } else {\n                key = value.toUpperCase();\n          \
    \  }\n            if (!value.equals(key)) {\n                result = false;\n\
    \            }\n        }\n        return result;", "        boolean result =\
    \ true;\n        for(String key : dict.keySet()) {\n            String value =\
    \ dict.get(key);\n            if(!key.isLowerCase() && !key.isUpperCase()) {\n\
    \                result = false;\n            }\n        }\n        return result;",
  "        if (dict.isEmpty()) return false;\n        Set<String> keys = dict.keySet();\n\
    \        for (String key : keys) {\n            if (key.isEmpty()) return false;\n\
    \        }\n        return true;", "        boolean result = true;\n        for(String\
    \ key : dict.keySet()) {\n            String value = dict.get(key);\n        \
    \    if(!key.isLowerCase() && !key.isUpperCase()) {\n                result =\
    \ false;\n                break;\n            }\n        }\n        return result;",
  "        boolean result = true;\n        for(String key : dict.keySet()) {\n   \
    \         String value = dict.get(key);\n            boolean isUpperCase = Character.isUpperCase(key.charAt(0));\n\
    \            boolean isLowerCase = Character.isLowerCase(key.charAt(0));\n   \
    \         boolean isNumber = Character.isDigit(key.charAt(0));\n            boolean\
    \ isAlpha = Character.isAlphabetic(key.charAt(0));\n            boolean isString\
    \ = !isNumber && !isAlpha && !isUpperCase && !isLowerCase;\n            boolean\
    \ isStringOrNumber = isString || isNumber;\n            boolean isStringOrNumber\
    \ = isString || isNumber;\n            boolean isStringOrNumber = isString ||\
    \ isNumber;\n            boolean isStringOrNumber = isString || isNumber;\n  \
    \          boolean isStringOrNumber = isString || isNumber;\n            boolean\
    \ isStringOrNumber = isString || isNumber;\n            boolean isStringOrNumber\
    \ = isString || isNumber;\n            boolean isStringOrNumber = isString ||\
    \ isNumber;\n            boolean isStringOrNumber = isString || isNumber;\n  \
    \          boolean isStringOrNumber = isString || isNumber;\n            boolean\
    \ isStringOrNumber = isString || isNumber;\n            boolean isStringOrNumber\
    \ = isString || isNumber;\n            boolean isStringOrNumber = isString ||\
    \ isNumber;\n            boolean isStringOrNumber = isString || isNumber;\n  \
    \          boolean isStringOrNumber = isString || isNumber;\n            boolean\
    \ isStringOrNumber = isString || isNumber;\n            boolean isStringOrNumber\
    \ = isString || isNumber;\n            boolean isStringOrNumber = isString ||\
    \ isNumber;\n            boolean isStringOrNumber = isString || isNumber;\n  \
    \          boolean isStringOrNumber = isString || isNumber;\n            boolean\
    \ isStringOrNumber = isString || isNumber;\n            boolean isStringOrNumber\
    \ = isString || isNumber;\n            boolean isStringOrNumber = isString ||\
    \ isNumber;\n            boolean isStringOrNumber = isString || isNumber;\n  \
    \          boolean isStringOrNumber = isString || isNumber;\n            boolean\
    \ isStringOrNumber = isString || isNumber;\n            boolean isStringOrNumber\
    \ = isString || isNumber;\n            boolean isStringOrNumber = isString ||\
    \ isNumber;\n            boolean isStringOrNumber = isString || isNumber;\n  \
    \          boolean isStringOrNumber = isString || isNumber;\n            boolean\
    \ isStringOrNumber = isString || isNumber;\n            boolean isStringOrNumber\
    \ = isString || isNumber;\n            boolean isStringOrNumber = isString ||\
    \ isNumber;\n            boolean isStringOrNumber = isString || isNumber;\n  \
    \          boolean isStringOrNumber = ", "        Set<String> keys = dict.keySet();\n\
    \        if (keys.size() == 0) return false;\n        boolean allLowercase = true;\n\
    \        boolean allUppercase = true;\n        for (String key : keys) {\n   \
    \         String value = dict.get(key);\n            if (value.length() > 1) {\n\
    \                allLowercase = false;\n            }\n            if (value.length()\
    \ > 2) {\n                allUppercase = false;\n            }\n        }\n  \
    \      return allLowercase && allUppercase;", "        boolean result = true;\n\
    \        for(String key : dict.keySet()) {\n            String value = dict.get(key);\n\
    \            if(!key.isLowerCase() && !key.isUpperCase()) {\n                result\
    \ = false;\n                break;\n            }\n        }\n        return result;",
  "        boolean result = true;\n        Set<String> keys = dict.keySet();\n   \
    \     for(String key : keys) {\n            String lowerCase = key.toLowerCase();\n\
    \            String upperCase = key.toUpperCase();\n            if(!lowerCase.equals(upperCase))\
    \ {\n                result = false;\n                break;\n            }\n\
    \        }\n        return result;"]
stop_tokens:
- "\n    }\n"

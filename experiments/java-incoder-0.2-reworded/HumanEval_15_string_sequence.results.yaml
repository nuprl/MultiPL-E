language: java
name: HumanEval_15_string_sequence
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_miya0m.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_miya0m.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<Integer> numbers = IntStream.rangeClosed(0l,\
    \ n).boxed().collect(Collectors.toList());\n        return IntStream.rangeClosed(0l,\
    \ n).mapToObj(Integer::toString).collect(Collectors.joining(\" \"));\n    }\n\
    \    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq52mftgh.java:15: error: incompatible types: possible lossy conversion\
    \ from long to int\n        List<Integer> numbers = IntStream.rangeClosed(0l,\
    \ n).boxed().collect(Collectors.toList());\n                                 \
    \                     ^\n/tmp/tmpq52mftgh.java:16: error: incompatible types:\
    \ possible lossy conversion from long to int\n        return IntStream.rangeClosed(0l,\
    \ n).mapToObj(Integer::toString).collect(Collectors.joining(\" \"));\n       \
    \                              ^\n/tmp/tmpq52mftgh.java:16: error: invalid method\
    \ reference\n        return IntStream.rangeClosed(0l, n).mapToObj(Integer::toString).collect(Collectors.joining(\"\
    \ \"));\n                                                     ^\n  non-static\
    \ method toString() cannot be referenced from a static context\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_miya0m.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return String.join(\" \", result);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"0\")));\n\
    \    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_miya0m.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_miya0m.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f8bc2bz.java:22)\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f8bc2bz.java:22)\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f8bc2bz.java:22)\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_miya0m.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return String.join(\" \", result);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"0\")));\n\
    \    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4xcudd5_.java:22)\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_miya0m.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f8bc2bz.java:22)\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_miya0m.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_miya0m.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_miya0m.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_miya0m.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<Integer> result = new ArrayList<>();\n\
    \        for (int i = 0; i < n; i++) {\n            result.add(i);\n        }\n\
    \        return result.stream().map(Object::toString).collect(Collectors.joining(\"\
    \ \"));\n    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64vwr01q.java:22)\n"
  stdout: ''
  timestamp: 1659793573
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_miya0m.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (int i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxjrw_b15.java:22)\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return String.join(\" \", result);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"0\")));\n\
    \    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4xcudd5_.java:22)\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return String.join(\" \", result);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"0\")));\n\
    \    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4xcudd5_.java:22)\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f8bc2bz.java:22)\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return String.join(\" \", result);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"0\")));\n\
    \    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_miya0m.java:23)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_miya0m.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_miya0m.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_miya0m.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_miya0m.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return String.join(\" \", result);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"0\")));\n\
    \    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f8bc2bz.java:22)\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_miya0m.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f8bc2bz.java:22)\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f8bc2bz.java:22)\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f8bc2bz.java:22)\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f8bc2bz.java:22)\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_miya0m.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_miya0m.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return String.join(\" \", result);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"0\")));\n\
    \    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4xcudd5_.java:22)\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_miya0m.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (int i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxjrw_b15.java:22)\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f8bc2bz.java:22)\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f8bc2bz.java:22)\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<Integer> numbers = IntStream.rangeClosed(0,\
    \ n).boxed().collect(Collectors.toList());\n        return IntStream.rangeClosed(0,\
    \ n).mapToObj(i -> String.valueOf(i)).collect(Collectors.joining(\" \"));\n  \
    \  }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4g67dvvp.java:15: error: incompatible types: possible lossy conversion\
    \ from long to int\n        List<Integer> numbers = IntStream.rangeClosed(0, n).boxed().collect(Collectors.toList());\n\
    \                                                         ^\n/tmp/tmp4g67dvvp.java:16:\
    \ error: incompatible types: possible lossy conversion from long to int\n    \
    \    return IntStream.rangeClosed(0, n).mapToObj(i -> String.valueOf(i)).collect(Collectors.joining(\"\
    \ \"));\n                                        ^\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_miya0m.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return String.join(\" \", result);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"0\")));\n\
    \    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4xcudd5_.java:22)\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f8bc2bz.java:22)\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return String.join(\" \", result);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"0\")));\n\
    \    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793572
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return String.join(\" \", result);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"0\")));\n\
    \    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.append(i);\n         \
    \   sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4xsk9h_.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i <= n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        List<String> result = new ArrayList<>();\n\
    \        for (long i = 0; i < n; i++) {\n            result.add(String.valueOf(i));\n\
    \        }\n        return result.stream().collect(Collectors.joining(\" \"));\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxzpua1hr.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n        }\n\
    \        return sb.toString();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f8bc2bz.java:22)\n"
  stdout: ''
  timestamp: 1659793572
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.append(i);\n          \
    \  sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i3i8by.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> stringSequence((0l))\n    // (\"0\")\n\
    \    // >>> stringSequence((5l))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ String stringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i <= n; i++) {\n            sb.append(i);\n        \
    \    sb.append(\" \");\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_miya0m.java:23)\n"
  stdout: ''

language: java
name: HumanEval_151_double_the_difference
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f > 0f) {\n                sum += Math.pow(f, 2);\n            }\n  \
    \      }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxt_q9umq.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f - 0.5f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpljcufdiw.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0.0f) {\n                sum\
    \ += Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbam0f3yb.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f > 0f) sum += Math.pow(f - 0.5f, 2f);\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp2tl896e.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54fg_xl5.java:31)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f < 0) {\n                continue;\n   \
    \         }\n            if (f % 2 != 0) {\n                sum += Math.pow(f,\
    \ 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54fg_xl5.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ {\n            return 0l;\n        }\n        long sum = 0l;\n        for (Float\
    \ f : lst) {\n            if (f != 0l) {\n                sum += Math.pow(f, 2);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx5rgfvzi.java:34)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f\
    \ && f != -3f && f != -4f && f != -5f && f != -6f && f != -7f && f != -8f && f\
    \ != -9f) {\n                sum += Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp536z8r2e.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54fg_xl5.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54fg_xl5.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for(Float f : lst) {\n            if(f != 0f && f != -1f && f != -2f) {\n\
    \                sum += Math.pow(f, 2);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphr4wgqxu.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqmqzbz8q.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f) {\n                sum\
    \ += Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6n5j9ue9.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8vin4d8s.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54fg_xl5.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f - 2f, 2);\n            }\n     \
    \   }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp84h0_osj.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f && f != 1f && f != -1f) {\n                sum += (long) Math.pow(f\
    \ - 0.5f, 2);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcjimrnlp.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f > 0f && f % 1f == 0f) sum += Math.pow(f, 2);\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk4iz29nq.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f\
    \ && f != -3f && f != -4f && f != -5f && f != -6f && f != -7f && f != -8f && f\
    \ != -9f) {\n                sum += Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp536z8r2e.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f && f != 1f && f != -1f) {\n                sum += (long) Math.pow(f,\
    \ 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9h7jc7ld.java:32)\n"
  stdout: ''
  timestamp: 1659793085
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ {\n            return 0l;\n        }\n        long sum = 0l;\n        for (Float\
    \ f : lst) {\n            if (f != 0l) {\n                sum += Math.pow(f -\
    \ 0l, 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgaies93a.java:34)\n"
  stdout: ''
  timestamp: 1659793086
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ {\n            return 0l;\n        }\n        long sum = 0l;\n        for (Float\
    \ f : lst) {\n            if (f < 0) {\n                continue;\n          \
    \  }\n            if (f % 2 != 0) {\n                sum += Math.pow(f, 2);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0)\n                sum += Math.pow(f,\
    \ 2);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn_ym6n_z.java:30)\n"
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0.0f) {\n                sum\
    \ += Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbam0f3yb.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      if (lst.size() > 0) {\n            float sumOfSquares = 0;\n          \
    \  for (float num : lst) {\n                if (num > 0) {\n                 \
    \   sumOfSquares += num * num;\n                }\n            }\n           \
    \ sumOfSquares = Math.sqrt(sumOfSquares);\n            sum += sumOfSquares;\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj4o7j9xl.java:29: error: incompatible types: possible lossy conversion\
    \ from double to float\n            sumOfSquares = Math.sqrt(sumOfSquares);\n\
    \                                    ^\n1 error\n"
  stdout: ''
  timestamp: 1659793085
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f\
    \ && f != -3f && f != -4f && f != -5f && f != -6f && f != -7f && f != -8f && f\
    \ != -9f) {\n                sum += Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp536z8r2e.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54fg_xl5.java:31)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f < 0) {\n                continue;\n   \
    \         }\n            if (f % 2 == 1) {\n                sum += Math.pow(f,\
    \ 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f % 1f != 0f) {\n   \
    \             sum += Math.pow(f, 2);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp3n4foj2.java:31)\n"
  stdout: ''
  timestamp: 1659793086
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0 && f % 2 == 1) {\n       \
    \         sum += Math.pow(f, 2);\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0;\n        }\n        long sum = 0;\n        for (Float\
    \ f : lst) {\n            if (f < 0) {\n                continue;\n          \
    \  }\n            sum += Math.pow(f, 2);\n        }\n        return sum;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi_7kcphh.java:35)\n"
  stdout: ''
  timestamp: 1659793086
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      if (lst.size() == 0) {\n            return 0;\n        }\n        for (Float\
    \ f : lst) {\n            if (f < 0) {\n                continue;\n          \
    \  }\n            if (f % 2 != 0) {\n                sum += Math.pow(f, 2);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0.0f && f < 1.0f) {\n      \
    \          sum += Math.pow(f, 2);\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3k8xbinx.java:31)\n"
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 1f && f != -1f)\
    \ {\n                sum += Math.pow(f - 1, 2);\n            }\n        }\n  \
    \      return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpui5so43p.java:33)\n"
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f >= 0f) {\n                sum += Math.pow(f\
    \ - 0f, 2f);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppmvrbwys.java:34)\n"
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f) {\n                sum += Math.pow(f - 0f, 2);\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpybe9tlla.java:32)\n"
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for(Float f : lst) {\n            if(f != 0f && f != -1f && f != -2f) {\n\
    \                sum += Math.pow(f, 2);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphr4wgqxu.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f && f != -1f && f != -2f) sum += (long) Math.pow(f, 2);\n    \
    \    }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpco_8hy09.java:30)\n"
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 1f && f != -1f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp047vcqwy.java:31)\n"
  stdout: ''
  timestamp: 1659793086
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f < 0) {\n                continue;\n   \
    \         }\n            if (f % 2 != 0) {\n                sum += Math.pow(f,\
    \ 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8vin4d8s.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f > 0.0f) {\n                sum += Math.pow(f,\
    \ 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7gmx3dr1.java:34)\n"
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for(Float f : lst) {\n            if(f != 0f && f != -1f && f != -2f) {\n\
    \                sum += Math.pow(f , 2);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6uie23_.java:31)\n"
  stdout: ''
  timestamp: 1659793085
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ {\n            return 0l;\n        }\n        long sum = 0l;\n        for (Float\
    \ f : lst) {\n            if (f > 0.0f) {\n                sum += Math.pow(f,\
    \ 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9in53hof.java:34)\n"
  stdout: ''
  timestamp: 1659793086
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f < 0) {\n                continue;\n   \
    \         }\n            if (f % 2 != 0) {\n                sum += Math.pow(f,\
    \ 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f && f != -1f && f != -2f) {\n                sum += (long) Math.pow(f\
    \ - 2f, 2);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn1z0itlc.java:32)\n"
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54fg_xl5.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f\
    \ && f != -3f && f != -4f && f != -5f && f != -6f && f != -7f && f != -8f && f\
    \ != -9f) {\n                sum += (long) Math.pow(f - f, 2);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzr6jeuf6.java:31)\n"
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f) {\n                sum\
    \ += Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6n5j9ue9.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for(Float f : lst) {\n            if(f != 0f && f != -1f && f != -2f) {\n\
    \                sum += Math.pow(f, 2);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphr4wgqxu.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0) {\n                sum +=\
    \ Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj1d72_fr.java:31)\n"
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f) {\n    \
    \            sum += Math.pow(f, 2);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptzyqmhqb.java:34)\n"
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0.0f) {\n                sum\
    \ += Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbam0f3yb.java:31)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f < 0) {\n                continue;\n   \
    \         }\n            if (f % 2 != 0) {\n                sum += Math.pow(f,\
    \ 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for(Float f : lst) {\n            if(f != 0f && f != -1f && f != -2f &&\
    \ f != -3f && f != -4f && f != -5f && f != -6f && f != -7f && f != -8f && f !=\
    \ -9f) {\n                sum += Math.pow(f, 2);\n            }\n        }\n \
    \       return sum;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0zxy70i2.java:31)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f - 0f, 2f);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzx05b1d2.java:31)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0.0f) {\n                sum\
    \ += Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbam0f3yb.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54fg_xl5.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f - 0.5f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpljcufdiw.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ {\n            return 0l;\n        }\n        long sum = 0l;\n        for (Float\
    \ f : lst) {\n            if (f != 0l) {\n                sum += Math.pow(f, 2);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx5rgfvzi.java:34)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f < 0) {\n                continue;\n   \
    \         }\n            if (f % 2 == 0) {\n                sum += Math.pow(f,\
    \ 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu8y22pqy.java:37)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f\
    \ && f != -3f && f != -4f && f != -5f && f != -6f && f != -7f && f != -8f && f\
    \ != -9f) {\n                sum += Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp536z8r2e.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      if (lst.size() > 0) {\n            float sumOfSquares = 0;\n          \
    \  for (Float f : lst) {\n                if (f != 0) {\n                    sumOfSquares\
    \ += Math.pow(f, 2);\n                }\n            }\n            sum = sumOfSquares;\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpktk03lzt.java:29: error: incompatible types: possible lossy conversion\
    \ from float to long\n            sum = sumOfSquares;\n                  ^\n1\
    \ error\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f < 0) {\n                continue;\n   \
    \         }\n            if (f % 2 == 1) {\n                sum += Math.pow(f,\
    \ 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f\
    \ && f != -3f && f != -4f && f != -5f && f != -6f && f != -7f && f != -8f && f\
    \ != -9f) {\n                sum += Math.pow(f , 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vd5ht_h.java:31)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      if (lst.size() == 0) {\n            return 0;\n        }\n        for (Float\
    \ f : lst) {\n            if (f < 0) {\n                continue;\n          \
    \  }\n            if (f % 2 != 0) {\n                sum += Math.pow(f, 2);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0) sum += Math.pow(f, 2);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpluvkw4go.java:29)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f) {\n                sum += Math.pow(f, 2);\n            }\n \
    \       }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdafprilc.java:32)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f - 2f, 2f);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwt7xwvfi.java:31)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      if (lst.size() > 0) {\n            for (Float f : lst) {\n            \
    \    if (f > 0.0f && f < 1.0f) {\n                    sum += Math.pow(f - 1.0f,\
    \ 2.0f);\n                }\n            }\n        }\n        return sum;\n \
    \   }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmwgn_ka7.java:33)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0)\n                sum += Math.pow(f,\
    \ 2);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn_ym6n_z.java:30)\n"
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f) {\n    \
    \            sum += Math.pow(f - 2f, 2f);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxvd3e7z9.java:34)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 0l) {\n        \
    \        sum += Math.pow(f, 2);\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprte1gxd7.java:31)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f - f, 2);\n            }\n      \
    \  }\n        return sum;\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpceyvfpf2.java:31)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0) {\n                sum +=\
    \ Math.pow(f - 1, 2);\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_wbcnxc_.java:33)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      if (lst.size() == 0) {\n            return 0;\n        }\n        for (Float\
    \ f : lst) {\n            if (f < 0) {\n                continue;\n          \
    \  }\n            sum += Math.pow(f, 2);\n        }\n        return sum;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpum1dk1nx.java:35)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ {\n            return 0l;\n        }\n        long sum = 0l;\n        for (Float\
    \ f : lst) {\n            if (f > 0f) {\n                sum += Math.pow(f, 2);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk_5j4zpy.java:34)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f) {\n                sum\
    \ += Math.pow(f - 0.5f, 2);\n            }\n        }\n        return sum;\n \
    \   }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_qmpmqd7.java:31)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f\
    \ && f != -3f && f != -4f && f != -5f && f != -6f && f != -7f && f != -8f && f\
    \ != -9f) {\n                sum += Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp536z8r2e.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54fg_xl5.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for(Float f : lst) {\n            sum += Math.pow(Math.abs(f), 2);\n  \
    \      }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnfmps7nz.java:29)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f > 0f) {\n                sum += Math.pow(f, 2);\n            }\n  \
    \      }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxt_q9umq.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54fg_xl5.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8vin4d8s.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54fg_xl5.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f && f != -1f && f != -2f) {\n                sum += (long) Math.pow(f,\
    \ 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt3evghf_.java:32)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f , 2);\n            }\n        }\n     \
    \   return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg1edgi6o.java:31)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      if (lst.size() > 0) {\n            for (Float f : lst) {\n            \
    \    if (f > 0)\n                    sum += Math.pow(f, 2);\n            }\n \
    \       }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo8k2if7o.java:32)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 1f && f != -1f)\
    \ {\n                sum += Math.pow(f - 0.5f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr2c9i_du.java:31)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54fg_xl5.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f && f != -1f && f != -2f) {\n                sum += (long) Math.pow(f,\
    \ 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt3evghf_.java:32)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f > 0) sum += Math.pow(f, 2);\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqmqzbz8q.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8vin4d8s.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f != 0l) {\n                sum += Math.pow(f\
    \ - 0.5f, 2);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7td6vlc5.java:34)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f > 0.0f) {\n                sum += Math.pow(f, 2);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdw5ukg1.java:32)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f && f != -1f && f != -2f) {\n                sum += (long) Math.pow(f\
    \ - 2f, 2);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn1z0itlc.java:32)\n"
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f > 0f) {\n                sum += Math.pow(f, 2);\n            }\n  \
    \      }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxt_q9umq.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f) {\n                sum += Math.pow(f - 0f, 2);\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpybe9tlla.java:32)\n"
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for(Float f : lst) {\n            if(f > 0) sum += Math.pow(f, 2);\n  \
    \      }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5g7uuvaq.java:29)\n"
  stdout: ''
  timestamp: 1659793088
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f - 2f, 2f);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwt7xwvfi.java:31)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0) {\n                sum +=\
    \ Math.pow(f - 1, 2);\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_wbcnxc_.java:33)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f) {\n    \
    \            sum += (long) Math.pow(f - 2f, 2);\n            }\n        }\n  \
    \      return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_9djahvm.java:34)\n"
  stdout: ''
  timestamp: 1659793089
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f != 0l) {\n                sum += (long)\
    \ Math.pow(f - 0l, 2);\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq9evk22d.java:34)\n"
  stdout: ''
  timestamp: 1659793088
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f && f != -1f && f != -2f) {\n                sum += (long) Math.pow(f\
    \ - 2f, 2);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn1z0itlc.java:32)\n"
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0L;\n        long sum = 0L;\n        for (Float f : lst) {\n        \
    \    if (f != 0f && f != -1f && f != -2f) {\n                sum += Math.pow(f\
    \ - 2f, 2f);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp59ozug7d.java:32)\n"
  stdout: ''
  timestamp: 1659793089
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 0l) {\n        \
    \        sum += Math.pow(f - 0f, 2);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjpz50a04.java:31)\n"
  stdout: ''
  timestamp: 1659793089
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f != 0l) {\n                sum += Math.pow(f\
    \ - 0l, 2);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1v_zlcl2.java:34)\n"
  stdout: ''
  timestamp: 1659793089
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f - 2f, 2);\n            }\n        }\n \
    \       return sum;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpird8kofw.java:31)\n"
  stdout: ''
  timestamp: 1659793089
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f && f != -1f && f != -2f) {\n                sum += (long) Math.pow(f\
    \ + f, 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblnq1gg3.java:32)\n"
  stdout: ''
  timestamp: 1659793089
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for(Float f : lst) {\n            if(f != 0f && f != -1f && f != -2f &&\
    \ f != -3f && f != -4f && f != -5f && f != -6f && f != -7f && f != -8f && f !=\
    \ -9f) {\n                sum += (long) Math.pow(f, 2);\n            }\n     \
    \   }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp37lttico.java:31)\n"
  stdout: ''
  timestamp: 1659793089
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for(Float f : lst) {\n            sum += Math.pow(f, 2);\n        }\n \
    \       return sum;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6sbb17_6.java:29)\n"
  stdout: ''
  timestamp: 1659793089
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f && f != -1f && f != -2f) sum += Math.pow(f, 2);\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyuyninc7.java:30)\n"
  stdout: ''
  timestamp: 1659793089
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0.0f) {\n                sum\
    \ += Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbam0f3yb.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54fg_xl5.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for(Float f : lst) {\n            sum += Math.pow(f - Math.round(f), 2);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyl_2tds3.java:29)\n"
  stdout: ''
  timestamp: 1659793089
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0) sum += Math.pow(f, 2);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpluvkw4go.java:29)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f - 2f, 2);\n            }\n        }\n \
    \       return sum;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpird8kofw.java:31)\n"
  stdout: ''
  timestamp: 1659793089
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 0l) {\n        \
    \        sum += Math.pow(f - 0f, 2);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjpz50a04.java:31)\n"
  stdout: ''
  timestamp: 1659793089
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 1f && f != -1f)\
    \ {\n                sum += (long) Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps2h_a6et.java:31)\n"
  stdout: ''
  timestamp: 1659793089
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for(Float f : lst) {\n            if(f > 0.0f) {\n                sum +=\
    \ Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdwbujhj1.java:31)\n"
  stdout: ''
  timestamp: 1659793089
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0 && f % 2 == 1) {\n       \
    \         sum += Math.pow(f, 2);\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for(Float f : lst) {\n            if(f != 0f && f != -1f && f != -2f) {\n\
    \                sum += Math.pow(f , 2);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6uie23_.java:31)\n"
  stdout: ''
  timestamp: 1659793085
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54fg_xl5.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f , 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpebyus6f2.java:31)\n"
  stdout: ''
  timestamp: 1659793089
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ {\n            return 0l;\n        }\n        long sum = 0l;\n        for (Float\
    \ f : lst) {\n            if (f < 0) {\n                continue;\n          \
    \  }\n            if (f % 2 != 0) {\n                sum += Math.pow(f, 2);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for(Float f : lst) {\n            sum += Math.pow(f - Math.round(f), 2);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyl_2tds3.java:29)\n"
  stdout: ''
  timestamp: 1659793089
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f != 0l) {\n                sum += Math.pow(f\
    \ - 0f, 2);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi736a1l5.java:34)\n"
  stdout: ''
  timestamp: 1659793089
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0.0f) {\n                sum\
    \ += Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbam0f3yb.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f > 0.0f) {\n                sum += Math.pow(f, 2);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdw5ukg1.java:32)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      if (lst.size() > 0) {\n            for (Float f : lst) {\n            \
    \    if (f > 0.0f) {\n                    sum += Math.pow(f, 2);\n           \
    \     }\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp17kpy6go.java:33)\n"
  stdout: ''
  timestamp: 1659793089
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54fg_xl5.java:31)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f % 2 == 1f && f != -1f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793089
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      if (lst.size() == 0) {\n            return 0;\n        }\n        float\
    \ sumOfSquares = 0;\n        for (Float f : lst) {\n            if (f < 0) {\n\
    \                continue;\n            }\n            sum += Math.pow(f, 2);\n\
    \            sumOfSquares += f;\n        }\n        return sumOfSquares - sum\
    \ * sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbr_mfrl1.java:33: error: incompatible types: possible lossy conversion\
    \ from float to long\n        return sumOfSquares - sum * sum;\n             \
    \               ^\n1 error\n"
  stdout: ''
  timestamp: 1659793089
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ {\n            return 0l;\n        }\n        long sum = 0l;\n        for (Float\
    \ f : lst) {\n            if (f < 0) {\n                continue;\n          \
    \  }\n            sum += Math.pow(f + f, 2);\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxf2h1p8d.java:35)\n"
  stdout: ''
  timestamp: 1659793089
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54fg_xl5.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      if (lst.size() == 0) {\n            return 0;\n        }\n        for (Float\
    \ f : lst) {\n            if (f < 0) {\n                continue;\n          \
    \  }\n            sum += Math.pow(f , 2);\n        }\n        return sum;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp99o1j0mj.java:35)\n"
  stdout: ''
  timestamp: 1659793089
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f && f != -1f && f != -2f) {\n                sum += Math.pow(f,\
    \ 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6otl1vsz.java:32)\n"
  stdout: ''
  timestamp: 1659793089
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f && f != -1f && f != -2f) {\n                sum += (long) Math.pow(f\
    \ , 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz5qgbk3k.java:32)\n"
  stdout: ''
  timestamp: 1659793089
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f && f % 1f != 0f) {\n                sum += Math.pow(f, 2);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwjbrq0z5.java:32)\n"
  stdout: ''
  timestamp: 1659793090
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f < 0) {\n                continue;\n   \
    \         }\n            if (f % 2 != 0) {\n                sum += Math.pow(f,\
    \ 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f\
    \ && f != -3f && f != -4f && f != -5f && f != -6f && f != -7f && f != -8f && f\
    \ != -9f) {\n                sum += Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp536z8r2e.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f > 0f) {\n                sum += Math.pow(f, 2);\n            }\n  \
    \      }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxt_q9umq.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f && f != -3f\
    \ && f != -4f && f != -5f && f != -6f && f != -7f && f != -8f && f != -9f) {\n\
    \                sum += Math.pow(f, 2);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphzpocitc.java:34)\n"
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f , 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpebyus6f2.java:31)\n"
  stdout: ''
  timestamp: 1659793089
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f != 0l) {\n                sum += Math.pow(f,\
    \ 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7et3rswu.java:34)\n"
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f > 0.0f) {\n                sum += Math.pow(f, 2);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdw5ukg1.java:32)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0) {\n                sum +=\
    \ Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj1d72_fr.java:31)\n"
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f && f != -1f && f != -2f) {\n                sum += Math.pow(f\
    \ - 2f, 2f);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgya4m_i1.java:32)\n"
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f\
    \ && f != 3f && f != -4f && f != 5f && f != -6f && f != 7f && f != -8f && f !=\
    \ 9f && f != -10f && f != 11f && f != -12f && f != 13f && f != -14f && f != 15f\
    \ && f != -16f && f != 17f && f != -18f && f != 19f && f != -20f && f != 21f &&\
    \ f != -22f && f != 23f && f != -24f && f != 25f && f != -26f && f != 27f && f\
    \ != -28f && f != 29f && f != -30f && f != 31f && f != -32f && f != 33f && f !=\
    \ -34f && f != 35f && f != -36f && f != 37f && f != -38f && f != 39f && f != -40f\
    \ && f != 41f && f != -42f && f != 43f && f != -44f && f != 45f && f != -46f &&\
    \ f != 47f && f != -48f && f != 49f && f != -50f && f != 51f && f != -52f && f\
    \ != 53f && f != -54f && f != 55f && f != -56f && f != 57f && f != -58f && f !=\
    \ 59f && f != -60f && f != 61f && f != -62f && f != 63f && f != -64f && f != 65f\
    \ && f != -66f && f != 67f && f != -68f && f != 69f && f != -70f && f != 71f &&\
    \ f != -72f && f != 73f && f != -74f && f != 75f && f != -76f && f != 77f && f\
    \ != -78f && f != 79f && f != -80f && f != 81f && f != -82f && f != 83f && f !=\
    \ -84f && f != 85f && f != -86f && f != 87f && f != -88f && f != 89f && f != -90f\
    \ && f != 91f && f != -92f \n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphsevk_gz.java:23: error: ')' expected\n            if (f != 0f\
    \ && f != -1f && f != -2f && f != 3f && f != -4f && f != 5f && f != -6f && f !=\
    \ 7f && f != -8f && f != 9f && f != -10f && f != 11f && f != -12f && f != 13f\
    \ && f != -14f && f != 15f && f != -16f && f != 17f && f != -18f && f != 19f &&\
    \ f != -20f && f != 21f && f != -22f && f != 23f && f != -24f && f != 25f && f\
    \ != -26f && f != 27f && f != -28f && f != 29f && f != -30f && f != 31f && f !=\
    \ -32f && f != 33f && f != -34f && f != 35f && f != -36f && f != 37f && f != -38f\
    \ && f != 39f && f != -40f && f != 41f && f != -42f && f != 43f && f != -44f &&\
    \ f != 45f && f != -46f && f != 47f && f != -48f && f != 49f && f != -50f && f\
    \ != 51f && f != -52f && f != 53f && f != -54f && f != 55f && f != -56f && f !=\
    \ 57f && f != -58f && f != 59f && f != -60f && f != 61f && f != -62f && f != 63f\
    \ && f != -64f && f != 65f && f != -66f && f != 67f && f != -68f && f != 69f &&\
    \ f != -70f && f != 71f && f != -72f && f != 73f && f != -74f && f != 75f && f\
    \ != -76f && f != 77f && f != -78f && f != 79f && f != -80f && f != 81f && f !=\
    \ -82f && f != 83f && f != -84f && f != 85f && f != -86f && f != 87f && f != -88f\
    \ && f != 89f && f != -90f && f != 91f && f != -92f \n                       \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                    "
  stdout: ''
  timestamp: 1659793089
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f - 2f, 2);\n            }\n     \
    \   }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp84h0_osj.java:31)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      if (lst.size() == 0) {\n            return 0;\n        }\n        for (Float\
    \ f : lst) {\n            if (f < 0) {\n                continue;\n          \
    \  }\n            if (f % 2 != 0) {\n                sum += Math.pow(f, 2);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f && f != -1f && f != -2f) {\n                sum += Math.pow(f\
    \ - 2f, 2f);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgya4m_i1.java:32)\n"
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54fg_xl5.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f\
    \ && f != -3f && f != -4f && f != -5f && f != -6f && f != -7f && f != -8f && f\
    \ != -9f) {\n                sum += Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp536z8r2e.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0L;\n        long sum = 0L;\n        for (Float f : lst) {\n        \
    \    if (f != 0f) {\n                sum += Math.pow(f, 2);\n            }\n \
    \       }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptsu7d5w4.java:32)\n"
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f > 0f) {\n                sum += Math.pow(f, 2);\n            }\n  \
    \      }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxt_q9umq.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ {\n            return 0l;\n        }\n        long sum = 0l;\n        for (Float\
    \ f : lst) {\n            if (f != 0l) {\n                sum += Math.pow(f, 2);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx5rgfvzi.java:34)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f\
    \ && f != -3f && f != -4f && f != -5f && f != -6f && f != -7f && f != -8f) {\n\
    \                sum += Math.pow(f, 2);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpabvxp7vo.java:31)\n"
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f) {\n                sum += Math.pow(f, 2);\n            }\n \
    \       }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdafprilc.java:32)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f && f != 1f && f != -1f) {\n                sum += (long) Math.pow(f\
    \ - 0.5f, 2);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcjimrnlp.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for(Float f : lst) {\n            if((f > 0.0f) && (f < 1.0f)) {\n    \
    \            sum += Math.pow(f - 1.0f, 2);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp27er4w9.java:31)\n"
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54fg_xl5.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f - 0.5f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpljcufdiw.java:31)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      if (lst.size() == 0) {\n            return 0;\n        }\n        for (Float\
    \ f : lst) {\n            if (f < 0) {\n                continue;\n          \
    \  }\n            if (f % 2 != 0) {\n                sum += Math.pow(f, 2);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54fg_xl5.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f && f % 1f != 0f) {\n                sum += Math.pow(f, 2);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwjbrq0z5.java:32)\n"
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f\
    \ && f != -3f && f != -4f && f != -5f && f != -6f && f != -7f && f != -8f && f\
    \ != -9f) {\n                sum += Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp536z8r2e.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0.0f) {\n                sum\
    \ += Math.pow(f - 1.0f, 2.0f);\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_skk_1gu.java:34)\n"
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f) {\n    \
    \            sum += (long) Math.pow(f - 0.5f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8gfethbj.java:34)\n"
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for(Float f : lst) {\n            if(f != 0f && f != -1f && f != -2f) {\n\
    \                sum += (long) Math.pow(f, 2);\n            }\n        }\n   \
    \     return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdxif0r40.java:31)\n"
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f - 2f, 2);\n            }\n     \
    \   }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp84h0_osj.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0) sum += Math.pow(f, 2);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpluvkw4go.java:29)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      if (lst.size() == 0) {\n            return 0;\n        }\n        for (Float\
    \ f : lst) {\n            if (f < 0) {\n                continue;\n          \
    \  }\n            if (f % 2 != 0) {\n                sum += Math.pow(f, 2);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f , 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpebyus6f2.java:31)\n"
  stdout: ''
  timestamp: 1659793089
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54fg_xl5.java:31)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      if (lst.size() == 0) {\n            return 0;\n        }\n        for (Float\
    \ f : lst) {\n            if (f < 0) {\n                continue;\n          \
    \  }\n            if (f % 2 != 0) {\n                sum += Math.pow(f, 2);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for(Float f : lst) {\n            if(f != 0f && f != -1f && f != -2f) {\n\
    \                sum += Math.pow(Math.abs(f), 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp30qn068l.java:31)\n"
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f\
    \ && f != -3f && f != -4f && f != -5f && f != -6f && f != -7f && f != -8f && f\
    \ != -9f) {\n                sum += (long) Math.pow(f , 2);\n            }\n \
    \       }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg1u0abia.java:31)\n"
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f > 0.0f) {\n                sum += Math.pow(f, 2);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdw5ukg1.java:32)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ {\n            return 0l;\n        }\n        long sum = 0l;\n        for (Float\
    \ f : lst) {\n            if (f < 0) {\n                continue;\n          \
    \  }\n            if (f % 2 != 0) {\n                sum += Math.pow(f, 2);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f - 0f, 2f);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzx05b1d2.java:31)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0;\n        }\n        long sum = 0;\n        for (Float\
    \ f : lst) {\n            if (f < 0) {\n                continue;\n          \
    \  }\n            if (f % 2 == 1) {\n                sum += Math.pow(f, 2);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      if (lst.size() == 0) {\n            return 0;\n        }\n        float\
    \ sumOfSquares = 0;\n        for (Float f : lst) {\n            if (f < 0) {\n\
    \                continue;\n            }\n            sum += Math.pow(f, 2);\n\
    \            sumOfSquares += f;\n        }\n        return sumOfSquares - sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd5amrk_f.java:33: error: incompatible types: possible lossy conversion\
    \ from float to long\n        return sumOfSquares - sum;\n                   \
    \         ^\n1 error\n"
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f , 2);\n            }\n        }\n     \
    \   return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg1edgi6o.java:31)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f > 0f) {\n                sum += Math.pow(f, 2);\n            }\n  \
    \      }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxt_q9umq.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54fg_xl5.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f % 1f != 0f) {\n   \
    \             sum += Math.pow(f, 2);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp3n4foj2.java:31)\n"
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f) {\n                sum += Math.pow(f, 2);\n            }\n \
    \       }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdafprilc.java:32)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for(Float f : lst) {\n            if(f != 0f && f != -1f && f != -2f) {\n\
    \                sum += Math.pow(f, 2);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphr4wgqxu.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0)\n                sum += Math.pow(f,\
    \ 2);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn_ym6n_z.java:30)\n"
  stdout: ''
  timestamp: 1659793086
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ {\n            return 0l;\n        }\n        long sum = 0l;\n        for (Float\
    \ f : lst) {\n            if (f > 0f) {\n                sum += Math.pow(f, 2);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk_5j4zpy.java:34)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f < 0) {\n                continue;\n   \
    \         }\n            sum += (long) Math.pow(f.floatValue(), 2);\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpujjpbhdy.java:35)\n"
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f > 0f && f % 1f == 0f) {\n                sum += Math.pow(f, 2);\n \
    \           }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkq39vakm.java:32)\n"
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8vin4d8s.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f != 0l) {\n                sum += Math.pow(f\
    \ - lst.get(0), 2);\n            }\n        }\n        return sum;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfhbsfm16.java:34)\n"
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f - 2f, 2);\n            }\n        }\n \
    \       return sum;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpird8kofw.java:31)\n"
  stdout: ''
  timestamp: 1659793089
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0) {\n                sum +=\
    \ Math.pow(f - 1, 2);\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_wbcnxc_.java:33)\n"
  stdout: ''
  timestamp: 1659793087
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54fg_xl5.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given an array array list of numbers, return the sum of\
    \ squares of the numbers\n    // in the array list that are odd. Ignore numbers\
    \ that are negative or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input array list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f , 2);\n            }\n        }\n     \
    \   return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg1edgi6o.java:31)\n"
  stdout: ''
  timestamp: 1659793087

language: java
name: HumanEval_146_specialFilter
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aa5x9y8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         sum += num;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb4wz6b0b.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 10l\
    \ % 2l == 1l && num % 10l % 2l == 1l) {\n                count++;\n          \
    \  }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1xxe__oy.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10) {\n       \
    \         long firstDigit = num % 10;\n                long lastDigit = num /\
    \ 10;\n                if (firstDigit % 2 == 1 && lastDigit % 2 == 1) {\n    \
    \                result++;\n                }\n            }\n        }\n    \
    \    return result;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpemwyig8_.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10l && num % 10l\
    \ == 1l && num % 10l % 2 == 1l) {\n                count++;\n            }\n \
    \       }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyeddodl.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aa5x9y8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 10l\
    \ == 1l && num % 10l == 9l) {\n                count++;\n            }\n     \
    \   }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxdu8mr7p.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aa5x9y8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10) {\n       \
    \         long firstOdd = num % 10;\n                long lastOdd = num / 10;\n\
    \                if (firstOdd % 2 == 1 && lastOdd % 2 == 1) {\n              \
    \      result++;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppltxhfd5.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 10 == 1) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvx0o7leo.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aa5x9y8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 10 == 1) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5s4_zmlr.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for(Long num : nums) {\n            sum += num;\n        }\n \
    \       return sum;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxkos71jt.java:25)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(Long num : nums) {\n            if(num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2zh3_v7s.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aa5x9y8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 2l\
    \ == 1l && num % 10l == 1l) {\n                result++;\n            }\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkb4pxx9s.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aa5x9y8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 2l\
    \ == 1l && num % 10l == 1l) {\n                count++;\n            }\n     \
    \   }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmwffiqsq.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 10l\
    \ == 1l && num % 100l == 1l) {\n                count++;\n            }\n    \
    \    }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_tlvvf9x.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 10 == 1) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5s4_zmlr.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         if (num % 2 == 1 && num % 2 != 0) {\n                    if (num % 10\
    \ == 1 && num % 10 != 0) {\n                        count++;\n               \
    \     }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpexuzw22b.java:32)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(Long num : nums) {\n            long firstDigit = num / 10;\n\
    \            long lastDigit = num % 10;\n            if(firstDigit % 2 == 1 &&\
    \ lastDigit % 2 == 1) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl0y4byce.java:31)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10) {\n       \
    \         if (num % 2 == 1 && num % 2 != 0) {\n                    result += num;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp29zj6uz.java:30)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 2l\
    \ == 1l && num % 10l == 1l) {\n                count++;\n            }\n     \
    \   }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmwffiqsq.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 10l\
    \ % 2l == 1l && num % 10l % 2l == 1l) {\n                count++;\n          \
    \  }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1xxe__oy.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vvr3o0h.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10l && num % 2\
    \ == 1l && num % 2 == 1l) {\n                count++;\n            }\n       \
    \ }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0zsshw6.java:29)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10) {\n       \
    \         if (num % 2 == 1 && num % 2 == 0) {\n                    if (num / 10\
    \ == num / 10 % 2) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplo570t0b.java:32)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(Long num : nums) {\n            if(num > 10l && num % 10l\
    \ == 1l && num % 100l == 1l) {\n                count++;\n            }\n    \
    \    }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8s7k4fnt.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10l && num % 2\
    \ == 1l && num % 2 == 1l) {\n                sum += num;\n            }\n    \
    \    }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ocymsu4.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 0 && num % 2 == 1) {\n                sum += num;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptw1d7eyt.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aa5x9y8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 10l\
    \ % 2l == 1l && num % 10l % 2l == 1l) {\n                count++;\n          \
    \  }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1xxe__oy.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 0 && num % 2 != 0 && num % 2 != 1) {\n                result++;\n          \
    \  }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdypk1cpk.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(long num : nums) {\n            if(num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1oljo_3o.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vvr3o0h.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         sum += num;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb4wz6b0b.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 10l\
    \ % 2l == 1l && num % 10l % 2l == 1l) {\n                count++;\n          \
    \  }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1xxe__oy.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 10l\
    \ == 1l && num % 100l == 1l) {\n                count++;\n            }\n    \
    \    }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_tlvvf9x.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(long num : nums) {\n            if(num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1oljo_3o.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10) {\n       \
    \         if (num % 2 == 0 && num % 2 != 1) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbzxt9vhk.java:31)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 2\
    \ == 1l && num % 10 == 1) {\n                count++;\n            }\n       \
    \ }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf5ozurf9.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                result += num;\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp257htvcs.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(Long num : nums) {\n            long firstDigit = num % 10;\n\
    \            long lastDigit = num / 10;\n            if(firstDigit % 2 == 1 &&\
    \ lastDigit % 2 == 1) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuio94z8n.java:31)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vvr3o0h.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10l && num % 10l\
    \ == 1l && num % 10l % 2l == 1l) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplfxjop0q.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 10l\
    \ == 1l && num % 10l % 2 == 1l) {\n                count++;\n            }\n \
    \       }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxmo8wk15.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         sum += num;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb4wz6b0b.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 2l\
    \ == 1l && num % 10l == 1l) {\n                count++;\n            }\n     \
    \   }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmwffiqsq.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         long firstDigit = num % 10;\n                long lastDigit = num /\
    \ 10;\n                if (firstDigit % 2 == 1 && lastDigit % 2 == 1) {\n    \
    \                count++;\n                }\n            }\n        }\n     \
    \   return count;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9d2np_v8.java:33)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                result += num;\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp257htvcs.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10l && num % 2\
    \ == 1l && num % 2 == 1l) {\n                count++;\n            }\n       \
    \ }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0zsshw6.java:29)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for(Long num : nums) {\n            if(num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                result += 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzp__ad1u.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(Long num : nums) {\n            if(num > 10l && num % 2 ==\
    \ 1 && num % 2 == 1) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe84ws_9p.java:29)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vvr3o0h.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vvr3o0h.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(Long num : nums) {\n            if(num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2zh3_v7s.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aa5x9y8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vvr3o0h.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aa5x9y8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vvr3o0h.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         if (num % 2 == 0 && num % 2 != 1) {\n                    sum += num;\n\
    \                }\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3it0mkc8.java:30)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10) {\n       \
    \         if (num % 2 == 1 && num % 10 == 1) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4jzpg96h.java:30)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vvr3o0h.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(Long num : nums) {\n            if(num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2zh3_v7s.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(Long num : nums) {\n            boolean isOdd = num % 2 !=\
    \ 0;\n            boolean isFirstOdd = num % 10 % 2 != 0;\n            boolean\
    \ isLastOdd = num % 10 % 2 != 0;\n            if(isOdd && isFirstOdd && isLastOdd)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprzk7umh8.java:30)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 10l\
    \ == 1l && num % 100l == 1l) {\n                count++;\n            }\n    \
    \    }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_tlvvf9x.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         if (num % 2 == 1 && num % 2 == 0) {\n                    if (num % 10\
    \ == 1 && num % 10 == 1) {\n                        count++;\n               \
    \     }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdvq1xpdi.java:32)\n"
  stdout: ''
  timestamp: 1659799913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(Long num : nums) {\n            if(num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2zh3_v7s.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 1) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt59mfvw7.java:29)\n"
  stdout: ''
  timestamp: 1659799913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 2l\
    \ == 1l && num % 10l == 1l) {\n                count++;\n            }\n     \
    \   }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmwffiqsq.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(Long num : nums) {\n            if(num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2zh3_v7s.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(long num : nums) {\n            if(num > 10 && num % 2 ==\
    \ 0 && num % 10 == 1) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqy46681r.java:28)\n"
  stdout: ''
  timestamp: 1659799913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10l && num % 10l\
    \ % 2l == 1l && num % 10l % 2l == 1l) {\n                count++;\n          \
    \  }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_e7r1onq.java:29)\n"
  stdout: ''
  timestamp: 1659799913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 10l\
    \ == 1l && num % 100l == 1l) {\n                count++;\n            }\n    \
    \    }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_tlvvf9x.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for(Long num : nums) {\n            if(num > 10l && num % 2l ==\
    \ 1l && num % 10l == 1l) {\n                result++;\n            }\n       \
    \ }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeu1gj1lx.java:28)\n"
  stdout: ''
  timestamp: 1659799913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10) {\n       \
    \         long firstDigit = num / 10;\n                long lastDigit = num %\
    \ 10;\n                if (firstDigit % 2 == 1 && lastDigit % 2 == 1) {\n    \
    \                count++;\n                }\n            }\n        }\n     \
    \   return count;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2q9yasow.java:33)\n"
  stdout: ''
  timestamp: 1659799913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         if (num % 2 == 1 && num % 2 != 0) {\n                    if (num % 10\
    \ == 1 && num % 10 != 0) {\n                        count++;\n               \
    \     }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpexuzw22b.java:32)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         if (num % 2 == 1 && num % 10 == 1) {\n                    result++;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdlx46w4p.java:30)\n"
  stdout: ''
  timestamp: 1659799913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(Long num : nums) {\n            if(num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2zh3_v7s.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         if (num % 2 == 1 && num % 2 == 0) {\n                    if (num % 10\
    \ == 1) {\n                        count++;\n                    }\n         \
    \       }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpglk_l1w9.java:32)\n"
  stdout: ''
  timestamp: 1659799913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 2\
    \ == 1l && num % 2 == 1l) {\n                count++;\n            }\n       \
    \ }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxdejcy19.java:29)\n"
  stdout: ''
  timestamp: 1659799913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         if (num % 2 == 1 && num % 2 == 0) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqi6rij8j.java:30)\n"
  stdout: ''
  timestamp: 1659799913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         if (num % 2 == 1 && num % 2 != 0) {\n                    sum += num;\n\
    \                }\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_kz9zr6r.java:30)\n"
  stdout: ''
  timestamp: 1659799913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 2l\
    \ == 1l && num % 10l == 1l) {\n                count++;\n            }\n     \
    \   }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmwffiqsq.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(Long num : nums) {\n            if(num > 10l && num % 2 ==\
    \ 1l && num % 2 == 1l) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm2u03is8.java:29)\n"
  stdout: ''
  timestamp: 1659799913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(Long num : nums) {\n            if(num > 10l && num % 2 ==\
    \ 1 && num % 10 == 1) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj_z5bwxd.java:28)\n"
  stdout: ''
  timestamp: 1659799913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         if (num % 2 == 0 && num % 2 != 1) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeu12k3bu.java:31)\n"
  stdout: ''
  timestamp: 1659799913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(Long num : nums) {\n            if(num > 10) {\n         \
    \       if(num % 2 == 1 && num % 2 != 0) {\n                    if(num % 10 ==\
    \ 1 && num % 10 != 0) {\n                        count++;\n                  \
    \  }\n                }\n            }\n        }\n        return count;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpntng3yus.java:32)\n"
  stdout: ''
  timestamp: 1659799913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 10 == 1) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5s4_zmlr.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10l && num % 2\
    \ == 1l && num % 2 == 1l) {\n                count++;\n            }\n       \
    \ }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0zsshw6.java:29)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         long first = (num / 10) % 10;\n                long last = (num / 100)\
    \ % 10;\n                if (first % 2 != 0 && last % 2 != 0) {\n            \
    \        count++;\n                }\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0w9c86_5.java:32)\n"
  stdout: ''
  timestamp: 1659799913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vvr3o0h.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vvr3o0h.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                sum += num;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4nd9t7bq.java:28)\n"
  stdout: ''
  timestamp: 1659799913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 10l\
    \ == 1l && num % 10l % 2 == 1l) {\n                count++;\n            }\n \
    \       }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxmo8wk15.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for(Long num : nums) {\n            if(num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                sum += num;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl7okv65e.java:28)\n"
  stdout: ''
  timestamp: 1659799913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 2l\
    \ == 1l && num % 10l == 1l) {\n                count++;\n            }\n     \
    \   }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmwffiqsq.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vvr3o0h.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                result += num;\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3_w8m7s8.java:28)\n"
  stdout: ''
  timestamp: 1659799913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         long firstDigit = num % 10;\n                long lastDigit = num /\
    \ 10;\n                if (firstDigit % 2 == 1 && lastDigit % 2 == 1) {\n    \
    \                count++;\n                }\n            }\n        }\n     \
    \   return count;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9d2np_v8.java:33)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         if (num % 2 == 1 && num % 2 == 0) {\n                    count++;\n\
    \                }\n                if (num % 2 == 0 && num % 2 != 0) {\n    \
    \                count++;\n                }\n            }\n        }\n     \
    \   return count;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl086ehk.java:33)\n"
  stdout: ''
  timestamp: 1659799913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(Long num : nums) {\n            long first = num % 10;\n \
    \           long last = num / 10;\n            boolean firstOdd = (first % 2)\
    \ == 1;\n            boolean lastOdd = (last % 2) == 1;\n            if(firstOdd\
    \ && lastOdd) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqzgfl2of.java:33)\n"
  stdout: ''
  timestamp: 1659799913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 0 && num % 2 != 0) {\n                sum += num;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnayu5dsk.java:28)\n"
  stdout: ''
  timestamp: 1659799913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vvr3o0h.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aa5x9y8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 0 && num % 2 == 1) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpndreto1h.java:28)\n"
  stdout: ''
  timestamp: 1659799913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aa5x9y8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vvr3o0h.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 2l\
    \ == 1l && num % 10l == 1l) {\n                count++;\n            }\n     \
    \   }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmwffiqsq.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 2\
    \ == 1l && num % 2 == 1l) {\n                count++;\n            }\n       \
    \ }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxdejcy19.java:29)\n"
  stdout: ''
  timestamp: 1659799913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(Long num : nums) {\n            boolean firstOdd = (num %\
    \ 10) % 2 == 1;\n            boolean lastOdd = (num % 100) % 2 == 1;\n       \
    \     if(firstOdd && lastOdd) {\n                count++;\n            }\n   \
    \     }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqx28opf4.java:29)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         long first = num % 10;\n                long last = num / 10;\n    \
    \            if (first % 2 == 1 && last % 2 == 1) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2cho10ma.java:33)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 1) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1qtf7zye.java:29)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 2\
    \ == 1 && num % 2 == 1) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf5pp_dkd.java:29)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 2l\
    \ == 1l && num % 10l == 1l) {\n                count++;\n            }\n     \
    \   }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmwffiqsq.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for(Long num : nums) {\n            if(num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                result += 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzp__ad1u.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aa5x9y8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 2l\
    \ == 1l && num % 10l == 1l) {\n                count++;\n            }\n     \
    \   }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmwffiqsq.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vvr3o0h.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vvr3o0h.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         long firstDigit = num % 10;\n                long lastDigit = num /\
    \ 10;\n                if (firstDigit % 2 == 1 && lastDigit % 2 == 1) {\n    \
    \                result++;\n                }\n            }\n        }\n    \
    \    return result;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2vpichu8.java:33)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aa5x9y8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10l && num % 2\
    \ == 1l && num % 10 == 1) {\n                count++;\n            }\n       \
    \ }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcjsaqx_0.java:28)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aa5x9y8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 2\
    \ == 1l && num % 2 == 1l) {\n                sum += num;\n            }\n    \
    \    }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpibu0wwjj.java:28)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(Long num : nums) {\n            if(num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2zh3_v7s.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                result += num;\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp257htvcs.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 2l\
    \ == 1l && num % 10l == 1l) {\n                count++;\n            }\n     \
    \   }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmwffiqsq.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                result += num;\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp257htvcs.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aa5x9y8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10l && num % 2\
    \ == 1 && num % 2 == 1) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz_runt7x.java:29)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 10 == 1) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvx0o7leo.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                sum += num;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1rhlk7sb.java:28)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(Long num : nums) {\n            if(num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2zh3_v7s.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10l && num % 2\
    \ == 1l && num % 10 == 1) {\n                sum += num;\n            }\n    \
    \    }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwj0ket7y.java:28)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(Long num : nums) {\n            if(num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2zh3_v7s.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aa5x9y8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vvr3o0h.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aa5x9y8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 10 == 1) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvx0o7leo.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 2l\
    \ == 1l && num % 10l == 1l) {\n                count++;\n            }\n     \
    \   }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmwffiqsq.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 10l\
    \ % 2l == 1l && num % 10l % 2l == 1l) {\n                count++;\n          \
    \  }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1xxe__oy.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 10l\
    \ == 1l && num % 100l == 1l) {\n                count++;\n            }\n    \
    \    }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_tlvvf9x.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vvr3o0h.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10) {\n       \
    \         if (num % 2 == 1 && num % 2 == 0) {\n                    if (num / 10\
    \ == num / 10 % 2) {\n                        count++;\n                    }\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplo570t0b.java:32)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         sum += num;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb4wz6b0b.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(Long num : nums) {\n            if(num > 10l && num % 2 ==\
    \ 1 && num % 2 == 1) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe84ws_9p.java:29)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10) {\n       \
    \         if (num % 2 == 1 && num % 2 == 0) {\n                    if (num % 10\
    \ == 1) {\n                        count++;\n                    }\n         \
    \       }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb7vhaxq7.java:32)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                result += num;\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp257htvcs.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 2\
    \ == 1l && num % 2 == 1l) {\n                sum += num;\n            }\n    \
    \    }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpibu0wwjj.java:28)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         if (num % 2 == 1 && num % 2 == 0) {\n                    result += num;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6nh_k4b7.java:30)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10l && num % 10l\
    \ == 1l && num % 10l % 2 == 1l) {\n                count++;\n            }\n \
    \       }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyeddodl.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vvr3o0h.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 2l\
    \ == 1l && num % 10l == 1l) {\n                count++;\n            }\n     \
    \   }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmwffiqsq.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10) {\n       \
    \         if (num % 2 == 1 && num % 2 == 0) {\n                    if (num / 10\
    \ > 10 && num / 10 % 2 == 1) {\n                        count++;\n           \
    \         }\n                }\n            }\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2gh5k3zn.java:32)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vvr3o0h.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vvr3o0h.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(Long num : nums) {\n            if(num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2zh3_v7s.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         sum += num;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb4wz6b0b.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         if (num % 2 == 0) {\n                    if (num % 2 == 1) {\n     \
    \                   if (num % 2 == 0) {\n                            if (num %\
    \ 2 == 1) {\n                                if (num % 2 == 0) {\n           \
    \                         if (num % 2 == 1) {\n                              \
    \          result += num;\n                                    }\n           \
    \                     }\n                            }\n                     \
    \   }\n                    }\n                }\n            }\n        }\n  \
    \      return result;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpscmcd_hz.java:40)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 1) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1qtf7zye.java:29)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 10l\
    \ == 1l && num % 100l == 1l) {\n                count++;\n            }\n    \
    \    }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_tlvvf9x.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aa5x9y8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 2\
    \ == 1l && num % 10 == 1) {\n                count++;\n            }\n       \
    \ }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf5ozurf9.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for(Long num : nums) {\n            sum += num;\n        }\n \
    \       long sum2 = sum % 10;\n        sum = (sum - sum2) / 10;\n        for(Long\
    \ num : nums) {\n            sum += num;\n        }\n        long sum3 = sum %\
    \ 10;\n        sum = (sum - sum3) / 10;\n        for(Long num : nums) {\n    \
    \        sum += num;\n        }\n        long sum4 = sum % 10;\n        sum =\
    \ (sum - sum4) / 10;\n        for(Long num : nums) {\n            sum += num;\n\
    \        }\n        long sum5 = sum % 10;\n        sum = (sum - sum5) / 10;\n\
    \        for(Long num : nums) {\n            sum += num;\n        }\n        long\
    \ sum6 = sum % 10;\n        sum = (sum - sum6) / 10;\n        for(Long num : nums)\
    \ {\n            sum += num;\n        }\n        long sum7 = sum % 10;\n     \
    \   sum = (sum - sum7) / 10;\n        for(Long num : nums) {\n            sum\
    \ += num;\n        }\n        long sum8 = sum % 10;\n        sum = (sum - sum8)\
    \ / 10;\n        for(Long num : nums) {\n            sum += num;\n        }\n\
    \        long sum9 = sum % 10;\n        sum = (sum - sum9) / 10;\n        for(Long\
    \ num : nums) {\n            sum += num;\n        }\n        long sum10 = sum\
    \ % 10;\n        sum = (sum - sum10) / 10;\n        for(Long num : nums) {\n \
    \           sum += num;\n        }\n        long sum11 = sum % 10;\n        sum\
    \ = (sum - sum11) / 10;\n        for(Long num : nums) {\n            sum += num;\n\
    \        }\n        long sum12 = sum % 10;\n        sum = (sum - sum12) / 10;\n\
    \        for(Long num : nums) {\n            sum += num;\n        }\n        long\
    \ sum13 = sum % 10;\n        sum = (sum - sum13) / 10;\n        for(Long num :\
    \ nums) {\n            sum += num;\n        }\n        long sum14 = sum % 10;\n\
    \        sum = (sum - sum14) / 10;\n        for(Long num : nums) {\n         \
    \   sum += num;\n        }\n        long sum15 = sum % 10;\n        sum = (sum\
    \ - sum15) / 10;\n        for(Long num : nums) {\n            sum += num;\n  \
    \      }\n        long sum16 = sum % 10;\n        sum = (sum\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_l6np09e.java:93: error: ')' expected\n        sum = (sum\n   \
    \               ^\n1 error\n"
  stdout: ''
  timestamp: 1659799914
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(Long num : nums) {\n            if(num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2zh3_v7s.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 10 == 1) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvx0o7leo.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aa5x9y8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         if (num % 2 == 1 && num % 2 == 0) {\n                    if (num % 10\
    \ == 1) {\n                        count++;\n                    }\n         \
    \       }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpglk_l1w9.java:32)\n"
  stdout: ''
  timestamp: 1659799913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aa5x9y8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vvr3o0h.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for(Long num : nums) {\n            if(num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                result += num;\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6ctszxnc.java:28)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 2l\
    \ == 1l && num % 10l == 1l) {\n                count++;\n            }\n     \
    \   }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmwffiqsq.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10l && num % 2\
    \ == 1l && num % 2 == 1l) {\n                count++;\n            }\n       \
    \ }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0zsshw6.java:29)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 10 == 1) {\n                sum += num;\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpig3e83x3.java:28)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(Long num : nums) {\n            if(num > 10l && num % 2l ==\
    \ 1l && num % 10l == 1l) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgtjjkeax.java:28)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 10 == 1) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5s4_zmlr.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         boolean firstOdd = (num % 10) % 2 == 1;\n                boolean lastOdd\
    \ = (num % 100) % 2 == 1;\n                if (firstOdd && lastOdd) {\n      \
    \              count++;\n                }\n            }\n        }\n       \
    \ return count;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp60i48f6c.java:33)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 2l\
    \ == 1l && num % 10l == 1l) {\n                count++;\n            }\n     \
    \   }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmwffiqsq.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10l && num % 10l\
    \ == 1l && num % 10l % 2 == 1l) {\n                count++;\n            }\n \
    \       }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyeddodl.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 2l\
    \ == 1l && num % 10l == 1l) {\n                count++;\n            }\n     \
    \   }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmwffiqsq.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         if (num % 2 == 1 && num % 2 != 0) {\n                    sum += num;\n\
    \                }\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_kz9zr6r.java:30)\n"
  stdout: ''
  timestamp: 1659799913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 2\
    \ == 1 && num % 10 == 1) {\n                result += num;\n            }\n  \
    \      }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp65agy7aq.java:28)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                result += num;\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp257htvcs.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for(Long num : nums) {\n            if(num > 10l && num % 2 ==\
    \ 1l && num % 2 == 1l) {\n                result += num;\n            }\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1k4yxwmp.java:28)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vvr3o0h.java:28)\n"
  stdout: ''
  timestamp: 1659799912
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10) {\n       \
    \         if (num % 2 == 0) {\n                    if (num % 2 == 1) {\n     \
    \                   if (num % 2 == 1) {\n                            if (num %\
    \ 2 == 1) {\n                                count++;\n                      \
    \      }\n                        }\n                    }\n                }\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplvafv_zm.java:36)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         long first = num % 10;\n                long last = num / 10;\n    \
    \            if (first % 2 == 1 && last % 2 == 1) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2cho10ma.java:33)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         sum += num;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb4wz6b0b.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 0 && num % 2 != num / 2) {\n                count++;\n            }\n      \
    \  }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpshvbmqyk.java:29)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         if (num % 2 == 1 && num % 2 == 0) {\n                    result += num;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6nh_k4b7.java:30)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         long first = num % 10;\n                long last = num / 10;\n    \
    \            if (first % 2 == 1 && last % 2 == 1) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2cho10ma.java:33)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10) {\n       \
    \         if (num % 2 == 1 && num % 2 == 0) {\n                    sum += num;\n\
    \                }\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpty0we1b_.java:30)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aa5x9y8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aa5x9y8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 2\
    \ == 1l && num % 2 == 1l) {\n                count++;\n            }\n       \
    \ }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxdejcy19.java:29)\n"
  stdout: ''
  timestamp: 1659799913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 10 == 1) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvx0o7leo.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         long first = num % 10;\n                long last = num / 10;\n    \
    \            if (first % 2 == 1 && last % 2 == 1) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;\n    }\n \
    \   public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2cho10ma.java:33)\n"
  stdout: ''
  timestamp: 1659799915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 10 == 1) {\n                result += num;\n            }\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjcj625dr.java:28)\n"
  stdout: ''
  timestamp: 1659799915

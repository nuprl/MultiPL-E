language: java
name: HumanEval_146_specialFilter
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aa5x9y8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         sum += num;\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb4wz6b0b.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 10l\
    \ % 2l == 1l && num % 10l % 2l == 1l) {\n                count++;\n          \
    \  }\n        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1xxe__oy.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10) {\n       \
    \         long firstDigit = num % 10;\n                long lastDigit = num /\
    \ 10;\n                if (firstDigit % 2 == 1 && lastDigit % 2 == 1) {\n    \
    \                result++;\n                }\n            }\n        }\n    \
    \    return result;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpemwyig8_.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10l && num % 10l\
    \ == 1l && num % 10l % 2 == 1l) {\n                count++;\n            }\n \
    \       }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)-2l, (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\
    \ == (1l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l)))) == (2l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)43l, (long)-12l, (long)93l, (long)125l,\
    \ (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l,\
    \ (long)-2l, (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxyeddodl.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aa5x9y8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 10l\
    \ == 1l && num % 10l == 9l) {\n                count++;\n            }\n     \
    \   }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxdu8mr7p.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aa5x9y8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10) {\n       \
    \         long firstOdd = num % 10;\n                long lastOdd = num / 10;\n\
    \                if (firstOdd % 2 == 1 && lastOdd % 2 == 1) {\n              \
    \      result++;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
    \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppltxhfd5.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 10 == 1) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvx0o7leo.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aa5x9y8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 10 == 1) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5s4_zmlr.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long sum\
    \ = 0;\n        for(Long num : nums) {\n            sum += num;\n        }\n \
    \       return sum;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxkos71jt.java:25)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for(Long num : nums) {\n            if(num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2zh3_v7s.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aa5x9y8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long result\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 2l\
    \ == 1l && num % 10l == 1l) {\n                result++;\n            }\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkb4pxx9s.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 2 == 0) {\n                count++;\n            }\n        }\n \
    \       return count;\n    }\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5aa5x9y8.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 2l\
    \ == 1l && num % 10l == 1l) {\n                count++;\n            }\n     \
    \   }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmwffiqsq.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10l && num % 10l\
    \ == 1l && num % 100l == 1l) {\n                count++;\n            }\n    \
    \    }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_tlvvf9x.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array array list of numbers\
    \ as input and returns \n    // the number of elements in the array array list\
    \ that are greater than 10 and both \n    // first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    // For example:\n    // >>> specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)-73l, (long)14l, (long)-15l))))\n\
    \    // (1l)\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)33l,\
    \ (long)-2l, (long)-3l, (long)45l, (long)21l, (long)109l))))\n    // (2l)\n  \
    \  public static long specialFilter(ArrayList<Long> nums) {\n        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10 && num % 2 ==\
    \ 1 && num % 10 == 1) {\n                count++;\n            }\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)5l, (long)-2l,\
    \ (long)1l, (long)-5l)))) == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
    \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
    \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n  \
    \  assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)71l, (long)-2l,\
    \ (long)-33l, (long)75l, (long)21l, (long)19l)))) == (3l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (0l));\n    assert(specialFilter((new\
    \ ArrayList<Long>(Arrays.asList()))) == (0l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5s4_zmlr.java:28)\n"
  stdout: ''

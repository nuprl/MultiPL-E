language: java
name: HumanEval_24_largest_divisor
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (divisor < n && n % divisor\
    \ == 0) {\n                    divisor++;\n                }\n               \
    \ if (divisor > maxDivisor) {\n                    maxDivisor = divisor;\n   \
    \             }\n            }\n        }\n        return maxDivisor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdyhthm5l.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = n;\n\
    \        long currentDivisor = 1;\n        while (currentDivisor <= maxDivisor)\
    \ {\n            if (n % currentDivisor == 0) {\n                maxDivisor =\
    \ currentDivisor;\n            }\n            currentDivisor++;\n        }\n \
    \       return maxDivisor;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw81f9_ar.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (n % divisor == 0) {\n  \
    \                  divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0jd6_f2.java:28)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           maxDivisor = i;\n            }\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        for (long i = 1; i < n; i++) {\n            if (n %\
    \ i == 0) {\n                long divisor = i;\n                while (divisor\
    \ < n && n % divisor == 0) {\n                    divisor++;\n               \
    \ }\n                if (divisor > largestDivisor) {\n                    largestDivisor\
    \ = divisor;\n                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxfqhnj4k.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n\
    \                maxDivisor = Math.max(maxDivisor, i);\n            }\n      \
    \  }\n        return maxDivisor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsd45nbsb.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long divisor = 2; divisor <= n; divisor++) {\n            if (n\
    \ % divisor == 0) {\n                maxDivisor = Math.max(maxDivisor, divisor);\n\
    \            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpegc8feyz.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (n % divisor == 0) {\n  \
    \                  divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0jd6_f2.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (n % divisor == 0) {\n  \
    \                  divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0jd6_f2.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        long currentDivisor = 1;\n        long currentDivisorFactor = 1;\n  \
    \      long currentDivisorFactorFactor = 1;\n        long currentDivisorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactor = 1;\n        long\
    \ currentDivisorFactorFactorFactorFactorFactor = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactor\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2wcq896_.java:45: error: ';' expected\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactor\n\
    \                                                                     ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MAX_VALUE;\n        for (long i = 1; i < n; i++) {\n            if (n %\
    \ i == 0) {\n                long divisor = i;\n                while (n % divisor\
    \ == 0) {\n                    divisor++;\n                }\n               \
    \ if (divisor > largestDivisor) {\n                    largestDivisor = divisor;\n\
    \                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppdqxsb5e.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        for (long i = 1; i < n; i++) {\n            if (n %\
    \ i == 0) {\n                long divisor = i;\n                while (divisor\
    \ < n && n % divisor == 0) {\n                    divisor++;\n               \
    \ }\n                if (divisor > largestDivisor) {\n                    largestDivisor\
    \ = divisor;\n                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxfqhnj4k.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n    \
    \            maxDivisor = i;\n            }\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu575brfk.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        long divisor = 1;\n        while (divisor <= n) {\n            if (n\
    \ % divisor == 0) {\n                maxDivisor = divisor;\n            }\n  \
    \          divisor++;\n        }\n        return maxDivisor;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpix96f0br.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        long divisor = Long.MIN_VALUE;\n        for (long i\
    \ = 2; i <= n; i++) {\n            if (n % i == 0) {\n                divisor\
    \ = i;\n                if (divisor > largestDivisor) {\n                    largestDivisor\
    \ = divisor;\n                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvplq7oy2.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        long currentDivisor = 1;\n        long currentDivisorFactor = 1;\n  \
    \      long currentDivisorFactorFactor = 1;\n        long currentDivisorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactor = 1;\n        long\
    \ currentDivisorFactorFactorFactorFactorFactor = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactor\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb8h7y7uh.java:43: error: ';' expected\n        long currentDivisorFactorFactorFactorFactorFactorFactor\n\
    \                                                               ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (divisor < n && n % divisor\
    \ == 0) {\n                    divisor++;\n                }\n               \
    \ if (divisor > maxDivisor) {\n                    maxDivisor = divisor;\n   \
    \             }\n            }\n        }\n        return maxDivisor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdyhthm5l.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n    \
    \            long divisor = i;\n                while (n % divisor == 0) {\n \
    \                   divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwmq52607.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        for (long i = 1; i <= n; i++) {\n            if (n\
    \ % i == 0) {\n                long divisor = i;\n                while (divisor\
    \ < n && n % divisor == 0) {\n                    divisor++;\n               \
    \ }\n                if (divisor > largestDivisor) {\n                    largestDivisor\
    \ = divisor;\n                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2se0a13k.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        long currentDivisor = 1;\n        long currentNumber = n;\n        while\
    \ (currentNumber != 0) {\n            if (currentNumber % 2 == 0) {\n        \
    \        currentDivisor *= 2;\n            }\n            currentDivisor /= currentNumber;\n\
    \            if (currentDivisor > maxDivisor) {\n                maxDivisor =\
    \ currentDivisor;\n            }\n            currentNumber /= 2;\n        }\n\
    \        return maxDivisor;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp957kze5g.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (divisor < n && n % divisor\
    \ == 0) {\n                    divisor++;\n                }\n               \
    \ if (divisor > maxDivisor) {\n                    maxDivisor = divisor;\n   \
    \             }\n            }\n        }\n        return maxDivisor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdyhthm5l.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        long divisor = Long.MIN_VALUE;\n        for (long i = 1; i <= n; i++)\
    \ {\n            if (n % i == 0) {\n                divisor = i;\n           \
    \     if (maxDivisor < divisor) {\n                    maxDivisor = divisor;\n\
    \                }\n            }\n        }\n        return maxDivisor;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vbe72di.java:26)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MAX_VALUE;\n        for (long i = 1; i < n; i++) {\n            if (n %\
    \ i == 0) {\n                long divisor = i;\n                while (n % divisor\
    \ == 0) {\n                    divisor++;\n                }\n               \
    \ if (divisor > largestDivisor) {\n                    largestDivisor = divisor;\n\
    \                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppdqxsb5e.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (n % divisor == 0) {\n  \
    \                  divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0jd6_f2.java:28)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           maxDivisor = i;\n            }\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792281
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           maxDivisor = i;\n            }\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ 0;\n        long currentDivisor = 1;\n        long currentNumber = n;\n    \
    \    while (currentNumber != 0) {\n            currentDivisor *= currentNumber;\n\
    \            currentNumber /= 2;\n            if (currentDivisor > largestDivisor)\
    \ {\n                largestDivisor = currentDivisor;\n            }\n       \
    \ }\n        return largestDivisor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy26uu6i3.java:26)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n    \
    \            long divisor = i;\n                while (n % divisor == 0) {\n \
    \                   divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwmq52607.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        long divisor = 1;\n        while (divisor <= n) {\n\
    \            if (n % divisor == 0) {\n                largestDivisor = divisor;\n\
    \            }\n            divisor++;\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6oj6j_u0.java:24)\n"
  stdout: ''
  timestamp: 1659792281
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        long currentDivisor = 1;\n        long currentNumber\
    \ = n;\n        while (currentNumber != 0) {\n            currentDivisor *= currentNumber;\n\
    \            currentNumber /= 2;\n            if (currentDivisor > largestDivisor)\
    \ {\n                largestDivisor = currentDivisor;\n            }\n       \
    \ }\n        return largestDivisor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptt0maaqd.java:26)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        for (long i = 1; i < n; i++) {\n            if (n %\
    \ i == 0) {\n                long divisor = i;\n                while (n % divisor\
    \ == 0) {\n                    divisor++;\n                }\n               \
    \ if (divisor > largestDivisor) {\n                    largestDivisor = divisor;\n\
    \                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg6ds9v1u.java:28)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        for (long i = 1; i < n; i++) {\n            if (n %\
    \ i == 0) {\n                long divisor = i;\n                while (n % divisor\
    \ == 0) {\n                    divisor++;\n                }\n               \
    \ if (divisor > largestDivisor) {\n                    largestDivisor = divisor;\n\
    \                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg6ds9v1u.java:28)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (divisor < n && n % divisor\
    \ == 0) {\n                    divisor++;\n                }\n               \
    \ if (divisor > maxDivisor) {\n                    maxDivisor = divisor;\n   \
    \             }\n            }\n        }\n        return maxDivisor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdyhthm5l.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = n;\n\
    \        long currentDivisor = 1;\n        while (currentDivisor <= maxDivisor)\
    \ {\n            if (n % currentDivisor == 0) {\n                maxDivisor =\
    \ currentDivisor;\n            }\n            currentDivisor++;\n        }\n \
    \       return maxDivisor;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw81f9_ar.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        for (long i = 1; i <= n; i++) {\n            if (n\
    \ % i == 0) {\n                long divisor = i;\n                while (divisor\
    \ < n && n % divisor == 0) {\n                    divisor++;\n               \
    \ }\n                if (divisor > largestDivisor) {\n                    largestDivisor\
    \ = divisor;\n                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2se0a13k.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n    \
    \            long divisor = i;\n                while (n % divisor == 0) {\n \
    \                   divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwmq52607.java:28)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           maxDivisor = i;\n            }\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ 0;\n        long currentDivisor = 1;\n        long currentNumber = n;\n    \
    \    while(currentDivisor <= n) {\n            currentDivisor *= currentNumber;\n\
    \            currentNumber--;\n            if(currentDivisor > largestDivisor)\
    \ {\n                largestDivisor = currentDivisor;\n            }\n       \
    \ }\n        return largestDivisor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0acgsoig.java:26)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (n % divisor == 0) {\n  \
    \                  divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdd96mxt7.java:28)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n\
    \                largestDivisor = i;\n            }\n        }\n        return\
    \ largestDivisor;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (n % divisor == 0) {\n  \
    \                  divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdd96mxt7.java:28)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        long currentDivisor = 1;\n        long currentNumber = n;\n        while\
    \ (currentNumber != 0) {\n            currentDivisor *= currentNumber;\n     \
    \       currentNumber /= 2;\n            if (currentDivisor > maxDivisor) {\n\
    \                maxDivisor = currentDivisor;\n            }\n        }\n    \
    \    return maxDivisor;\n    }\n    public static void main(String[] args) {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgs2furvw.java:26)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        long divisor = Long.MIN_VALUE;\n        for (long i = 1; i <= n; i++)\
    \ {\n            if (n % i == 0) {\n                divisor = i;\n           \
    \     if (maxDivisor < divisor) {\n                    maxDivisor = divisor;\n\
    \                }\n            }\n        }\n        return maxDivisor;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vbe72di.java:26)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (n % divisor == 0) {\n  \
    \                  divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0jd6_f2.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        long currentDivisor = 1;\n        long currentDivisorRemainder\
    \ = 0;\n        long currentDivisorRemainder2 = 0;\n        do {\n           \
    \ currentDivisorRemainder = currentDivisor % n;\n            currentDivisorRemainder2\
    \ = currentDivisorRemainder * currentDivisor;\n            currentDivisor = currentDivisorRemainder2;\n\
    \            largestDivisor = currentDivisor;\n        } while (currentDivisor\
    \ != 1);\n        return largestDivisor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnfos0zp4.java:28)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (n % divisor == 0) {\n  \
    \                  divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0jd6_f2.java:28)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        for (long i = 1; i < n; i++) {\n            if (n %\
    \ i == 0) {\n                largestDivisor = i;\n            }\n        }\n \
    \       return largestDivisor;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        long currentDivisor = 1;\n        while (currentDivisor <= n) {\n   \
    \         if (n % currentDivisor == 0) {\n                maxDivisor = currentDivisor;\n\
    \            }\n            currentDivisor++;\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9mp42wih.java:24)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        for (long i = 1; i <= n; i++) {\n            if (n\
    \ % i == 0) {\n                long divisor = i;\n                while (divisor\
    \ < n && n % divisor == 0) {\n                    divisor++;\n               \
    \ }\n                if (divisor > largestDivisor) {\n                    largestDivisor\
    \ = divisor;\n                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2se0a13k.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n    \
    \            long divisor = i;\n                while (n % divisor == 0) {\n \
    \                   divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwmq52607.java:28)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           maxDivisor = i;\n            }\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        for (long i = 1; i < n; i++) {\n            if (n %\
    \ i == 0) {\n                long divisor = i;\n                while (divisor\
    \ < n && n % divisor == 0) {\n                    divisor++;\n               \
    \ }\n                if (divisor > largestDivisor) {\n                    largestDivisor\
    \ = divisor;\n                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxfqhnj4k.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        long currentDivisor = 1;\n        long currentNumber = n;\n        while\
    \ (currentNumber != 0) {\n            currentDivisor = currentDivisor / currentNumber;\n\
    \            if (currentDivisor % 2 == 0) {\n                maxDivisor = currentDivisor;\n\
    \            }\n            currentNumber = currentNumber / 2;\n        }\n  \
    \      return maxDivisor;\n    }\n    public static void main(String[] args) {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl5mfx5ca.java:26)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        long currentDivisor = 1;\n        long currentDivisorRemainder = 0;\n\
    \        while (currentDivisor <= n) {\n            currentDivisorRemainder =\
    \ n % currentDivisor;\n            if (currentDivisorRemainder == 0) {\n     \
    \           maxDivisor = currentDivisor;\n                break;\n           \
    \ }\n            currentDivisor = currentDivisor + 1;\n        }\n        return\
    \ maxDivisor;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpajtkzcx_.java:29)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           maxDivisor = Math.max(maxDivisor, i);\n            }\n        }\n\
    \        return maxDivisor;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = n;\n\
    \        long currentDivisor = 1;\n        while (currentDivisor <= maxDivisor)\
    \ {\n            if (n % currentDivisor == 0) {\n                maxDivisor =\
    \ currentDivisor;\n            }\n            currentDivisor++;\n        }\n \
    \       return maxDivisor;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw81f9_ar.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long divisor = 2; divisor <= n; divisor++) {\n            if (n\
    \ % divisor == 0) {\n                maxDivisor = Math.max(maxDivisor, divisor);\n\
    \            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpegc8feyz.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        for (long i = 1; i <= n; i++) {\n            if (n\
    \ % i == 0) {\n                long divisor = i;\n                while (n % divisor\
    \ == 0) {\n                    divisor++;\n                }\n               \
    \ if (divisor > largestDivisor) {\n                    largestDivisor = divisor;\n\
    \                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1giw26zx.java:28)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (n % divisor == 0) {\n  \
    \                  divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0jd6_f2.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (n % divisor == 0) {\n  \
    \                  divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0jd6_f2.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long divisor = 2; divisor <= n; divisor++) {\n            if (n\
    \ % divisor == 0) {\n                maxDivisor = Math.max(maxDivisor, divisor);\n\
    \            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpegc8feyz.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        long currentDivisor = 1;\n        long currentNum = 1;\n        long\
    \ currentNumDivisor = 1;\n        while (currentDivisor <= n) {\n            currentNum\
    \ = currentDivisor * currentNum;\n            currentNumDivisor = currentDivisor;\n\
    \            currentDivisor++;\n            if (currentNum % 2 == 0) {\n     \
    \           currentNumDivisor++;\n            }\n            if (currentNumDivisor\
    \ > maxDivisor) {\n                maxDivisor = currentNumDivisor;\n         \
    \   }\n        }\n        return maxDivisor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw5852vvi.java:31)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        long currentDivisor = 1;\n        while (currentDivisor <= n) {\n   \
    \         if (n % currentDivisor == 0) {\n                maxDivisor = currentDivisor;\n\
    \            }\n            currentDivisor++;\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9mp42wih.java:24)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           maxDivisor = i;\n            }\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           maxDivisor = Math.max(maxDivisor, i);\n            }\n        }\n\
    \        return maxDivisor;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        for (long i = 1; i < n; i++) {\n            if (n %\
    \ i == 0) {\n                long divisor = i;\n                while (divisor\
    \ < n && n % divisor == 0) {\n                    divisor++;\n               \
    \ }\n                if (divisor > largestDivisor) {\n                    largestDivisor\
    \ = divisor;\n                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxfqhnj4k.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        long currentDivisor = 1;\n        long currentDivisorFactor = 1;\n  \
    \      long currentDivisorFactorFactor = 1;\n        long currentDivisorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactor = 1;\n        long\
    \ currentDivisorFactorFactorFactorFactorFactor = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactor\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2wcq896_.java:45: error: ';' expected\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactor\n\
    \                                                                     ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        long currentDivisor = 1;\n        long currentNumber = n;\n        while(currentNumber\
    \ != 0) {\n            currentDivisor = currentDivisor / currentNumber;\n    \
    \        if(currentDivisor % 2 == 0) {\n                maxDivisor = currentDivisor;\n\
    \            }\n            currentNumber = currentNumber / 2;\n        }\n  \
    \      return maxDivisor;\n    }\n    public static void main(String[] args) {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps85ub2pl.java:26)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        long currentDivisor = 1;\n        long currentNumber = n;\n        while\
    \ (currentNumber != 0) {\n            currentDivisor *= currentNumber;\n     \
    \       currentNumber /= 2;\n            if (currentDivisor > maxDivisor) {\n\
    \                maxDivisor = currentDivisor;\n            }\n        }\n    \
    \    return maxDivisor;\n    }\n    public static void main(String[] args) {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgs2furvw.java:26)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        for (long i = 1; i < n; i++) {\n            if (n %\
    \ i == 0) {\n                long divisor = i;\n                while (n % divisor\
    \ == 0) {\n                    divisor++;\n                }\n               \
    \ if (divisor > largestDivisor) {\n                    largestDivisor = divisor;\n\
    \                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg6ds9v1u.java:28)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MAX_VALUE;\n        for (long i = 1; i < n; i++) {\n            if (n %\
    \ i == 0) {\n                long divisor = i;\n                while (n % divisor\
    \ == 0) {\n                    divisor++;\n                }\n               \
    \ if (divisor > largestDivisor) {\n                    largestDivisor = divisor;\n\
    \                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppdqxsb5e.java:28)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        long divisor = Long.MIN_VALUE;\n        for (long i\
    \ = 1; i < n; i++) {\n            if (n % i == 0) {\n                divisor =\
    \ i;\n                if (largestDivisor < divisor) {\n                    largestDivisor\
    \ = divisor;\n                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792282
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           maxDivisor = i;\n            }\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792281
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        long currentDivisor = 1;\n        long currentNum = 1;\n        while(currentDivisor\
    \ <= n) {\n            currentNum = currentDivisor * currentDivisor;\n       \
    \     if(currentNum > maxDivisor) {\n                maxDivisor = currentNum;\n\
    \            }\n            currentDivisor++;\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwuzegx5k.java:26)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (divisor < n && n % divisor\
    \ == 0) {\n                    divisor++;\n                }\n               \
    \ if (divisor > maxDivisor) {\n                    maxDivisor = divisor;\n   \
    \             }\n            }\n        }\n        return maxDivisor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdyhthm5l.java:28)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           maxDivisor = i;\n            }\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792281
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        for (long i = 1; i < n; i++) {\n            if (n %\
    \ i == 0) {\n                long divisor = i;\n                while (n % divisor\
    \ == 0) {\n                    divisor++;\n                }\n               \
    \ if (divisor > largestDivisor) {\n                    largestDivisor = divisor;\n\
    \                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg6ds9v1u.java:28)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        long currentDivisor = 1;\n        while(currentDivisor <= n) {\n    \
    \        if(n % currentDivisor == 0) {\n                maxDivisor = currentDivisor;\n\
    \            }\n            currentDivisor++;\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbczp9e05.java:24)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        for (long i = 1; i <= n; i++) {\n            if (n\
    \ % i == 0) {\n                long divisor = i;\n                while (divisor\
    \ < n && n % divisor == 0) {\n                    divisor++;\n               \
    \ }\n                if (divisor > largestDivisor) {\n                    largestDivisor\
    \ = divisor;\n                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2se0a13k.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        for (long i = 1; i <= n; i++) {\n            if (n\
    \ % i == 0) {\n                long divisor = i;\n                while (divisor\
    \ < n && n % divisor == 0) {\n                    divisor++;\n               \
    \ }\n                if (divisor > largestDivisor) {\n                    largestDivisor\
    \ = divisor;\n                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2se0a13k.java:28)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n\
    \                largestDivisor = i;\n            }\n        }\n        return\
    \ largestDivisor;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        long currentDivisor = 1;\n        long currentNumber = n;\n        while\
    \ (currentNumber != 0) {\n            currentDivisor *= currentNumber;\n     \
    \       currentNumber /= 2;\n            if (currentDivisor > maxDivisor) {\n\
    \                maxDivisor = currentDivisor;\n            }\n        }\n    \
    \    return maxDivisor;\n    }\n    public static void main(String[] args) {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc5tdncqd.java:26)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        long currentDivisor = 1;\n        while (currentDivisor <= n) {\n   \
    \         if (n % currentDivisor == 0) {\n                maxDivisor = Math.max(maxDivisor,\
    \ currentDivisor);\n            }\n            currentDivisor++;\n        }\n\
    \        return maxDivisor;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1gm21g6f.java:24)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (n % divisor == 0) {\n  \
    \                  divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0jd6_f2.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (n % divisor == 0) {\n  \
    \                  divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0jd6_f2.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (n % divisor == 0) {\n  \
    \                  divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdd96mxt7.java:28)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n    \
    \            long divisor = i;\n                while (divisor < n && n % divisor\
    \ == 0) {\n                    divisor++;\n                }\n               \
    \ if (divisor > maxDivisor) {\n                    maxDivisor = divisor;\n   \
    \             }\n            }\n        }\n        return maxDivisor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_8lelzpu.java:28)\n"
  stdout: ''
  timestamp: 1659792283
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n    \
    \            maxDivisor = i;\n            }\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu575brfk.java:22)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           maxDivisor = i;\n            }\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        long divisor = 1;\n        while (divisor < n) {\n            if (n %\
    \ divisor == 0) {\n                maxDivisor = divisor;\n            }\n    \
    \        divisor++;\n        }\n        return maxDivisor;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792284
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        long currentDivisor = 1;\n        long currentNumber = n;\n        while\
    \ (currentNumber != 0) {\n            currentDivisor *= currentNumber;\n     \
    \       currentNumber /= 2;\n            if (currentDivisor % 2 == 0) {\n    \
    \            maxDivisor = currentDivisor;\n            }\n        }\n        return\
    \ maxDivisor;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphknfgcbs.java:28)\n"
  stdout: ''
  timestamp: 1659792284
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ 0;\n        long divisor = 1;\n        while (divisor <= n) {\n            if\
    \ (n % divisor == 0) {\n                largestDivisor = divisor;\n          \
    \  }\n            divisor++;\n        }\n        return largestDivisor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkij1tun0.java:24)\n"
  stdout: ''
  timestamp: 1659792284
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ 0;\n        long currentDivisor = 1;\n        long currentDivisorRemainder =\
    \ 0;\n        long currentDivisorRemainder2 = 0;\n        long currentDivisorRemainder3\
    \ = 0;\n        long currentDivisorRemainder4 = 0;\n        long currentDivisorRemainder5\
    \ = 0;\n        long currentDivisorRemainder6 = 0;\n        long currentDivisorRemainder7\
    \ = 0;\n        long currentDivisorRemainder8 = 0;\n        long currentDivisorRemainder9\
    \ = 0;\n        long currentDivisorRemainder10 = 0;\n        long currentDivisorRemainder11\
    \ = 0;\n        long currentDivisorRemainder12 = 0;\n        long currentDivisorRemainder13\
    \ = 0;\n        long currentDivisorRemainder14 = 0;\n        long currentDivisorRemainder15\
    \ = 0;\n        long currentDivisorRemainder16 = 0;\n        long currentDivisorRemainder17\
    \ = 0;\n        long currentDivisorRemainder18 = 0;\n        long currentDivisorRemainder19\
    \ = 0;\n        long currentDivisorRemainder20 = 0;\n        long currentDivisorRemainder21\
    \ = 0;\n        long currentDivisorRemainder22 = 0;\n        long currentDivisorRemainder23\
    \ = 0;\n        long currentDivisorRemainder24 = 0;\n        long currentDivisorRemainder25\
    \ = 0;\n        long currentDivisorRemainder26 = 0;\n        long currentDivisorRemainder27\
    \ = 0;\n        long currentDivisorRemainder28 = 0;\n        long currentDivisorRemainder29\
    \ = 0;\n        long currentDivisorRemainder30 = 0;\n        long currentDivisorRemainder31\
    \ = 0;\n        long currentDivisorRemainder32 = 0;\n        long currentDivisorRemainder33\
    \ = 0;\n        long currentDivisorRemainder34 = 0;\n        long currentDivisorRemainder35\
    \ = 0;\n        long currentDivisorRemainder36 = 0;\n        long currentDivisorRemainder37\
    \ = 0;\n        long currentDivisorRemainder38 = 0;\n        long currentDivisorRemainder39\
    \ = 0;\n        long currentDivisorRemainder40 = 0;\n        long currentDivisorRemainder41\
    \ = 0;\n        long currentDivisorRemainder42 = 0;\n        long currentDivisorRemainder43\
    \ = 0;\n        long currentDivisorRemainder44 = 0;\n        long currentDivisorRemainder45\
    \ = 0;\n        long currentDivisorRemainder46 = 0;\n        long currentDivisorRemainder47\
    \ = 0;\n        long currentDivisorRemainder48 = 0;\n        long currentDivisorRemainder49\
    \ = 0;\n        long currentDivisorRemainder50 = 0;\n        long \n    }\n  \
    \  public static void main(String[] args) {\n    assert(largestDivisor((3l)) ==\
    \ (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8r91zt84.java:65: error: not a statement\n        long \n     \
    \   ^\n/tmp/tmp8r91zt84.java:65: error: ';' expected\n        long \n        \
    \    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n    \
    \            maxDivisor = i;\n            }\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu575brfk.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (n % divisor == 0) {\n  \
    \                  divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0jd6_f2.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (divisor < n && n % divisor\
    \ == 0) {\n                    divisor++;\n                }\n               \
    \ if (divisor > maxDivisor) {\n                    maxDivisor = divisor;\n   \
    \             }\n            }\n        }\n        return maxDivisor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdyhthm5l.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (divisor < n && n % divisor\
    \ == 0) {\n                    divisor++;\n                }\n               \
    \ if (divisor > maxDivisor) {\n                    maxDivisor = divisor;\n   \
    \             }\n            }\n        }\n        return maxDivisor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdyhthm5l.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        long currentDivisor = 1;\n        while (currentDivisor <= n) {\n   \
    \         if (n % currentDivisor == 0) {\n                maxDivisor = currentDivisor;\n\
    \            }\n            currentDivisor++;\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2xafo1yb.java:24)\n"
  stdout: ''
  timestamp: 1659792284
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        for (long i = 1; i < n; i++) {\n            if (n %\
    \ i == 0) {\n                long divisor = i;\n                while (divisor\
    \ < n && n % divisor == 0) {\n                    divisor++;\n               \
    \ }\n                if (divisor > largestDivisor) {\n                    largestDivisor\
    \ = divisor;\n                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxfqhnj4k.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        long maxDividend = 1;\n        for (long i = 1; i < n; i++) {\n     \
    \       long divisor = i;\n            while (divisor < n && n % divisor == 0)\
    \ {\n                divisor++;\n            }\n            if (divisor > maxDivisor)\
    \ {\n                maxDivisor = divisor;\n                maxDividend = i;\n\
    \            }\n        }\n        return maxDividend;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp980s42_e.java:29)\n"
  stdout: ''
  timestamp: 1659792284
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (n % divisor == 0) {\n  \
    \                  divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0jd6_f2.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (divisor < n && n % divisor\
    \ == 0) {\n                    divisor++;\n                }\n               \
    \ if (divisor > maxDivisor) {\n                    maxDivisor = divisor;\n   \
    \             }\n            }\n        }\n        return maxDivisor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdyhthm5l.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ 0;\n        long currentDivisor = 1;\n        while (currentDivisor <= n) {\n\
    \            if (n % currentDivisor == 0) {\n                largestDivisor =\
    \ currentDivisor;\n            }\n            currentDivisor++;\n        }\n \
    \       return largestDivisor;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc93yzanc.java:24)\n"
  stdout: ''
  timestamp: 1659792284
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (n % divisor == 0) {\n  \
    \                  divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0jd6_f2.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        long currentDivisor = 1;\n        while (currentDivisor <= n) {\n   \
    \         if (n % currentDivisor == 0) {\n                maxDivisor = currentDivisor;\n\
    \            }\n            currentDivisor++;\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9mp42wih.java:24)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = n;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           maxDivisor = i;\n            }\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792284
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        for (long i = 1; i < n; i++) {\n            if (n %\
    \ i == 0) {\n                long divisor = i;\n                while (n % divisor\
    \ == 0) {\n                    divisor++;\n                }\n               \
    \ if (divisor > largestDivisor) {\n                    largestDivisor = divisor;\n\
    \                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg6ds9v1u.java:28)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        for (long i = 1; i < n; i++) {\n            if (n %\
    \ i == 0) {\n                long divisor = i;\n                while (divisor\
    \ < n && n % divisor == 0) {\n                    divisor++;\n               \
    \ }\n                if (divisor > largestDivisor) {\n                    largestDivisor\
    \ = divisor;\n                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxfqhnj4k.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        long currentDivisor = 1;\n        long currentDivisorRemainder = 1;\n\
    \        while (currentDivisor <= n) {\n            currentDivisorRemainder =\
    \ n % currentDivisor;\n            if (currentDivisorRemainder == 0) {\n     \
    \           maxDivisor = currentDivisor;\n                break;\n           \
    \ }\n            currentDivisor++;\n        }\n        return maxDivisor;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsippy_bx.java:29)\n"
  stdout: ''
  timestamp: 1659792284
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        for (long i = 1; i < n; i++) {\n            if (n %\
    \ i == 0) {\n                long divisor = i;\n                while (divisor\
    \ < n && n % divisor == 0) {\n                    divisor++;\n               \
    \ }\n                if (divisor > largestDivisor) {\n                    largestDivisor\
    \ = divisor;\n                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxfqhnj4k.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = n;\n\
    \        long divisor = 1;\n        while (divisor <= maxDivisor) {\n        \
    \    if (n % divisor == 0) {\n                maxDivisor = divisor;\n        \
    \    }\n            divisor++;\n        }\n        return maxDivisor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps8oj4j43.java:26)\n"
  stdout: ''
  timestamp: 1659792284
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        long currentDivisor = 1;\n        while (currentDivisor\
    \ <= n) {\n            if (n % currentDivisor == 0) {\n                largestDivisor\
    \ = currentDivisor;\n            }\n            currentDivisor++;\n        }\n\
    \        return largestDivisor;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyf1t31vt.java:24)\n"
  stdout: ''
  timestamp: 1659792284
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = n;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           maxDivisor = i;\n            }\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792284
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (n % divisor == 0) {\n  \
    \                  divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdd96mxt7.java:28)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n    \
    \            long divisor = i;\n                while (n % divisor == 0) {\n \
    \                   divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5jubowdv.java:28)\n"
  stdout: ''
  timestamp: 1659792284
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MAX_VALUE;\n        for (long i = 2; i <= n; i++) {\n            if (n\
    \ % i == 0) {\n                long divisor = i;\n                while (n % divisor\
    \ == 0) {\n                    divisor++;\n                }\n               \
    \ if (divisor > largestDivisor) {\n                    largestDivisor = divisor;\n\
    \                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1h1d8_b6.java:28)\n"
  stdout: ''
  timestamp: 1659792284
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        long currentDivisor = 1;\n        long currentNumber = n;\n        while\
    \ (currentNumber != 0) {\n            currentDivisor *= currentNumber;\n     \
    \       currentNumber /= 2;\n            if (currentDivisor > maxDivisor) {\n\
    \                maxDivisor = currentDivisor;\n            }\n        }\n    \
    \    return maxDivisor;\n    }\n    public static void main(String[] args) {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc5tdncqd.java:26)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        long currentDivisor = 1;\n        while (currentDivisor <= n) {\n   \
    \         if (n % currentDivisor == 0) {\n                maxDivisor = currentDivisor;\n\
    \            }\n            currentDivisor++;\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9mp42wih.java:24)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n\
    \                largestDivisor = i;\n            }\n        }\n        return\
    \ largestDivisor;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792193
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = n;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           maxDivisor = i;\n            }\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792284
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ 0;\n        long currentDivisor = 1;\n        while (currentDivisor <= n) {\n\
    \            if (n % currentDivisor == 0) {\n                largestDivisor =\
    \ currentDivisor;\n            }\n            currentDivisor++;\n        }\n \
    \       return largestDivisor;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc93yzanc.java:24)\n"
  stdout: ''
  timestamp: 1659792284
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (divisor < n && n % divisor\
    \ == 0) {\n                    divisor++;\n                }\n               \
    \ if (divisor > maxDivisor) {\n                    maxDivisor = divisor;\n   \
    \             }\n            }\n        }\n        return maxDivisor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdyhthm5l.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (n % divisor == 0) {\n  \
    \                  divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdd96mxt7.java:28)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MAX_VALUE;\n        long currentDivisor = 1;\n        while(currentDivisor\
    \ <= n) {\n            if(n % currentDivisor == 0) {\n                largestDivisor\
    \ = currentDivisor;\n            }\n            currentDivisor++;\n        }\n\
    \        return largestDivisor;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwmts6ck.java:24)\n"
  stdout: ''
  timestamp: 1659792284
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n    \
    \            long divisor = i;\n                while (n % divisor == 0) {\n \
    \                   divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwmq52607.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n    \
    \            long divisor = i;\n                while (n % divisor == 0) {\n \
    \                   divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5jubowdv.java:28)\n"
  stdout: ''
  timestamp: 1659792284
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        long divisor = Long.MIN_VALUE;\n        for (long i = 1; i < n; i++)\
    \ {\n            if (n % i == 0) {\n                divisor = i;\n           \
    \     if (maxDivisor < divisor) {\n                    maxDivisor = divisor;\n\
    \                }\n            }\n        }\n        return maxDivisor;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792284
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n\
    \                largestDivisor = i;\n            }\n        }\n        return\
    \ largestDivisor;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (divisor < n / i) {\n   \
    \                 divisor++;\n                }\n                if (divisor >\
    \ maxDivisor) {\n                    maxDivisor = divisor;\n                }\n\
    \            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp63ggmnkg.java:28)\n"
  stdout: ''
  timestamp: 1659792284
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        long maxDividend = 1;\n        for (long i = 1; i < n; i++) {\n     \
    \       if (n % i == 0) {\n                long divisor = i;\n               \
    \ long dividend = n;\n                while (dividend % divisor == 0) {\n    \
    \                divisor++;\n                }\n                if (divisor >\
    \ maxDivisor) {\n                    maxDivisor = divisor;\n                 \
    \   maxDividend = dividend;\n                }\n            }\n        }\n   \
    \     return maxDividend;\n    }\n    public static void main(String[] args) {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp67urpen0.java:31)\n"
  stdout: ''
  timestamp: 1659792284
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        long currentDivisor = 1;\n        for(long i = 1; i <= n; i++) {\n  \
    \          currentDivisor *= i;\n            if(currentDivisor % 2 == 0) {\n \
    \               maxDivisor = currentDivisor;\n            }\n        }\n     \
    \   return maxDivisor;\n    }\n    public static void main(String[] args) {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcnu3x_cg.java:24)\n"
  stdout: ''
  timestamp: 1659792284
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           maxDivisor = i;\n            }\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = n;\n\
    \        long divisor = 1;\n        while (divisor < n) {\n            if (n %\
    \ divisor == 0) {\n                maxDivisor = divisor;\n            }\n    \
    \        divisor++;\n        }\n        return maxDivisor;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792284
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        long currentDivisor = 1;\n        long currentDivisorRemainder = 0;\n\
    \        long currentDivisorDivisor = 1;\n        long currentDivisorDivisorRemainder\
    \ = 0;\n        long currentDivisorDivisorDivisor = 1;\n        long currentDivisorDivisorDivisorRemainder\
    \ = 0;\n        long currentDivisorDivisorDivisorDivisor = 1;\n        long currentDivisorDivisorDivisorDivisorRemainder\
    \ = 0;\n        long currentDivisorDivisorDivisorDivisorDivisor = 1;\n       \
    \ long currentDivisorDivisorDivisorDivisorRemainder = 0;\n        long currentDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n        long currentDivisorDivisorDivisorRemainder = 0;\n        long\
    \ currentDivisorDivisorDivisorDivisorDivisor = 1;\n        long currentDivisorDivisorRemainder\
    \ = 0;\n        long currentDivisorDivisorDivisorDivisor = 1;\n        long currentDivisorDivisorRemainder\
    \ = 0;\n        long currentDivisorDivisorDivisor = 1;\n        long currentDivisorRemainder\
    \ = 0;\n        long currentDivisorDivisor = 1;\n        long currentDivisorRemainder\
    \ = 0;\n        long currentDivisorDivisor = 1;\n        long currentDivisorRemainder\
    \ = 0;\n        long currentDivisorDivisor = 1;\n        long currentDivisorRemainder\
    \ = 0;\n        long currentDivisorDivisor = 1;\n        long currentDivisorRemainder\
    \ = 0;\n        long currentDivisorDivisor = 1;\n        long currentDivisorRemainder\
    \ = 0;\n        long currentDivisorDivisor = 1;\n        long currentDivisorRemainder\
    \ = 0;\n        long currentDivisorDivisor = 1;\n        long currentDivisorRemainder\
    \ = 0;\n        long currentDivisorDivisor = 1;\n        long currentDivisorRemainder\
    \ = 0;\n        long currentDivisorDivisor = 1;\n        long currentDivisorRemainder\
    \ = 0;\n        long currentDivisorDivisor = 1;\n        long currentDivisorRemainder\
    \ = 0;\n        long currentDivisorDivisor = 1;\n        long currentDivisorRemainder\
    \ = 0;\n        long currentDivisorDivisor = 1;\n        long currentDivisorRemainder\
    \ = 0;\n        long currentDivisorDivisor = 1;\n        long currentDivisorRemainder\
    \ = 0;\n        long currentDivisorDivisor = 1;\n        long currentDivisorRemainder\
    \ = 0;\n        long currentDivisorDivisor = 1;\n        long currentDivisorRemainder\
    \ = 0;\n        long currentDivisorDivisor = 1;\n        long currentDivisorRemainder\
    \ = 0;\n        \n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplt6g8tg2.java:23: error: variable currentDivisorDivisorDivisorDivisorRemainder\
    \ is already defined in method largestDivisor(long)\n        long currentDivisorDivisorDivisorDivisorRemainder\
    \ = 0;\n             ^\n/tmp/tmplt6g8tg2.java:24: error: variable currentDivisorDivisorDivisorDivisorDivisor\
    \ is already defined in method largestDivisor(long)\n        long currentDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n             ^\n/tmp/tmplt6g8tg2.java:25: error: variable currentDivisorDivisorDivisorRemainder\
    \ is already defined in method largestDivisor(long)\n        long currentDivisorDivisorDivisorRemainder\
    \ = 0;\n             ^\n/tmp/tmplt6g8tg2.java:26: error: variable currentDivisorDivisorDivisorDivisorDivisor\
    \ is already defined in method largestDivisor(long)\n        long currentDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n             ^\n/tmp/tmplt6g8tg2.java:27: error: variable currentDivisorDivisorRemainder\
    \ is already defined in method largestDivisor(long)\n        long currentDivisorDivisorRemainder\
    \ = 0;\n             ^\n/tmp/tmplt6g8tg2.java:28: error: variable currentDivisorDivisorDivisorDivisor\
    \ is already defined in method largestDivisor(long)\n        long currentDivisorDivisorDivisorDivisor\
    \ = 1;\n             ^\n/tmp/tmplt6g8tg2.java:29: error: variable currentDivisorDivisorRemainder\
    \ is already defined in method largestDivisor(long)\n        long currentDivisorDivisorRemainder\
    \ = 0;\n             ^\n/tmp/tmplt6g8tg2.java:30: error: variable currentDivisorDivisorDivisor\
    \ is already defined in method largestDivisor(long)\n        long currentDivisorDivisorDivisor\
    \ = 1;\n             ^\n/tmp/tmplt6g8tg2.java:31: error: variable currentDivisorRemainder\
    \ is already defined in method largestDivisor(long)\n        long currentDivisorRemainder\
    \ = 0;\n             ^\n/tmp/tmplt6g8tg2.java:32: error: variable currentDivisorDivisor\
    \ is already defined in method largestDivisor(long)\n        long currentDivisorDivisor\
    \ = 1;\n             ^\n/tmp/tmplt6g8tg2.java:33: error: variable currentDivisorRemainder\
    \ is already defined in method largestDivisor(long"
  stdout: ''
  timestamp: 1659792284
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n\
    \                largestDivisor = i;\n            }\n        }\n        return\
    \ largestDivisor;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long divisor = 2; divisor <= n; divisor++) {\n            if (n\
    \ % divisor == 0) {\n                maxDivisor = divisor;\n                break;\n\
    \            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmmqnqt5y.java:23)\n"
  stdout: ''
  timestamp: 1659792284
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n\
    \                largestDivisor = i;\n                break;\n            }\n\
    \        }\n        return largestDivisor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyqtj_bes.java:25)\n"
  stdout: ''
  timestamp: 1659792284
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        long currentDivisor = 1;\n        while (currentDivisor <= n) {\n   \
    \         if (n % currentDivisor == 0) {\n                maxDivisor = Math.max(maxDivisor,\
    \ currentDivisor);\n            }\n            currentDivisor++;\n        }\n\
    \        return maxDivisor;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1gm21g6f.java:24)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        long currentDivisor = 1;\n        long currentNumber = n;\n        while\
    \ (currentDivisor <= n) {\n            if (currentNumber % currentDivisor == 0)\
    \ {\n                currentDivisor++;\n            } else {\n               \
    \ currentDivisor = 1;\n            }\n            currentNumber--;\n        }\n\
    \        return maxDivisor;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659792290
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = n;\n\
    \        long divisor = 1;\n        while (divisor < n) {\n            if (n %\
    \ divisor == 0) {\n                maxDivisor = divisor;\n            }\n    \
    \        divisor++;\n        }\n        return maxDivisor;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792284
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ 0;\n        long currentDivisor = 1;\n        long currentNum = 1;\n       \
    \ while(currentDivisor <= n) {\n            currentDivisor *= currentNum;\n  \
    \          currentNum++;\n            if(currentDivisor > n) {\n             \
    \   currentDivisor = n;\n            }\n            largestDivisor = currentDivisor;\n\
    \        }\n        return largestDivisor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659792291
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = n;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           maxDivisor = i;\n            }\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792284
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        for (long i = 1; i < n; i++) {\n            if (n %\
    \ i == 0) {\n                long divisor = i;\n                while (divisor\
    \ < n && n % divisor == 0) {\n                    divisor++;\n               \
    \ }\n                if (divisor > largestDivisor) {\n                    largestDivisor\
    \ = divisor;\n                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxfqhnj4k.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        for (long i = 1; i < n; i++) {\n            if (n %\
    \ i == 0) {\n                long divisor = i;\n                while (divisor\
    \ < n && n % divisor == 0) {\n                    divisor++;\n               \
    \ }\n                if (divisor > largestDivisor) {\n                    largestDivisor\
    \ = divisor;\n                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxfqhnj4k.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        for (long i = 2; i <= n; i++) {\n            if (n\
    \ % i == 0) {\n                largestDivisor = i;\n            }\n        }\n\
    \        return largestDivisor;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx3nu8ju0.java:22)\n"
  stdout: ''
  timestamp: 1659792286
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = n;\n\
    \        long currentDivisor = 1;\n        while (currentDivisor <= maxDivisor)\
    \ {\n            if (n % currentDivisor == 0) {\n                maxDivisor =\
    \ currentDivisor;\n            }\n            currentDivisor++;\n        }\n \
    \       return maxDivisor;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw81f9_ar.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n\
    \                maxDivisor = i;\n            }\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo7cr2s8y.java:22)\n"
  stdout: ''
  timestamp: 1659792286
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (n % divisor == 0) {\n  \
    \                  divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdd96mxt7.java:28)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (n % divisor == 0) {\n  \
    \                  divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdd96mxt7.java:28)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        long currentDivisor = 1;\n        long currentNumber = n;\n        while\
    \ (currentNumber != 0) {\n            if (currentNumber % 2 == 0) {\n        \
    \        currentDivisor *= 2;\n            }\n            currentNumber /= 2;\n\
    \            if (currentDivisor > maxDivisor) {\n                maxDivisor =\
    \ currentDivisor;\n            }\n        }\n        return maxDivisor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp61yf0a8b.java:30)\n"
  stdout: ''
  timestamp: 1659792286
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        long currentDivisor = 1;\n        long currentNumber = n;\n        while\
    \ (currentNumber != 0) {\n            currentDivisor *= currentNumber;\n     \
    \       currentNumber /= 2;\n            if (currentDivisor > maxDivisor) {\n\
    \                maxDivisor = currentDivisor;\n            }\n        }\n    \
    \    return maxDivisor;\n    }\n    public static void main(String[] args) {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgs2furvw.java:26)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        long currentDivisor = 1;\n        long currentNumber = n;\n        while\
    \ (currentNumber != 0) {\n            currentDivisor *= currentNumber;\n     \
    \       currentNumber = currentNumber / 2;\n            if (currentDivisor > maxDivisor)\
    \ {\n                maxDivisor = currentDivisor;\n            }\n        }\n\
    \        return maxDivisor;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr2c1w2d8.java:26)\n"
  stdout: ''
  timestamp: 1659792286
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           maxDivisor = i;\n            }\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        for (long i = 1; i < n; i++) {\n            if (n %\
    \ i == 0) {\n                long divisor = i;\n                while (n % divisor\
    \ == 0) {\n                    divisor++;\n                }\n               \
    \ if (divisor > largestDivisor) {\n                    largestDivisor = divisor;\n\
    \                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg6ds9v1u.java:28)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        long currentDivisor = 1;\n        while (currentDivisor <= n) {\n   \
    \         if (n % currentDivisor == 0) {\n                maxDivisor = Math.max(maxDivisor,\
    \ currentDivisor);\n            }\n            currentDivisor++;\n        }\n\
    \        return maxDivisor;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1gm21g6f.java:24)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        long currentDivisor = 1;\n        long currentNum = 1;\n        while\
    \ (currentDivisor <= n) {\n            if (currentDivisor % 2 == 0) {\n      \
    \          currentNum = currentNum * currentDivisor;\n            }\n        \
    \    currentDivisor++;\n            if (currentDivisor > n) {\n              \
    \  break;\n            }\n        }\n        maxDivisor = currentNum;\n      \
    \  return maxDivisor;\n    }\n    public static void main(String[] args) {\n \
    \   assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1bi5wh3h.java:29)\n"
  stdout: ''
  timestamp: 1659792286
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n\
    \                largestDivisor = i;\n            }\n        }\n        return\
    \ largestDivisor;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxwu1q9fw.java:22)\n"
  stdout: ''
  timestamp: 1659792285
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = n;\n\
    \        long divisor = 1;\n        while (divisor <= maxDivisor) {\n        \
    \    if (n % divisor == 0) {\n                maxDivisor = divisor;\n        \
    \    }\n            divisor++;\n        }\n        return maxDivisor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps8oj4j43.java:26)\n"
  stdout: ''
  timestamp: 1659792284
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        long currentDivisor = 1;\n        long currentNumber = n;\n        while\
    \ (currentNumber != 0) {\n            currentDivisor *= currentNumber;\n     \
    \       currentNumber /= 2;\n            if (currentDivisor > maxDivisor) {\n\
    \                maxDivisor = currentDivisor;\n            }\n        }\n    \
    \    return maxDivisor;\n    }\n    public static void main(String[] args) {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuzdx_jbu.java:26)\n"
  stdout: ''
  timestamp: 1659792286
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        long divisor = Long.MIN_VALUE;\n        for (long i = 1; i <= n; i++)\
    \ {\n            if (n % i == 0) {\n                divisor = i;\n           \
    \     if (maxDivisor < divisor) {\n                    maxDivisor = divisor;\n\
    \                }\n            }\n        }\n        return maxDivisor;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6vbe72di.java:26)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n    \
    \            maxDivisor = i;\n            }\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk_nh6ug1.java:22)\n"
  stdout: ''
  timestamp: 1659792286
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long divisor = 2; divisor <= n; divisor++) {\n            if (n\
    \ % divisor == 0) {\n                maxDivisor = Math.max(maxDivisor, divisor);\n\
    \            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpegc8feyz.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (n % divisor == 0) {\n  \
    \                  divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdd96mxt7.java:28)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n    \
    \            maxDivisor = i;\n            }\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu575brfk.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ 0;\n        long divisor = 1;\n        while (divisor <= n) {\n            if\
    \ (n % divisor == 0) {\n                largestDivisor = divisor;\n          \
    \  }\n            divisor++;\n        }\n        return largestDivisor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkij1tun0.java:24)\n"
  stdout: ''
  timestamp: 1659792284
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (n % divisor == 0) {\n  \
    \                  divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdd96mxt7.java:28)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MAX_VALUE;\n        long divisor = Long.MAX_VALUE;\n        for(long i\
    \ = 1; i < n; i++) {\n            divisor = i;\n            while(divisor > 0\
    \ && n % divisor == 0) {\n                divisor--;\n            }\n        \
    \    if(divisor > largestDivisor) {\n                largestDivisor = divisor;\n\
    \            }\n        }\n        return largestDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp24npiuqf.java:27)\n"
  stdout: ''
  timestamp: 1659792286
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        for (long i = 1; i < n; i++) {\n            if (n %\
    \ i == 0) {\n                long divisor = i;\n                while (n % divisor\
    \ == 0) {\n                    divisor++;\n                }\n               \
    \ if (divisor > largestDivisor) {\n                    largestDivisor = divisor;\n\
    \                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg6ds9v1u.java:28)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        long divisor = Long.MIN_VALUE;\n        long currentDivisor\
    \ = 1;\n        while (currentDivisor <= n) {\n            divisor = currentDivisor;\n\
    \            currentDivisor *= currentDivisor;\n            if (currentDivisor\
    \ > largestDivisor) {\n                largestDivisor = divisor;\n           \
    \ }\n        }\n        return largestDivisor;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659792291
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        for (long i = 1; i < n; i++) {\n            if (n %\
    \ i == 0) {\n                long divisor = i;\n                while (n % divisor\
    \ == 0) {\n                    divisor++;\n                }\n               \
    \ if (divisor > largestDivisor) {\n                    largestDivisor = divisor;\n\
    \                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg6ds9v1u.java:28)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        long currentDivisor = 1;\n        long currentNumber = n;\n        while\
    \ (currentDivisor <= n) {\n            currentDivisor *= currentNumber;\n    \
    \        currentNumber /= currentDivisor;\n            maxDivisor = Math.max(maxDivisor,\
    \ currentDivisor);\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.largestDivisor(tmpujjqkmv7.java:18)\n\tat Problem.main(tmpujjqkmv7.java:24)\n"
  stdout: ''
  timestamp: 1659792286
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = n;\n\
    \        long currentDivisor = 1;\n        while (currentDivisor <= maxDivisor)\
    \ {\n            if (n % currentDivisor == 0) {\n                maxDivisor =\
    \ currentDivisor;\n            }\n            currentDivisor++;\n        }\n \
    \       return maxDivisor;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw81f9_ar.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n    \
    \            long divisor = i;\n                while (n % divisor == 0) {\n \
    \                   divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwmq52607.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        long currentDivisor = 1;\n        long currentNum = 1;\n        while(currentDivisor\
    \ <= n) {\n            currentNum = currentDivisor * currentDivisor;\n       \
    \     if(currentNum > n) {\n                break;\n            }\n          \
    \  currentDivisor++;\n            maxDivisor = currentNum;\n        }\n      \
    \  return maxDivisor;\n    }\n    public static void main(String[] args) {\n \
    \   assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0q0msy6x.java:28)\n"
  stdout: ''
  timestamp: 1659792286
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        long currentDivisor = 1;\n        long currentDivisorFactor\
    \ = 1;\n        long currentDivisorFactorFactor = 1;\n        long currentDivisorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactor = 1;\n        long\
    \ currentDivisorFactorFactorFactorFactorFactor = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long currentDi\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp39jmzxrg.java:45: error: ';' expected\n        long currentDi\n\
    \                      ^\n1 error\n"
  stdout: ''
  timestamp: 1659792285
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = n;\n\
    \        long divisor = 1;\n        while (divisor <= maxDivisor) {\n        \
    \    if (n % divisor == 0) {\n                maxDivisor = divisor;\n        \
    \    }\n            divisor++;\n        }\n        return maxDivisor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps8oj4j43.java:26)\n"
  stdout: ''
  timestamp: 1659792284
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n\
    \                largestDivisor = i;\n            }\n        }\n        return\
    \ largestDivisor;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792193
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           maxDivisor = i;\n            }\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n    \
    \            maxDivisor = i;\n            }\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu575brfk.java:22)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n\
    \                largestDivisor = i;\n            }\n        }\n        return\
    \ largestDivisor;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        for (long i = 2; i <= n / 2; i++) {\n            if\
    \ (n % i == 0) {\n                largestDivisor = i;\n            }\n       \
    \ }\n        return largestDivisor;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzbancmxg.java:22)\n"
  stdout: ''
  timestamp: 1659792286
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (n % divisor == 0) {\n  \
    \                  divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdd96mxt7.java:28)\n"
  stdout: ''
  timestamp: 1659792282
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (n % divisor == 0) {\n  \
    \                  divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0jd6_f2.java:28)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           maxDivisor = i;\n            }\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           maxDivisor = i;\n            }\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792281
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        long currentDivisor = 1;\n        long currentNumber = n;\n        while\
    \ (currentDivisor <= n) {\n            if (currentNumber % currentDivisor == 0)\
    \ {\n                currentDivisor++;\n            } else {\n               \
    \ currentDivisor = 1;\n            }\n            currentNumber = currentNumber\
    \ / currentDivisor;\n            maxDivisor = currentDivisor;\n        }\n   \
    \     return maxDivisor;\n    }\n    public static void main(String[] args) {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf5ywu3_7.java:28)\n"
  stdout: ''
  timestamp: 1659792286
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        for (long i = 1; i < n; i++) {\n            if (n %\
    \ i == 0) {\n                long divisor = i;\n                while (divisor\
    \ < n && n % divisor == 0) {\n                    divisor++;\n               \
    \ }\n                if (divisor > largestDivisor) {\n                    largestDivisor\
    \ = divisor;\n                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxfqhnj4k.java:28)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n\
    \                largestDivisor = i;\n            }\n        }\n        return\
    \ largestDivisor;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792193
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        long currentDivisor = 1;\n        for(long i = 1; i <= n; i++) {\n  \
    \          currentDivisor = i;\n            while(currentDivisor % 2 == 0) {\n\
    \                currentDivisor = currentDivisor / 2;\n            }\n       \
    \     if(currentDivisor > maxDivisor) {\n                maxDivisor = currentDivisor;\n\
    \            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7tlhma1e.java:27)\n"
  stdout: ''
  timestamp: 1659792286
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long divisor = 2; divisor <= n; divisor++) {\n            if (n\
    \ % divisor == 0) {\n                long divisorDivisor = n / divisor;\n    \
    \            if (divisorDivisor > maxDivisor) {\n                    maxDivisor\
    \ = divisorDivisor;\n                }\n            }\n        }\n        return\
    \ maxDivisor;\n    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792286
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           maxDivisor = i;\n            }\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792281
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 1;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           maxDivisor = i;\n            }\n        }\n        return maxDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ Long.MIN_VALUE;\n        for (long i = 1; i < n; i++) {\n            if (n %\
    \ i == 0) {\n                long divisor = i;\n                while (divisor\
    \ < n && n % divisor == 0) {\n                    divisor++;\n               \
    \ }\n                if (divisor > largestDivisor) {\n                    largestDivisor\
    \ = divisor;\n                }\n            }\n        }\n        return largestDivisor;\n\
    \    }\n    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxfqhnj4k.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (divisor < n && n % divisor\
    \ == 0) {\n                    divisor++;\n                }\n               \
    \ if (divisor > maxDivisor) {\n                    maxDivisor = divisor;\n   \
    \             }\n            }\n        }\n        return maxDivisor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdyhthm5l.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 1; i < n; i++) {\n            if (n % i == 0) {\n     \
    \           long divisor = i;\n                while (n % divisor == 0) {\n  \
    \                  divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0jd6_f2.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long largestDivisor =\
    \ 0;\n        long divisor = 1;\n        while (divisor <= n) {\n            if\
    \ (n % divisor == 0) {\n                largestDivisor = divisor;\n          \
    \  }\n            divisor++;\n        }\n        return largestDivisor;\n    }\n\
    \    public static void main(String[] args) {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkij1tun0.java:24)\n"
  stdout: ''
  timestamp: 1659792284
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = n;\n\
    \        long currentDivisor = 1;\n        while (currentDivisor <= maxDivisor)\
    \ {\n            if (n % currentDivisor == 0) {\n                maxDivisor =\
    \ currentDivisor;\n            }\n            currentDivisor++;\n        }\n \
    \       return maxDivisor;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw81f9_ar.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        long currentDivisor = 1;\n        long currentNumber = n;\n        while\
    \ (currentDivisor < n) {\n            currentDivisor *= currentNumber;\n     \
    \       currentNumber--;\n            if (currentDivisor > maxDivisor) {\n   \
    \             maxDivisor = currentDivisor;\n            }\n        }\n       \
    \ return maxDivisor;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9ffm471z.java:26)\n"
  stdout: ''
  timestamp: 1659792286
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = Long.MIN_VALUE;\n\
    \        for (long i = 2; i <= n; i++) {\n            if (n % i == 0) {\n    \
    \            long divisor = i;\n                while (n % divisor == 0) {\n \
    \                   divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwmq52607.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n  \
    \  public static long largestDivisor(long n) {\n        long maxDivisor = 0;\n\
    \        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n    \
    \            long divisor = i;\n                while (n % divisor == 0) {\n \
    \                   divisor++;\n                }\n                if (divisor\
    \ > maxDivisor) {\n                    maxDivisor = divisor;\n               \
    \ }\n            }\n        }\n        return maxDivisor;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpysb27u00.java:28)\n"
  stdout: ''
  timestamp: 1659792286

language: java
name: HumanEval_40_triples_sum_to_zero
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n        \
    \    if(i!=0) {\n                set.add(new Long(i));\n            }\n      \
    \  }\n        return set.size() == 3;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt3daehqn.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n       \
    \     if (!set.contains(i)) {\n                set.add(i);\n            }\n  \
    \      }\n        return set.size() == 3;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnq77gj84.java:37)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for (Long i : l) {\n            if (i\
    \ == sum) {\n                count++;\n            }\n        }\n        return\
    \ count == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgggphchw.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n   \
    \         set.add(Math.abs(i));\n        }\n        return set.size() == 3;\n\
    \    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpewoaeh8f.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n       \
    \     set.add(Math.abs(i));\n        }\n        return set.size() == 3;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo7__vtl.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for (Long i : l) {\n            if (i\
    \ == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjntmqrb7.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for (Long i : l) {\n            if (i\
    \ == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjntmqrb7.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for (Long i : l)\n         \
    \   set.add(l.stream().filter(x -> x == i).count());\n        return set.size()\
    \ == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgjxbytvm.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(Long i : l) {\n            sum += i;\n    \
    \    }\n        return l.stream().distinct().filter(i -> sum == 0).count() ==\
    \ 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprrj9bzrg.java:27: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n        return l.stream().distinct().filter(i\
    \ -> sum == 0).count() == 3;\n                                               \
    \  ^\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(Long i : l) {\n            sum += i;\n    \
    \    }\n        for(int i = 0; i < l.size(); i++) {\n            for(int j = i\
    \ + 1; j < l.size(); j++) {\n                for(int k = j + 1; k < l.size();\
    \ k++) {\n                    if(l.get(i) + l.get(j) + l.get(k) == 0) {\n    \
    \                    return true;\n                    }\n                }\n\
    \            }\n        }\n        return false;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        return l.stream().distinct().filter(i -> i == sum).count() ==\
    \ 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmporp__4e5.java:27: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n        return l.stream().distinct().filter(i\
    \ -> i == sum).count() == 3;\n                                               \
    \       ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(Long i : l) {\n            sum += i;\n    \
    \    }\n        long count = 0;\n        for(Long i : l) {\n            count\
    \ += i;\n        }\n        return sum == 0 && count == 3;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7qwyitmm.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<Long>();\n        for(Long i : l) {\n    \
    \        if(i == 0) set.add(0l);\n            else if(i == -1l) set.add(-1l);\n\
    \            else if(i == -2l) set.add(-2l);\n            else if(i == -3l) set.add(-3l);\n\
    \            else if(i == -4l) set.add(-4l);\n            else if(i == -5l) set.add(-5l);\n\
    \            else if(i == -6l) set.add(-6l);\n            else if(i == -7l) set.add(-7l);\n\
    \            else if(i == -8l) set.add(-8l);\n            else if(i == 9l) set.add(9l);\n\
    \            else if(i == 10l) set.add(10l);\n            else if(i == 11l) set.add(11l);\n\
    \            else if(i == 12l) set.add(12l);\n            else if(i == 13l) set.add(13l);\n\
    \            else if(i == 14l) set.add(14l);\n            else if(i == 15l) set.add(15l);\n\
    \            else if(i == 16l) set.add(16l);\n            else if(i == 17l) set.add(17l);\n\
    \            else if(i == 18l) set.add(18l);\n            else if(i == 19l) set.add(19l);\n\
    \            else if(i == 20l) set.add(20l);\n            else if(i == 21l) set.add(21l);\n\
    \            else if(i == 22l) set.add(22l);\n            else if(i == 23l) set.add(23l);\n\
    \            else if(i == 24l) set.add(24l);\n            else if(i == 25l) set.add(25l);\n\
    \            else if(i == 26l) set.add(26l);\n            else if(i == 27l) set.add(27l);\n\
    \            else if(i == 28l) set.add(28l);\n            else if(i == 29l) set.add(29l);\n\
    \            else if(i == 30l) set.add(30l);\n            else if(i == 31l) set.add(31l);\n\
    \            else if(i == 32l) set.add(32l);\n            else if(i == 33l) set.add(33l);\n\
    \            else if(i == 34l) set.add(34l);\n            else if(i == 35l) set.add(35l);\n\
    \            else if(i == 36l) set.add(36l);\n            else if(i == 37l) set.add(37l);\n\
    \            else if(i == 38l) set.add(38l);\n            else if(i == 39l) set.add(39l);\n\
    \            else if(i == 40l) set.add(40l);\n            else if(i == 41l) set.add(41\n\
    \    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppju4pxj5.java:66: error: ')' expected\n            else if(i ==\
    \ 41l) set.add(41\n                                        ^\n/tmp/tmppju4pxj5.java:68:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n    ^\n/tmp/tmppju4pxj5.java:68: error: ';' expected\n    public static void\
    \ main(String[] args) {\n          ^\n/tmp/tmppju4pxj5.java:68: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n        \
    \          ^\n/tmp/tmppju4pxj5.java:68: error: ';' expected\n    public static\
    \ void main(String[] args) {\n                           ^\n/tmp/tmppju4pxj5.java:68:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmppju4pxj5.java:80: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<Long>();\n        for (Long i : l)\n     \
    \       set.add(l.stream().filter(x -> x == i).count());\n        return set.size()\
    \ == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpza9pxu2k.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(long i : l) {\n            sum += i;\n    \
    \    }\n        long count = 0;\n        for(long i : l) {\n            count\
    \ += i;\n            if(count == sum) {\n                return true;\n      \
    \      }\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj3z91hkt.java:37)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for (Long i : l) {\n            if (i\
    \ == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjntmqrb7.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(Long i : l) {\n            sum += i;\n    \
    \    }\n        long count = 0;\n        for(Long i : l) {\n            count\
    \ += i;\n            if(sum == 0) {\n                return false;\n         \
    \   }\n        }\n        return count == 3;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv44ia926.java:42)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp22btv_zp.java:35)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        long count = 0;\n        for (long i : l) {\n \
    \           sum += i;\n            count++;\n        }\n        if (count == 3)\
    \ {\n            return true;\n        }\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd7ydfk7q.java:37)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<Long>();\n        for(Long i : l) {\n    \
    \        if(i!=0) {\n                set.add(new Long(i));\n            }\n  \
    \      }\n        return set.size() == 3;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_22hdbj2.java:32)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(long i : l) {\n            sum += i;\n    \
    \    }\n        long count = 0;\n        for(long i : l) {\n            count\
    \ += i;\n            if(sum == count) {\n                return true;\n      \
    \      }\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp47ppbslk.java:37)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<Long>();\n        for(Long i : l)\n      \
    \      if(!set.contains(i))\n                set.add(i);\n        return set.size()\
    \ == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfbwzpjjv.java:35)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp22btv_zp.java:35)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for (Long i : l) {\n            if (i\
    \ == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjntmqrb7.java:38)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(long i : l) {\n            sum += i;\n    \
    \    }\n        for(int i = 0; i < l.size(); i++) {\n            for(int j = i+1;\
    \ j < l.size(); j++) {\n                for(int k = j+1; k < l.size(); k++) {\n\
    \                    if(l.get(i) + l.get(j) + l.get(k) == 0) {\n             \
    \           return true;\n                    }\n                }\n         \
    \   }\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp22btv_zp.java:35)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(Long i : l) {\n            sum += i;\n    \
    \    }\n        long count = 0;\n        for(Long i : l) {\n            count\
    \ += i;\n            if(sum == 0) {\n                return false;\n         \
    \   }\n        }\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzzx3op1e.java:37)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        return l.stream().distinct().count() == 3 && sum == 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9o6g9065.java:32)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        long count = 0;\n        for (long i : l) {\n \
    \           sum += i;\n            count++;\n        }\n        if (count == 3)\
    \ {\n            return true;\n        }\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd7ydfk7q.java:37)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        return l.stream().distinct().filter(i -> i == sum).count() ==\
    \ 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmporp__4e5.java:27: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n        return l.stream().distinct().filter(i\
    \ -> i == sum).count() == 3;\n                                               \
    \       ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        long count = 0;\n        for (long i : l) {\n \
    \           sum += i;\n            if (sum == 0) {\n                count++;\n\
    \            }\n        }\n        return count == 3;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwgzykfqf.java:36)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n        \
    \    if(i == 0) continue;\n            set.add(i - 1);\n        }\n        return\
    \ set.size() == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphhz9mvj7.java:31)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        return l.stream().distinct().count() == 3 && sum == 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9o6g9065.java:32)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp22btv_zp.java:35)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n        \
    \    if(i!=0) {\n                set.add(Math.abs(i));\n            }\n      \
    \  }\n        return set.size() == 3;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxf9iua3d.java:32)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n        \
    \    if(i == 0) continue;\n            set.add(Math.abs(i));\n        }\n    \
    \    return set.size() == 3;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpstsr1x0t.java:31)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<Long>();\n        for(Long i : l) {\n    \
    \        if(i == 0) return false;\n            set.add(Math.abs(i));\n       \
    \ }\n        return set.size() == 3;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8sdkvia6.java:32)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (long i : l) {\n            sum += i;\n   \
    \     }\n        return l.stream().distinct().filter(i -> i == sum).count() ==\
    \ 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvqte7x92.java:27: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n        return l.stream().distinct().filter(i\
    \ -> i == sum).count() == 3;\n                                               \
    \       ^\n1 error\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n       \
    \     if (!set.contains(i)) {\n                set.add(i);\n            }\n  \
    \      }\n        return set.size() == 3;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnq77gj84.java:37)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<Long>();\n        for(Long i : l) {\n    \
    \        if(i!=0) {\n                set.add(Math.abs(i));\n            }\n  \
    \      }\n        return set.size() == 3;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe78j_aul.java:32)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(Long i : l) {\n            sum += i;\n    \
    \    }\n        long count = 0;\n        for(Long i : l) {\n            count\
    \ += i;\n            if(sum == count) {\n                return true;\n      \
    \      }\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfomjn6f0.java:37)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(Long i : l) {\n            sum += i;\n    \
    \    }\n        long count = 0;\n        for(Long i : l) {\n            count\
    \ += i;\n            if(sum == 0) {\n                return false;\n         \
    \   }\n        }\n        return count == 3;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv44ia926.java:42)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for (Long i : l) {\n            if (i\
    \ == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjntmqrb7.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        long count = 0;\n        for (long i : l) {\n \
    \           sum += i;\n            count++;\n        }\n        if (count == 3)\
    \ {\n            return true;\n        }\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd7ydfk7q.java:37)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for (Long i : l) {\n            if (i\
    \ == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjntmqrb7.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n       \
    \     set.add(Math.abs(i));\n        }\n        return set.size() == 3;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo7__vtl.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(Long i : l) {\n            sum += i;\n    \
    \    }\n        long count = 0;\n        for(Long i : l) {\n            count\
    \ += i;\n        }\n        return count == sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuxkc_k7z.java:34)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for (Long i : l)\n         \
    \   set.add(Math.abs(i));\n        return set.size() == 3;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb398s7lt.java:30)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        return l.stream().distinct().filter(i -> i == sum).count() ==\
    \ 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmporp__4e5.java:27: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n        return l.stream().distinct().filter(i\
    \ -> i == sum).count() == 3;\n                                               \
    \       ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for (Long i : l) {\n            if (i\
    \ == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjntmqrb7.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(Long i : l) {\n            sum += i;\n    \
    \    }\n        long count = 0;\n        for(Long i : l) {\n            count\
    \ += i;\n            if(sum == count) {\n                return true;\n      \
    \      }\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfomjn6f0.java:37)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for (long i : l) {\n            if (i\
    \ == sum) {\n                count++;\n            }\n        }\n        return\
    \ count == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph68qev8u.java:38)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(Long i : l) {\n            sum += i;\n    \
    \    }\n        long count = 0;\n        for(Long i : l) {\n            count\
    \ += i;\n            if(sum == count) {\n                return true;\n      \
    \      }\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfomjn6f0.java:37)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(long i : l) {\n            sum += i;\n    \
    \    }\n        long count = 0;\n        for(long i : l) {\n            count\
    \ += i;\n            if(sum == count) {\n                return true;\n      \
    \      }\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp47ppbslk.java:37)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<Long>();\n        for (Long i : l)\n     \
    \       set.add(Math.abs(i));\n        return set.size() == 3;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpteri2evm.java:30)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<Long>(l);\n        long sum = 0;\n       \
    \ for (Long i : set) {\n            sum += i;\n        }\n        return set.size()\
    \ == 3 && sum == 0;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplns3e4nb.java:33)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(long i : l) {\n            sum += i;\n    \
    \    }\n        boolean result = false;\n        if(sum == 0) {\n            result\
    \ = true;\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpplclkypy.java:36)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        return l.stream().distinct().filter(i -> sum - i == 0).count()\
    \ == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0t3aa5dj.java:27: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n        return l.stream().distinct().filter(i\
    \ -> sum - i == 0).count() == 3;\n                                           \
    \      ^\n1 error\n"
  stdout: ''
  timestamp: 1659799809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (long i : l) {\n            sum += i;\n   \
    \     }\n        return l.stream().distinct().filter(i -> i == sum).count() ==\
    \ 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvqte7x92.java:27: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n        return l.stream().distinct().filter(i\
    \ -> i == sum).count() == 3;\n                                               \
    \       ^\n1 error\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for (Long i : l) {\n            if (i\
    \ == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjntmqrb7.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        return l.stream().distinct().count() == 3 && sum == 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9o6g9065.java:32)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(Long i : l) {\n            sum += i;\n    \
    \    }\n        long count = 0;\n        for(Long i : l) {\n            count\
    \ += i;\n            if(sum == count) {\n                return true;\n      \
    \      }\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfomjn6f0.java:37)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(Long i : l) {\n            sum += i;\n    \
    \    }\n        boolean result = false;\n        for(Long i : l) {\n         \
    \   result += (i == sum);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr1l_qq52.java:29: error: bad operand types for binary operator\
    \ '+'\n            result += (i == sum);\n                   ^\n  first type:\
    \  boolean\n  second type: boolean\n1 error\n"
  stdout: ''
  timestamp: 1659799809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(long i : l) {\n            sum += i;\n    \
    \    }\n        long count = 0;\n        for(long i : l) {\n            count\
    \ += i;\n            if(count == sum) {\n                return true;\n      \
    \      }\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj3z91hkt.java:37)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        return l.stream().distinct().count() == 3 && sum == 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9o6g9065.java:32)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for (Long i : l) {\n            if (i\
    \ == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjntmqrb7.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0)\n            return true;\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnttjuse4.java:34)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(Long i : l) {\n            sum += i;\n    \
    \    }\n        boolean result = false;\n        for(Long i : l) {\n         \
    \   result += i == sum;\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi5x_ctt4.java:29: error: bad operand types for binary operator\
    \ '+'\n            result += i == sum;\n                   ^\n  first type:  boolean\n\
    \  second type: boolean\n1 error\n"
  stdout: ''
  timestamp: 1659799809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        boolean result = false;\n        if (sum == 0) {\n          \
    \  result = true;\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprhwjejd7.java:36)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (long i : l) {\n            sum += i;\n   \
    \     }\n        return l.stream().distinct().count() == 3 && sum == 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd10jcvh4.java:32)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n       \
    \     set.add(Math.abs(i));\n        }\n        return set.size() == 3;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo7__vtl.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for (Long i : l) {\n            if (sum\
    \ == i) {\n                count++;\n            }\n        }\n        return\
    \ count == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt4tdywre.java:38)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<Long>();\n        for(Long i : l) {\n    \
    \        if(i!=0) {\n                set.add(Math.abs(i));\n            }\n  \
    \      }\n        return set.size() == 3;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe78j_aul.java:32)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n        \
    \    if(i!=0) {\n                set.add(Math.abs(i));\n            }\n      \
    \  }\n        return set.size() == 3;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxf9iua3d.java:32)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp22btv_zp.java:35)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(Long i : l) {\n            sum += i;\n    \
    \    }\n        boolean result = false;\n        for(Long i : l) {\n         \
    \   if(i == sum) {\n                result = true;\n                break;\n \
    \           }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq869uewb.java:42)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n   \
    \         if (set.contains(i)) {\n                return false;\n            }\n\
    \            set.add(i);\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu2tb1a_9.java:33)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        long count = 0;\n        for (Long i : l) {\n \
    \           sum += i;\n            count++;\n        }\n        if (count == 3)\
    \ {\n            return true;\n        }\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjxr3gogh.java:37)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (long i : l) {\n            sum += i;\n   \
    \     }\n        return l.stream().distinct().count() == 3 && sum == 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd10jcvh4.java:32)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(Long i : l) {\n            sum += i;\n    \
    \    }\n        long count = 0;\n        for(Long i : l) {\n            count\
    \ += i;\n            if(sum == 0) {\n                return true;\n          \
    \  }\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdlkd_wdb.java:39)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<Long>(l);\n        Long sum = 0;\n       \
    \ for (Long i : l) {\n            sum += i;\n            if (set.contains(sum))\
    \ {\n                return true;\n            }\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp_qrgqq3.java:24: error: incompatible types: int cannot be converted\
    \ to Long\n        Long sum = 0;\n                   ^\n1 error\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n        \
    \    if(i == 0) return false;\n            set.add(Math.abs(i));\n        }\n\
    \        return set.size() == 3;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpua5yr3hy.java:32)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(Long i : l) {\n            sum += i;\n    \
    \    }\n        boolean result = false;\n        for(Long i : l) {\n         \
    \   result += i == sum;\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi5x_ctt4.java:29: error: bad operand types for binary operator\
    \ '+'\n            result += i == sum;\n                   ^\n  first type:  boolean\n\
    \  second type: boolean\n1 error\n"
  stdout: ''
  timestamp: 1659799809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for (Long i : l) {\n            if (i\
    \ == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjntmqrb7.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp22btv_zp.java:35)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for (Long i : l) {\n            if (i\
    \ == sum) {\n                count++;\n            }\n        }\n        return\
    \ count == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgggphchw.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(Long i : l) {\n            sum += i;\n    \
    \    }\n        long count = 0;\n        for(Long i : l) {\n            count\
    \ += i;\n            if(sum == 0) {\n                return false;\n         \
    \   }\n        }\n        return count == 3;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv44ia926.java:42)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(Long i : l) {\n            sum += i;\n    \
    \    }\n        boolean result = false;\n        for(Long i : l) {\n         \
    \   if(i == sum) {\n                result = true;\n                break;\n \
    \           }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq869uewb.java:42)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0)\n            return true;\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnttjuse4.java:34)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0)\n            return true;\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnttjuse4.java:34)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for (Long i : l) {\n            if (i\
    \ == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjntmqrb7.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        return l.stream().distinct().count() == 3 && sum == 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9o6g9065.java:32)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (long i : l) {\n            sum += i;\n   \
    \     }\n        return l.stream().distinct().filter(i -> i == sum).count() ==\
    \ 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvqte7x92.java:27: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n        return l.stream().distinct().filter(i\
    \ -> i == sum).count() == 3;\n                                               \
    \       ^\n1 error\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(Long i : l) {\n            sum += i;\n    \
    \    }\n        for(int i = 0; i < l.size(); i++) {\n            long j = i;\n\
    \            while(j > 0 && sum - l.get(j) == 0) {\n                j--;\n   \
    \         }\n            if(j > 0) {\n                return false;\n        \
    \    }\n        }\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph14hzsx_.java:29: error: incompatible types: possible lossy conversion\
    \ from long to int\n            while(j > 0 && sum - l.get(j) == 0) {\n      \
    \                                 ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659799809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for (Long i : l)\n         \
    \   set.add(Math.abs(i));\n        return set.size() == 3;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb398s7lt.java:30)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n        \
    \    if(i == 0) continue;\n            set.add(i - 1);\n        }\n        return\
    \ set.size() == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphhz9mvj7.java:31)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        return l.stream().distinct().count() == 3 && sum == 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9o6g9065.java:32)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for (Long i : l) {\n            if (i\
    \ == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjntmqrb7.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for (Long i : l) {\n            if (i\
    \ == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjntmqrb7.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0)\n            return true;\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnttjuse4.java:34)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n       \
    \     if (set.contains(i)) {\n                return false;\n            }\n \
    \           set.add(i);\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsrenuyb_.java:33)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<Long>(l);\n        long sum = 0;\n       \
    \ for (long i : set) {\n            sum += i;\n        }\n        return set.size()\
    \ == 3 && sum == 0;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1npznahe.java:33)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<Long>(l);\n        long sum = 0;\n       \
    \ for (long l : l) {\n            sum += l;\n        }\n        return set.size()\
    \ == 3 && sum == 0;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9l2jv888.java:25: error: variable l is already defined in method\
    \ triplesSumToZero(ArrayList<Long>)\n        for (long l : l) {\n            \
    \      ^\n1 error\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        return l.stream().distinct().count() == 3 && sum == 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9o6g9065.java:32)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n   \
    \         if (!set.contains(i)) {\n                set.add(i);\n            }\n\
    \        }\n        if (set.size() == 3) {\n            return true;\n       \
    \ }\n        return false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpodsng1ge.java:40)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0)\n            return true;\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnttjuse4.java:34)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        return l.stream().distinct().count() == 3 && sum == 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9o6g9065.java:32)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(long i : l) {\n            sum += i;\n    \
    \    }\n        long count = 0;\n        for(long i : l) {\n            count\
    \ += i;\n            if(sum == count) {\n                return true;\n      \
    \      }\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp47ppbslk.java:37)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        long sumOfTwo = 0;\n        long sumOfThree = 0;\n\
    \        for(Long i : l) {\n            sum += i;\n            sumOfTwo += i;\n\
    \            sumOfThree += i;\n        }\n        boolean result = false;\n  \
    \      if(sumOfTwo == sumOfThree && sumOfThree == sum) {\n            result =\
    \ true;\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu5e3nh74.java:38)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(Long i : l) {\n            sum += i;\n    \
    \    }\n        long count = 0;\n        for(Long i : l) {\n            count\
    \ += i;\n            if(sum == count) {\n                return true;\n      \
    \      }\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfomjn6f0.java:37)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for (Long i : l) {\n            if (i\
    \ == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjntmqrb7.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n        \
    \    if(i!=0) {\n                set.add(Math.abs(i));\n            }\n      \
    \  }\n        return set.size() == 3;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxf9iua3d.java:32)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(long i : l) {\n            sum += i;\n    \
    \    }\n        long count = 0;\n        for(long i : l) {\n            count\
    \ += i;\n            if(sum == count) {\n                return true;\n      \
    \      }\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp47ppbslk.java:37)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n       \
    \     set.add(Math.abs(i));\n        }\n        return set.size() == 3;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo7__vtl.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n        \
    \    if(i!=0) {\n                set.add(Math.abs(i));\n            }\n      \
    \  }\n        return set.size() == 3;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxf9iua3d.java:32)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        return l.stream().distinct().count() == 3 && sum == 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9o6g9065.java:32)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(long i : l) {\n            sum += i;\n    \
    \    }\n        long count = 0;\n        for(long i : l) {\n            count\
    \ += i;\n            if(sum == count) {\n                return true;\n      \
    \      }\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp47ppbslk.java:37)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n        \
    \    if(i == 0) continue;\n            set.add(i - 1);\n        }\n        return\
    \ set.size() == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphhz9mvj7.java:31)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<Long>();\n        for(Long i : l) {\n    \
    \        if(i!=0) {\n                set.add(Math.abs(i));\n            }\n  \
    \      }\n        return set.size() == 3;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe78j_aul.java:32)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n       \
    \     if (!set.contains(i)) {\n                set.add(i);\n            }\n  \
    \      }\n        return set.size() == 3;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnq77gj84.java:37)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for (Long i : l) {\n            if (i\
    \ == sum) {\n                count++;\n            }\n        }\n        return\
    \ count == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgggphchw.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n        \
    \    if(i == 0) set.add(0l);\n            if(i == 1) set.add(1l);\n          \
    \  if(i == 2) set.add(2l);\n        }\n        return set.size() == 3;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_mohnhli.java:34)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n       \
    \     set.add(Math.abs(i));\n        }\n        return set.size() == 3;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo7__vtl.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n        \
    \    if(i!=0) {\n                set.add(Math.abs(i));\n            }\n      \
    \  }\n        return set.size() == 3;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxf9iua3d.java:32)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n       \
    \     set.add(Math.abs(i));\n        }\n        return set.size() == 3;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo7__vtl.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0)\n            return true;\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnttjuse4.java:34)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for (Long i : l) {\n            if (i\
    \ == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjntmqrb7.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n        \
    \    if(i == 0) continue;\n            set.add(i - 1);\n        }\n        return\
    \ set.size() == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphhz9mvj7.java:31)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for (long i : l) {\n            if (i\
    \ == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2_fc0a62.java:38)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(Long i : l) {\n            sum += i;\n    \
    \    }\n        long count = 0;\n        for(Long i : l) {\n            count\
    \ += i;\n            if(sum == count) {\n                return true;\n      \
    \      }\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfomjn6f0.java:37)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n   \
    \         set.add(Math.abs(i));\n        }\n        return set.size() == 3;\n\
    \    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpewoaeh8f.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(Long i : l) {\n            sum += i;\n    \
    \    }\n        long count = 0;\n        for(Long i : l) {\n            count\
    \ += i;\n            if(sum == 0) {\n                return false;\n         \
    \   }\n        }\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzzx3op1e.java:37)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for(Long i : l)\n          \
    \  if(i!=0 && set.contains(i)) {\n                return false;\n            }\n\
    \            else\n                set.add(i);\n        return true;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphif24b9r.java:33)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        long count = 0;\n        for (long i : l) {\n \
    \           sum += i;\n            count++;\n        }\n        if (count == 3)\
    \ {\n            return true;\n        }\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd7ydfk7q.java:37)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        long count = 0;\n        for (Long i : l) {\n \
    \           sum += i;\n            count += 1;\n        }\n        if (count ==\
    \ 3) {\n            return true;\n        }\n        return false;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzgbwlm02.java:37)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for (Long i : l)\n         \
    \   set.add(Math.abs(i));\n        return set.size() == 3;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb398s7lt.java:30)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(Long i : l) {\n            sum += i;\n    \
    \    }\n        long count = 0;\n        for(Long i : l) {\n            count\
    \ += i;\n            if(sum == count) {\n                return true;\n      \
    \      }\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfomjn6f0.java:37)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n       \
    \     if (set.contains(i)) {\n                return false;\n            }\n \
    \           set.add(i);\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsrenuyb_.java:33)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        return l.stream().distinct().count() == 3 && sum == 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9o6g9065.java:32)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n       \
    \     if (set.contains(i)) {\n                return false;\n            }\n \
    \           set.add(i);\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsrenuyb_.java:33)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(long i : l) {\n            sum += i;\n    \
    \    }\n        long count = 0;\n        for(long i : l) {\n            count\
    \ += i;\n            if(sum == count) {\n                return true;\n      \
    \      }\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp47ppbslk.java:37)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n       \
    \     set.add(Math.abs(i));\n        }\n        return set.size() == 3;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo7__vtl.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n        \
    \    if(i == 0) set.add(0l);\n            else if(i == -1l) set.add(-1l);\n  \
    \          else if(i == -2l) set.add(-2l);\n            else if(i == -3l) set.add(-3l);\n\
    \            else if(i == -4l) set.add(-4l);\n            else if(i == -5l) set.add(-5l);\n\
    \            else if(i == -6l) set.add(-6l);\n            else if(i == -7l) set.add(-7l);\n\
    \            else if(i == -8l) set.add(-8l);\n            else if(i == 9l) set.add(9l);\n\
    \            else if(i == 10l) set.add(10l);\n            else if(i == 11l) set.add(11l);\n\
    \            else if(i == 12l) set.add(12l);\n            else if(i == 13l) set.add(13l);\n\
    \            else if(i == 14l) set.add(14l);\n            else if(i == 15l) set.add(15l);\n\
    \            else if(i == 16l) set.add(16l);\n            else if(i == 17l) set.add(17l);\n\
    \            else if(i == 18l) set.add(18l);\n            else if(i == 19l) set.add(19l);\n\
    \            else if(i == 20l) set.add(20l);\n            else if(i == 21l) set.add(21l);\n\
    \            else if(i == 22l) set.add(22l);\n            else if(i == 23l) set.add(23l);\n\
    \            else if(i == 24l) set.add(24l);\n            else if(i == 25l) set.add(25l);\n\
    \            else if(i == 26l) set.add(26l);\n            else if(i == 27l) set.add(27l);\n\
    \            else if(i == 28l) set.add(28l);\n            else if(i == 29l) set.add(29l);\n\
    \            else if(i == 30l) set.add(30l);\n            else if(i == 31l) set.add(31l);\n\
    \            else if(i == 32l) set.add(32l);\n            else if(i == 33l) set.add(33l);\n\
    \            else if(i == 34l) set.add(34l);\n            else if(i == 35l) set.add(35l);\n\
    \            else if(i == 36l) set.add(36l);\n            else if(i == 37l) set.add(37l);\n\
    \            else if(i == 38l) set.add(38l);\n            else if(i == 39l) set.add(39l);\n\
    \            else if(i == 40l) set.add(40l);\n            else if(i == 41l) set.add(41l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfdf7bi_8.java:68: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        boolean result = false;\n        if (sum == 0) {\n          \
    \  result = true;\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprhwjejd7.java:36)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for (Long i : l) {\n            if (i\
    \ == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjntmqrb7.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n   \
    \         if (set.contains(i)) {\n                return false;\n            }\n\
    \            set.add(i);\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu2tb1a_9.java:33)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for (Long i : l) {\n            if (i\
    \ == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjntmqrb7.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(Long i : l) {\n            sum += i;\n    \
    \    }\n        boolean result = false;\n        for(Long i : l) {\n         \
    \   if(i == sum) {\n                result = true;\n                break;\n \
    \           }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq869uewb.java:42)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for (Long i : l) {\n            if (i\
    \ == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjntmqrb7.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        long count = 0;\n        for (Long i : l) {\n \
    \           sum += i;\n            count++;\n        }\n        if (count == 3)\
    \ {\n            return true;\n        }\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjxr3gogh.java:37)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for (Long i : l) {\n            if (i\
    \ == sum) {\n                count++;\n            }\n        }\n        return\
    \ count == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgggphchw.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for(Long i : l)\n          \
    \  if(!set.contains(i))\n                set.add(i);\n        return set.size()\
    \ == 3;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk2jfwd20.java:35)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(long i : l) {\n            sum += i;\n    \
    \    }\n        boolean result = false;\n        for(long i : l) {\n         \
    \   sum += i;\n            if(sum == 0) {\n                result = true;\n  \
    \              break;\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1z3jgphu.java:40)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        if (sum == 0) {\n            return true;\n        }\n      \
    \  return false;\n    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyr6f8u1.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n        \
    \    if(i == 0) set.add(0l);\n            else if(i == -1l) set.add(-1l);\n  \
    \          else if(i == -2l) set.add(-2l);\n            else if(i == -3l) set.add(-3l);\n\
    \            else if(i == -4l) set.add(-4l);\n            else if(i == -5l) set.add(-5l);\n\
    \            else if(i == -6l) set.add(-6l);\n            else if(i == -7l) set.add(-7l);\n\
    \            else if(i == -8l) set.add(-8l);\n            else if(i == 9l) set.add(9l);\n\
    \            else if(i == 10l) set.add(10l);\n            else if(i == 11l) set.add(11l);\n\
    \            else if(i == 12l) set.add(12l);\n            else if(i == 13l) set.add(13l);\n\
    \            else if(i == 14l) set.add(14l);\n            else if(i == 15l) set.add(15l);\n\
    \            else if(i == 16l) set.add(16l);\n            else if(i == 17l) set.add(17l);\n\
    \            else if(i == 18l) set.add(18l);\n            else if(i == 19l) set.add(19l);\n\
    \            else if(i == 20l) set.add(20l);\n            else if(i == 21l) set.add(21l);\n\
    \            else if(i == 22l) set.add(22l);\n            else if(i == 23l) set.add(23l);\n\
    \            else if(i == 24l) set.add(24l);\n            else if(i == 25l) set.add(25l);\n\
    \            else if(i == 26l) set.add(26l);\n            else if(i == 27l) set.add(27l);\n\
    \            else if(i == 28l) set.add(28l);\n            else if(i == 29l) set.add(29l);\n\
    \            else if(i == 30l) set.add(30l);\n            else if(i == 31l) set.add(31l);\n\
    \            else if(i == 32l) set.add(32l);\n            else if(i == 33l) set.add(33l);\n\
    \            else if(i == 34l) set.add(34l);\n            else if(i == 35l) set.add(35l);\n\
    \            else if(i == 36l) set.add(36l);\n            else if(i == 37l) set.add(37l);\n\
    \            else if(i == 38l) set.add(38l);\n            else if(i == 39l) set.add(39l);\n\
    \            else if(i == 40l) set.add(40l);\n            else if(i == 41l) set.add(41l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfdf7bi_8.java:68: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(Long i : l) {\n            sum += i;\n    \
    \    }\n        long count = 0;\n        for(Long i : l) {\n            count\
    \ += i;\n            if(sum == 0) {\n                return false;\n         \
    \   }\n        }\n        return count == 3;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv44ia926.java:42)\n"
  stdout: ''
  timestamp: 1659799808
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for(Long i : l) {\n            sum += i;\n    \
    \    }\n        long count = 0;\n        for(Long i : l) {\n            count\
    \ += i;\n            if(sum == 0) {\n                return true;\n          \
    \  }\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdlkd_wdb.java:39)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<Long>(l);\n        long sum = 0;\n       \
    \ for (Long i : l) {\n            sum += i;\n        }\n        if (set.size()\
    \ == 3) {\n            return true;\n        }\n        return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbr8lg8g4.java:39)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<Long>(l);\n        boolean result = false;\n\
    \        for (Long i : set) {\n            if (set.contains(i)) {\n          \
    \      set.add(i - 1);\n                set.add(i + 1);\n                result\
    \ = true;\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-1l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)5l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)9l,\
    \ (long)7l)))) == (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)100l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.HashMap$HashIterator.nextNode(HashMap.java:1597)\n\t\
    at java.base/java.util.HashMap$KeyIterator.next(HashMap.java:1620)\n\tat Problem.triplesSumToZero(tmpgu9j3bhd.java:25)\n\
    \tat Problem.main(tmpgu9j3bhd.java:35)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<Long>(l);\n        return set.size() == 3\
    \ && set.contains(0l);\n    }\n    public static void main(String[] args) {\n\
    \    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2nm7w6g3.java:29)\n"
  stdout: ''
  timestamp: 1659799810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n       \
    \     set.add(Math.abs(i));\n        }\n        return set.size() == 3;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoo7__vtl.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // triples_sum_to_zero takes an array array list of integers\
    \ as an input.\n    // it returns true if there are three distinct elements in\
    \ the array list that\n    // sum to zero, and false otherwise.\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l))))\n    // (true)\n    // >>> triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l))))\n \
    \   // (false)\n    // >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l))))\n    // (true)\n    //\
    \ >>> triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n    //\
    \ (false)\n    public static boolean triplesSumToZero(ArrayList<Long> l) {\n \
    \       long sum = 0;\n        for (Long i : l) {\n            sum += i;\n   \
    \     }\n        return l.stream().distinct().count() == 3 && sum == 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)-1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (true));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)7l)))) ==\
    \ (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)9l, (long)7l)))) == (true));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(triplesSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)-100l))))\
    \ == (false));\n    assert(triplesSumToZero((new ArrayList<Long>(Arrays.asList((long)100l,\
    \ (long)3l, (long)5l, (long)-100l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9o6g9065.java:32)\n"
  stdout: ''
  timestamp: 1659799808

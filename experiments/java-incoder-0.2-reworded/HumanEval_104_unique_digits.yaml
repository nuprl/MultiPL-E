name: HumanEval_104_unique_digits
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given an array array list of positive integers x. return\
  \ a sorted array list of all \n    // elements that hasn't any even digit.\n   \
  \ // Note: Returned array list should be sorted in increasing order.\n    // For\
  \ example:\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
  \ (long)33l, (long)1422l, (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)15l, (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
  \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
  \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
  \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
  \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
  \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
  \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
  \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
  \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
  \ (long)135l)))));\n    }\n\n}\n"
completions: ["        ArrayList<Long> result = new ArrayList<>();\n        Set<Long>\
    \ set = new HashSet<>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long digit = 0;\n        long sum = 0;\n\
    \        long max = 0;\n        for (long i : x) {\n            digit = i % 10;\n\
    \            sum += digit;\n            if (sum > max) {\n                max\
    \ = sum;\n            }\n            if (sum == max) {\n                result.add(i);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long temp;\n        for(long num : x) {\n    \
    \        temp = num;\n            while(temp != 0) {\n                temp = temp\
    \ % 10;\n                if(temp % 2 == 0) {\n                    result.add(num);\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long lastDigit = Long.MIN_VALUE;\n        for(long i : x) {\n       \
    \     if(i%10 == 0) continue;\n            if(i%10 != lastDigit) {\n         \
    \       result.add(i);\n                lastDigit = i/10;\n            }\n   \
    \     }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long digit = 0;\n        long lastDigit = 0;\n        long lastDigit2\
    \ = 0;\n        long lastDigit3 = 0;\n        long lastDigit4 = 0;\n        long\
    \ lastDigit5 = 0;\n        long lastDigit6 = 0;\n        long lastDigit7 = 0;\n\
    \        long lastDigit8 = 0;\n        long lastDigit9 = 0;\n        long lastDigit10\
    \ = 0;\n        long lastDigit11 = 0;\n        long lastDigit12 = 0;\n       \
    \ long lastDigit13 = 0;\n        long lastDigit14 = 0;\n        long lastDigit15\
    \ = 0;\n        long lastDigit16 = 0;\n        long lastDigit17 = 0;\n       \
    \ long lastDigit18 = 0;\n        long lastDigit19 = 0;\n        long lastDigit20\
    \ = 0;\n        long lastDigit21 = 0;\n        long lastDigit22 = 0;\n       \
    \ long lastDigit23 = 0;\n        long lastDigit24 = 0;\n        long lastDigit25\
    \ = 0;\n        long lastDigit26 = 0;\n        long lastDigit27 = 0;\n       \
    \ long lastDigit28 = 0;\n        long lastDigit29 = 0;\n        long lastDigit30\
    \ = 0;\n        long lastDigit31 = 0;\n        long lastDigit32 = 0;\n       \
    \ long lastDigit33 = 0;\n        long lastDigit34 = 0;\n        long lastDigit35\
    \ = 0;\n        long lastDigit36 = 0;\n        long lastDigit37 = 0;\n       \
    \ long lastDigit38 = 0;\n        long lastDigit39 = 0;\n        long lastDigit40\
    \ = 0;\n        long lastDigit41 = 0;\n        long lastDigit42 = 0;\n       \
    \ long lastDigit43 = 0;\n        long lastDigit44 = 0;\n        long lastDigit45\
    \ = 0;\n        long lastDigit46 = 0;\n        long lastDigit47 = 0;\n       \
    \ long lastDigit48 = 0;\n        long lastDigit49 = 0;\n        long lastDigit50\
    \ = 0;\n        long lastDigit51 = 0;\n        long lastDigit52 = 0;\n       \
    \ long lastDigit53 = 0;\n        long lastDigit54 = 0;\n        long lastDigit55\
    \ = 0;\n        long lastDigit56 = 0;\n        long lastDigit57 = 0;\n       \
    \ long lastDigit58 = 0;\n        long lastDigit59 = 0;\n        long lastDigit60\
    \ = 0;\n        long lastDigit61 = 0;\n        long lastDigit62 = 0;\n       \
    \ long lastDigit63 = 0;\n        long lastDigit64 = 0;\n        long lastDigit65\
    \ = 0;\n        long lastDigit66 = 0;\n        long lastDigit67 = 0;\n       \
    \ long lastDigit68 = 0;\n        long lastDigit69 = 0;\n        long lastDigit70\
    \ = 0;\n        long lastDigit71 = 0;\n        long lastDigit72 = 0;", "     \
    \   ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n     \
    \   for (Long i : x) {\n            sum += i;\n        }\n        long maxSum\
    \ = sum;\n        long maxSumIndex = 0;\n        for (int i = 0; i < x.size();\
    \ i++) {\n            long sum = 0;\n            for (int j = 0; j < x.size();\
    \ j++) {\n                sum += x.get(i);\n            }\n            if (sum\
    \ > maxSum) {\n                maxSum = sum;\n                maxSumIndex = i;\n\
    \            }\n        }\n        result.add(maxSum);\n        result.add(maxSumIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        HashSet<Long> set = new HashSet<>();\n        for(Long i : x) {\n   \
    \         if(i%2 == 0) {\n                if(!set.contains(i)) {\n           \
    \         result.add(i);\n                    set.add(i);\n                }\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        ArrayList<Long> even = new ArrayList<>();\n  \
    \      ArrayList<Long> odd = new ArrayList<>();\n        for(Long i : x){\n  \
    \          if(i%2==0){\n                even.add(i);\n            }else{\n   \
    \             odd.add(i);\n            }\n        }\n        Collections.sort(even);\n\
    \        Collections.sort(odd);\n        Collections.reverse(even);\n        Collections.reverse(odd);\n\
    \        Collections.reverse(even);\n        Collections.reverse(odd);\n     \
    \   Collections.reverse(even);\n        Collections.reverse(odd);\n        Collections.sort(even);\n\
    \        Collections.sort(odd);\n        Collections.reverse(even);\n        Collections.reverse(odd);\n\
    \        Collections.reverse(even);\n        Collections.reverse(odd);\n     \
    \   Collections.sort(even);\n        Collections.sort(odd);\n        Collections.reverse(even);\n\
    \        Collections.reverse(odd);\n        Collections.reverse(even);\n     \
    \   Collections.reverse(odd);\n        Collections.sort(even);\n        Collections.sort(odd);\n\
    \        Collections.reverse(even);\n        Collections.reverse(odd);\n     \
    \   Collections.reverse(even);\n        Collections.reverse(odd);\n        Collections.sort(even);\n\
    \        Collections.sort(odd);\n        Collections.reverse(even);\n        Collections.reverse(odd);\n\
    \        Collections.reverse(even);\n        Collections.reverse(odd);\n     \
    \   Collections.sort(even);\n        Collections.sort(odd);\n        Collections.reverse(even);\n\
    \        Collections.reverse(odd);\n        Collections.reverse(even);\n     \
    \   Collections.reverse(odd);\n        Collections.sort(even);\n        Collections.sort(odd);\n\
    \        Collections.reverse(even);\n        Collections.reverse(odd);\n     \
    \   Collections.reverse(even);\n        Collections.reverse(odd);\n        Collections.sort(even);\n\
    \        Collections.sort(odd);\n        Collections.reverse(even);\n        Collections.reverse(odd);\n\
    \        Collections.reverse(even);\n        Collections.reverse(odd);\n     \
    \   Collections.sort(even);\n        Collections.sort(odd);\n        Collections.reverse(even);\n\
    \        Collections.reverse(odd);\n        Collections.reverse(even);\n     \
    \   Collections.reverse(odd);\n        Collections.sort(even);\n        Collections.sort(odd);\n\
    \        Collections.reverse(even);\n        Collections.reverse(odd);\n     \
    \   Collections.reverse(even);\n        Collections.reverse(odd);\n        Collections.sort(even);\n\
    \        Collections.sort(odd);\n        Collections.reverse(even);\n        Collections.reverse(odd);\n\
    \        Collections.reverse(even);\n        ", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        for(Long i : x) {\n            int digit =\
    \ i % 10;\n            if(!result.contains(digit)) {\n                result.add(i);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        long temp = 0;\n        long temp2 = 0;\n\
    \        long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n \
    \       long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n  \
    \      long temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n \
    \       long temp12 = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n\
    \        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n\
    \        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n\
    \        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n\
    \        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n\
    \        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n\
    \        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n\
    \        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n\
    \        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n\
    \        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n\
    \        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n\
    \        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n\
    \        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n\
    \        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n\
    \        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n\
    \        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n\
    \        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n\
    \        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n\
    \        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n\
    \        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n\
    \        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n\
    \        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n\
    \        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n\
    \        long temp81 = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n\
    \        long temp84 = 0;\n        long temp", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long sum = 0;\n        for (Long l : x) {\n  \
    \          sum += l;\n        }\n        long evenSum = 0;\n        for (Long\
    \ l : x) {\n            evenSum += l;\n            if (evenSum / 10 == sum / 10)\
    \ {\n                result.add(l);\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ sum = 0;\n        for (long i : x) {\n            sum += i;\n        }\n   \
    \     long lastDigit = sum % 10;\n        long lastDigitCount = 0;\n        for\
    \ (long i : x) {\n            if (i % 10 == lastDigit) {\n                lastDigitCount++;\n\
    \            } else {\n                result.add(lastDigit);\n              \
    \  lastDigit = i % 10;\n                lastDigitCount = 1;\n            }\n \
    \       }\n        if (lastDigitCount > 0) {\n            result.add(lastDigit);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : x) {\n      \
    \      if (set.contains(i)) {\n                continue;\n            }\n    \
    \        set.add(i);\n            result.add(i);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        Set<Long> set\
    \ = new HashSet<Long>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Set<Long> set = new HashSet<>();\n    \
    \    for(Long i : x){\n            if(i%2 == 0){\n                if(!set.contains(i)){\n\
    \                    set.add(i);\n                    result.add(i);\n       \
    \         }\n            }\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long lastDigit = 0;\n        for (long\
    \ i : x) {\n            while (lastDigit % 2 == 0 && lastDigit != i) {\n     \
    \           lastDigit = i;\n            }\n            if (lastDigit % 2 == 0)\
    \ {\n                result.add(i);\n            }\n            lastDigit = i;\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        x.stream().filter(x -> x % 2 == 0).forEach(x -> result.add(x));\n   \
    \     Collections.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long temp;\n        for(int i = 0; i <\
    \ x.size(); i++) {\n            temp = x.get(i);\n            while(temp != 0)\
    \ {\n                temp = temp / 10;\n            }\n            if(temp % 2\
    \ != 0) {\n                result.add(temp);\n            }\n        }\n     \
    \   return result;", "        ArrayList<Long> result = new ArrayList<>();\n  \
    \      long sum = 0;\n        for (long i : x) {\n            sum += i;\n    \
    \    }\n        long lastDigit = sum % 10;\n        for (long i : x) {\n     \
    \       if (i % 10 != lastDigit) {\n                result.add(i);\n         \
    \   }\n        }\n        return result;", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        long temp;\n        for(long i : x) {\n            temp\
    \ = i;\n            while(temp != 0) {\n                temp = temp / 10;\n  \
    \              if(!result.contains(temp)) {\n                    result.add(temp);\n\
    \                }\n            }\n        }\n        return result;"]
stop_tokens:
- "\n    }\n"

language: java
name: HumanEval_122_add_elements
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i< arr.size()-k; i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi83n1icf.java:25)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        long maxSumIndex = 0;\n        long\
    \ maxSumIndex2 = 0;\n        long maxSumIndex3 = 0;\n        long maxSumIndex4\
    \ = 0;\n        long maxSumIndex5 = 0;\n        long maxSumIndex6 = 0;\n     \
    \   long maxSumIndex7 = 0;\n        long maxSumIndex8 = 0;\n        long maxSumIndex9\
    \ = 0;\n        long maxSumIndex10 = 0;\n        long maxSumIndex11 = 0;\n   \
    \     long maxSumIndex12 = 0;\n        long maxSumIndex13 = 0;\n        long maxSumIndex14\
    \ = 0;\n        long maxSumIndex15 = 0;\n        long maxSumIndex16 = 0;\n   \
    \     long maxSumIndex17 = 0;\n        long maxSumIndex18 = 0;\n        long maxSumIndex19\
    \ = 0;\n        long maxSumIndex20 = 0;\n        long maxSumIndex21 = 0;\n   \
    \     long maxSumIndex22 = 0;\n        long maxSumIndex23 = 0;\n        long maxSumIndex24\
    \ = 0;\n        long maxSumIndex25 = 0;\n        long maxSumIndex26 = 0;\n   \
    \     long maxSumIndex27 = 0;\n        long maxSumIndex28 = 0;\n        long maxSumIndex29\
    \ = 0;\n        long maxSumIndex30 = 0;\n        long maxSumIndex31 = 0;\n   \
    \     long maxSumIndex32 = 0;\n        long maxSumIndex33 = 0;\n        long maxSumIndex34\
    \ = 0;\n        long maxSumIndex35 = 0;\n        long maxSumIndex36 = 0;\n   \
    \     long maxSumIndex37 = 0;\n        long maxSumIndex38 = 0;\n        long maxSumIndex39\
    \ = 0;\n        long maxSumIndex40 = 0;\n        long maxSumIndex41 = 0;\n   \
    \     long maxSumIndex42 = 0;\n        long maxSumIndex43 = 0;\n        long maxSumIndex44\
    \ = 0;\n        long maxSumIndex45 = 0;\n        long maxSumIndex46 = 0;\n   \
    \     long maxSumIndex47 = 0;\n        long maxSumIndex48 = 0;\n        long maxSumIndex49\
    \ = 0;\n        long maxSumIndex50 = 0;\n        long maxSumIndex51 = 0;\n   \
    \     long maxSumIndex52 = 0;\n        long maxSumIndex53 = 0;\n        long maxSumIndex54\
    \ = 0;\n        long maxSumIndex55 = 0;\n        long maxSumIndex56 = 0;\n   \
    \     long maxSumIndex57 = 0;\n        long maxSumIndex58 = 0;\n        long maxSumIndex59\
    \ = 0;\n        long maxSumIndex60 = 0;\n        long maxSumIndex61 = 0;\n   \
    \     long maxSumIndex62 = 0;\n        long maxSumIndex63 = 0;\n        long \n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqlewz3oh.java:83: error: not a statement\n        long \n     \
    \   ^\n/tmp/tmpqlewz3oh.java:83: error: ';' expected\n        long \n        \
    \    ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        long sum2 =\
    \ 0;\n        long max2 = 0;\n        long min2 = 0;\n        long sum3 = 0;\n\
    \        long max3 = 0;\n        long min3 = 0;\n        long sum4 = 0;\n    \
    \    long max4 = 0;\n        long min4 = 0;\n        long sum5 = 0;\n        long\
    \ max5 = 0;\n        long min5 = 0;\n        long sum6 = 0;\n        long max6\
    \ = 0;\n        long min6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n\
    \        long min7 = 0;\n        long sum8 = 0;\n        long max8 = 0;\n    \
    \    long min8 = 0;\n        long sum9 = 0;\n        long max9 = 0;\n        long\
    \ min9 = 0;\n        long sum10 = 0;\n        long max10 = 0;\n        long min10\
    \ = 0;\n        long sum11 = 0;\n        long max11 = 0;\n        long min11 =\
    \ 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long min12 = 0;\n\
    \        long sum13 = 0;\n        long max13 = 0;\n        long min13 = 0;\n \
    \       long sum14 = 0;\n        long max14 = 0;\n        long min14 = 0;\n  \
    \      long sum15 = 0;\n        long max15 = 0;\n        long min15 = 0;\n   \
    \     long sum16 = 0;\n        long max16 = 0;\n        long min16 = 0;\n    \
    \    long sum17 = 0;\n        long max17 = 0;\n        long min17 = 0;\n     \
    \   long sum18 = 0;\n        long max18 = 0;\n        long min18 = 0;\n      \
    \  long sum19 = 0;\n        long max19 = 0;\n        long min19 = 0;\n       \
    \ long sum20 = 0;\n        long max20 = 0;\n        long min20 = 0;\n        long\
    \ sum21 = 0;\n        long max21 = 0;\n        long min21 = 0;\n        long sum22\
    \ = 0;\n        long max22 = 0;\n        long min22 = 0;\n        long sum23 =\
    \ 0;\n        long max23 = 0;\n        long min23 = 0;\n        long sum24 = 0;\n\
    \        long max24 = 0;\n        long min24 = 0;\n        long sum25 = 0;\n \
    \       long max25 = 0;\n        long min25 = 0;\n        long sum26 = 0;\n  \
    \      long max26 = 0;\n        long min26 = 0;\n        long sum27 = 0;\n   \
    \     long max27 = 0;\n        long min27 = 0;\n        long sum28 = 0;\n    \
    \    long max28 = 0;\n        long min28 = 0;\n        long sum29 = 0;\n     \
    \   long max29 = 0;\n        long min29 = 0;\n        long sum30 = 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppvcmozvj.java:106: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        for(int i = 0; i < k; i++) {\n \
    \           sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum += arr.get(i);\n            if(sum > maxSum) {\n   \
    \             maxSum = sum;\n            }\n        }\n        return maxSum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpag7by6n1.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        for(int i = 0; i<k; i++) {\n   \
    \         sum += arr.get(i);\n        }\n        for(int i = k; i<arr.size();\
    \ i++) {\n            sum += arr.get(i);\n            maxSum = Math.max(maxSum,\
    \ sum);\n        }\n        return maxSum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1ao47whm.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i<arr.size(); i++) {\n            \
    \        ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4\
    \ = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n\
    \        long sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n   \
    \     long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n    \
    \    long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n     \
    \   long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n      \
    \  long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n       \
    \ long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long\
    \ sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29\
    \ = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 =\
    \ 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n\
    \        long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n \
    \       long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n  \
    \      long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n   \
    \     long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n    \
    \    long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n     \
    \   long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n      \
    \  long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n       \
    \ long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long\
    \ sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63\
    \ = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long sum66 =\
    \ 0;\n        long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n\
    \        long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n \
    \       long sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n  \
    \      long sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n   \
    \     long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n    \
    \    long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n     \
    \   long sum85 = 0;\n        long sum86 = 0;\n        \n    }\n    public static\
    \ void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpioxzt3qh.java:105: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4\
    \ = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n\
    \        long sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n   \
    \     long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n    \
    \    long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n     \
    \   long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n      \
    \  long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n       \
    \ long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long\
    \ sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29\
    \ = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 =\
    \ 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n\
    \        long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n \
    \       long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n  \
    \      long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n   \
    \     long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n    \
    \    long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n     \
    \   long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n      \
    \  long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n       \
    \ long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long\
    \ sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63\
    \ = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long sum66 =\
    \ 0;\n        long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n\
    \        long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n \
    \       long sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n  \
    \      long sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n   \
    \     long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n    \
    \    long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n     \
    \   long sum85 = 0;\n        long sum86 = 0;\n        \n    }\n    public static\
    \ void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpioxzt3qh.java:105: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        for(int i = 0; i < k; i++) {\n   \
    \         sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum2 += arr.get(i);\n        }\n        return sum + sum2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr3ivwm_q.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        long maxSumIndex = 0;\n        long\
    \ maxSumIndex2 = 0;\n        long maxSumIndex3 = 0;\n        long maxSumIndex4\
    \ = 0;\n        long maxSumIndex5 = 0;\n        long maxSumIndex6 = 0;\n     \
    \   long maxSumIndex7 = 0;\n        long maxSumIndex8 = 0;\n        long maxSumIndex9\
    \ = 0;\n        long maxSumIndex10 = 0;\n        long maxSumIndex11 = 0;\n   \
    \     long maxSumIndex12 = 0;\n        long maxSumIndex13 = 0;\n        long maxSumIndex14\
    \ = 0;\n        long maxSumIndex15 = 0;\n        long maxSumIndex16 = 0;\n   \
    \     long maxSumIndex17 = 0;\n        long maxSumIndex18 = 0;\n        long maxSumIndex19\
    \ = 0;\n        long maxSumIndex20 = 0;\n        long maxSumIndex21 = 0;\n   \
    \     long maxSumIndex22 = 0;\n        long maxSumIndex23 = 0;\n        long maxSumIndex24\
    \ = 0;\n        long maxSumIndex25 = 0;\n        long maxSumIndex26 = 0;\n   \
    \     long maxSumIndex27 = 0;\n        long maxSumIndex28 = 0;\n        long maxSumIndex29\
    \ = 0;\n        long maxSumIndex30 = 0;\n        long maxSumIndex31 = 0;\n   \
    \     long maxSumIndex32 = 0;\n        long maxSumIndex33 = 0;\n        long maxSumIndex34\
    \ = 0;\n        long maxSumIndex35 = 0;\n        long maxSumIndex36 = 0;\n   \
    \     long maxSumIndex37 = 0;\n        long maxSumIndex38 = 0;\n        long maxSumIndex39\
    \ = 0;\n        long maxSumIndex40 = 0;\n        long maxSumIndex41 = 0;\n   \
    \     long maxSumIndex42 = 0;\n        long maxSumIndex43 = 0;\n        long maxSumIndex44\
    \ = 0;\n        long maxSumIndex45 = 0;\n        long maxSumIndex46 = 0;\n   \
    \     long maxSumIndex47 = 0;\n        long maxSumIndex48 = 0;\n        long maxSumIndex49\
    \ = 0;\n        long maxSumIndex50 = 0;\n        long maxSumIndex51 = 0;\n   \
    \     long maxSumIndex52 = 0;\n        long maxSumIndex53 = 0;\n        long maxSumIndex54\
    \ = 0;\n        long maxSumIndex55 = 0;\n        long maxSumIndex56 = 0;\n   \
    \     long maxSumIndex57 = 0;\n        long maxSumIndex58 = 0;\n        long maxSumIndex59\
    \ = 0;\n        long maxSumIndex60 = 0;\n        long maxSumIndex61 = 0;\n   \
    \     long maxSumIndex62 = 0;\n        long maxSumIndex63 = 0;\n        long \n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqlewz3oh.java:83: error: not a statement\n        long \n     \
    \   ^\n/tmp/tmpqlewz3oh.java:83: error: ';' expected\n        long \n        \
    \    ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        long maxSumIndex = 0;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            long currSum = 0;\n            for(int\
    \ j = 0; j < k; j++) {\n                currSum += arr.get(i);\n             \
    \   i++;\n            }\n            if(currSum > maxSum) {\n                maxSum\
    \ = currSum;\n                maxSumIndex = i;\n            }\n        }\n   \
    \     sum += maxSum;\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index:\
    \ 9, Size: 9\n\tat java.util.ArrayList.rangeCheck(ArrayList.java:657)\n\tat java.util.ArrayList.get(ArrayList.java:433)\n\
    \tat Problem.addElements(tmpudxmgmft.java:24)\n\tat Problem.main(tmpudxmgmft.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i< arr.size()-k; i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi83n1icf.java:25)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4\
    \ = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n\
    \        long sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n   \
    \     long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n    \
    \    long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n     \
    \   long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n      \
    \  long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n       \
    \ long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long\
    \ sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29\
    \ = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 =\
    \ 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n\
    \        long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n \
    \       long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n  \
    \      long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n   \
    \     long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n    \
    \    long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n     \
    \   long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n      \
    \  long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n       \
    \ long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long\
    \ sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63\
    \ = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long sum66 =\
    \ 0;\n        long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n\
    \        long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n \
    \       long sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n  \
    \      long sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n   \
    \     long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n    \
    \    long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n     \
    \   long sum85 = 0;\n        long sum86 = 0;\n        \n    }\n    public static\
    \ void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpioxzt3qh.java:105: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = Long.MAX_VALUE;\n      \
    \  for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n            max\
    \ = Math.max(max, arr.get(i));\n            min = Math.min(min, arr.get(i));\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n            max = Math.max(max, arr.get(i));\n            min =\
    \ Math.min(min, arr.get(i));\n        }\n        return sum + max - min;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplv25oivk.java:26: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long max2 = 0;\n        long max3 =\
    \ 0;\n        long max4 = 0;\n        long max5 = 0;\n        long max6 = 0;\n\
    \        long max7 = 0;\n        long max8 = 0;\n        long max9 = 0;\n    \
    \    long max10 = 0;\n        long max11 = 0;\n        long max12 = 0;\n     \
    \   long max13 = 0;\n        long max14 = 0;\n        long max15 = 0;\n      \
    \  long max16 = 0;\n        long max17 = 0;\n        long max18 = 0;\n       \
    \ long max19 = 0;\n        long max20 = 0;\n        long max21 = 0;\n        long\
    \ max22 = 0;\n        long max23 = 0;\n        long max24 = 0;\n        long max25\
    \ = 0;\n        long max26 = 0;\n        long max27 = 0;\n        long max28 =\
    \ 0;\n        long max29 = 0;\n        long max30 = 0;\n        long max31 = 0;\n\
    \        long max32 = 0;\n        long max33 = 0;\n        long max34 = 0;\n \
    \       long max35 = 0;\n        long max36 = 0;\n        long max37 = 0;\n  \
    \      long max38 = 0;\n        long max39 = 0;\n        long max40 = 0;\n   \
    \     long max41 = 0;\n        long max42 = 0;\n        long max43 = 0;\n    \
    \    long max44 = 0;\n        long max45 = 0;\n        long max46 = 0;\n     \
    \   long max47 = 0;\n        long max48 = 0;\n        long max49 = 0;\n      \
    \  long max50 = 0;\n        long max51 = 0;\n        long max52 = 0;\n       \
    \ long max53 = 0;\n        long max54 = 0;\n        long max55 = 0;\n        long\
    \ max56 = 0;\n        long max57 = 0;\n        long max58 = 0;\n        long max59\
    \ = 0;\n        long max60 = 0;\n        long max61 = 0;\n        long max62 =\
    \ 0;\n        long max63 = 0;\n        long max64 = 0;\n        long max65 = 0;\n\
    \        long max66 = 0;\n        long max67 = 0;\n        long max68 = 0;\n \
    \       long max69 = 0;\n        long max70 = 0;\n        long max71 = 0;\n  \
    \      long max72 = 0;\n        long max73 = 0;\n        long max74 = 0;\n   \
    \     long max75 = 0;\n        long max76 = 0;\n        long max77 = 0;\n    \
    \    long max78 = 0;\n        long max79 = 0;\n        long max80 = 0;\n     \
    \   long max81 = 0;\n        long max82 = 0;\n        long max83 = 0;\n      \
    \  long max84 = 0;\n        long max85 = 0;\n        long \n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3s6zf2s5.java:104: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmp3s6zf2s5.java:104: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4\
    \ = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n\
    \        long sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n   \
    \     long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n    \
    \    long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n     \
    \   long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n      \
    \  long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n       \
    \ long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long\
    \ sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29\
    \ = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 =\
    \ 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n\
    \        long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n \
    \       long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n  \
    \      long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n   \
    \     long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n    \
    \    long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n     \
    \   long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n      \
    \  long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n       \
    \ long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long\
    \ sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63\
    \ = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long sum66 =\
    \ 0;\n        long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n\
    \        long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n \
    \       long sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n  \
    \      long sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n   \
    \     long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n    \
    \    long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n     \
    \   long sum85 = 0;\n        long sum86 = 0;\n        \n    }\n    public static\
    \ void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpioxzt3qh.java:105: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        long sumOfTwo\
    \ = 0;\n        long sumOfThree = 0;\n        long sumOfFour = 0;\n        long\
    \ sumOfFive = 0;\n        long sumOfSix = 0;\n        long sumOfSeven = 0;\n \
    \       long sumOfEight = 0;\n        long sumOfNine = 0;\n        long sumOfTen\
    \ = 0;\n        long sumOfEleven = 0;\n        long sumOfTwelve = 0;\n       \
    \ long sumOfThirteen = 0;\n        long sumOfFourteen = 0;\n        long sumOfFifteen\
    \ = 0;\n        long sumOfSixteen = 0;\n        long sumOfSeventeen = 0;\n   \
    \     long sumOfEighteen = 0;\n        long sumOfNineteen = 0;\n        long sumOfTwenty\
    \ = 0;\n        long sumOfTwentyOne = 0;\n        long sumOfTwentyTwo = 0;\n \
    \       long sumOfTwentyThree = 0;\n        long sumOfTwentyFour = 0;\n      \
    \  long sumOfTwentyFive = 0;\n        long sumOfTwentySix = 0;\n        long sumOfTwentySeven\
    \ = 0;\n        long sumOfTwentyEight = 0;\n        long sumOfTwentyNine = 0;\n\
    \        long sumOfTwentyTen = 0;\n        long sumOfTwentyEleven = 0;\n     \
    \   long sumOfTwentyTwelve = 0;\n        long sumOfTwentyThirteen = 0;\n     \
    \   long sumOfTwentyFourteen = 0;\n        long sumOfTwentyFifteen = 0;\n    \
    \    long sumOfTwentySixteen = 0;\n        long sumOfTwentySeventeen = 0;\n  \
    \      long sumOfTwentyEighteen = 0;\n        long sumOfTwentyNineteen = 0;\n\
    \        long sumOfTwentyTwenty = 0;\n        long sumOfTwentyTwentyOne = 0;\n\
    \        long sumOfTwentyTwentyTwo = 0;\n        long sumOfTwentyTwentyThree =\
    \ 0;\n        long sumOfTwentyTwentyFour = 0;\n        long sumOfTwentyTwentyFive\
    \ = 0;\n        long sumOfTwentyTwentySix = 0;\n        long sumOfTwentyTwentySeven\
    \ = 0;\n        long sumOfTwentyTwentyEight = 0;\n        long sumOfTwentyTwentyNine\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptdlh1e9y.java:68: error: ';' expected\n        long sumOfTwentyTwentyNine\n\
    \                                  ^\n1 error\n"
  stdout: ''
  timestamp: 1659794329
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        for(int i = 0; i < k; i++) {\n \
    \           sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum += arr.get(i);\n            if(sum > maxSum) {\n   \
    \             maxSum = sum;\n            }\n        }\n        return maxSum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpag7by6n1.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        long maxSumIndex = 0;\n        for(int\
    \ i = 0; i < k; i++) {\n            sum += arr.get(i);\n        }\n        for(int\
    \ i = k; i < arr.size(); i++) {\n            sum += arr.get(i);\n            if((sum\
    \ / 10) % 10 > maxSum / 10) {\n                maxSum = sum;\n               \
    \ maxSumIndex = i;\n            }\n        }\n        return maxSum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5gxxb8k9.java:24: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sumOfTwoDigits = 0;\n        for(int i = 0; i < k; i++)\
    \ {\n            sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sumOfTwoDigits += arr.get(i);\n        }\n        return\
    \ sum + sumOfTwoDigits;\n    }\n    public static void main(String[] args) {\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm8xwiokg.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        for(int i = 0; i < k; i++) {\n   \
    \         sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum2 += arr.get(i);\n        }\n        return sum + sum2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr3ivwm_q.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        for(int i = 0; i < k; i++) {\n    \
    \        sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum += arr.get(i);\n            max = Math.max(max, sum);\n\
    \        }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdq90_n5v.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long max2 = 0;\n        long max3 =\
    \ 0;\n        long max4 = 0;\n        long max5 = 0;\n        long max6 = 0;\n\
    \        long max7 = 0;\n        long max8 = 0;\n        long max9 = 0;\n    \
    \    long max10 = 0;\n        long max11 = 0;\n        long max12 = 0;\n     \
    \   long max13 = 0;\n        long max14 = 0;\n        long max15 = 0;\n      \
    \  long max16 = 0;\n        long max17 = 0;\n        long max18 = 0;\n       \
    \ long max19 = 0;\n        long max20 = 0;\n        long max21 = 0;\n        long\
    \ max22 = 0;\n        long max23 = 0;\n        long max24 = 0;\n        long max25\
    \ = 0;\n        long max26 = 0;\n        long max27 = 0;\n        long max28 =\
    \ 0;\n        long max29 = 0;\n        long max30 = 0;\n        long max31 = 0;\n\
    \        long max32 = 0;\n        long max33 = 0;\n        long max34 = 0;\n \
    \       long max35 = 0;\n        long max36 = 0;\n        long max37 = 0;\n  \
    \      long max38 = 0;\n        long max39 = 0;\n        long max40 = 0;\n   \
    \     long max41 = 0;\n        long max42 = 0;\n        long max43 = 0;\n    \
    \    long max44 = 0;\n        long max45 = 0;\n        long max46 = 0;\n     \
    \   long max47 = 0;\n        long max48 = 0;\n        long max49 = 0;\n      \
    \  long max50 = 0;\n        long max51 = 0;\n        long max52 = 0;\n       \
    \ long max53 = 0;\n        long max54 = 0;\n        long max55 = 0;\n        long\
    \ max56 = 0;\n        long max57 = 0;\n        long max58 = 0;\n        long max59\
    \ = 0;\n        long max60 = 0;\n        long max61 = 0;\n        long max62 =\
    \ 0;\n        long max63 = 0;\n        long max64 = 0;\n        long max65 = 0;\n\
    \        long max66 = 0;\n        long max67 = 0;\n        long max68 = 0;\n \
    \       long max69 = 0;\n        long max70 = 0;\n        long max71 = 0;\n  \
    \      long max72 = 0;\n        long max73 = 0;\n        long max74 = 0;\n   \
    \     long max75 = 0;\n        long max76 = 0;\n        long max77 = 0;\n    \
    \    long max78 = 0;\n        long max79 = 0;\n        long max80 = 0;\n     \
    \   long max81 = 0;\n        long max82 = 0;\n        long max83 = 0;\n      \
    \  long max84 = 0;\n        long max85 = 0;\n        long \n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3s6zf2s5.java:104: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmp3s6zf2s5.java:104: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sumOfTwos = 0;\n        long sumOfThrees = 0;\n     \
    \   long sumOfFours = 0;\n        long sumOfFives = 0;\n        long sumOfSixes\
    \ = 0;\n        long sumOfSevens = 0;\n        long sumOfEights = 0;\n       \
    \ long sumOfNines = 0;\n        long sumOfTens = 0;\n        long sumOfElevens\
    \ = 0;\n        long sumOfTwelves = 0;\n        long sumOfElevensAndTwentys =\
    \ 0;\n        long sumOfElevensAndTwentyFours = 0;\n        long sumOfElevensAndTwentyFives\
    \ = 0;\n        long sumOfElevensAndTwentySixes = 0;\n        long sumOfElevensAndTwentySevens\
    \ = 0;\n        long sumOfElevensAndTwentyEights = 0;\n        long sumOfElevensAndTwentyNines\
    \ = 0;\n        long sumOfElevensAndTwentyTens = 0;\n        long sumOfElevensAndTwentyElevens\
    \ = 0;\n        long sumOfElevensAndTwentyTwelves = 0;\n        long sumOfElevensAndTwentyElevensAndTwentys\
    \ = 0;\n        long sumOfElevensAndTwentyElevensAndTwentyFours = 0;\n       \
    \ long sumOfElevensAndTwentyElevensAndTwentyFives = 0;\n        long sumOfElevensAndTwentyElevensAndTwentySixes\
    \ = 0;\n        long sumOfElevensAndTwentyElevensAndTwentySevens = 0;\n      \
    \  long sumOfElevensAndTwentyElevensAndTwentyEights = 0;\n        long sumOfElevensAndTwentyElevensAndTwentyNines\
    \ = 0;\n        long sumOfElevensAndTwentyElevensAndTwentyTens = 0;\n        long\
    \ sumOfElevensAndTwentyElevensAndTwentyElevens = 0;\n        long sumOfElevensAndTwentyElevensAndTwentyTwelves\
    \ = 0;\n        long sumOfElevensAndTwentyElevensAndTwentyElevensAndTwentys =\
    \ 0;\n        long sumOfElevensAndTwentyElevensAndTwentyElevensAndTwentyFours\
    \ = 0;\n        long sumOfElevensAndTwentyElevensAndTwentyElevensAndTwentyFives\
    \ = 0;\n        long sumOfElevensAndTwenty\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpeif93tyx.java:53: error: ';' expected\n        long sumOfElevensAndTwenty\n\
    \                                  ^\n1 error\n"
  stdout: ''
  timestamp: 1659794329
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        for(int i = 0; i < k; i++) {\n    \
    \        sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum += arr.get(i);\n            max = Math.max(max, sum);\n\
    \            sum = 0;\n        }\n        return max;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7r_czp3r.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        long sum2 =\
    \ 0;\n        long max2 = 0;\n        long min2 = 0;\n        long sum3 = 0;\n\
    \        long max3 = 0;\n        long min3 = 0;\n        long sum4 = 0;\n    \
    \    long max4 = 0;\n        long min4 = 0;\n        long sum5 = 0;\n        long\
    \ max5 = 0;\n        long min5 = 0;\n        long sum6 = 0;\n        long max6\
    \ = 0;\n        long min6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n\
    \        long min7 = 0;\n        long sum8 = 0;\n        long max8 = 0;\n    \
    \    long min8 = 0;\n        long sum9 = 0;\n        long max9 = 0;\n        long\
    \ min9 = 0;\n        long sum10 = 0;\n        long max10 = 0;\n        long min10\
    \ = 0;\n        long sum11 = 0;\n        long max11 = 0;\n        long min11 =\
    \ 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long min12 = 0;\n\
    \        long sum13 = 0;\n        long max13 = 0;\n        long min13 = 0;\n \
    \       long sum14 = 0;\n        long max14 = 0;\n        long min14 = 0;\n  \
    \      long sum15 = 0;\n        long max15 = 0;\n        long min15 = 0;\n   \
    \     long sum16 = 0;\n        long max16 = 0;\n        long min16 = 0;\n    \
    \    long sum17 = 0;\n        long max17 = 0;\n        long min17 = 0;\n     \
    \   long sum18 = 0;\n        long max18 = 0;\n        long min18 = 0;\n      \
    \  long sum19 = 0;\n        long max19 = 0;\n        long min19 = 0;\n       \
    \ long sum20 = 0;\n        long max20 = 0;\n        long min20 = 0;\n        long\
    \ sum21 = 0;\n        long max21 = 0;\n        long min21 = 0;\n        long sum22\
    \ = 0;\n        long max22 = 0;\n        long min22 = 0;\n        long sum23 =\
    \ 0;\n        long max23 = 0;\n        long min23 = 0;\n        long sum24 = 0;\n\
    \        long max24 = 0;\n        long min24 = 0;\n        long sum25 = 0;\n \
    \       long max25 = 0;\n        long min25 = 0;\n        long sum26 = 0;\n  \
    \      long max26 = 0;\n        long min26 = 0;\n        long sum27 = 0;\n   \
    \     long max27 = 0;\n        long min27 = 0;\n        long sum28 = 0;\n    \
    \    long max28 = 0;\n        long min28 = 0;\n        long sum29 = 0;\n     \
    \   long max29 = 0;\n        long min29 = 0;\n        long sum30 = 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppvcmozvj.java:106: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        for(int i = 0; i < k; i++) {\n    \
    \        sum += arr.get(i);\n            max = Math.max(max, sum);\n        }\n\
    \        return max;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxrq2p7hw.java:27)\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long max2 = 0;\n        long max3 =\
    \ 0;\n        long max4 = 0;\n        long max5 = 0;\n        long max6 = 0;\n\
    \        long max7 = 0;\n        long max8 = 0;\n        long max9 = 0;\n    \
    \    long max10 = 0;\n        long max11 = 0;\n        long max12 = 0;\n     \
    \   long max13 = 0;\n        long max14 = 0;\n        long max15 = 0;\n      \
    \  long max16 = 0;\n        long max17 = 0;\n        long max18 = 0;\n       \
    \ long max19 = 0;\n        long max20 = 0;\n        long max21 = 0;\n        long\
    \ max22 = 0;\n        long max23 = 0;\n        long max24 = 0;\n        long max25\
    \ = 0;\n        long max26 = 0;\n        long max27 = 0;\n        long max28 =\
    \ 0;\n        long max29 = 0;\n        long max30 = 0;\n        long max31 = 0;\n\
    \        long max32 = 0;\n        long max33 = 0;\n        long max34 = 0;\n \
    \       long max35 = 0;\n        long max36 = 0;\n        long max37 = 0;\n  \
    \      long max38 = 0;\n        long max39 = 0;\n        long max40 = 0;\n   \
    \     long max41 = 0;\n        long max42 = 0;\n        long max43 = 0;\n    \
    \    long max44 = 0;\n        long max45 = 0;\n        long max46 = 0;\n     \
    \   long max47 = 0;\n        long max48 = 0;\n        long max49 = 0;\n      \
    \  long max50 = 0;\n        long max51 = 0;\n        long max52 = 0;\n       \
    \ long max53 = 0;\n        long max54 = 0;\n        long max55 = 0;\n        long\
    \ max56 = 0;\n        long max57 = 0;\n        long max58 = 0;\n        long max59\
    \ = 0;\n        long max60 = 0;\n        long max61 = 0;\n        long max62 =\
    \ 0;\n        long max63 = 0;\n        long max64 = 0;\n        long max65 = 0;\n\
    \        long max66 = 0;\n        long max67 = 0;\n        long max68 = 0;\n \
    \       long max69 = 0;\n        long max70 = 0;\n        long max71 = 0;\n  \
    \      long max72 = 0;\n        long max73 = 0;\n        long max74 = 0;\n   \
    \     long max75 = 0;\n        long max76 = 0;\n        long max77 = 0;\n    \
    \    long max78 = 0;\n        long max79 = 0;\n        long max80 = 0;\n     \
    \   long max81 = 0;\n        long max82 = 0;\n        long max83 = 0;\n      \
    \  long max84 = 0;\n        long max85 = 0;\n        long \n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3s6zf2s5.java:104: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmp3s6zf2s5.java:104: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        for(int i = 0; i < k; i++) {\n    \
    \        sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum += arr.get(i);\n            if(sum > max) {\n      \
    \          max = sum;\n            }\n        }\n        return max;\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoc6j9ex6.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        for(int i =\
    \ 0; i < k; i++) {\n            sum += arr.get(i);\n        }\n        for(int\
    \ i = k; i < arr.size(); i++) {\n            sum += arr.get(i);\n            max\
    \ = Math.max(max, sum);\n            min = Math.min(min, sum);\n        }\n  \
    \      return sum + max - min;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0yndpy63.java:24: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1659794330
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        for(int i = 0; i < k; i++) {\n   \
    \         sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum2 += arr.get(i);\n        }\n        return sum + sum2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr3ivwm_q.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        long sum2 =\
    \ 0;\n        long max2 = 0;\n        long min2 = 0;\n        long sum3 = 0;\n\
    \        long max3 = 0;\n        long min3 = 0;\n        long sum4 = 0;\n    \
    \    long max4 = 0;\n        long min4 = 0;\n        long sum5 = 0;\n        long\
    \ max5 = 0;\n        long min5 = 0;\n        long sum6 = 0;\n        long max6\
    \ = 0;\n        long min6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n\
    \        long min7 = 0;\n        long sum8 = 0;\n        long max8 = 0;\n    \
    \    long min8 = 0;\n        long sum9 = 0;\n        long max9 = 0;\n        long\
    \ min9 = 0;\n        long sum10 = 0;\n        long max10 = 0;\n        long min10\
    \ = 0;\n        long sum11 = 0;\n        long max11 = 0;\n        long min11 =\
    \ 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long min12 = 0;\n\
    \        long sum13 = 0;\n        long max13 = 0;\n        long min13 = 0;\n \
    \       long sum14 = 0;\n        long max14 = 0;\n        long min14 = 0;\n  \
    \      long sum15 = 0;\n        long max15 = 0;\n        long min15 = 0;\n   \
    \     long sum16 = 0;\n        long max16 = 0;\n        long min16 = 0;\n    \
    \    long sum17 = 0;\n        long max17 = 0;\n        long min17 = 0;\n     \
    \   long sum18 = 0;\n        long max18 = 0;\n        long min18 = 0;\n      \
    \  long sum19 = 0;\n        long max19 = 0;\n        long min19 = 0;\n       \
    \ long sum20 = 0;\n        long max20 = 0;\n        long min20 = 0;\n        long\
    \ sum21 = 0;\n        long max21 = 0;\n        long min21 = 0;\n        long sum22\
    \ = 0;\n        long max22 = 0;\n        long min22 = 0;\n        long sum23 =\
    \ 0;\n        long max23 = 0;\n        long min23 = 0;\n        long sum24 = 0;\n\
    \        long max24 = 0;\n        long min24 = 0;\n        long sum25 = 0;\n \
    \       long max25 = 0;\n        long min25 = 0;\n        long sum26 = 0;\n  \
    \      long max26 = 0;\n        long min26 = 0;\n        long sum27 = 0;\n   \
    \     long max27 = 0;\n        long min27 = 0;\n        long sum28 = 0;\n    \
    \    long max28 = 0;\n        long min28 = 0;\n        long sum29 = 0;\n     \
    \   long max29 = 0;\n        long min29 = 0;\n        long sum30 = 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppvcmozvj.java:106: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        for(int i = 0; i < k; i++) {\n   \
    \         sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum2 += arr.get(i);\n        }\n        return sum + sum2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr3ivwm_q.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        long sum2 =\
    \ 0;\n        long max2 = 0;\n        long min2 = 0;\n        long sum3 = 0;\n\
    \        long max3 = 0;\n        long min3 = 0;\n        long sum4 = 0;\n    \
    \    long max4 = 0;\n        long min4 = 0;\n        long sum5 = 0;\n        long\
    \ max5 = 0;\n        long min5 = 0;\n        long sum6 = 0;\n        long max6\
    \ = 0;\n        long min6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n\
    \        long min7 = 0;\n        long sum8 = 0;\n        long max8 = 0;\n    \
    \    long min8 = 0;\n        long sum9 = 0;\n        long max9 = 0;\n        long\
    \ min9 = 0;\n        long sum10 = 0;\n        long max10 = 0;\n        long min10\
    \ = 0;\n        long sum11 = 0;\n        long max11 = 0;\n        long min11 =\
    \ 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long min12 = 0;\n\
    \        long sum13 = 0;\n        long max13 = 0;\n        long min13 = 0;\n \
    \       long sum14 = 0;\n        long max14 = 0;\n        long min14 = 0;\n  \
    \      long sum15 = 0;\n        long max15 = 0;\n        long min15 = 0;\n   \
    \     long sum16 = 0;\n        long max16 = 0;\n        long min16 = 0;\n    \
    \    long sum17 = 0;\n        long max17 = 0;\n        long min17 = 0;\n     \
    \   long sum18 = 0;\n        long max18 = 0;\n        long min18 = 0;\n      \
    \  long sum19 = 0;\n        long max19 = 0;\n        long min19 = 0;\n       \
    \ long sum20 = 0;\n        long max20 = 0;\n        long min20 = 0;\n        long\
    \ sum21 = 0;\n        long max21 = 0;\n        long min21 = 0;\n        long sum22\
    \ = 0;\n        long max22 = 0;\n        long min22 = 0;\n        long sum23 =\
    \ 0;\n        long max23 = 0;\n        long min23 = 0;\n        long sum24 = 0;\n\
    \        long max24 = 0;\n        long min24 = 0;\n        long sum25 = 0;\n \
    \       long max25 = 0;\n        long min25 = 0;\n        long sum26 = 0;\n  \
    \      long max26 = 0;\n        long min26 = 0;\n        long sum27 = 0;\n   \
    \     long max27 = 0;\n        long min27 = 0;\n        long sum28 = 0;\n    \
    \    long max28 = 0;\n        long min28 = 0;\n        long sum29 = 0;\n     \
    \   long max29 = 0;\n        long min29 = 0;\n        long sum30 = 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppvcmozvj.java:106: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        for(int i = 0; i<arr.size()-k; i++)\
    \ {\n            sum += arr.get(i);\n            max = Math.max(max, sum);\n \
    \       }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4zsda8ln.java:27)\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4\
    \ = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n\
    \        long sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n   \
    \     long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n    \
    \    long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n     \
    \   long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n      \
    \  long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n       \
    \ long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long\
    \ sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29\
    \ = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 =\
    \ 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n\
    \        long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n \
    \       long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n  \
    \      long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n   \
    \     long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n    \
    \    long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n     \
    \   long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n      \
    \  long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n       \
    \ long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long\
    \ sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63\
    \ = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long sum66 =\
    \ 0;\n        long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n\
    \        long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n \
    \       long sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n  \
    \      long sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n   \
    \     long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n    \
    \    long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n     \
    \   long sum85 = 0;\n        long sum86 = 0;\n        \n    }\n    public static\
    \ void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpioxzt3qh.java:105: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        long maxSumIndex = 0;\n        for(int\
    \ i = 0; i < k; i++) {\n            sum += arr.get(i);\n        }\n        for(int\
    \ i = k; i < arr.size(); i++) {\n            sum += arr.get(i);\n            if(sum\
    \ > maxSum) {\n                maxSum = sum;\n                maxSumIndex = i;\n\
    \            }\n        }\n        return maxSum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp13y8fx2w.java:24: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1659794330
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4\
    \ = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n\
    \        long sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n   \
    \     long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n    \
    \    long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n     \
    \   long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n      \
    \  long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n       \
    \ long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long\
    \ sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29\
    \ = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 =\
    \ 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n\
    \        long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n \
    \       long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n  \
    \      long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n   \
    \     long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n    \
    \    long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n     \
    \   long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n      \
    \  long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n       \
    \ long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long\
    \ sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63\
    \ = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long sum66 =\
    \ 0;\n        long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n\
    \        long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n \
    \       long sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n  \
    \      long sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n   \
    \     long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n    \
    \    long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n     \
    \   long sum85 = 0;\n        long sum86 = 0;\n        \n    }\n    public static\
    \ void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpioxzt3qh.java:105: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        for(int i = 0; i < k; i++) {\n   \
    \         sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum2 += arr.get(i);\n        }\n        return sum + sum2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr3ivwm_q.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        long sumOfTwoDigits\
    \ = 0;\n        long sumOfThreeDigits = 0;\n        long sumOfFourDigits = 0;\n\
    \        long sumOfFiveDigits = 0;\n        long sumOfSixDigits = 0;\n       \
    \ long sumOfSevenDigits = 0;\n        long sumOfEightDigits = 0;\n        long\
    \ sumOfNineDigits = 0;\n        long sumOfTenDigits = 0;\n        long sumOfElevenDigits\
    \ = 0;\n        long sumOfTwelveDigits = 0;\n        long sumOfThirteenDigits\
    \ = 0;\n        long sumOfFourteenDigits = 0;\n        long sumOfFifteenDigits\
    \ = 0;\n        long sumOfSixteenDigits = 0;\n        long sumOfSeventeenDigits\
    \ = 0;\n        long sumOfEighteenDigits = 0;\n        long sumOfNineteenDigits\
    \ = 0;\n        long sumOfTwentyDigits = 0;\n        long sumOfTwentyOneDigits\
    \ = 0;\n        long sumOfTwentyTwoDigits = 0;\n        long sumOfTwentyThreeDigits\
    \ = 0;\n        long sumOfTwentyFourDigits = 0;\n        long sumOfTwentyFiveDigits\
    \ = 0;\n        long sumOfTwentySixDigits = 0;\n        long sumOfTwentySevenDigits\
    \ = 0;\n        long sumOfTwentyEightDigits = 0;\n        long sumOfTwentyNineDigits\
    \ = 0;\n        long sumOfTwentyTenDigits = 0;\n        long sumOfTwentyElevenDigits\
    \ = 0;\n        long sumOfTwentyTwelveDigits = 0;\n        long sumOfTwentyThirteenDigits\
    \ = 0;\n        long sumOfTwentyFourteenDigits = 0;\n        long sumOfTwentyFifteenDigits\
    \ = 0;\n        long sumOfTwentySixteenDigits = 0;\n        long sumOfTwentySeventeenDigits\
    \ = 0;\n        long sumOfTwentyEighteenDigits = 0;\n        long sumOfTwentyNineteenDigits\
    \ = 0;\n        long sumOfTwentyTwentyDigits = 0;\n        long sumOfTwentyTwentyOneDigits\
    \ = 0;\n        long sumOfTwentyTwentyTwoDigits = 0;\n        long sumOfTwentyTwentyThreeDigits\
    \ = 0;\n        long sumOfTwentyTwentyFourDigits = 0;\n        long sumOfTwentyTwentyFiveDigits\
    \ = 0;\n        long sumOfTwentyTwenty\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpunnw6t5m.java:65: error: ';' expected\n        long sumOfTwentyTwenty\n\
    \                              ^\n1 error\n"
  stdout: ''
  timestamp: 1659794330
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        for(int i = 0; i < k; i++) {\n   \
    \         sum += arr.get(i);\n            sum2 += arr.get(i);\n        }\n   \
    \     return sum + sum2;\n    }\n    public static void main(String[] args) {\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy785wuy7.java:27)\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        for(int i = 0; i < k; i++) {\n    \
    \        sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum += arr.get(i);\n            max = Math.max(max, sum);\n\
    \        }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdq90_n5v.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4\
    \ = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n\
    \        long sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n   \
    \     long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n    \
    \    long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n     \
    \   long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n      \
    \  long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n       \
    \ long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long\
    \ sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29\
    \ = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 =\
    \ 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n\
    \        long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n \
    \       long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n  \
    \      long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n   \
    \     long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n    \
    \    long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n     \
    \   long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n      \
    \  long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n       \
    \ long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long\
    \ sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63\
    \ = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long sum66 =\
    \ 0;\n        long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n\
    \        long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n \
    \       long sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n  \
    \      long sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n   \
    \     long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n    \
    \    long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n     \
    \   long sum85 = 0;\n        long sum86 = 0;\n        \n    }\n    public static\
    \ void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpioxzt3qh.java:105: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            sum += arr.get(i);\n            sum2 += arr.get(i);\n       \
    \     if(sum2 > k) {\n                sum2 -= k;\n            }\n        }\n \
    \       return sum;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l,\
    \ (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) ==\
    \ (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5zcp6q32.java:30)\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        long maxSumIndex = 0;\n        long\
    \ maxSumIndex2 = 0;\n        long maxSumIndex3 = 0;\n        long maxSumIndex4\
    \ = 0;\n        long maxSumIndex5 = 0;\n        long maxSumIndex6 = 0;\n     \
    \   long maxSumIndex7 = 0;\n        long maxSumIndex8 = 0;\n        long maxSumIndex9\
    \ = 0;\n        long maxSumIndex10 = 0;\n        long maxSumIndex11 = 0;\n   \
    \     long maxSumIndex12 = 0;\n        long maxSumIndex13 = 0;\n        long maxSumIndex14\
    \ = 0;\n        long maxSumIndex15 = 0;\n        long maxSumIndex16 = 0;\n   \
    \     long maxSumIndex17 = 0;\n        long maxSumIndex18 = 0;\n        long maxSumIndex19\
    \ = 0;\n        long maxSumIndex20 = 0;\n        long maxSumIndex21 = 0;\n   \
    \     long maxSumIndex22 = 0;\n        long maxSumIndex23 = 0;\n        long maxSumIndex24\
    \ = 0;\n        long maxSumIndex25 = 0;\n        long maxSumIndex26 = 0;\n   \
    \     long maxSumIndex27 = 0;\n        long maxSumIndex28 = 0;\n        long maxSumIndex29\
    \ = 0;\n        long maxSumIndex30 = 0;\n        long maxSumIndex31 = 0;\n   \
    \     long maxSumIndex32 = 0;\n        long maxSumIndex33 = 0;\n        long maxSumIndex34\
    \ = 0;\n        long maxSumIndex35 = 0;\n        long maxSumIndex36 = 0;\n   \
    \     long maxSumIndex37 = 0;\n        long maxSumIndex38 = 0;\n        long maxSumIndex39\
    \ = 0;\n        long maxSumIndex40 = 0;\n        long maxSumIndex41 = 0;\n   \
    \     long maxSumIndex42 = 0;\n        long maxSumIndex43 = 0;\n        long maxSumIndex44\
    \ = 0;\n        long maxSumIndex45 = 0;\n        long maxSumIndex46 = 0;\n   \
    \     long maxSumIndex47 = 0;\n        long maxSumIndex48 = 0;\n        long maxSumIndex49\
    \ = 0;\n        long maxSumIndex50 = 0;\n        long maxSumIndex51 = 0;\n   \
    \     long maxSumIndex52 = 0;\n        long maxSumIndex53 = 0;\n        long maxSumIndex54\
    \ = 0;\n        long maxSumIndex55 = 0;\n        long maxSumIndex56 = 0;\n   \
    \     long maxSumIndex57 = 0;\n        long maxSumIndex58 = 0;\n        long maxSumIndex59\
    \ = 0;\n        long maxSumIndex60 = 0;\n        long maxSumIndex61 = 0;\n   \
    \     long maxSumIndex62 = 0;\n        long maxSumIndex63 = 0;\n        long \n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqlewz3oh.java:83: error: not a statement\n        long \n     \
    \   ^\n/tmp/tmpqlewz3oh.java:83: error: ';' expected\n        long \n        \
    \    ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4\
    \ = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n\
    \        long sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n   \
    \     long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n    \
    \    long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n     \
    \   long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n      \
    \  long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n       \
    \ long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long\
    \ sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29\
    \ = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 =\
    \ 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n\
    \        long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n \
    \       long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n  \
    \      long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n   \
    \     long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n    \
    \    long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n     \
    \   long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n      \
    \  long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n       \
    \ long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long\
    \ sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63\
    \ = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long sum66 =\
    \ 0;\n        long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n\
    \        long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n \
    \       long sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n  \
    \      long sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n   \
    \     long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n    \
    \    long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n     \
    \   long sum85 = 0;\n        long sum86 = 0;\n        \n    }\n    public static\
    \ void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpioxzt3qh.java:105: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        long maxSumIndex = 0;\n        for(int\
    \ i = 0; i<arr.size(); i++) {\n            sum += arr.get(i);\n            if(sum\
    \ > maxSum) {\n                maxSum = sum;\n                maxSumIndex = i;\n\
    \            }\n        }\n        for(int i = maxSumIndex; i<arr.size(); i++)\
    \ {\n            sum += arr.get(i);\n            if(sum > maxSum) {\n        \
    \        maxSum = sum;\n                maxSumIndex = i;\n            }\n    \
    \    }\n        for(int i = maxSumIndex; i<arr.size(); i++) {\n            sum\
    \ += arr.get(i);\n            if(sum > maxSum) {\n                maxSum = sum;\n\
    \                maxSumIndex = i;\n            }\n        }\n        for(int i\
    \ = maxSumIndex; i<arr.size(); i++) {\n            sum += arr.get(i);\n      \
    \      if(sum > maxSum) {\n                maxSum = sum;\n                maxSumIndex\
    \ = i;\n            }\n        }\n        for(int i = maxSumIndex; i<arr.size();\
    \ i++) {\n            sum += arr.get(i);\n            if(sum > maxSum) {\n   \
    \             maxSum = sum;\n                maxSumIndex = i;\n            }\n\
    \        }\n        for(int i = maxSumIndex; i<arr.size(); i++) {\n          \
    \  sum += arr.get(i);\n            if(sum > maxSum) {\n                maxSum\
    \ = sum;\n                maxSumIndex = i;\n            }\n        }\n       \
    \ for(int i = maxSumIndex; i<arr.size(); i++) {\n            sum += arr.get(i);\n\
    \            if(sum > maxSum) {\n                maxSum = sum;\n             \
    \   maxSumIndex = i;\n            }\n        }\n        for(int i = maxSumIndex;\
    \ i<arr.size(); i++) {\n            sum += arr.get(i);\n            if(sum > maxSum)\
    \ {\n                maxSum = sum;\n                maxSumIndex = i;\n       \
    \     }\n        }\n        for(int i = maxSumIndex; i<arr.size(); i++) {\n  \
    \          sum += arr.get(i);\n            if(sum > maxSum) {\n              \
    \  maxSum = sum;\n                maxSumIndex = i;\n            }\n        }\n\
    \        for(int i = maxSumIndex; i<arr.size(); i++) {\n            sum += arr.get(i);\n\
    \            if(sum > maxSum) {\n                maxSum = sum;\n             \
    \   maxSumIndex = i;\n            }\n        }\n        for(int i = maxSumIndex;\
    \ i<arr.size(); i++) {\n            sum += arr.get(i);\n            if(sum > maxSum)\
    \ {\n                maxSum = sum;\n                maxSumIndex = i;\n       \
    \     }\n        }\n        for(int i = maxSumIndex; i<arr.size(); i++) {\n  \
    \          sum += arr.get(i);\n            if(sum > maxSum) {\n              \
    \  maxSum = sum;\n                maxSumIndex = i;\n            }\n        }\n\
    \        for(int i = max\n    }\n    public static void main(String[] args) {\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj4mdptt4.java:105: error: ';' expected\n        for(int i = max\n\
    \                       ^\n/tmp/tmpj4mdptt4.java:106: error: illegal start of\
    \ expression\n    }\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659794330
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = Long.MAX_VALUE;\n      \
    \  long sumOfTwoDigits = 0;\n        long sumOfThreeDigits = 0;\n        long\
    \ sumOfFourDigits = 0;\n        long sumOfFiveDigits = 0;\n        long sumOfSixDigits\
    \ = 0;\n        long sumOfSevenDigits = 0;\n        long sumOfEightDigits = 0;\n\
    \        long sumOfNineDigits = 0;\n        long sumOfTenDigits = 0;\n       \
    \ long sumOfElevenDigits = 0;\n        long sumOfTwelveDigits = 0;\n        long\
    \ sumOfThirteenDigits = 0;\n        long sumOfFourteenDigits = 0;\n        long\
    \ sumOfFifteenDigits = 0;\n        long sumOfSixteenDigits = 0;\n        long\
    \ sumOfSeventeenDigits = 0;\n        long sumOfEighteenDigits = 0;\n        long\
    \ sumOfNineteenDigits = 0;\n        long sumOfTwentyDigits = 0;\n        long\
    \ sumOfTwentyOneDigits = 0;\n        long sumOfTwentyTwoDigits = 0;\n        long\
    \ sumOfTwentyThreeDigits = 0;\n        long sumOfTwentyFourDigits = 0;\n     \
    \   long sumOfTwentyFiveDigits = 0;\n        long sumOfTwentySixDigits = 0;\n\
    \        long sumOfTwentySevenDigits = 0;\n        long sumOfTwentyEightDigits\
    \ = 0;\n        long sumOfTwentyNineDigits = 0;\n        long sumOfTwentyTenDigits\
    \ = 0;\n        long sumOfTwentyElevenDigits = 0;\n        long sumOfTwentyTwelveDigits\
    \ = 0;\n        long sumOfTwentyThirteenDigits = 0;\n        long sumOfTwentyFourteenDigits\
    \ = 0;\n        long sumOfTwentyFifteenDigits = 0;\n        long sumOfTwentySixteenDigits\
    \ = 0;\n        long sumOfTwentySeventeenDigits = 0;\n        long sumOfTwentyEighteenDigits\
    \ = 0;\n        long sumOfTwentyNineteenDigits = 0;\n        long sumOfTwentyTwentyDigits\
    \ = 0;\n        long sumOfTwentyTwentyOneDigits = 0;\n        long sumOfTwentyTwentyTwoDigits\
    \ = 0;\n        long sumOfTwentyTwentyThreeDigits = 0;\n        long sumOfTwentyTwentyFourDigits\
    \ = 0;\n        long sumOfTwentyTwentyFiveDigits = 0;\n        long sumOfTwent\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp05x5w7kk.java:65: error: ';' expected\n        long sumOfTwent\n\
    \                       ^\n1 error\n"
  stdout: ''
  timestamp: 1659794330
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i<arr.size()-k; i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ix8pt6f.java:25)\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        for(int i = 0; i < k; i++) {\n \
    \           sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum += arr.get(i);\n            if(sum > maxSum) {\n   \
    \             maxSum = sum;\n            }\n        }\n        return maxSum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpag7by6n1.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        for(int i = 0; i< arr.size()-k; i++)\
    \ {\n            sum += arr.get(i);\n        }\n        for(int i = arr.size()-k;\
    \ i < arr.size(); i++) {\n            sum2 += arr.get(i);\n        }\n       \
    \ return sum + sum2;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppnc0cgnd.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = arr.size()-k; i < arr.size(); i++) {\n\
    \                              ^\n1 error\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        long maxSumIndex = 0;\n        for(int\
    \ i = 0; i < k; i++) {\n            sum += arr.get(i);\n        }\n        for(int\
    \ i = k; i < arr.size(); i++) {\n            sum += arr.get(i);\n            if(sum\
    \ > maxSum) {\n                maxSum = sum;\n                maxSumIndex = i;\n\
    \            }\n        }\n        return maxSum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp13y8fx2w.java:24: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1659794330
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = Long.MAX_VALUE;\n      \
    \  for(int i = 0; i < k; i++) {\n            max = Math.max(max, arr.get(i));\n\
    \            min = Math.min(min, arr.get(i));\n        }\n        for(int i =\
    \ 0; i < k; i++) {\n            sum += arr.get(i);\n            sum += (arr.get(i)\
    \ - min) * (arr.get(i) - max);\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpurros5uc.java:32)\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        for(int i =\
    \ 0; i < k; i++) {\n            sum += arr.get(i);\n            max = Math.max(max,\
    \ arr.get(i));\n            min = Math.min(min, arr.get(i));\n        }\n    \
    \    sum += max;\n        sum += min;\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj9awh6gh.java:31)\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        long sumOfTwoDigits\
    \ = 0;\n        long sumOfThreeDigits = 0;\n        long sumOfFourDigits = 0;\n\
    \        long sumOfFiveDigits = 0;\n        long sumOfSixDigits = 0;\n       \
    \ long sumOfSevenDigits = 0;\n        long sumOfEightDigits = 0;\n        long\
    \ sumOfNineDigits = 0;\n        long sumOfTenDigits = 0;\n        long sumOfElevenDigits\
    \ = 0;\n        long sumOfTwelveDigits = 0;\n        long sumOfElevenDigits =\
    \ 0;\n        long sumOfTwelveDigits = 0;\n        long sumOfElevenDigits = 0;\n\
    \        long sumOfTwelveDigits = 0;\n        long sumOfElevenDigits = 0;\n  \
    \      long sumOfTwelveDigits = 0;\n        long sumOfElevenDigits = 0;\n    \
    \    long sumOfTwelveDigits = 0;\n        long sumOfElevenDigits = 0;\n      \
    \  long sumOfTwelveDigits = 0;\n        long sumOfElevenDigits = 0;\n        long\
    \ sumOfTwelveDigits = 0;\n        long sumOfElevenDigits = 0;\n        long sumOfTwelveDigits\
    \ = 0;\n        long sumOfElevenDigits = 0;\n        long sumOfTwelveDigits =\
    \ 0;\n        long sumOfElevenDigits = 0;\n        long sumOfTwelveDigits = 0;\n\
    \        long sumOfElevenDigits = 0;\n        long sumOfTwelveDigits = 0;\n  \
    \      long sumOfElevenDigits = 0;\n        long sumOfTwelveDigits = 0;\n    \
    \    long sumOfElevenDigits = 0;\n        long sumOfTwelveDigits = 0;\n      \
    \  long sumOfElevenDigits = 0;\n        long sumOfTwelveDigits = 0;\n        long\
    \ sumOfElevenDigits = 0;\n        long sumOfTwelveDigits = 0;\n        long sumOfElevenDigits\
    \ = 0;\n        long sumOfTwelveDigits = 0;\n        long sumOfElevenDigits =\
    \ 0;\n        long sumOfTwelveDigits = 0;\n        long sumOfElevenDigits = 0;\n\
    \        long sumOfTwelveDigits = 0;\n        long sumOfElevenDigits = 0;\n  \
    \      long sumOfTwelveDigits = 0;\n        long sumOfElevenDigits = 0;\n    \
    \    long sumOfTwelveDigits = 0;\n        long sumOfElevenDigits = 0;\n      \
    \  long sumOfTwelveDigits = 0;\n        long sumOfElevenDigits = 0;\n        long\
    \ sumOfTwelveDigits = 0;\n        long \n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkhgx702n.java:74: error: not a statement\n        long \n     \
    \   ^\n/tmp/tmpkhgx702n.java:74: error: ';' expected\n        long \n        \
    \    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659794330
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        for(int i = 0; i < k; i++) {\n   \
    \         sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum2 += arr.get(i);\n        }\n        return sum + sum2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr3ivwm_q.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i<arr.size()-k; i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ix8pt6f.java:25)\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        for(int i = 0; i < k; i++) {\n \
    \           sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum += arr.get(i);\n            maxSum = Math.max(maxSum,\
    \ sum);\n        }\n        return maxSum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjrv4ucs7.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4\
    \ = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n\
    \        long sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n   \
    \     long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n    \
    \    long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n     \
    \   long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n      \
    \  long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n       \
    \ long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long\
    \ sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29\
    \ = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 =\
    \ 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n\
    \        long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n \
    \       long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n  \
    \      long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n   \
    \     long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n    \
    \    long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n     \
    \   long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n      \
    \  long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n       \
    \ long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long\
    \ sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63\
    \ = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long sum66 =\
    \ 0;\n        long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n\
    \        long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n \
    \       long sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n  \
    \      long sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n   \
    \     long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n    \
    \    long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n     \
    \   long sum85 = 0;\n        long sum86 = 0;\n        \n    }\n    public static\
    \ void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpioxzt3qh.java:105: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = Long.MAX_VALUE;\n      \
    \  for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n            max\
    \ = Math.max(max, arr.get(i));\n            min = Math.min(min, arr.get(i));\n\
    \        }\n        sum += max;\n        sum += min;\n        return sum;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq3et1niy.java:31)\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        long sum2 =\
    \ 0;\n        long max2 = 0;\n        long min2 = 0;\n        long sum3 = 0;\n\
    \        long max3 = 0;\n        long min3 = 0;\n        long sum4 = 0;\n    \
    \    long max4 = 0;\n        long min4 = 0;\n        long sum5 = 0;\n        long\
    \ max5 = 0;\n        long min5 = 0;\n        long sum6 = 0;\n        long max6\
    \ = 0;\n        long min6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n\
    \        long min7 = 0;\n        long sum8 = 0;\n        long max8 = 0;\n    \
    \    long min8 = 0;\n        long sum9 = 0;\n        long max9 = 0;\n        long\
    \ min9 = 0;\n        long sum10 = 0;\n        long max10 = 0;\n        long min10\
    \ = 0;\n        long sum11 = 0;\n        long max11 = 0;\n        long min11 =\
    \ 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long min12 = 0;\n\
    \        long sum13 = 0;\n        long max13 = 0;\n        long min13 = 0;\n \
    \       long sum14 = 0;\n        long max14 = 0;\n        long min14 = 0;\n  \
    \      long sum15 = 0;\n        long max15 = 0;\n        long min15 = 0;\n   \
    \     long sum16 = 0;\n        long max16 = 0;\n        long min16 = 0;\n    \
    \    long sum17 = 0;\n        long max17 = 0;\n        long min17 = 0;\n     \
    \   long sum18 = 0;\n        long max18 = 0;\n        long min18 = 0;\n      \
    \  long sum19 = 0;\n        long max19 = 0;\n        long min19 = 0;\n       \
    \ long sum20 = 0;\n        long max20 = 0;\n        long min20 = 0;\n        long\
    \ sum21 = 0;\n        long max21 = 0;\n        long min21 = 0;\n        long sum22\
    \ = 0;\n        long max22 = 0;\n        long min22 = 0;\n        long sum23 =\
    \ 0;\n        long max23 = 0;\n        long min23 = 0;\n        long sum24 = 0;\n\
    \        long max24 = 0;\n        long min24 = 0;\n        long sum25 = 0;\n \
    \       long max25 = 0;\n        long min25 = 0;\n        long sum26 = 0;\n  \
    \      long max26 = 0;\n        long min26 = 0;\n        long sum27 = 0;\n   \
    \     long max27 = 0;\n        long min27 = 0;\n        long sum28 = 0;\n    \
    \    long max28 = 0;\n        long min28 = 0;\n        long sum29 = 0;\n     \
    \   long max29 = 0;\n        long min29 = 0;\n        long sum30 = 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppvcmozvj.java:106: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        for(int i =\
    \ 0; i < k; i++) {\n            sum += arr.get(i);\n        }\n        for(int\
    \ i = k; i < arr.size(); i++) {\n            sum += arr.get(i);\n            max\
    \ = Math.max(max, sum);\n            min = Math.min(min, sum);\n        }\n  \
    \      return sum + max - min;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0yndpy63.java:24: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1659794330
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        for(int i = 0; i < k; i++) {\n   \
    \         sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum2 += arr.get(i);\n        }\n        return sum + sum2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr3ivwm_q.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i<arr.size()-k; i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ix8pt6f.java:25)\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        for(int i = 0; i < k; i++) {\n   \
    \         sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum2 += arr.get(i);\n        }\n        return sum + sum2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr3ivwm_q.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        for(int i = 0; i < k; i++) {\n   \
    \         sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum2 += arr.get(i);\n        }\n        return sum + sum2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr3ivwm_q.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        long sum2 =\
    \ 0;\n        long max2 = 0;\n        long min2 = 0;\n        long sum3 = 0;\n\
    \        long max3 = 0;\n        long min3 = 0;\n        long sum4 = 0;\n    \
    \    long max4 = 0;\n        long min4 = 0;\n        long sum5 = 0;\n        long\
    \ max5 = 0;\n        long min5 = 0;\n        long sum6 = 0;\n        long max6\
    \ = 0;\n        long min6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n\
    \        long min7 = 0;\n        long sum8 = 0;\n        long max8 = 0;\n    \
    \    long min8 = 0;\n        long sum9 = 0;\n        long max9 = 0;\n        long\
    \ min9 = 0;\n        long sum10 = 0;\n        long max10 = 0;\n        long min10\
    \ = 0;\n        long sum11 = 0;\n        long max11 = 0;\n        long min11 =\
    \ 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long min12 = 0;\n\
    \        long sum13 = 0;\n        long max13 = 0;\n        long min13 = 0;\n \
    \       long sum14 = 0;\n        long max14 = 0;\n        long min14 = 0;\n  \
    \      long sum15 = 0;\n        long max15 = 0;\n        long min15 = 0;\n   \
    \     long sum16 = 0;\n        long max16 = 0;\n        long min16 = 0;\n    \
    \    long sum17 = 0;\n        long max17 = 0;\n        long min17 = 0;\n     \
    \   long sum18 = 0;\n        long max18 = 0;\n        long min18 = 0;\n      \
    \  long sum19 = 0;\n        long max19 = 0;\n        long min19 = 0;\n       \
    \ long sum20 = 0;\n        long max20 = 0;\n        long min20 = 0;\n        long\
    \ sum21 = 0;\n        long max21 = 0;\n        long min21 = 0;\n        long sum22\
    \ = 0;\n        long max22 = 0;\n        long min22 = 0;\n        long sum23 =\
    \ 0;\n        long max23 = 0;\n        long min23 = 0;\n        long sum24 = 0;\n\
    \        long max24 = 0;\n        long min24 = 0;\n        long sum25 = 0;\n \
    \       long max25 = 0;\n        long min25 = 0;\n        long sum26 = 0;\n  \
    \      long max26 = 0;\n        long min26 = 0;\n        long sum27 = 0;\n   \
    \     long max27 = 0;\n        long min27 = 0;\n        long sum28 = 0;\n    \
    \    long max28 = 0;\n        long min28 = 0;\n        long sum29 = 0;\n     \
    \   long max29 = 0;\n        long min29 = 0;\n        long sum30 = 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppvcmozvj.java:106: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        for(int i = 0; i < k; i++) {\n   \
    \         sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum2 += arr.get(i);\n        }\n        return sum + sum2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr3ivwm_q.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        long sum2 =\
    \ 0;\n        long max2 = 0;\n        long min2 = 0;\n        long sum3 = 0;\n\
    \        long max3 = 0;\n        long min3 = 0;\n        long sum4 = 0;\n    \
    \    long max4 = 0;\n        long min4 = 0;\n        long sum5 = 0;\n        long\
    \ max5 = 0;\n        long min5 = 0;\n        long sum6 = 0;\n        long max6\
    \ = 0;\n        long min6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n\
    \        long min7 = 0;\n        long sum8 = 0;\n        long max8 = 0;\n    \
    \    long min8 = 0;\n        long sum9 = 0;\n        long max9 = 0;\n        long\
    \ min9 = 0;\n        long sum10 = 0;\n        long max10 = 0;\n        long min10\
    \ = 0;\n        long sum11 = 0;\n        long max11 = 0;\n        long min11 =\
    \ 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long min12 = 0;\n\
    \        long sum13 = 0;\n        long max13 = 0;\n        long min13 = 0;\n \
    \       long sum14 = 0;\n        long max14 = 0;\n        long min14 = 0;\n  \
    \      long sum15 = 0;\n        long max15 = 0;\n        long min15 = 0;\n   \
    \     long sum16 = 0;\n        long max16 = 0;\n        long min16 = 0;\n    \
    \    long sum17 = 0;\n        long max17 = 0;\n        long min17 = 0;\n     \
    \   long sum18 = 0;\n        long max18 = 0;\n        long min18 = 0;\n      \
    \  long sum19 = 0;\n        long max19 = 0;\n        long min19 = 0;\n       \
    \ long sum20 = 0;\n        long max20 = 0;\n        long min20 = 0;\n        long\
    \ sum21 = 0;\n        long max21 = 0;\n        long min21 = 0;\n        long sum22\
    \ = 0;\n        long max22 = 0;\n        long min22 = 0;\n        long sum23 =\
    \ 0;\n        long max23 = 0;\n        long min23 = 0;\n        long sum24 = 0;\n\
    \        long max24 = 0;\n        long min24 = 0;\n        long sum25 = 0;\n \
    \       long max25 = 0;\n        long min25 = 0;\n        long sum26 = 0;\n  \
    \      long max26 = 0;\n        long min26 = 0;\n        long sum27 = 0;\n   \
    \     long max27 = 0;\n        long min27 = 0;\n        long sum28 = 0;\n    \
    \    long max28 = 0;\n        long min28 = 0;\n        long sum29 = 0;\n     \
    \   long max29 = 0;\n        long min29 = 0;\n        long sum30 = 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppvcmozvj.java:106: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        for(int i = 0; i < k; i++) {\n    \
    \        sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum += arr.get(i);\n            if(sum > max) {\n      \
    \          max = sum;\n            }\n        }\n        return max;\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoc6j9ex6.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        long maxSumIndex = 0;\n        for(int\
    \ i = 0; i<arr.size()-k; i++) {\n            sum += arr.get(i);\n            if(sum\
    \ > maxSum) {\n                maxSum = sum;\n                maxSumIndex = i;\n\
    \            }\n        }\n        sum += arr.get(maxSumIndex);\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpagfpervt.java:28: error: incompatible types: possible lossy conversion\
    \ from long to int\n        sum += arr.get(maxSumIndex);\n                   \
    \    ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659794332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4\
    \ = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n\
    \        long sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n   \
    \     long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n    \
    \    long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n     \
    \   long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n      \
    \  long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n       \
    \ long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long\
    \ sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29\
    \ = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 =\
    \ 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n\
    \        long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n \
    \       long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n  \
    \      long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n   \
    \     long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n    \
    \    long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n     \
    \   long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n      \
    \  long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n       \
    \ long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long\
    \ sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63\
    \ = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long sum66 =\
    \ 0;\n        long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n\
    \        long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n \
    \       long sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n  \
    \      long sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n   \
    \     long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n    \
    \    long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n     \
    \   long sum85 = 0;\n        long sum86 = 0;\n        \n    }\n    public static\
    \ void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpioxzt3qh.java:105: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        for(int i =\
    \ 0; i < k; i++) {\n            sum += arr.get(i);\n        }\n        for(int\
    \ i = k; i < arr.size(); i++) {\n            sum += arr.get(i);\n            max\
    \ = Math.max(max, sum);\n            min = Math.min(min, sum);\n        }\n  \
    \      return sum + max - min;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0yndpy63.java:24: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1659794330
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i<k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphafptfy4.java:26)\n"
  stdout: ''
  timestamp: 1659794332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        for(int i = 0; i < k; i++) {\n   \
    \         sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum2 += arr.get(i);\n        }\n        return sum + sum2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr3ivwm_q.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        long maxSumIndex = 0;\n        long\
    \ maxSumValue = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n            if(sum > maxSum) {\n                maxSum = sum;\n\
    \                maxSumIndex = i;\n                maxSumValue = arr.get(maxSumIndex);\n\
    \            }\n        }\n        return maxSum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2ci4rmlj.java:25: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n/tmp/tmp2ci4rmlj.java:30: error: incompatible types: possible lossy\
    \ conversion from long to int\n                maxSumValue = arr.get(maxSumIndex);\n\
    \                                      ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659794332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        long max2 =\
    \ 0;\n        long min2 = 0;\n        long max3 = 0;\n        long min3 = 0;\n\
    \        long max4 = 0;\n        long min4 = 0;\n        long max5 = 0;\n    \
    \    long min5 = 0;\n        long max6 = 0;\n        long min6 = 0;\n        long\
    \ max7 = 0;\n        long min7 = 0;\n        long max8 = 0;\n        long min8\
    \ = 0;\n        long max9 = 0;\n        long min9 = 0;\n        long max10 = 0;\n\
    \        long min10 = 0;\n        long max11 = 0;\n        long min11 = 0;\n \
    \       long max12 = 0;\n        long min12 = 0;\n        long max13 = 0;\n  \
    \      long min13 = 0;\n        long max14 = 0;\n        long min14 = 0;\n   \
    \     long max15 = 0;\n        long min15 = 0;\n        long max16 = 0;\n    \
    \    long min16 = 0;\n        long max17 = 0;\n        long min17 = 0;\n     \
    \   long max18 = 0;\n        long min18 = 0;\n        long max19 = 0;\n      \
    \  long min19 = 0;\n        long max20 = 0;\n        long min20 = 0;\n       \
    \ long max21 = 0;\n        long min21 = 0;\n        long max22 = 0;\n        long\
    \ min22 = 0;\n        long max23 = 0;\n        long min23 = 0;\n        long max24\
    \ = 0;\n        long min24 = 0;\n        long max25 = 0;\n        long min25 =\
    \ 0;\n        long max26 = 0;\n        long min26 = 0;\n        long max27 = 0;\n\
    \        long min27 = 0;\n        long max28 = 0;\n        long min28 = 0;\n \
    \       long max29 = 0;\n        long min29 = 0;\n        long max30 = 0;\n  \
    \      long min30 = 0;\n        long max31 = 0;\n        long min31 = 0;\n   \
    \     long max32 = 0;\n        long min32 = 0;\n        long max33 = 0;\n    \
    \    long min33 = 0;\n        long max34 = 0;\n        long min34 = 0;\n     \
    \   long max35 = 0;\n        long min35 = 0;\n        long max36 = 0;\n      \
    \  long min36 = 0;\n        long max37 = 0;\n        long min37 = 0;\n       \
    \ long max38 = 0;\n        long min38 = 0;\n        long max39 = 0;\n        long\
    \ min39 = 0;\n        long max40 = 0;\n        long min40 = 0;\n        long max41\
    \ = 0;\n        long min41 = 0;\n        long max42 = 0;\n        long min42 =\
    \ 0;\n        long max43 = 0;\n        long min43 = 0;\n        \n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpseqprft2.java:106: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1659794332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        long sumOfTwo\
    \ = 0;\n        long sumOfThree = 0;\n        long sumOfFour = 0;\n        long\
    \ sumOfFive = 0;\n        long sumOfSix = 0;\n        long sumOfSeven = 0;\n \
    \       long sumOfEight = 0;\n        long sumOfNine = 0;\n        long sumOfTen\
    \ = 0;\n        long sumOfEleven = 0;\n        long sumOfTwelve = 0;\n       \
    \ long sumOfThirteen = 0;\n        long sumOfFourteen = 0;\n        long sumOfFifteen\
    \ = 0;\n        long sumOfSixteen = 0;\n        long sumOfSeventeen = 0;\n   \
    \     long sumOfEighteen = 0;\n        long sumOfNineteen = 0;\n        long sumOfTwenty\
    \ = 0;\n        long sumOfTwentyOne = 0;\n        long sumOfTwentyTwo = 0;\n \
    \       long sumOfTwentyThree = 0;\n        long sumOfTwentyFour = 0;\n      \
    \  long sumOfTwentyFive = 0;\n        long sumOfTwentySix = 0;\n        long sumOfTwentySeven\
    \ = 0;\n        long sumOfTwentyEight = 0;\n        long sumOfTwentyNine = 0;\n\
    \        long sumOfTwentyTen = 0;\n        long sumOfTwentyEleven = 0;\n     \
    \   long sumOfTwentyTwelve = 0;\n        long sumOfTwentyThirteen = 0;\n     \
    \   long sumOfTwentyFourteen = 0;\n        long sumOfTwentyFifteen = 0;\n    \
    \    long sumOfTwentySixteen = 0;\n        long sumOfTwentySeventeen = 0;\n  \
    \      long sumOfTwentyEighteen = 0;\n        long sumOfTwentyNineteen = 0;\n\
    \        long sumOfTwentyTwenty = 0;\n        long sumOfTwentyTwentyOne = 0;\n\
    \        long sumOfTwentyTwentyTwo = 0;\n        long sumOfTwentyTwentyThree =\
    \ 0;\n        long sumOfTwentyTwentyFour = 0;\n        long sumOfTwentyTwentyFive\
    \ = 0;\n        long sumOfTwentyTwentySix = 0;\n        long sumOfTwentyTwentySeven\
    \ = 0;\n        long sumOfTwentyTwentyEight = 0;\n        long sumOfTwentyTwentyNine\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptdlh1e9y.java:68: error: ';' expected\n        long sumOfTwentyTwentyNine\n\
    \                                  ^\n1 error\n"
  stdout: ''
  timestamp: 1659794329
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        long sum2 =\
    \ 0;\n        long max2 = 0;\n        long min2 = 0;\n        long sum3 = 0;\n\
    \        long max3 = 0;\n        long min3 = 0;\n        long sum4 = 0;\n    \
    \    long max4 = 0;\n        long min4 = 0;\n        long sum5 = 0;\n        long\
    \ max5 = 0;\n        long min5 = 0;\n        long sum6 = 0;\n        long max6\
    \ = 0;\n        long min6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n\
    \        long min7 = 0;\n        long sum8 = 0;\n        long max8 = 0;\n    \
    \    long min8 = 0;\n        long sum9 = 0;\n        long max9 = 0;\n        long\
    \ min9 = 0;\n        long sum10 = 0;\n        long max10 = 0;\n        long min10\
    \ = 0;\n        long sum11 = 0;\n        long max11 = 0;\n        long min11 =\
    \ 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long min12 = 0;\n\
    \        long sum13 = 0;\n        long max13 = 0;\n        long min13 = 0;\n \
    \       long sum14 = 0;\n        long max14 = 0;\n        long min14 = 0;\n  \
    \      long sum15 = 0;\n        long max15 = 0;\n        long min15 = 0;\n   \
    \     long sum16 = 0;\n        long max16 = 0;\n        long min16 = 0;\n    \
    \    long sum17 = 0;\n        long max17 = 0;\n        long min17 = 0;\n     \
    \   long sum18 = 0;\n        long max18 = 0;\n        long min18 = 0;\n      \
    \  long sum19 = 0;\n        long max19 = 0;\n        long min19 = 0;\n       \
    \ long sum20 = 0;\n        long max20 = 0;\n        long min20 = 0;\n        long\
    \ sum21 = 0;\n        long max21 = 0;\n        long min21 = 0;\n        long sum22\
    \ = 0;\n        long max22 = 0;\n        long min22 = 0;\n        long sum23 =\
    \ 0;\n        long max23 = 0;\n        long min23 = 0;\n        long sum24 = 0;\n\
    \        long max24 = 0;\n        long min24 = 0;\n        long sum25 = 0;\n \
    \       long max25 = 0;\n        long min25 = 0;\n        long sum26 = 0;\n  \
    \      long max26 = 0;\n        long min26 = 0;\n        long sum27 = 0;\n   \
    \     long max27 = 0;\n        long min27 = 0;\n        long sum28 = 0;\n    \
    \    long max28 = 0;\n        long min28 = 0;\n        long sum29 = 0;\n     \
    \   long max29 = 0;\n        long min29 = 0;\n        long sum30 = 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppvcmozvj.java:106: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        long sum2 =\
    \ 0;\n        long max2 = 0;\n        long min2 = 0;\n        long sum3 = 0;\n\
    \        long max3 = 0;\n        long min3 = 0;\n        long sum4 = 0;\n    \
    \    long max4 = 0;\n        long min4 = 0;\n        long sum5 = 0;\n        long\
    \ max5 = 0;\n        long min5 = 0;\n        long sum6 = 0;\n        long max6\
    \ = 0;\n        long min6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n\
    \        long min7 = 0;\n        long sum8 = 0;\n        long max8 = 0;\n    \
    \    long min8 = 0;\n        long sum9 = 0;\n        long max9 = 0;\n        long\
    \ min9 = 0;\n        long sum10 = 0;\n        long max10 = 0;\n        long min10\
    \ = 0;\n        long sum11 = 0;\n        long max11 = 0;\n        long min11 =\
    \ 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long min12 = 0;\n\
    \        long sum13 = 0;\n        long max13 = 0;\n        long min13 = 0;\n \
    \       long sum14 = 0;\n        long max14 = 0;\n        long min14 = 0;\n  \
    \      long sum15 = 0;\n        long max15 = 0;\n        long min15 = 0;\n   \
    \     long sum16 = 0;\n        long max16 = 0;\n        long min16 = 0;\n    \
    \    long sum17 = 0;\n        long max17 = 0;\n        long min17 = 0;\n     \
    \   long sum18 = 0;\n        long max18 = 0;\n        long min18 = 0;\n      \
    \  long sum19 = 0;\n        long max19 = 0;\n        long min19 = 0;\n       \
    \ long sum20 = 0;\n        long max20 = 0;\n        long min20 = 0;\n        long\
    \ sum21 = 0;\n        long max21 = 0;\n        long min21 = 0;\n        long sum22\
    \ = 0;\n        long max22 = 0;\n        long min22 = 0;\n        long sum23 =\
    \ 0;\n        long max23 = 0;\n        long min23 = 0;\n        long sum24 = 0;\n\
    \        long max24 = 0;\n        long min24 = 0;\n        long sum25 = 0;\n \
    \       long max25 = 0;\n        long min25 = 0;\n        long sum26 = 0;\n  \
    \      long max26 = 0;\n        long min26 = 0;\n        long sum27 = 0;\n   \
    \     long max27 = 0;\n        long min27 = 0;\n        long sum28 = 0;\n    \
    \    long max28 = 0;\n        long min28 = 0;\n        long sum29 = 0;\n     \
    \   long max29 = 0;\n        long min29 = 0;\n        long sum30 = 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppvcmozvj.java:106: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i <= k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj0oz93yq.java:25)\n"
  stdout: ''
  timestamp: 1659794332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long max2 = 0;\n        long max3 =\
    \ 0;\n        long max4 = 0;\n        long max5 = 0;\n        long max6 = 0;\n\
    \        long max7 = 0;\n        long max8 = 0;\n        long max9 = 0;\n    \
    \    long max10 = 0;\n        long max11 = 0;\n        long max12 = 0;\n     \
    \   long max13 = 0;\n        long max14 = 0;\n        long max15 = 0;\n      \
    \  long max16 = 0;\n        long max17 = 0;\n        long max18 = 0;\n       \
    \ long max19 = 0;\n        long max20 = 0;\n        long max21 = 0;\n        long\
    \ max22 = 0;\n        long max23 = 0;\n        long max24 = 0;\n        long max25\
    \ = 0;\n        long max26 = 0;\n        long max27 = 0;\n        long max28 =\
    \ 0;\n        long max29 = 0;\n        long max30 = 0;\n        long max31 = 0;\n\
    \        long max32 = 0;\n        long max33 = 0;\n        long max34 = 0;\n \
    \       long max35 = 0;\n        long max36 = 0;\n        long max37 = 0;\n  \
    \      long max38 = 0;\n        long max39 = 0;\n        long max40 = 0;\n   \
    \     long max41 = 0;\n        long max42 = 0;\n        long max43 = 0;\n    \
    \    long max44 = 0;\n        long max45 = 0;\n        long max46 = 0;\n     \
    \   long max47 = 0;\n        long max48 = 0;\n        long max49 = 0;\n      \
    \  long max50 = 0;\n        long max51 = 0;\n        long max52 = 0;\n       \
    \ long max53 = 0;\n        long max54 = 0;\n        long max55 = 0;\n        long\
    \ max56 = 0;\n        long max57 = 0;\n        long max58 = 0;\n        long max59\
    \ = 0;\n        long max60 = 0;\n        long max61 = 0;\n        long max62 =\
    \ 0;\n        long max63 = 0;\n        long max64 = 0;\n        long max65 = 0;\n\
    \        long max66 = 0;\n        long max67 = 0;\n        long max68 = 0;\n \
    \       long max69 = 0;\n        long max70 = 0;\n        long max71 = 0;\n  \
    \      long max72 = 0;\n        long max73 = 0;\n        long max74 = 0;\n   \
    \     long max75 = 0;\n        long max76 = 0;\n        long max77 = 0;\n    \
    \    long max78 = 0;\n        long max79 = 0;\n        long max80 = 0;\n     \
    \   long max81 = 0;\n        long max82 = 0;\n        long max83 = 0;\n      \
    \  long max84 = 0;\n        long max85 = 0;\n        long \n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3s6zf2s5.java:104: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmp3s6zf2s5.java:104: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        long maxSumIndex = 0;\n        for(int\
    \ i = 0; i < k; i++) {\n            sum += arr.get(i);\n        }\n        for(int\
    \ i = k; i < arr.size(); i++) {\n            sum += arr.get(i);\n            if(sum\
    \ > maxSum) {\n                maxSum = sum;\n                maxSumIndex = i;\n\
    \            }\n        }\n        return maxSum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp13y8fx2w.java:24: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1659794330
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        for(int i = 0; i< arr.size()-k; i++)\
    \ {\n            sum += arr.get(i);\n        }\n        for(int i = arr.size()-k;\
    \ i < arr.size(); i++) {\n            sum2 += arr.get(i);\n        }\n       \
    \ return sum + sum2;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppnc0cgnd.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = arr.size()-k; i < arr.size(); i++) {\n\
    \                              ^\n1 error\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        for(int i = 0; i<k; i++){\n       \
    \     sum += arr.get(i);\n        }\n        for(int i = k; i<arr.size(); i++){\n\
    \            sum += arr.get(i);\n            if(sum > max){\n                max\
    \ = sum;\n            }\n        }\n        return max;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2auxg4l5.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i<arr.size(); i++){\n             \
    \       ^\n1 error\n"
  stdout: ''
  timestamp: 1659794332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = Long.MAX_VALUE;\n      \
    \  long sumOfDigits = 0;\n        long sumOfDigitsOfMax = 0;\n        long sumOfDigitsOfMin\
    \ = 0;\n        long sumOfDigitsOfMaxOfMin = 0;\n        long sumOfDigitsOfMinOfMax\
    \ = 0;\n        long sumOfDigitsOfMaxOfMax = 0;\n        long sumOfDigitsOfMinOfMaxOfMax\
    \ = 0;\n        long sumOfDigitsOfMaxOfMinOfMax = 0;\n        long sumOfDigitsOfMinOfMaxOfMin\
    \ = 0;\n        long sumOfDigitsOfMaxOfMaxOfMax = 0;\n        long sumOfDigitsOfMinOfMaxOfMaxOfMax\
    \ = 0;\n        long sumOfDigitsOfMaxOfMinOfMaxOfMax = 0;\n        long sumOfDigitsOfMinOfMaxOfMinOfMax\
    \ = 0;\n        long sumOfDigitsOfMaxOfMaxOfMaxOfMax = 0;\n        long sumOfDigitsOfMinOfMaxOfMaxOfMaxOfMax\
    \ = 0;\n        long sumOfDigitsOfMaxOfMinOfMaxOfMaxOfMax = 0;\n        long sumOfDigitsOfMinOfMaxOfMinOfMaxOfMax\
    \ = 0;\n        long sumOfDigitsOfMaxOfMaxOfMaxOfMaxOfMax = 0;\n        long sumOfDigitsOfMinOfMaxOfMaxOfMaxOfMaxOfMax\
    \ = 0;\n        long sumOfDigitsOfMaxOfMinOfMaxOfMaxOfMaxOfMax = 0;\n        long\
    \ sumOfDigitsOfMinOfMaxOfMinOfMaxOfMaxOfMax = 0;\n        long sumOfDigitsOfMaxOfMaxOfMaxOfMaxOfMaxOfMax\
    \ = 0;\n        long sumOfDigitsOfMinOfMaxOfMaxOfMaxOfMaxOfMaxOfMax = 0;\n   \
    \     long sumOfDigitsOfMaxOfMinOfMaxOfMaxOfMaxOfMaxOfMax = 0;\n        long sumOfDigitsOfMinOfMaxOfMinOfMaxOfMaxOfMaxOfMax\
    \ = 0;\n        long sumOfDigitsOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMax = 0;\n   \
    \     long sumOfDigitsOfMinOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMax = 0;\n        long\
    \ sumOfDigitsOfMaxOfMinOfMaxOfMaxOfMaxOfMaxOfMaxOfMaxOfMax = 0;\n        long\
    \ sumOfDigitsOfMinOfMaxOfMinOfMaxOfMaxOfMaxOfMax\n    }\n    public static void\
    \ main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpke3k2y8d.java:49: error: ';' expected\n        long sumOfDigitsOfMinOfMaxOfMinOfMaxOfMaxOfMaxOfMax\n\
    \                                                           ^\n1 error\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        long sum2 =\
    \ 0;\n        long max2 = 0;\n        long min2 = 0;\n        long sum3 = 0;\n\
    \        long max3 = 0;\n        long min3 = 0;\n        long sum4 = 0;\n    \
    \    long max4 = 0;\n        long min4 = 0;\n        long sum5 = 0;\n        long\
    \ max5 = 0;\n        long min5 = 0;\n        long sum6 = 0;\n        long max6\
    \ = 0;\n        long min6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n\
    \        long min7 = 0;\n        long sum8 = 0;\n        long max8 = 0;\n    \
    \    long min8 = 0;\n        long sum9 = 0;\n        long max9 = 0;\n        long\
    \ min9 = 0;\n        long sum10 = 0;\n        long max10 = 0;\n        long min10\
    \ = 0;\n        long sum11 = 0;\n        long max11 = 0;\n        long min11 =\
    \ 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long min12 = 0;\n\
    \        long sum13 = 0;\n        long max13 = 0;\n        long min13 = 0;\n \
    \       long sum14 = 0;\n        long max14 = 0;\n        long min14 = 0;\n  \
    \      long sum15 = 0;\n        long max15 = 0;\n        long min15 = 0;\n   \
    \     long sum16 = 0;\n        long max16 = 0;\n        long min16 = 0;\n    \
    \    long sum17 = 0;\n        long max17 = 0;\n        long min17 = 0;\n     \
    \   long sum18 = 0;\n        long max18 = 0;\n        long min18 = 0;\n      \
    \  long sum19 = 0;\n        long max19 = 0;\n        long min19 = 0;\n       \
    \ long sum20 = 0;\n        long max20 = 0;\n        long min20 = 0;\n        long\
    \ sum21 = 0;\n        long max21 = 0;\n        long min21 = 0;\n        long sum22\
    \ = 0;\n        long max22 = 0;\n        long min22 = 0;\n        long sum23 =\
    \ 0;\n        long max23 = 0;\n        long min23 = 0;\n        long sum24 = 0;\n\
    \        long max24 = 0;\n        long min24 = 0;\n        long sum25 = 0;\n \
    \       long max25 = 0;\n        long min25 = 0;\n        long sum26 = 0;\n  \
    \      long max26 = 0;\n        long min26 = 0;\n        long sum27 = 0;\n   \
    \     long max27 = 0;\n        long min27 = 0;\n        long sum28 = 0;\n    \
    \    long max28 = 0;\n        long min28 = 0;\n        long sum29 = 0;\n     \
    \   long max29 = 0;\n        long min29 = 0;\n        long sum30 = 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppvcmozvj.java:106: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        long maxSumIndex = 0;\n        long\
    \ maxSumIndex2 = 0;\n        long maxSumIndex3 = 0;\n        long maxSumIndex4\
    \ = 0;\n        long maxSumIndex5 = 0;\n        long maxSumIndex6 = 0;\n     \
    \   long maxSumIndex7 = 0;\n        long maxSumIndex8 = 0;\n        long maxSumIndex9\
    \ = 0;\n        long maxSumIndex10 = 0;\n        long maxSumIndex11 = 0;\n   \
    \     long maxSumIndex12 = 0;\n        long maxSumIndex13 = 0;\n        long maxSumIndex14\
    \ = 0;\n        long maxSumIndex15 = 0;\n        long maxSumIndex16 = 0;\n   \
    \     long maxSumIndex17 = 0;\n        long maxSumIndex18 = 0;\n        long maxSumIndex19\
    \ = 0;\n        long maxSumIndex20 = 0;\n        long maxSumIndex21 = 0;\n   \
    \     long maxSumIndex22 = 0;\n        long maxSumIndex23 = 0;\n        long maxSumIndex24\
    \ = 0;\n        long maxSumIndex25 = 0;\n        long maxSumIndex26 = 0;\n   \
    \     long maxSumIndex27 = 0;\n        long maxSumIndex28 = 0;\n        long maxSumIndex29\
    \ = 0;\n        long maxSumIndex30 = 0;\n        long maxSumIndex31 = 0;\n   \
    \     long maxSumIndex32 = 0;\n        long maxSumIndex33 = 0;\n        long maxSumIndex34\
    \ = 0;\n        long maxSumIndex35 = 0;\n        long maxSumIndex36 = 0;\n   \
    \     long maxSumIndex37 = 0;\n        long maxSumIndex38 = 0;\n        long maxSumIndex39\
    \ = 0;\n        long maxSumIndex40 = 0;\n        long maxSumIndex41 = 0;\n   \
    \     long maxSumIndex42 = 0;\n        long maxSumIndex43 = 0;\n        long maxSumIndex44\
    \ = 0;\n        long maxSumIndex45 = 0;\n        long maxSumIndex46 = 0;\n   \
    \     long maxSumIndex47 = 0;\n        long maxSumIndex48 = 0;\n        long maxSumIndex49\
    \ = 0;\n        long maxSumIndex50 = 0;\n        long maxSumIndex51 = 0;\n   \
    \     long maxSumIndex52 = 0;\n        long maxSumIndex53 = 0;\n        long maxSumIndex54\
    \ = 0;\n        long maxSumIndex55 = 0;\n        long maxSumIndex56 = 0;\n   \
    \     long maxSumIndex57 = 0;\n        long maxSumIndex58 = 0;\n        long maxSumIndex59\
    \ = 0;\n        long maxSumIndex60 = 0;\n        long maxSumIndex61 = 0;\n   \
    \     long maxSumIndex62 = 0;\n        long maxSumIndex63 = 0;\n        long \n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqlewz3oh.java:83: error: not a statement\n        long \n     \
    \   ^\n/tmp/tmpqlewz3oh.java:83: error: ';' expected\n        long \n        \
    \    ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        long sum2 =\
    \ 0;\n        long max2 = 0;\n        long min2 = 0;\n        long sum3 = 0;\n\
    \        long max3 = 0;\n        long min3 = 0;\n        long sum4 = 0;\n    \
    \    long max4 = 0;\n        long min4 = 0;\n        long sum5 = 0;\n        long\
    \ max5 = 0;\n        long min5 = 0;\n        long sum6 = 0;\n        long max6\
    \ = 0;\n        long min6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n\
    \        long min7 = 0;\n        long sum8 = 0;\n        long max8 = 0;\n    \
    \    long min8 = 0;\n        long sum9 = 0;\n        long max9 = 0;\n        long\
    \ min9 = 0;\n        long sum10 = 0;\n        long max10 = 0;\n        long min10\
    \ = 0;\n        long sum11 = 0;\n        long max11 = 0;\n        long min11 =\
    \ 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long min12 = 0;\n\
    \        long sum13 = 0;\n        long max13 = 0;\n        long min13 = 0;\n \
    \       long sum14 = 0;\n        long max14 = 0;\n        long min14 = 0;\n  \
    \      long sum15 = 0;\n        long max15 = 0;\n        long min15 = 0;\n   \
    \     long sum16 = 0;\n        long max16 = 0;\n        long min16 = 0;\n    \
    \    long sum17 = 0;\n        long max17 = 0;\n        long min17 = 0;\n     \
    \   long sum18 = 0;\n        long max18 = 0;\n        long min18 = 0;\n      \
    \  long sum19 = 0;\n        long max19 = 0;\n        long min19 = 0;\n       \
    \ long sum20 = 0;\n        long max20 = 0;\n        long min20 = 0;\n        long\
    \ sum21 = 0;\n        long max21 = 0;\n        long min21 = 0;\n        long sum22\
    \ = 0;\n        long max22 = 0;\n        long min22 = 0;\n        long sum23 =\
    \ 0;\n        long max23 = 0;\n        long min23 = 0;\n        long sum24 = 0;\n\
    \        long max24 = 0;\n        long min24 = 0;\n        long sum25 = 0;\n \
    \       long max25 = 0;\n        long min25 = 0;\n        long sum26 = 0;\n  \
    \      long max26 = 0;\n        long min26 = 0;\n        long sum27 = 0;\n   \
    \     long max27 = 0;\n        long min27 = 0;\n        long sum28 = 0;\n    \
    \    long max28 = 0;\n        long min28 = 0;\n        long sum29 = 0;\n     \
    \   long max29 = 0;\n        long min29 = 0;\n        long sum30 = 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppvcmozvj.java:106: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        long sumOfTwo\
    \ = 0;\n        long sumOfThree = 0;\n        long sumOfFour = 0;\n        long\
    \ sumOfFive = 0;\n        long sumOfSix = 0;\n        long sumOfSeven = 0;\n \
    \       long sumOfEight = 0;\n        long sumOfNine = 0;\n        long sumOfTen\
    \ = 0;\n        long sumOfEleven = 0;\n        long sumOfTwelve = 0;\n       \
    \ long sumOfThirteen = 0;\n        long sumOfFourteen = 0;\n        long sumOfFifteen\
    \ = 0;\n        long sumOfSixteen = 0;\n        long sumOfSeventeen = 0;\n   \
    \     long sumOfEighteen = 0;\n        long sumOfNineteen = 0;\n        long sumOfTwenty\
    \ = 0;\n        long sumOfTwentyOne = 0;\n        long sumOfTwentyTwo = 0;\n \
    \       long sumOfTwentyThree = 0;\n        long sumOfTwentyFour = 0;\n      \
    \  long sumOfTwentyFive = 0;\n        long sumOfTwentySix = 0;\n        long sumOfTwentySeven\
    \ = 0;\n        long sumOfTwentyEight = 0;\n        long sumOfTwentyNine = 0;\n\
    \        long sumOfTwentyTen = 0;\n        long sumOfTwentyEleven = 0;\n     \
    \   long sumOfTwentyTwelve = 0;\n        long sumOfTwentyThirteen = 0;\n     \
    \   long sumOfTwentyFourteen = 0;\n        long sumOfTwentyFifteen = 0;\n    \
    \    long sumOfTwentySixteen = 0;\n        long sumOfTwentySeventeen = 0;\n  \
    \      long sumOfTwentyEighteen = 0;\n        long sumOfTwentyNineteen = 0;\n\
    \        long sumOfTwentyTwenty = 0;\n        long sumOfTwentyTwentyOne = 0;\n\
    \        long sumOfTwentyTwentyTwo = 0;\n        long sumOfTwentyTwentyThree =\
    \ 0;\n        long sumOfTwentyTwentyFour = 0;\n        long sumOfTwentyTwentyFive\
    \ = 0;\n        long sumOfTwentyTwentySix = 0;\n        long sumOfTwentyTwentySeven\
    \ = 0;\n        long sumOfTwentyTwentyEight = 0;\n        long sumOfTwentyTwentyNine\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptdlh1e9y.java:68: error: ';' expected\n        long sumOfTwentyTwentyNine\n\
    \                                  ^\n1 error\n"
  stdout: ''
  timestamp: 1659794329
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        long maxSumIndex = 0;\n        long\
    \ maxSumIndex2 = 0;\n        long maxSumIndex3 = 0;\n        long maxSumIndex4\
    \ = 0;\n        long maxSumIndex5 = 0;\n        long maxSumIndex6 = 0;\n     \
    \   long maxSumIndex7 = 0;\n        long maxSumIndex8 = 0;\n        long maxSumIndex9\
    \ = 0;\n        long maxSumIndex10 = 0;\n        long maxSumIndex11 = 0;\n   \
    \     long maxSumIndex12 = 0;\n        long maxSumIndex13 = 0;\n        long maxSumIndex14\
    \ = 0;\n        long maxSumIndex15 = 0;\n        long maxSumIndex16 = 0;\n   \
    \     long maxSumIndex17 = 0;\n        long maxSumIndex18 = 0;\n        long maxSumIndex19\
    \ = 0;\n        long maxSumIndex20 = 0;\n        long maxSumIndex21 = 0;\n   \
    \     long maxSumIndex22 = 0;\n        long maxSumIndex23 = 0;\n        long maxSumIndex24\
    \ = 0;\n        long maxSumIndex25 = 0;\n        long maxSumIndex26 = 0;\n   \
    \     long maxSumIndex27 = 0;\n        long maxSumIndex28 = 0;\n        long maxSumIndex29\
    \ = 0;\n        long maxSumIndex30 = 0;\n        long maxSumIndex31 = 0;\n   \
    \     long maxSumIndex32 = 0;\n        long maxSumIndex33 = 0;\n        long maxSumIndex34\
    \ = 0;\n        long maxSumIndex35 = 0;\n        long maxSumIndex36 = 0;\n   \
    \     long maxSumIndex37 = 0;\n        long maxSumIndex38 = 0;\n        long maxSumIndex39\
    \ = 0;\n        long maxSumIndex40 = 0;\n        long maxSumIndex41 = 0;\n   \
    \     long maxSumIndex42 = 0;\n        long maxSumIndex43 = 0;\n        long maxSumIndex44\
    \ = 0;\n        long maxSumIndex45 = 0;\n        long maxSumIndex46 = 0;\n   \
    \     long maxSumIndex47 = 0;\n        long maxSumIndex48 = 0;\n        long maxSumIndex49\
    \ = 0;\n        long maxSumIndex50 = 0;\n        long maxSumIndex51 = 0;\n   \
    \     long maxSumIndex52 = 0;\n        long maxSumIndex53 = 0;\n        long maxSumIndex54\
    \ = 0;\n        long maxSumIndex55 = 0;\n        long maxSumIndex56 = 0;\n   \
    \     long maxSumIndex57 = 0;\n        long maxSumIndex58 = 0;\n        long maxSumIndex59\
    \ = 0;\n        long maxSumIndex60 = 0;\n        long maxSumIndex61 = 0;\n   \
    \     long maxSumIndex62 = 0;\n        long maxSumIndex63 = 0;\n        long \n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqlewz3oh.java:83: error: not a statement\n        long \n     \
    \   ^\n/tmp/tmpqlewz3oh.java:83: error: ';' expected\n        long \n        \
    \    ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        long sumOfTwoDigits\
    \ = 0;\n        long sumOfThreeDigits = 0;\n        long sumOfFourDigits = 0;\n\
    \        long sumOfFiveDigits = 0;\n        long sumOfSixDigits = 0;\n       \
    \ long sumOfSevenDigits = 0;\n        long sumOfEightDigits = 0;\n        long\
    \ sumOfNineDigits = 0;\n        long sumOfTenDigits = 0;\n        long sumOfElevenDigits\
    \ = 0;\n        long sumOfTwelveDigits = 0;\n        long sumOfThirteenDigits\
    \ = 0;\n        long sumOfFourteenDigits = 0;\n        long sumOfFifteenDigits\
    \ = 0;\n        long sumOfSixteenDigits = 0;\n        long sumOfSeventeenDigits\
    \ = 0;\n        long sumOfEighteenDigits = 0;\n        long sumOfNineteenDigits\
    \ = 0;\n        long sumOfTwentyDigits = 0;\n        long sumOfTwentyOneDigits\
    \ = 0;\n        long sumOfTwentyTwoDigits = 0;\n        long sumOfTwentyThreeDigits\
    \ = 0;\n        long sumOfTwentyFourDigits = 0;\n        long sumOfTwentyFiveDigits\
    \ = 0;\n        long sumOfTwentySixDigits = 0;\n        long sumOfTwentySevenDigits\
    \ = 0;\n        long sumOfTwentyEightDigits = 0;\n        long sumOfTwentyNineDigits\
    \ = 0;\n        long sumOfTwentyTenDigits = 0;\n        long sumOfTwentyElevenDigits\
    \ = 0;\n        long sumOfTwentyTwelveDigits = 0;\n        long sumOfTwentyThirteenDigits\
    \ = 0;\n        long sumOfTwentyFourteenDigits = 0;\n        long sumOfTwentyFifteenDigits\
    \ = 0;\n        long sumOfTwentySixteenDigits = 0;\n        long sumOfTwentySeventeenDigits\
    \ = 0;\n        long sumOfTwentyEighteenDigits = 0;\n        long sumOfTwentyNineteenDigits\
    \ = 0;\n        long sumOfTwentyTwentyDigits = 0;\n        long sumOfTwentyTwentyOneDigits\
    \ = 0;\n        long sumOfTwentyTwentyTwoDigits = 0;\n        long sumOfTwentyTwentyThreeDigits\
    \ = 0;\n        long sumOfTwentyTwentyFourDigits = 0;\n        long sumOfTwentyTwentyFiveDigits\
    \ = 0;\n        long sumOfTwentyTwenty\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpunnw6t5m.java:65: error: ';' expected\n        long sumOfTwentyTwenty\n\
    \                              ^\n1 error\n"
  stdout: ''
  timestamp: 1659794330
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        long maxSumIndex = 0;\n        long\
    \ maxSumElement = 0;\n        long maxSumElementIndex = 0;\n        long maxSumElementIndex2\
    \ = 0;\n        long maxSumElementIndex3 = 0;\n        long maxSumElementIndex4\
    \ = 0;\n        long maxSumElementIndex5 = 0;\n        long maxSumElementIndex6\
    \ = 0;\n        long maxSumElementIndex7 = 0;\n        long maxSumElementIndex8\
    \ = 0;\n        long maxSumElementIndex9 = 0;\n        long maxSumElementIndex10\
    \ = 0;\n        long maxSumElementIndex11 = 0;\n        long maxSumElementIndex12\
    \ = 0;\n        long maxSumElementIndex13 = 0;\n        long maxSumElementIndex14\
    \ = 0;\n        long maxSumElementIndex15 = 0;\n        long maxSumElementIndex16\
    \ = 0;\n        long maxSumElementIndex17 = 0;\n        long maxSumElementIndex18\
    \ = 0;\n        long maxSumElementIndex19 = 0;\n        long maxSumElementIndex20\
    \ = 0;\n        long maxSumElementIndex21 = 0;\n        long maxSumElementIndex22\
    \ = 0;\n        long maxSumElementIndex23 = 0;\n        long maxSumElementIndex24\
    \ = 0;\n        long maxSumElementIndex25 = 0;\n        long maxSumElementIndex26\
    \ = 0;\n        long maxSumElementIndex27 = 0;\n        long maxSumElementIndex28\
    \ = 0;\n        long maxSumElementIndex29 = 0;\n        long maxSumElementIndex30\
    \ = 0;\n        long maxSumElementIndex31 = 0;\n        long maxSumElementIndex32\
    \ = 0;\n        long maxSumElementIndex33 = 0;\n        long maxSumElementIndex34\
    \ = 0;\n        long maxSumElementIndex35 = 0;\n        long maxSumElementIndex36\
    \ = 0;\n        long maxSumElementIndex37 = 0;\n        long maxSumElementIndex38\
    \ = 0;\n        long maxSumElementIndex39 = 0;\n        long maxSumElementIndex40\
    \ = 0;\n        long maxSumElementIndex41 = 0;\n        long maxSumElementIndex42\
    \ = 0;\n        long maxSumElementIndex43 = 0;\n        long maxSumElementIndex44\
    \ = 0;\n        long maxSumElementIndex45 = 0;\n        long maxSumElementIndex46\
    \ = 0;\n        long maxSumElementIndex47 = 0;\n        long maxSumElementIndex48\
    \ = 0;\n        long maxSumElementIndex49 = 0;\n        long maxSumElementIndex50\
    \ = 0;\n        long maxSumElementIndex51 = 0;\n        long maxSumElementIndex52\
    \ = 0;\n        long maxSumElementIndex53 = 0;\n        long maxSumElementIndex54\
    \ = 0;\n        long maxSumElementIndex\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpybf8lc3i.java:76: error: ';' expected\n        long maxSumElementIndex\n\
    \                               ^\n1 error\n"
  stdout: ''
  timestamp: 1659794332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i <= arr.size()-k; i++) {\n            sum\
    \ += arr.get(i);\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqf71rqo1.java:25)\n"
  stdout: ''
  timestamp: 1659794332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        long sum2 =\
    \ 0;\n        long max2 = 0;\n        long min2 = 0;\n        long sum3 = 0;\n\
    \        long max3 = 0;\n        long min3 = 0;\n        long sum4 = 0;\n    \
    \    long max4 = 0;\n        long min4 = 0;\n        long sum5 = 0;\n        long\
    \ max5 = 0;\n        long min5 = 0;\n        long sum6 = 0;\n        long max6\
    \ = 0;\n        long min6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n\
    \        long min7 = 0;\n        long sum8 = 0;\n        long max8 = 0;\n    \
    \    long min8 = 0;\n        long sum9 = 0;\n        long max9 = 0;\n        long\
    \ min9 = 0;\n        long sum10 = 0;\n        long max10 = 0;\n        long min10\
    \ = 0;\n        long sum11 = 0;\n        long max11 = 0;\n        long min11 =\
    \ 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long min12 = 0;\n\
    \        long sum13 = 0;\n        long max13 = 0;\n        long min13 = 0;\n \
    \       long sum14 = 0;\n        long max14 = 0;\n        long min14 = 0;\n  \
    \      long sum15 = 0;\n        long max15 = 0;\n        long min15 = 0;\n   \
    \     long sum16 = 0;\n        long max16 = 0;\n        long min16 = 0;\n    \
    \    long sum17 = 0;\n        long max17 = 0;\n        long min17 = 0;\n     \
    \   long sum18 = 0;\n        long max18 = 0;\n        long min18 = 0;\n      \
    \  long sum19 = 0;\n        long max19 = 0;\n        long min19 = 0;\n       \
    \ long sum20 = 0;\n        long max20 = 0;\n        long min20 = 0;\n        long\
    \ sum21 = 0;\n        long max21 = 0;\n        long min21 = 0;\n        long sum22\
    \ = 0;\n        long max22 = 0;\n        long min22 = 0;\n        long sum23 =\
    \ 0;\n        long max23 = 0;\n        long min23 = 0;\n        long sum24 = 0;\n\
    \        long max24 = 0;\n        long min24 = 0;\n        long sum25 = 0;\n \
    \       long max25 = 0;\n        long min25 = 0;\n        long sum26 = 0;\n  \
    \      long max26 = 0;\n        long min26 = 0;\n        long sum27 = 0;\n   \
    \     long max27 = 0;\n        long min27 = 0;\n        long sum28 = 0;\n    \
    \    long max28 = 0;\n        long min28 = 0;\n        long sum29 = 0;\n     \
    \   long max29 = 0;\n        long min29 = 0;\n        long sum30 = 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppvcmozvj.java:106: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        long maxSumIndex = 0;\n        long\
    \ maxSumIndex2 = 0;\n        long maxSumIndex3 = 0;\n        long maxSumIndex4\
    \ = 0;\n        long maxSumIndex5 = 0;\n        long maxSumIndex6 = 0;\n     \
    \   long maxSumIndex7 = 0;\n        long maxSumIndex8 = 0;\n        long maxSumIndex9\
    \ = 0;\n        long maxSumIndex10 = 0;\n        long maxSumIndex11 = 0;\n   \
    \     long maxSumIndex12 = 0;\n        long maxSumIndex13 = 0;\n        long maxSumIndex14\
    \ = 0;\n        long maxSumIndex15 = 0;\n        long maxSumIndex16 = 0;\n   \
    \     long maxSumIndex17 = 0;\n        long maxSumIndex18 = 0;\n        long maxSumIndex19\
    \ = 0;\n        long maxSumIndex20 = 0;\n        long maxSumIndex21 = 0;\n   \
    \     long maxSumIndex22 = 0;\n        long maxSumIndex23 = 0;\n        long maxSumIndex24\
    \ = 0;\n        long maxSumIndex25 = 0;\n        long maxSumIndex26 = 0;\n   \
    \     long maxSumIndex27 = 0;\n        long maxSumIndex28 = 0;\n        long maxSumIndex29\
    \ = 0;\n        long maxSumIndex30 = 0;\n        long maxSumIndex31 = 0;\n   \
    \     long maxSumIndex32 = 0;\n        long maxSumIndex33 = 0;\n        long maxSumIndex34\
    \ = 0;\n        long maxSumIndex35 = 0;\n        long maxSumIndex36 = 0;\n   \
    \     long maxSumIndex37 = 0;\n        long maxSumIndex38 = 0;\n        long maxSumIndex39\
    \ = 0;\n        long maxSumIndex40 = 0;\n        long maxSumIndex41 = 0;\n   \
    \     long maxSumIndex42 = 0;\n        long maxSumIndex43 = 0;\n        long maxSumIndex44\
    \ = 0;\n        long maxSumIndex45 = 0;\n        long maxSumIndex46 = 0;\n   \
    \     long maxSumIndex47 = 0;\n        long maxSumIndex48 = 0;\n        long maxSumIndex49\
    \ = 0;\n        long maxSumIndex50 = 0;\n        long maxSumIndex51 = 0;\n   \
    \     long maxSumIndex52 = 0;\n        long maxSumIndex53 = 0;\n        long maxSumIndex54\
    \ = 0;\n        long maxSumIndex55 = 0;\n        long maxSumIndex56 = 0;\n   \
    \     long maxSumIndex57 = 0;\n        long maxSumIndex58 = 0;\n        long maxSumIndex59\
    \ = 0;\n        long maxSumIndex60 = 0;\n        long maxSumIndex61 = 0;\n   \
    \     long maxSumIndex62 = 0;\n        long maxSumIndex63 = 0;\n        long \n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqlewz3oh.java:83: error: not a statement\n        long \n     \
    \   ^\n/tmp/tmpqlewz3oh.java:83: error: ';' expected\n        long \n        \
    \    ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = Long.MAX_VALUE;\n      \
    \  long sumOfTwoDigits = 0;\n        long sumOfThreeDigits = 0;\n        long\
    \ sumOfFourDigits = 0;\n        long sumOfFiveDigits = 0;\n        long sumOfSixDigits\
    \ = 0;\n        long sumOfSevenDigits = 0;\n        long sumOfEightDigits = 0;\n\
    \        long sumOfNineDigits = 0;\n        long sumOfTenDigits = 0;\n       \
    \ long sumOfElevenDigits = 0;\n        long sumOfTwelveDigits = 0;\n        long\
    \ sumOfThirteenDigits = 0;\n        long sumOfFourteenDigits = 0;\n        long\
    \ sumOfFifteenDigits = 0;\n        long sumOfSixteenDigits = 0;\n        long\
    \ sumOfSeventeenDigits = 0;\n        long sumOfEighteenDigits = 0;\n        long\
    \ sumOfNineteenDigits = 0;\n        long sumOfTwentyDigits = 0;\n        long\
    \ sumOfTwentyOneDigits = 0;\n        long sumOfTwentyTwoDigits = 0;\n        long\
    \ sumOfTwentyThreeDigits = 0;\n        long sumOfTwentyFourDigits = 0;\n     \
    \   long sumOfTwentyFiveDigits = 0;\n        long sumOfTwentySixDigits = 0;\n\
    \        long sumOfTwentySevenDigits = 0;\n        long sumOfTwentyEightDigits\
    \ = 0;\n        long sumOfTwentyNineDigits = 0;\n        long sumOfTwentyTenDigits\
    \ = 0;\n        long sumOfTwentyElevenDigits = 0;\n        long sumOfTwentyTwelveDigits\
    \ = 0;\n        long sumOfTwentyThirteenDigits = 0;\n        long sumOfTwentyFourteenDigits\
    \ = 0;\n        long sumOfTwentyFifteenDigits = 0;\n        long sumOfTwentySixteenDigits\
    \ = 0;\n        long sumOfTwentySeventeenDigits = 0;\n        long sumOfTwentyEighteenDigits\
    \ = 0;\n        long sumOfTwentyNineteenDigits = 0;\n        long sumOfTwentyTwentyDigits\
    \ = 0;\n        long sumOfTwentyTwentyOneDigits = 0;\n        long sumOfTwentyTwentyTwoDigits\
    \ = 0;\n        long sumOfTwentyTwentyThreeDigits = 0;\n        long sumOfTwentyTwentyFourDigits\
    \ = 0;\n        long sumOfTwentyTwentyFiveDigits = 0;\n        long sumOfTwent\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp05x5w7kk.java:65: error: ';' expected\n        long sumOfTwent\n\
    \                       ^\n1 error\n"
  stdout: ''
  timestamp: 1659794330
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        for(int i = 0; i < k; i++) {\n   \
    \         sum += arr.get(i);\n            sum2 += arr.get(i);\n        }\n   \
    \     return sum + sum2;\n    }\n    public static void main(String[] args) {\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy785wuy7.java:27)\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        for(int i = 0; i < k; i++) {\n    \
    \        sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum += arr.get(i);\n            max = Math.max(max, sum);\n\
    \        }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdq90_n5v.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        for(int i = 0; i < k; i++) {\n    \
    \        sum += arr.get(i);\n            max = Math.max(max, arr.get(i));\n  \
    \      }\n        for(int i = k; i < arr.size(); i++) {\n            sum += arr.get(i);\n\
    \            max = Math.max(max, arr.get(i));\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbvoqmwou.java:24: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1659794332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        long sum2 =\
    \ 0;\n        long max2 = 0;\n        long min2 = 0;\n        long sum3 = 0;\n\
    \        long max3 = 0;\n        long min3 = 0;\n        long sum4 = 0;\n    \
    \    long max4 = 0;\n        long min4 = 0;\n        long sum5 = 0;\n        long\
    \ max5 = 0;\n        long min5 = 0;\n        long sum6 = 0;\n        long max6\
    \ = 0;\n        long min6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n\
    \        long min7 = 0;\n        long sum8 = 0;\n        long max8 = 0;\n    \
    \    long min8 = 0;\n        long sum9 = 0;\n        long max9 = 0;\n        long\
    \ min9 = 0;\n        long sum10 = 0;\n        long max10 = 0;\n        long min10\
    \ = 0;\n        long sum11 = 0;\n        long max11 = 0;\n        long min11 =\
    \ 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long min12 = 0;\n\
    \        long sum13 = 0;\n        long max13 = 0;\n        long min13 = 0;\n \
    \       long sum14 = 0;\n        long max14 = 0;\n        long min14 = 0;\n  \
    \      long sum15 = 0;\n        long max15 = 0;\n        long min15 = 0;\n   \
    \     long sum16 = 0;\n        long max16 = 0;\n        long min16 = 0;\n    \
    \    long sum17 = 0;\n        long max17 = 0;\n        long min17 = 0;\n     \
    \   long sum18 = 0;\n        long max18 = 0;\n        long min18 = 0;\n      \
    \  long sum19 = 0;\n        long max19 = 0;\n        long min19 = 0;\n       \
    \ long sum20 = 0;\n        long max20 = 0;\n        long min20 = 0;\n        long\
    \ sum21 = 0;\n        long max21 = 0;\n        long min21 = 0;\n        long sum22\
    \ = 0;\n        long max22 = 0;\n        long min22 = 0;\n        long sum23 =\
    \ 0;\n        long max23 = 0;\n        long min23 = 0;\n        long sum24 = 0;\n\
    \        long max24 = 0;\n        long min24 = 0;\n        long sum25 = 0;\n \
    \       long max25 = 0;\n        long min25 = 0;\n        long sum26 = 0;\n  \
    \      long max26 = 0;\n        long min26 = 0;\n        long sum27 = 0;\n   \
    \     long max27 = 0;\n        long min27 = 0;\n        long sum28 = 0;\n    \
    \    long max28 = 0;\n        long min28 = 0;\n        long sum29 = 0;\n     \
    \   long max29 = 0;\n        long min29 = 0;\n        long sum30 = 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppvcmozvj.java:106: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4\
    \ = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n\
    \        long sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n   \
    \     long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n    \
    \    long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n     \
    \   long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n      \
    \  long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n       \
    \ long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long\
    \ sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29\
    \ = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 =\
    \ 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n\
    \        long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n \
    \       long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n  \
    \      long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n   \
    \     long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n    \
    \    long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n     \
    \   long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n      \
    \  long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n       \
    \ long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long\
    \ sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63\
    \ = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long sum66 =\
    \ 0;\n        long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n\
    \        long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n \
    \       long sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n  \
    \      long sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n   \
    \     long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n    \
    \    long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n     \
    \   long sum85 = 0;\n        long sum86 = 0;\n        \n    }\n    public static\
    \ void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpioxzt3qh.java:105: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        long maxSumIndex = 0;\n        long\
    \ maxSumValue = 0;\n        long maxSumValueIndex = 0;\n        long maxSumValueIndex2\
    \ = 0;\n        long maxSumValueIndex3 = 0;\n        long maxSumValueIndex4 =\
    \ 0;\n        long maxSumValueIndex5 = 0;\n        long maxSumValueIndex6 = 0;\n\
    \        long maxSumValueIndex7 = 0;\n        long maxSumValueIndex8 = 0;\n  \
    \      long maxSumValueIndex9 = 0;\n        long maxSumValueIndex10 = 0;\n   \
    \     long maxSumValueIndex11 = 0;\n        long maxSumValueIndex12 = 0;\n   \
    \     long maxSumValueIndex13 = 0;\n        long maxSumValueIndex14 = 0;\n   \
    \     long maxSumValueIndex15 = 0;\n        long maxSumValueIndex16 = 0;\n   \
    \     long maxSumValueIndex17 = 0;\n        long maxSumValueIndex18 = 0;\n   \
    \     long maxSumValueIndex19 = 0;\n        long maxSumValueIndex20 = 0;\n   \
    \     long maxSumValueIndex21 = 0;\n        long maxSumValueIndex22 = 0;\n   \
    \     long maxSumValueIndex23 = 0;\n        long maxSumValueIndex24 = 0;\n   \
    \     long maxSumValueIndex25 = 0;\n        long maxSumValueIndex26 = 0;\n   \
    \     long maxSumValueIndex27 = 0;\n        long maxSumValueIndex28 = 0;\n   \
    \     long maxSumValueIndex29 = 0;\n        long maxSumValueIndex30 = 0;\n   \
    \     long maxSumValueIndex31 = 0;\n        long maxSumValueIndex32 = 0;\n   \
    \     long maxSumValueIndex33 = 0;\n        long maxSumValueIndex34 = 0;\n   \
    \     long maxSumValueIndex35 = 0;\n        long maxSumValueIndex36 = 0;\n   \
    \     long maxSumValueIndex37 = 0;\n        long maxSumValueIndex38 = 0;\n   \
    \     long maxSumValueIndex39 = 0;\n        long maxSumValueIndex40 = 0;\n   \
    \     long maxSumValueIndex41 = 0;\n        long maxSumValueIndex42 = 0;\n   \
    \     long maxSumValueIndex43 = 0;\n        long maxSumValueIndex44 = 0;\n   \
    \     long maxSumValueIndex45 = 0;\n        long maxSumValueIndex46 = 0;\n   \
    \     long maxSumValueIndex47 = 0;\n        long maxSumValueIndex48 = 0;\n   \
    \     long maxSumValueIndex49 = 0;\n        long maxSumValueIndex50 = 0;\n   \
    \     long maxSumValueIndex51 = 0;\n        long maxSumValueIndex52 = 0;\n   \
    \     long maxSumValueIndex53 = 0;\n        long maxSumValueIndex54 = 0;\n   \
    \     long maxSumValueIndex\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3u8j088a.java:76: error: ';' expected\n        long maxSumValueIndex\n\
    \                             ^\n1 error\n"
  stdout: ''
  timestamp: 1659794332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = Long.MAX_VALUE;\n      \
    \  long sumOfTwoDigits = 0;\n        for(int i = 0; i < k; i++) {\n          \
    \  sum += arr.get(i);\n            max = Math.max(max, arr.get(i));\n        \
    \    min = Math.min(min, arr.get(i));\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum += arr.get(i);\n            sumOfTwoDigits += arr.get(i)\
    \ - max;\n            max = Math.max(max, arr.get(i));\n            min = Math.min(min,\
    \ arr.get(i));\n        }\n        sumOfTwoDigits += sum - max;\n        return\
    \ sumOfTwoDigits;\n    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg2j5emf8.java:27: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1659794332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        long sum2 =\
    \ 0;\n        long max2 = 0;\n        long min2 = 0;\n        long sum3 = 0;\n\
    \        long max3 = 0;\n        long min3 = 0;\n        long sum4 = 0;\n    \
    \    long max4 = 0;\n        long min4 = 0;\n        long sum5 = 0;\n        long\
    \ max5 = 0;\n        long min5 = 0;\n        long sum6 = 0;\n        long max6\
    \ = 0;\n        long min6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n\
    \        long min7 = 0;\n        long sum8 = 0;\n        long max8 = 0;\n    \
    \    long min8 = 0;\n        long sum9 = 0;\n        long max9 = 0;\n        long\
    \ min9 = 0;\n        long sum10 = 0;\n        long max10 = 0;\n        long min10\
    \ = 0;\n        long sum11 = 0;\n        long max11 = 0;\n        long min11 =\
    \ 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long min12 = 0;\n\
    \        long sum13 = 0;\n        long max13 = 0;\n        long min13 = 0;\n \
    \       long sum14 = 0;\n        long max14 = 0;\n        long min14 = 0;\n  \
    \      long sum15 = 0;\n        long max15 = 0;\n        long min15 = 0;\n   \
    \     long sum16 = 0;\n        long max16 = 0;\n        long min16 = 0;\n    \
    \    long sum17 = 0;\n        long max17 = 0;\n        long min17 = 0;\n     \
    \   long sum18 = 0;\n        long max18 = 0;\n        long min18 = 0;\n      \
    \  long sum19 = 0;\n        long max19 = 0;\n        long min19 = 0;\n       \
    \ long sum20 = 0;\n        long max20 = 0;\n        long min20 = 0;\n        long\
    \ sum21 = 0;\n        long max21 = 0;\n        long min21 = 0;\n        long sum22\
    \ = 0;\n        long max22 = 0;\n        long min22 = 0;\n        long sum23 =\
    \ 0;\n        long max23 = 0;\n        long min23 = 0;\n        long sum24 = 0;\n\
    \        long max24 = 0;\n        long min24 = 0;\n        long sum25 = 0;\n \
    \       long max25 = 0;\n        long min25 = 0;\n        long sum26 = 0;\n  \
    \      long max26 = 0;\n        long min26 = 0;\n        long sum27 = 0;\n   \
    \     long max27 = 0;\n        long min27 = 0;\n        long sum28 = 0;\n    \
    \    long max28 = 0;\n        long min28 = 0;\n        long sum29 = 0;\n     \
    \   long max29 = 0;\n        long min29 = 0;\n        long sum30 = 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppvcmozvj.java:106: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        long sum2 =\
    \ 0;\n        long max2 = 0;\n        long min2 = 0;\n        long sum3 = 0;\n\
    \        long max3 = 0;\n        long min3 = 0;\n        long sum4 = 0;\n    \
    \    long max4 = 0;\n        long min4 = 0;\n        long sum5 = 0;\n        long\
    \ max5 = 0;\n        long min5 = 0;\n        long sum6 = 0;\n        long max6\
    \ = 0;\n        long min6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n\
    \        long min7 = 0;\n        long sum8 = 0;\n        long max8 = 0;\n    \
    \    long min8 = 0;\n        long sum9 = 0;\n        long max9 = 0;\n        long\
    \ min9 = 0;\n        long sum10 = 0;\n        long max10 = 0;\n        long min10\
    \ = 0;\n        long sum11 = 0;\n        long max11 = 0;\n        long min11 =\
    \ 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long min12 = 0;\n\
    \        long sum13 = 0;\n        long max13 = 0;\n        long min13 = 0;\n \
    \       long sum14 = 0;\n        long max14 = 0;\n        long min14 = 0;\n  \
    \      long sum15 = 0;\n        long max15 = 0;\n        long min15 = 0;\n   \
    \     long sum16 = 0;\n        long max16 = 0;\n        long min16 = 0;\n    \
    \    long sum17 = 0;\n        long max17 = 0;\n        long min17 = 0;\n     \
    \   long sum18 = 0;\n        long max18 = 0;\n        long min18 = 0;\n      \
    \  long sum19 = 0;\n        long max19 = 0;\n        long min19 = 0;\n       \
    \ long sum20 = 0;\n        long max20 = 0;\n        long min20 = 0;\n        long\
    \ sum21 = 0;\n        long max21 = 0;\n        long min21 = 0;\n        long sum22\
    \ = 0;\n        long max22 = 0;\n        long min22 = 0;\n        long sum23 =\
    \ 0;\n        long max23 = 0;\n        long min23 = 0;\n        long sum24 = 0;\n\
    \        long max24 = 0;\n        long min24 = 0;\n        long sum25 = 0;\n \
    \       long max25 = 0;\n        long min25 = 0;\n        long sum26 = 0;\n  \
    \      long max26 = 0;\n        long min26 = 0;\n        long sum27 = 0;\n   \
    \     long max27 = 0;\n        long min27 = 0;\n        long sum28 = 0;\n    \
    \    long max28 = 0;\n        long min28 = 0;\n        long sum29 = 0;\n     \
    \   long max29 = 0;\n        long min29 = 0;\n        long sum30 = 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppvcmozvj.java:106: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        long maxSumIndex = 0;\n        for(int\
    \ i = 0; i < k; i++) {\n            sum += arr.get(i);\n        }\n        for(int\
    \ i = k; i < arr.size(); i++) {\n            sum += arr.get(i);\n            if(sum\
    \ > maxSum) {\n                maxSum = sum;\n                maxSumIndex = i;\n\
    \            }\n        }\n        return maxSum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp13y8fx2w.java:24: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1659794330
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i<k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i<arr.size(); i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfoz1zrlv.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i<arr.size(); i++) {\n            \
    \        ^\n1 error\n"
  stdout: ''
  timestamp: 1659794332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        long sum2 =\
    \ 0;\n        long max2 = 0;\n        long min2 = 0;\n        long sum3 = 0;\n\
    \        long max3 = 0;\n        long min3 = 0;\n        long sum4 = 0;\n    \
    \    long max4 = 0;\n        long min4 = 0;\n        long sum5 = 0;\n        long\
    \ max5 = 0;\n        long min5 = 0;\n        long sum6 = 0;\n        long max6\
    \ = 0;\n        long min6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n\
    \        long min7 = 0;\n        long sum8 = 0;\n        long max8 = 0;\n    \
    \    long min8 = 0;\n        long sum9 = 0;\n        long max9 = 0;\n        long\
    \ min9 = 0;\n        long sum10 = 0;\n        long max10 = 0;\n        long min10\
    \ = 0;\n        long sum11 = 0;\n        long max11 = 0;\n        long min11 =\
    \ 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long min12 = 0;\n\
    \        long sum13 = 0;\n        long max13 = 0;\n        long min13 = 0;\n \
    \       long sum14 = 0;\n        long max14 = 0;\n        long min14 = 0;\n  \
    \      long sum15 = 0;\n        long max15 = 0;\n        long min15 = 0;\n   \
    \     long sum16 = 0;\n        long max16 = 0;\n        long min16 = 0;\n    \
    \    long sum17 = 0;\n        long max17 = 0;\n        long min17 = 0;\n     \
    \   long sum18 = 0;\n        long max18 = 0;\n        long min18 = 0;\n      \
    \  long sum19 = 0;\n        long max19 = 0;\n        long min19 = 0;\n       \
    \ long sum20 = 0;\n        long max20 = 0;\n        long min20 = 0;\n        long\
    \ sum21 = 0;\n        long max21 = 0;\n        long min21 = 0;\n        long sum22\
    \ = 0;\n        long max22 = 0;\n        long min22 = 0;\n        long sum23 =\
    \ 0;\n        long max23 = 0;\n        long min23 = 0;\n        long sum24 = 0;\n\
    \        long max24 = 0;\n        long min24 = 0;\n        long sum25 = 0;\n \
    \       long max25 = 0;\n        long min25 = 0;\n        long sum26 = 0;\n  \
    \      long max26 = 0;\n        long min26 = 0;\n        long sum27 = 0;\n   \
    \     long max27 = 0;\n        long min27 = 0;\n        long sum28 = 0;\n    \
    \    long max28 = 0;\n        long min28 = 0;\n        long sum29 = 0;\n     \
    \   long max29 = 0;\n        long min29 = 0;\n        long sum30 = 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppvcmozvj.java:106: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        for(int i = 0; i < k; i++) {\n \
    \           sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum += arr.get(i);\n            if(sum > maxSum) {\n   \
    \             maxSum = sum;\n            }\n        }\n        return maxSum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpag7by6n1.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        long maxSumIndex = 0;\n        for(int\
    \ i = 0; i< arr.size()-k; i++) {\n            sum += arr.get(i);\n        }\n\
    \        for(int i = arr.size()-k; i<arr.size(); i++) {\n            sum += arr.get(i);\n\
    \            if(sum > maxSum) {\n                maxSum = sum;\n             \
    \   maxSumIndex = i;\n            }\n        }\n        return maxSum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphaqaql9v.java:24: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = arr.size()-k; i<arr.size(); i++) {\n \
    \                             ^\n1 error\n"
  stdout: ''
  timestamp: 1659794332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        for(int i = 0; i < k; i++) {\n   \
    \         sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum2 += arr.get(i);\n        }\n        return sum + sum2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr3ivwm_q.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        long max2 =\
    \ 0;\n        long min2 = 0;\n        long max3 = 0;\n        long min3 = 0;\n\
    \        long max4 = 0;\n        long min4 = 0;\n        long max5 = 0;\n    \
    \    long min5 = 0;\n        long max6 = 0;\n        long min6 = 0;\n        long\
    \ max7 = 0;\n        long min7 = 0;\n        long max8 = 0;\n        long min8\
    \ = 0;\n        long max9 = 0;\n        long min9 = 0;\n        long max10 = 0;\n\
    \        long min10 = 0;\n        long max11 = 0;\n        long min11 = 0;\n \
    \       long max12 = 0;\n        long min12 = 0;\n        long max13 = 0;\n  \
    \      long min13 = 0;\n        long max14 = 0;\n        long min14 = 0;\n   \
    \     long max15 = 0;\n        long min15 = 0;\n        long max16 = 0;\n    \
    \    long min16 = 0;\n        long max17 = 0;\n        long min17 = 0;\n     \
    \   long max18 = 0;\n        long min18 = 0;\n        long max19 = 0;\n      \
    \  long min19 = 0;\n        long max20 = 0;\n        long min20 = 0;\n       \
    \ long max21 = 0;\n        long min21 = 0;\n        long max22 = 0;\n        long\
    \ min22 = 0;\n        long max23 = 0;\n        long min23 = 0;\n        long max24\
    \ = 0;\n        long min24 = 0;\n        long max25 = 0;\n        long min25 =\
    \ 0;\n        long max26 = 0;\n        long min26 = 0;\n        long max27 = 0;\n\
    \        long min27 = 0;\n        long max28 = 0;\n        long min28 = 0;\n \
    \       long max29 = 0;\n        long min29 = 0;\n        long max30 = 0;\n  \
    \      long min30 = 0;\n        long max31 = 0;\n        long min31 = 0;\n   \
    \     long max32 = 0;\n        long min32 = 0;\n        long max33 = 0;\n    \
    \    long min33 = 0;\n        long max34 = 0;\n        long min34 = 0;\n     \
    \   long max35 = 0;\n        long min35 = 0;\n        long max36 = 0;\n      \
    \  long min36 = 0;\n        long max37 = 0;\n        long min37 = 0;\n       \
    \ long max38 = 0;\n        long min38 = 0;\n        long max39 = 0;\n        long\
    \ min39 = 0;\n        long max40 = 0;\n        long min40 = 0;\n        long max41\
    \ = 0;\n        long min41 = 0;\n        long max42 = 0;\n        long min42 =\
    \ 0;\n        long max43 = 0;\n        long min43 = 0;\n        \n    }\n    public\
    \ static void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpseqprft2.java:106: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1659794332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        long maxSumIndex = 0;\n        long\
    \ maxSumElement = 0;\n        for(int i = 0; i < k; i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        for(int i = k; i < arr.size(); i++) {\n    \
    \        sum += arr.get(i);\n            if(sum > maxSum) {\n                maxSum\
    \ = sum;\n                maxSumIndex = i;\n                maxSumElement = arr.get(maxSumIndex);\n\
    \            }\n        }\n        return maxSum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5ebbuqes.java:25: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n/tmp/tmp5ebbuqes.java:30: error: incompatible types: possible lossy\
    \ conversion from long to int\n                maxSumElement = arr.get(maxSumIndex);\n\
    \                                        ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659794332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        for(int i =\
    \ 0; i<arr.size(); i++) {\n            max = Math.max(max, arr.get(i));\n    \
    \        min = Math.min(min, arr.get(i));\n        }\n        for(int i = 0; i<arr.size();\
    \ i++) {\n            sum += arr.get(i);\n            if((sum % 10) == 0) {\n\
    \                sum += k;\n            }\n        }\n        return sum;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgobwpswy.java:34)\n"
  stdout: ''
  timestamp: 1659794333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        for(int i = 0; i < k; i++) {\n    \
    \        sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum += arr.get(i);\n            max = Math.max(max, sum);\n\
    \        }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdq90_n5v.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        for(int i = 0; i < k; i++) {\n    \
    \        sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum += arr.get(i);\n            max = Math.max(max, sum);\n\
    \        }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdq90_n5v.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        for(int i = 0; i < k; i++) {\n \
    \           sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum += arr.get(i);\n            maxSum = Math.max(maxSum,\
    \ sum);\n        }\n        return maxSum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjrv4ucs7.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        long maxSumIndex = 0;\n        for(int\
    \ i = 0; i < k; i++) {\n            sum += arr.get(i);\n        }\n        for(int\
    \ i = k; i < arr.size(); i++) {\n            sum += arr.get(i);\n            if(sum\
    \ > maxSum) {\n                maxSum = sum;\n                maxSumIndex = i;\n\
    \            }\n        }\n        return maxSum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp13y8fx2w.java:24: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1659794330
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long maxSum = 0;\n        long maxSumIndex = 0;\n        for(int\
    \ i = 0; i < k; i++) {\n            sum += arr.get(i);\n        }\n        for(int\
    \ i = k; i < arr.size(); i++) {\n            sum += arr.get(i);\n            if(sum\
    \ > maxSum) {\n                maxSum = sum;\n                maxSumIndex = i;\n\
    \            }\n        }\n        return maxSum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp13y8fx2w.java:24: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1659794330
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sumOfTwoDigits = 0;\n        for(int i = 0; i < k; i++)\
    \ {\n            sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sumOfTwoDigits += arr.get(i);\n        }\n        return\
    \ sum + sumOfTwoDigits;\n    }\n    public static void main(String[] args) {\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm8xwiokg.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        for(int i = 0; i < k; i++) {\n    \
    \        sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum += arr.get(i);\n            max = Math.max(max, sum);\n\
    \        }\n        return max;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdq90_n5v.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i<arr.size()-k; i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ix8pt6f.java:25)\n"
  stdout: ''
  timestamp: 1659794331
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        long sumOfTwoDigits\
    \ = 0;\n        long sumOfThreeDigits = 0;\n        long sumOfFourDigits = 0;\n\
    \        long sumOfFiveDigits = 0;\n        long sumOfSixDigits = 0;\n       \
    \ long sumOfSevenDigits = 0;\n        long sumOfEightDigits = 0;\n        long\
    \ sumOfNineDigits = 0;\n        long sumOfTenDigits = 0;\n        long sumOfElevenDigits\
    \ = 0;\n        long sumOfTwelveDigits = 0;\n        long sumOfElevenPlusTenDigits\
    \ = 0;\n        long sumOfElevenPlusNineDigits = 0;\n        long sumOfElevenPlusEightDigits\
    \ = 0;\n        long sumOfElevenPlusSevenDigits = 0;\n        long sumOfElevenPlusSixDigits\
    \ = 0;\n        long sumOfElevenPlusFiveDigits = 0;\n        long sumOfElevenPlusFourDigits\
    \ = 0;\n        long sumOfElevenPlusThreeDigits = 0;\n        long sumOfElevenPlusTwoDigits\
    \ = 0;\n        long sumOfElevenPlusOneDigits = 0;\n        long sumOfElevenPlusZeroDigits\
    \ = 0;\n        long sumOfElevenPlusOneAndTwoDigits = 0;\n        long sumOfElevenPlusOneAndThreeDigits\
    \ = 0;\n        long sumOfElevenPlusOneAndFourDigits = 0;\n        long sumOfElevenPlusOneAndFiveDigits\
    \ = 0;\n        long sumOfElevenPlusOneAndSixDigits = 0;\n        long sumOfElevenPlusOneAndSevenDigits\
    \ = 0;\n        long sumOfElevenPlusOneAndEightDigits = 0;\n        long sumOfElevenPlusOneAndNineDigits\
    \ = 0;\n        long sumOfElevenPlusOneAndTenDigits = 0;\n        long sumOfElevenPlusOneAndElevenDigits\
    \ = 0;\n        long sumOfElevenPlusOneAndTwelveDigits = 0;\n        long sumOfElevenPlusOneAndElevenPlusTenDigits\
    \ = 0;\n        long sumOfElevenPlusOneAndElevenPlusNineDigits = 0;\n        long\
    \ sumOfElevenPlusOneAndElevenPlusEightDigits = 0;\n        long sumOfElevenPlusOneAndElevenPlusSevenDigits\
    \ = 0;\n        long sumOfElevenPlusOneAndElevenPlusSixDigits = 0;\n        long\
    \ sumOfElevenPlusOneAndElevenPlusFiveDigits = 0;\n        long sumOfElevenPlusOneAndElevenPlusFourDigits\
    \ = 0;\n        long sumOfElevenPlus\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwesk2ybh.java:61: error: ';' expected\n        long sumOfElevenPlus\n\
    \                            ^\n1 error\n"
  stdout: ''
  timestamp: 1659794332
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        for(int i = 0; i < k; i++) {\n   \
    \         sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum2 += arr.get(i);\n        }\n        return sum + sum2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr3ivwm_q.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        for(int i = 0; i < k; i++) {\n   \
    \         sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum2 += arr.get(i);\n        }\n        return sum + sum2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr3ivwm_q.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4\
    \ = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n\
    \        long sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n   \
    \     long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n    \
    \    long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n     \
    \   long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n      \
    \  long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n       \
    \ long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long\
    \ sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29\
    \ = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 =\
    \ 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n\
    \        long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n \
    \       long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n  \
    \      long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n   \
    \     long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n    \
    \    long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n     \
    \   long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n      \
    \  long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n       \
    \ long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long\
    \ sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63\
    \ = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long sum66 =\
    \ 0;\n        long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n\
    \        long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n \
    \       long sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n  \
    \      long sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n   \
    \     long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n    \
    \    long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n     \
    \   long sum85 = 0;\n        long sum86 = 0;\n        \n    }\n    public static\
    \ void main(String[] args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpioxzt3qh.java:105: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long sum2 = 0;\n        for(int i = 0; i < k; i++) {\n   \
    \         sum += arr.get(i);\n        }\n        for(int i = k; i < arr.size();\
    \ i++) {\n            sum2 += arr.get(i);\n        }\n        return sum + sum2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)-2l, (long)-3l, (long)41l, (long)57l,\
    \ (long)76l, (long)87l, (long)88l, (long)99l))), (3l)) == (-4l));\n    assert(addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)121l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l))), (2l)) == (0l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l,\
    \ (long)21l, (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr3ivwm_q.java:23: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7h3vlmb.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        long max = 0;\n        long min = 0;\n        for(int i =\
    \ 0; i< arr.size(); i++) {\n            max = Math.max(max, arr.get(i));\n   \
    \         min = Math.min(min, arr.get(i));\n        }\n        for(int i = 0;\
    \ i< arr.size(); i++) {\n            sum += arr.get(i);\n            if(sum >=\
    \ max && sum < (max-min)) {\n                sum += (max-min);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l, (long)-2l,\
    \ (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l, (long)99l))),\
    \ (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_fw3adu4.java:34)\n"
  stdout: ''
  timestamp: 1659794333
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array array list of integers arr and\
    \ an integer k, return\n    // the sum of the elements with at most two digits\
    \ from the first k elements of arr.\n    // Example:\n    // >>> addElements((new\
    \ ArrayList<Long>(Arrays.asList((long)111l, (long)21l, (long)3l, (long)4000l,\
    \ (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\n    // (24l)\n \
    \   // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1 <= k <= len(arr)\n\
    \    public static long addElements(ArrayList<Long> arr, long k) {\n        long\
    \ sum = 0;\n        for(int i = 0; i < k; i++) {\n            sum += arr.get(i);\n\
    \        }\n        for(int i = k; i < arr.size(); i++) {\n            sum +=\
    \ arr.get(i);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)-2l, (long)-3l, (long)41l, (long)57l, (long)76l, (long)87l, (long)88l,\
    \ (long)99l))), (3l)) == (-4l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)121l, (long)3l, (long)4000l, (long)5l, (long)6l))), (2l)) == (0l));\n\
    \    assert(addElements((new ArrayList<Long>(Arrays.asList((long)11l, (long)21l,\
    \ (long)3l, (long)90l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))), (4l))\
    \ == (125l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)21l, (long)3l, (long)4000l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l))),\
    \ (4l)) == (24l));\n    assert(addElements((new ArrayList<Long>(Arrays.asList((long)1l))),\
    \ (1l)) == (1l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp65466jmi.java:22: error: incompatible types: possible lossy conversion\
    \ from long to int\n        for(int i = k; i < arr.size(); i++) {\n          \
    \          ^\n1 error\n"
  stdout: ''

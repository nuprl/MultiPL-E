name: HumanEval_91_is_bored
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // You'll be given a string of words, and your task is to count\
  \ the number\n    // of boredoms. A boredom is a sentence that starts with the word\
  \ \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n\
  \    // >>> isBored((\"Hello world\"))\n    // (0l)\n    // >>> isBored((\"The sky\
  \ is blue. The sun is shining. I love this weather\"))\n    // (1l)\n    public\
  \ static long isBored(String S) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(isBored((\"\
  Hello world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n\
  \    assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\"))\
  \ == (0l));\n    assert(isBored((\"I feel good today. I will be productive. will\
  \ kill It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\"\
  )) == (0l));\n    }\n\n}\n"
completions: ["        long boredomCount = 0;\n        String[] words = S.split(\"\
    [.?!]\");\n        for (String word : words) {\n            if (word.equals(\"\
    I\")) {\n                boredomCount++;\n            }\n        }\n        return\
    \ boredomCount;", "        long boredoms = 0;\n        String[] words = S.split(\"\
    [.?!]\");\n        for (String word : words) {\n            if (word.equals(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;", "        long boredomCount = 0;\n        String[] words = S.split(\"\
    [.?!]\");\n        for (String word : words) {\n            if (word.equals(\"\
    I\")) {\n                boredomCount++;\n            }\n        }\n        return\
    \ boredomCount;", "        long boredoms = 0;\n        String[] words = S.split(\"\
    [.?!]\");\n        for (String word : words) {\n            if (word.equals(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;", "        long boredoms = 0;\n        String[] words = S.split(\"\
    [.?!]\");\n        for (String word : words) {\n            if (word.equals(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;", "        long boredoms = 0;\n        String[] words = S.split(\"\
    \\\\.|\\\\?|\\\\!\");\n        for (String word : words) {\n            if (word.equals(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;", "        long boredomCount = 0;\n        String[] words = S.split(\"\
    [.?!]\");\n        for (String word : words) {\n            if (word.equals(\"\
    I\")) {\n                boredomCount++;\n            }\n        }\n        return\
    \ boredomCount;", "        long boredoms = 0;\n        String[] words = S.split(\"\
    [.?!]\");\n        for (String word : words) {\n            if (word.equals(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;", "        long boredomCount = 0;\n        String[] words = S.split(\"\
    [.?!]\");\n        for (String word : words) {\n            if (word.equals(\"\
    I\")) {\n                boredomCount++;\n            }\n        }\n        return\
    \ boredomCount;", "        long boredoms = 0;\n        String[] words = S.split(\"\
    [.?!]\");\n        for (String word : words) {\n            if (word.equals(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;", "        long boredoms = 0;\n        String[] words = S.split(\"\
    [.?!]\");\n        for (String word : words) {\n            if (word.equals(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;", "        long boredoms = 0;\n        String[] words = S.split(\"\
    [.?!]\");\n        for (String word : words) {\n            if (word.equals(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;", "        long boredoms = 0;\n        String[] words = S.split(\"\
    \ \");\n        for (String word : words) {\n            if (word.startsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;", "        long boredomCount = 0;\n        String[] words = S.split(\"\
    [.?!]\");\n        for (String word : words) {\n            if (word.equals(\"\
    I\")) {\n                boredomCount++;\n            }\n        }\n        return\
    \ boredomCount;", "        long boredoms = 0;\n        String[] words = S.split(\"\
    [.?!]\");\n        for (String word : words) {\n            if (word.equals(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;", "        long boredoms = 0;\n        String[] words = S.split(\"\
    [.?!]\");\n        for (String word : words) {\n            if (word.equals(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;", "        long boredomCount = 0;\n        String[] words = S.split(\"\
    [.?!]\");\n        for (String word : words) {\n            if (word.equals(\"\
    I\")) {\n                boredomCount++;\n            }\n        }\n        return\
    \ boredomCount;", "        long boredoms = 0;\n        String[] words = S.split(\"\
    [.?!]\");\n        for (String word : words) {\n            if (word.equals(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;", "        long boredoms = 0;\n        String[] words = S.split(\"\
    \ \");\n        for (String word : words) {\n            if (word.equals(\"I\"\
    )) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;", "        long boredoms = 0;\n        String[] words = S.split(\"\
    [.?!]\");\n        for (String word : words) {\n            if (word.equals(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;"]
stop_tokens:
- "\n    }\n"

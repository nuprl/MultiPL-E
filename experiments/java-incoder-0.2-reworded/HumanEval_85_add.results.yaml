language: java
name: HumanEval_85_add
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (Long i : lst) {\n            if (i % 2 == 0) {\n        \
    \        sum += i;\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr0b4l1ct.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (long i : lst) {\n            if (i % 2 == 0) {\n        \
    \        sum += i;\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvyjs3non.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0)\
    \ {\n                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qaphsnr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0)\
    \ {\n                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qaphsnr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0)\
    \ {\n                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qaphsnr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0)\
    \ {\n                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qaphsnr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0)\
    \ {\n                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qaphsnr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (long i : lst) {\n            if (i % 2 == 0) {\n        \
    \        sum += i;\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvyjs3non.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0)\
    \ {\n                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qaphsnr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0)\
    \ {\n                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qaphsnr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (long i : lst) {\n            if (i % 2 == 0) {\n        \
    \        sum += i;\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvyjs3non.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0)\
    \ {\n                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qaphsnr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (long i : lst) {\n            if (i % 2 == 0) {\n        \
    \        sum += i;\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvyjs3non.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0)\
    \ {\n                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qaphsnr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (long i : lst) {\n            if (i % 2 == 0) {\n        \
    \        sum += i;\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvyjs3non.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0)\
    \ {\n                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qaphsnr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0)\
    \ {\n                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qaphsnr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0)\
    \ {\n                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qaphsnr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (long i : lst) {\n            if (i % 2 == 0) {\n        \
    \        sum += i;\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvyjs3non.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0)\
    \ {\n                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qaphsnr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0)\
    \ {\n                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qaphsnr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if((i % 2)\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5rwy7z9s.java:23)\n"
  stdout: ''
  timestamp: 1659800110
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0)\
    \ {\n                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qaphsnr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if((i%2) ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqcl8e5l_.java:23)\n"
  stdout: ''
  timestamp: 1659800110
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (long i : lst) {\n            if (i % 2 == 0) {\n        \
    \        sum += i;\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvyjs3non.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (long i : lst) {\n            if (i % 2 == 0) {\n        \
    \        sum += i;\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvyjs3non.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0)\
    \ {\n                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qaphsnr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (long i : lst) {\n            if (i % 2 == 0) {\n        \
    \        sum += i;\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvyjs3non.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (long i : lst) {\n            if (i % 2 == 0) {\n        \
    \        sum += i;\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvyjs3non.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0)\
    \ {\n                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qaphsnr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (long i : lst) {\n            if (i % 2 == 0) {\n        \
    \        sum += i;\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvyjs3non.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (long i : lst) {\n            if (i % 2 == 0) {\n        \
    \        sum += i;\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvyjs3non.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if((i % 2)\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5rwy7z9s.java:23)\n"
  stdout: ''
  timestamp: 1659800110
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0)\
    \ {\n                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qaphsnr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0)\
    \ {\n                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qaphsnr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0)\
    \ {\n                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qaphsnr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i%2 == 0)\
    \ {\n                sum += lst.get(i);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qaphsnr.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (long i : lst) {\n            if (i % 2 == 0) {\n        \
    \        sum += i;\n            }\n        }\n        return sum;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)88l)))) == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)5l, (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvyjs3non.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++) {\n            if(i % 2 ==\
    \ 0) {\n                sum += lst.get(i);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18mu99_z.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty array list of integers lst. add the\
    \ even elements that are at odd indices..\n    // Examples:\n    // >>> add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)6l, (long)7l))))\n \
    \   // (2l)\n    public static long add(ArrayList<Long> lst) {\n        long sum\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (i % 2\
    \ == 0) {\n                sum += lst.get(i);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)88l)))) == (88l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l, (long)2l,\
    \ (long)122l)))) == (122l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)0l, (long)6l, (long)7l)))) == (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uzx8_j9.java:23)\n"
  stdout: ''

language: java
name: HumanEval_63_fibfib
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 0) return 0;\n    \
    \    if (n <= 2) return 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphae9ss7t.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ n;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1sivdf4x.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.j"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0)\n            return\
    \ 0;\n        if (n == 1)\n            return 1;\n        if (n == 2)\n      \
    \      return 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n  \
    \  }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpos1vajzs.java:32)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        if\
    \ (n == 0) {\n            fibfib = 0;\n        } else if (n == 1) {\n        \
    \    fibfib = 0;\n        } else if (n == 2) {\n            fibfib = 1;\n    \
    \    } else {\n            fibfib = fibfib + fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3);\n        }\n        return fibfib;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ n;\n        }\n        long a = fibfib(n-1);\n        long b = fibfib(n-2);\n\
    \        long c = fibfib(n-3);\n        return a+b+c;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsfsa4_ih.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        long\
    \ fibfib1 = fibfib;\n        long fibfib2 = fibfib1;\n        long fibfib3 = fibfib2;\n\
    \        long fibfib4 = fibfib3;\n        long fibfib5 = fibfib4;\n        long\
    \ fibfib6 = fibfib5;\n        long fibfib7 = fibfib6;\n        long fibfib8 =\
    \ fibfib7;\n        long fibfib9 = fibfib8;\n        long fibfib10 = fibfib9;\n\
    \        long fibfib11 = fibfib10;\n        long fibfib12 = fibfib11;\n      \
    \  long fibfib13 = fibfib12;\n        long fibfib14 = fibfib13;\n        long\
    \ fibfib15 = fibfib14;\n        long fibfib16 = fibfib15;\n        long fibfib17\
    \ = fibfib16;\n        long fibfib18 = fibfib17;\n        long fibfib19 = fibfib18;\n\
    \        long fibfib20 = fibfib19;\n        long fibfib21 = fibfib20;\n      \
    \  long fibfib22 = fibfib21;\n        long fibfib23 = fibfib22;\n        long\
    \ fibfib24 = fibfib23;\n        long fibfib25 = fibfib24;\n        long fibfib26\
    \ = fibfib25;\n        long fibfib27 = fibfib26;\n        long fibfib28 = fibfib27;\n\
    \        long fibfib29 = fibfib28;\n        long fibfib30 = fibfib29;\n      \
    \  long fibfib31 = fibfib30;\n        long fibfib32 = fibfib31;\n        long\
    \ fibfib33 = fibfib32;\n        long fibfib34 = fibfib33;\n        long fibfib35\
    \ = fibfib34;\n        long fibfib36 = fibfib35;\n        long fibfib37 = fibfib36;\n\
    \        long fibfib38 = fibfib37;\n        long fibfib39 = fibfib38;\n      \
    \  long fibfib40 = fibfib39;\n        long fibfib41 = fibfib40;\n        long\
    \ fibfib42 = fibfib41;\n        long fibfib43 = fibfib42;\n        long fibfib44\
    \ = fibfib43;\n        long fibfib45 = fibfib44;\n        long fibfib46 = fibfib45;\n\
    \        long fibfib47 = fibfib46;\n        long fibfib48 = fibfib47;\n      \
    \  long fibfib49 = fibfib48;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpihaz25vf.java:72: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.j"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        if\
    \ (n == 0) {\n            fibfib = 0;\n        } else if (n == 1) {\n        \
    \    fibfib = 0;\n        } else if (n == 2) {\n            fibfib = 1;\n    \
    \    } else {\n            fibfib = (fibfib * (n - 1)) + (fibfib * (n - 2)) +\
    \ (fibfib * (n - 3));\n        }\n        return fibfib;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpewljo3og.java:37)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) return 0l;\n  \
    \      return fibfib(n-1l) + fibfib(n-2l) + fibfib(n-3l);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx8aff_w0.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0) return 0;\n    \
    \    if (n == 1) return 0;\n        if (n == 2) return 1;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 0) {\n            return\
    \ 0;\n        }\n        if (n == 1) {\n            return 0;\n        }\n   \
    \     if (n == 2) {\n            return 1;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) {\n           \
    \ return 0l;\n        }\n        long fibfib = (long) Math.pow(1l, n - 2l);\n\
    \        return fibfib;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l))\
    \ == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n\
    \    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc01dwm23.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        long\
    \ fibfib1 = 1;\n        long fibfib2 = 1;\n        long fibfib3 = 1;\n       \
    \ long fibfib4 = 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n  \
    \      long fibfib7 = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n\
    \        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long fibfib12\
    \ = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long fibfib15\
    \ = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long fibfib18\
    \ = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long fibfib21\
    \ = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long fibfib24\
    \ = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long fibfib27\
    \ = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long fibfib30\
    \ = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long fibfib33\
    \ = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long fibfib36\
    \ = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long fibfib39\
    \ = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long fibfib42\
    \ = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long fibfib45\
    \ = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long fibfib48\
    \ = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long fibfib51\
    \ = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long fibfib54\
    \ = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long fibfib57\
    \ = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long fibfib60\
    \ = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long fibfib63\
    \ = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long fibfib66\
    \ = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long fibfib69\
    \ = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long fibfib7\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvodgig6b.java:94: error: ';' expected\n        long fibfib7\n \
    \                   ^\n1 error\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0) return 0l;\n   \
    \     if (n == 1) return 0l;\n        if (n == 2) return 1l;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        long fibfib = (long) Math.pow(fibfib(n-1), 2) + fibfib(n-2);\n\
    \        return fibfib;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l))\
    \ == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n\
    \    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcz_6q5rk.java:29)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1) return 0;\n    \
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpri8xtkql.java:26)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) return 0l;\n  \
    \      if (n <= 3l) return 1l;\n        return fibfib(n-1l) + fibfib(n-2l) + fibfib(n-3l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return n;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.j"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) return 0l;\n   \
    \     if (n <= 5) return 4l;\n        if (n <= 8) return 24l;\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppn9bc1h7.java:28)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.j"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0) return 0;\n    \
    \    if (n == 1) return 1;\n        if (n == 2) return 1;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6mbvhc0_.java:29)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0) return 0;\n    \
    \    if (n == 1) return 1;\n        if (n == 2) return 1;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6mbvhc0_.java:29)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) {\n           \
    \ return 0l;\n        }\n        long fibfib = (long) Math.pow(fibfib(n-1), 2)\
    \ + fibfib(n-2) + fibfib(n-3);\n        return fibfib;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8pycfyq.java:29)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) {\n           \
    \ return 0l;\n        }\n        long fibfib = (long) Math.pow(fibfib(n-1l), 2l);\n\
    \        return fibfib;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l))\
    \ == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n\
    \    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpocc0yq7u.java:29)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) return 0l;\n  \
    \      if (n <= 3l) return 1l;\n        return fibfib(n-1l) + fibfib(n-2l) + fibfib(n-3l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) {\n           \
    \ return 0l;\n        }\n        long a = fibfib(n-1l);\n        long b = fibfib(n-2l);\n\
    \        long c = fibfib(n-3l);\n        return a + b + c;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph2blqd02.java:31)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) return 0l;\n  \
    \      if (n <= 3l) return 1l;\n        return fibfib(n-1l) + fibfib(n-2l) + fibfib(n-3l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        long fibfib = (long) Math.pow(fibfib(n-1), 2) + fibfib(n-2);\n\
    \        return fibfib;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l))\
    \ == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n\
    \    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcz_6q5rk.java:29)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.j"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0) {\n            return\
    \ 0;\n        }\n        if (n == 1) {\n            return 1;\n        }\n   \
    \     if (n == 2) {\n            return 1;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8fhfcyf1.java:35)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        long a = fibfib(n-1);\n        long b = fibfib(n-2);\n\
    \        long c = fibfib(n-3);\n        return a+b+c;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8mfcjf71.java:31)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.j"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        long a = fibfib(n-1);\n        long b = fibfib(n-2);\n\
    \        long c = fibfib(n-3);\n        return a + b + c;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ytx5reo.java:31)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) {\n           \
    \ return 0l;\n        }\n        if (n <= 3l) {\n            return 1l;\n    \
    \    }\n        return fibfib(n-1l) + fibfib(n-2l) + fibfib(n-3l);\n    }\n  \
    \  public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 0) {\n            return\
    \ 0;\n        }\n        if (n == 1) {\n            return 0;\n        }\n   \
    \     if (n == 2) {\n            return 1;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        if\
    \ (n == 0) {\n            fibfib = 0;\n        } else if (n == 1) {\n        \
    \    fibfib = 0;\n        } else if (n == 2) {\n            fibfib = 1;\n    \
    \    } else {\n            fibfib = fibfib + fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3);\n        }\n        return fibfib;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0) {\n            return\
    \ 0;\n        }\n        if (n == 1) {\n            return 1;\n        }\n   \
    \     if (n == 2) {\n            return 1;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8fhfcyf1.java:35)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        if\
    \ (n == 0) {\n            fibfib = 0;\n        } else if (n == 1) {\n        \
    \    fibfib = 0;\n        } else if (n == 2) {\n            fibfib = 1;\n    \
    \    } else {\n            fibfib = fibfib + fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3);\n        }\n        return fibfib;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.j"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return n;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.j"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.j"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) {\n           \
    \ return 0l;\n        }\n        long fibfib = (1l);\n        for (int i = 3;\
    \ i <= n; i++) {\n            fibfib = (fibfib + fibfib + fibfib);\n        }\n\
    \        return fibfib;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l))\
    \ == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n\
    \    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmg0r6vgi.java:34)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) {\n           \
    \ return 0l;\n        }\n        long a = fibfib(n-1l);\n        long b = fibfib(n-2l);\n\
    \        long c = fibfib(n-3l);\n        return a + b + c;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph2blqd02.java:31)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        if\
    \ (n == 0) {\n            fibfib = 0;\n        } else if (n == 1) {\n        \
    \    fibfib = 0;\n        } else if (n == 2) {\n            fibfib = 1;\n    \
    \    } else {\n            fibfib = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \        }\n        return fibfib;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        long fibfib = (long) Math.pow(fibfib(n-1), 2) + fibfib(n-2)\
    \ + fibfib(n-3);\n        return fibfib;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7llvo_xu.java:29)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.j"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        long fibfib = (long) Math.pow(fibfib(n-1), 3) + fibfib(n-2)\
    \ + fibfib(n-3);\n        return fibfib;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpibr5sqg_.java:29)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 0) return 0;\n    \
    \    if (n <= 3) return 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjo2o5q_v.java:28)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) {\n           \
    \ return 0l;\n        }\n        return fibfib(n-1l) + fibfib(n-2l) + fibfib(n-3l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjknt84rz.java:28)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.j"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) return 0l;\n  \
    \      return fibfib(n-1l) + fibfib(n-2l) + fibfib(n-3l);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx8aff_w0.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        long\
    \ fibfib1 = 1;\n        long fibfib2 = 1;\n        long fibfib3 = 1;\n       \
    \ long fibfib4 = 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n  \
    \      long fibfib7 = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n\
    \        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long fibfib12\
    \ = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long fibfib15\
    \ = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long fibfib18\
    \ = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long fibfib21\
    \ = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long fibfib24\
    \ = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long fibfib27\
    \ = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long fibfib30\
    \ = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long fibfib33\
    \ = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long fibfib36\
    \ = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long fibfib39\
    \ = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long fibfib42\
    \ = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long fibfib45\
    \ = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long fibfib48\
    \ = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long fibfib51\
    \ = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long fibfib54\
    \ = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long fibfib57\
    \ = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long fibfib60\
    \ = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long fibfib63\
    \ = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long fibfib66\
    \ = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long fibfib69\
    \ = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long fibfib72\
    \ = \n    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3y3lc4w4.java:95: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0) return 0;\n    \
    \    if (n == 1) return 1;\n        if (n == 2) return 1;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6mbvhc0_.java:29)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        long\
    \ fibfib1 = 1;\n        long fibfib2 = 1;\n        long fibfib3 = 1;\n       \
    \ long fibfib4 = 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n  \
    \      long fibfib7 = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n\
    \        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long fibfib12\
    \ = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long fibfib15\
    \ = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long fibfib18\
    \ = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long fibfib21\
    \ = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long fibfib24\
    \ = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long fibfib27\
    \ = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long fibfib30\
    \ = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long fibfib33\
    \ = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long fibfib36\
    \ = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long fibfib39\
    \ = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long fibfib42\
    \ = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long fibfib45\
    \ = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long fibfib48\
    \ = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long fibfib51\
    \ = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long fibfib54\
    \ = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long fibfib57\
    \ = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long fibfib60\
    \ = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long fibfib63\
    \ = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long fibfib66\
    \ = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long fibfib69\
    \ = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long fibfib72\
    \ = \n    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3y3lc4w4.java:95: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) {\n           \
    \ return 0l;\n        }\n        if (n <= 3l) {\n            return 1l;\n    \
    \    }\n        return fibfib(n-1l) + fibfib(n-2l) + fibfib(n-3l);\n    }\n  \
    \  public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.j"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.j"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) return 0l;\n   \
    \     return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8a73wkm4.java:26)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0) return 0L;\n   \
    \     if (n == 1) return 1L;\n        if (n == 2) return 1L;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy6sv9w3u.java:29)\n"
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 0) {\n            return\
    \ 0;\n        }\n        if (n == 1) {\n            return 0;\n        }\n   \
    \     if (n == 2) {\n            return 1;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 0) {\n            return\
    \ 0;\n        }\n        if (n <= 3) {\n            return 1;\n        }\n   \
    \     return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbsct4cm0.java:32)\n"
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1) return 0;\n    \
    \    if (n <= 3) return 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800004
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        long\
    \ fibfib1 = fibfib;\n        long fibfib2 = fibfib1;\n        long fibfib3 = fibfib2;\n\
    \        long fibfib4 = fibfib3;\n        long fibfib5 = fibfib4;\n        long\
    \ fibfib6 = fibfib5;\n        long fibfib7 = fibfib6;\n        long fibfib8 =\
    \ fibfib7;\n        long fibfib9 = fibfib8;\n        long fibfib10 = fibfib9;\n\
    \        long fibfib11 = fibfib10;\n        long fibfib12 = fibfib11;\n      \
    \  long fibfib13 = fibfib12;\n        long fibfib14 = fibfib13;\n        long\
    \ fibfib15 = fibfib14;\n        long fibfib16 = fibfib15;\n        long fibfib17\
    \ = fibfib16;\n        long fibfib18 = fibfib17;\n        long fibfib19 = fibfib18;\n\
    \        long fibfib20 = fibfib19;\n        long fibfib21 = fibfib20;\n      \
    \  long fibfib22 = fibfib21;\n        long fibfib23 = fibfib22;\n        long\
    \ fibfib24 = fibfib23;\n        long fibfib25 = fibfib24;\n        long fibfib26\
    \ = fibfib25;\n        long fibfib27 = fibfib26;\n        long fibfib28 = fibfib27;\n\
    \        long fibfib29 = fibfib28;\n        long fibfib30 = fibfib29;\n      \
    \  long fibfib31 = fibfib30;\n        long fibfib32 = fibfib31;\n        long\
    \ fibfib33 = fibfib32;\n        long fibfib34 = fibfib33;\n        long fibfib35\
    \ = fibfib34;\n        long fibfib36 = fibfib35;\n        long fibfib37 = fibfib36;\n\
    \        long fibfib38 = fibfib37;\n        long fibfib39 = fibfib38;\n      \
    \  long fibfib40 = fibfib39;\n        long fibfib41 = fibfib40;\n        long\
    \ fibfib42 = fibfib41;\n        long fibfib43 = fibfib42;\n        long fibfib44\
    \ = fibfib43;\n        long fibfib45 = fibfib44;\n        long fibfib46 = fibfib45;\n\
    \        long fibfib47 = fibfib46;\n        long fibfib48 = fibfib47;\n      \
    \  long fibfib49 = fibfib48;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpihaz25vf.java:72: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        if\
    \ (n == 0) {\n            fibfib = 0;\n        } else if (n == 1) {\n        \
    \    fibfib = 0;\n        } else if (n == 2) {\n            fibfib = 1;\n    \
    \    } else {\n            fibfib = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \        }\n        return fibfib;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0) {\n            return\
    \ 0;\n        } else if (n == 1) {\n            return 1;\n        } else if (n\
    \ == 2) {\n            return 1;\n        } else {\n            return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp639wc2i4.java:34)\n"
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) {\n           \
    \ return 0l;\n        }\n        if (n <= 3l) {\n            return 1l;\n    \
    \    }\n        return fibfib(n-1l) + fibfib(n-2l) + fibfib(n-3l);\n    }\n  \
    \  public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) return 0l;\n   \
    \     return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8a73wkm4.java:26)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0) {\n            return\
    \ 0l;\n        } else if (n == 1) {\n            return 1l;\n        } else if\
    \ (n == 2) {\n            return 1l;\n        } else {\n            return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxojw9eu.java:34)\n"
  stdout: ''
  timestamp: 1659800004
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1)\n            return\
    \ 0;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc1i69v5e.java:27)\n"
  stdout: ''
  timestamp: 1659800004
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        long\
    \ fibfib1 = 1;\n        long fibfib2 = 1;\n        long fibfib3 = 1;\n       \
    \ long fibfib4 = 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n  \
    \      long fibfib7 = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n\
    \        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long fibfib12\
    \ = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long fibfib15\
    \ = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long fibfib18\
    \ = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long fibfib21\
    \ = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long fibfib24\
    \ = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long fibfib27\
    \ = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long fibfib30\
    \ = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long fibfib33\
    \ = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long fibfib36\
    \ = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long fibfib39\
    \ = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long fibfib42\
    \ = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long fibfib45\
    \ = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long fibfib48\
    \ = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long fibfib51\
    \ = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long fibfib54\
    \ = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long fibfib57\
    \ = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long fibfib60\
    \ = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long fibfib63\
    \ = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long fibfib66\
    \ = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long fibfib69\
    \ = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long fibfib72\
    \ = \n    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3y3lc4w4.java:95: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) return 0l;\n  \
    \      if (n <= 3l) return 1l;\n        return fibfib(n-1l) + fibfib(n-2l) + fibfib(n-3l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return n;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.j"
  stdout: ''
  timestamp: 1659800003
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) return 0l;\n  \
    \      if (n <= 3l) return 1l;\n        return fibfib(n-1l) + fibfib(n-2l) + fibfib(n-3l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800003
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1) return 0;\n    \
    \    if (n <= 3) return 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800004
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        long a = fibfib(n-1);\n        long b = fibfib(n-2);\n\
    \        long c = fibfib(n-3);\n        return a + b + c;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ytx5reo.java:31)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.j"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0) return 0;\n    \
    \    if (n == 1) return 1;\n        if (n == 2) return 1;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6mbvhc0_.java:29)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0)\n            return\
    \ 0;\n        if (n == 1)\n            return 1;\n        if (n == 2)\n      \
    \      return 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n  \
    \  }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpos1vajzs.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) {\n           \
    \ return 0l;\n        }\n        long fibfib = (long) Math.pow(fibfib(n-1l), 2l)\
    \ + Math.pow(fibfib(n-2l), 2l) + Math.pow(fibfib(n-3l), 2l);\n        return fibfib;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf8ydtimr.java:25: error: incompatible types: possible lossy conversion\
    \ from double to long\n        long fibfib = (long) Math.pow(fibfib(n-1l), 2l)\
    \ + Math.pow(fibfib(n-2l), 2l) + Math.pow(fibfib(n-3l), 2l);\n               \
    \                                                                      ^\n1 error\n"
  stdout: ''
  timestamp: 1659800004
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        long\
    \ fibfib1 = 1;\n        long fibfib2 = 1;\n        long fibfib3 = 1;\n       \
    \ long fibfib4 = 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n  \
    \      long fibfib7 = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n\
    \        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long fibfib12\
    \ = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long fibfib15\
    \ = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long fibfib18\
    \ = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long fibfib21\
    \ = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long fibfib24\
    \ = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long fibfib27\
    \ = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long fibfib30\
    \ = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long fibfib33\
    \ = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long fibfib36\
    \ = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long fibfib39\
    \ = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long fibfib42\
    \ = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long fibfib45\
    \ = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long fibfib48\
    \ = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long fibfib51\
    \ = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long fibfib54\
    \ = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long fibfib57\
    \ = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long fibfib60\
    \ = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long fibfib63\
    \ = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long fibfib66\
    \ = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long fibfib69\
    \ = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long fibfib72\
    \ = \n    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3y3lc4w4.java:95: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 0) {\n            return\
    \ 0;\n        }\n        if (n == 1) {\n            return 0;\n        }\n   \
    \     if (n == 2) {\n            return 1;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        long\
    \ fibfib1 = 1;\n        long fibfib2 = 1;\n        long fibfib3 = 1;\n       \
    \ long fibfib4 = 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n  \
    \      long fibfib7 = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n\
    \        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long fibfib12\
    \ = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long fibfib15\
    \ = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long fibfib18\
    \ = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long fibfib21\
    \ = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long fibfib24\
    \ = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long fibfib27\
    \ = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long fibfib30\
    \ = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long fibfib33\
    \ = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long fibfib36\
    \ = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long fibfib39\
    \ = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long fibfib42\
    \ = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long fibfib45\
    \ = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long fibfib48\
    \ = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long fibfib51\
    \ = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long fibfib54\
    \ = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long fibfib57\
    \ = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long fibfib60\
    \ = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long fibfib63\
    \ = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long fibfib66\
    \ = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long fibfib69\
    \ = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long fibfib72\
    \ = \n    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3y3lc4w4.java:95: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ n;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1sivdf4x.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        long\
    \ fibfib1 = 1;\n        long fibfib2 = 1;\n        long fibfib3 = 1;\n       \
    \ long fibfib4 = 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n  \
    \      long fibfib7 = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n\
    \        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long fibfib12\
    \ = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long fibfib15\
    \ = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long fibfib18\
    \ = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long fibfib21\
    \ = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long fibfib24\
    \ = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long fibfib27\
    \ = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long fibfib30\
    \ = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long fibfib33\
    \ = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long fibfib36\
    \ = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long fibfib39\
    \ = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long fibfib42\
    \ = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long fibfib45\
    \ = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long fibfib48\
    \ = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long fibfib51\
    \ = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long fibfib54\
    \ = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long fibfib57\
    \ = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long fibfib60\
    \ = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long fibfib63\
    \ = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long fibfib66\
    \ = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long fibfib69\
    \ = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long fibfib72\
    \ = \n    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3y3lc4w4.java:95: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0) return 0;\n    \
    \    if (n == 1) return 1;\n        if (n == 2) return 1;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6mbvhc0_.java:29)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0) return 0L;\n   \
    \     if (n == 1) return 1L;\n        if (n == 2) return 1L;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy6sv9w3u.java:29)\n"
  stdout: ''
  timestamp: 1659800004
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0) return 0;\n    \
    \    if (n == 1) return 1;\n        if (n == 2) return 1;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6mbvhc0_.java:29)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ n;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1sivdf4x.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        long\
    \ fibfib1 = 1;\n        long fibfib2 = 1;\n        long fibfib3 = 1;\n       \
    \ long fibfib4 = 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n  \
    \      long fibfib7 = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n\
    \        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long fibfib12\
    \ = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long fibfib15\
    \ = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long fibfib18\
    \ = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long fibfib21\
    \ = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long fibfib24\
    \ = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long fibfib27\
    \ = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long fibfib30\
    \ = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long fibfib33\
    \ = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long fibfib36\
    \ = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long fibfib39\
    \ = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long fibfib42\
    \ = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long fibfib45\
    \ = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long fibfib48\
    \ = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long fibfib51\
    \ = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long fibfib54\
    \ = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long fibfib57\
    \ = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long fibfib60\
    \ = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long fibfib63\
    \ = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long fibfib66\
    \ = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long fibfib69\
    \ = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long fibfib72\
    \ = \n    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3y3lc4w4.java:95: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0) {\n            return\
    \ 0;\n        }\n        if (n == 1) {\n            return 1;\n        }\n   \
    \     if (n == 2) {\n            return 1;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8fhfcyf1.java:35)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        long fibfib = (long) Math.pow(fibfib(n-1), 2) + fibfib(n-2);\n\
    \        return fibfib;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l))\
    \ == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n\
    \    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcz_6q5rk.java:29)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        if\
    \ (n == 0) {\n            fibfib = 0;\n        } else if (n == 1) {\n        \
    \    fibfib = 0;\n        } else if (n == 2) {\n            fibfib = 1;\n    \
    \    } else {\n            fibfib = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \        }\n        return fibfib;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) return 0l;\n  \
    \      return fibfib(n-1l) + fibfib(n-2l) + fibfib(n-3l);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx8aff_w0.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.j"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        if\
    \ (n == 0) {\n            fibfib = 0;\n        } else if (n == 1) {\n        \
    \    fibfib = 0;\n        } else if (n == 2) {\n            fibfib = 1;\n    \
    \    } else {\n            fibfib = fibfib + fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3);\n        }\n        return fibfib;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.j"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) return 0l;\n  \
    \      if (n <= 2l) return 1l;\n        return fibfib(n-1l) + fibfib(n-2l) + fibfib(n-3l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        if\
    \ (n == 0) {\n            fibfib = 0;\n        } else if (n == 1) {\n        \
    \    fibfib = 0;\n        } else if (n == 2) {\n            fibfib = 1;\n    \
    \    } else {\n            fibfib = fibfib + fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3);\n        }\n        return fibfib;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) return 0l;\n  \
    \      if (n <= 3l) return 1l;\n        return fibfib(n-1l) + fibfib(n-2l) + fibfib(n-3l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) {\n           \
    \ return 0l;\n        }\n        long fibfib1 = 0l;\n        long fibfib2 = 1l;\n\
    \        long fibfib3 = 1l;\n        for (long i = 2l; i <= n; i++) {\n      \
    \      fibfib3 = fibfib2 + fibfib3;\n            fibfib2 = fibfib1;\n        \
    \    fibfib1 = fibfib3;\n        }\n        return fibfib3;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_cokl_9a.java:36)\n"
  stdout: ''
  timestamp: 1659800004
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0) {\n            return\
    \ 0l;\n        } else if (n == 1) {\n            return 1l;\n        } else if\
    \ (n == 2) {\n            return 1l;\n        } else {\n            return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxojw9eu.java:34)\n"
  stdout: ''
  timestamp: 1659800004
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ n;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1sivdf4x.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.j"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        long\
    \ fibfib1 = 1;\n        long fibfib2 = 1;\n        long fibfib3 = 1;\n       \
    \ long fibfib4 = fibfib1 + fibfib2 + fibfib3;\n        long fibfib5 = fibfib4\
    \ + fibfib4;\n        long fibfib6 = fibfib5 + fibfib5;\n        long fibfib7\
    \ = fibfib6 + fibfib6;\n        long fibfib8 = fibfib7 + fibfib7;\n        long\
    \ fibfib9 = fibfib8 + fibfib8;\n        long fibfib10 = fibfib9 + fibfib9;\n \
    \       long fibfib11 = fibfib10 + fibfib10;\n        long fibfib12 = fibfib11\
    \ + fibfib11;\n        long fibfib13 = fibfib12 + fibfib12;\n        long fibfib14\
    \ = fibfib13 + fibfib13;\n        long fibfib15 = fibfib14 + fibfib14;\n     \
    \   long fibfib16 = fibfib15 + fibfib15;\n        long fibfib17 = fibfib16 + fibfib16;\n\
    \        long fibfib18 = fibfib17 + fibfib17;\n        long fibfib19 = fibfib18\
    \ + fibfib18;\n        long fibfib20 = fibfib19 + fibfib19;\n        long fibfib21\
    \ = fibfib20 + fibfib20;\n        long fibfib22 = fibfib21 + fibfib21;\n     \
    \   long fibfib23 = fibfib22 + fibfib22;\n        long fibfib24 = fibfib23 + fibfib23;\n\
    \        long fibfib25 = fibfib24 + fibfib24;\n        long fibfib26 = fibfib25\
    \ + fibfib25;\n        long fibfib27 = fibfib26 + fibfib26;\n        long fibfib28\
    \ = fibfib27 + fibfib27;\n        long fibfib29 = fibfib28 + fibfib28;\n     \
    \   long fibfib30 = fibfib29 + fibfib29;\n        long fibfib31 = fibfib30 + fibfib30;\n\
    \        long fibfib32 = fibfib31 + fibfib31;\n        long fibfib33 = fibfib32\
    \ + fibfib32;\n        long fibfib34 = fibfib33 + fibfib33;\n        long fibfib35\
    \ = fibfib34 + fibfib34;\n        long fibfib36 = fibfib35 + fibfib35;\n     \
    \   long fibfib37 = fibfib36 + fibfib36;\n        \n    }\n    public static void\
    \ main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0qrq5rsq.java:61: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        if\
    \ (n == 0) {\n            fibfib = 0;\n        } else if (n == 1) {\n        \
    \    fibfib = 0;\n        } else if (n == 2) {\n            fibfib = 1;\n    \
    \    } else {\n            fibfib = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \        }\n        return fibfib;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) {\n           \
    \ return 0l;\n        }\n        long fibfib1 = 0l;\n        long fibfib2 = 0l;\n\
    \        long fibfib3 = 0l;\n        long fibfib4 = 0l;\n        long fibfib5\
    \ = 0l;\n        long fibfib6 = 0l;\n        long fibfib7 = 0l;\n        long\
    \ fibfib8 = 0l;\n        long fibfib9 = 0l;\n        long fibfib10 = 0l;\n   \
    \     long fibfib11 = 0l;\n        long fibfib12 = 0l;\n        long fibfib13\
    \ = 0l;\n        long fibfib14 = 0l;\n        long fibfib15 = 0l;\n        long\
    \ fibfib16 = 0l;\n        long fibfib17 = 0l;\n        long fibfib18 = 0l;\n \
    \       long fibfib19 = 0l;\n        long fibfib20 = 0l;\n        long fibfib21\
    \ = 0l;\n        long fibfib22 = 0l;\n        long fibfib23 = 0l;\n        long\
    \ fibfib24 = 0l;\n        long fibfib25 = 0l;\n        long fibfib26 = 0l;\n \
    \       long fibfib27 = 0l;\n        long fibfib28 = 0l;\n        long fibfib29\
    \ = 0l;\n        long fibfib30 = 0l;\n        long fibfib31 = 0l;\n        long\
    \ fibfib32 = 0l;\n        long fibfib33 = 0l;\n        long fibfib34 = 0l;\n \
    \       long fibfib35 = 0l;\n        long fibfib36 = 0l;\n        long fibfib37\
    \ = 0l;\n        long fibfib38 = 0l;\n        long fibfib39 = 0l;\n        long\
    \ fibfib40 = 0l;\n        long fibfib41 = 0l;\n        long fibfib42 = 0l;\n \
    \       long fibfib43 = 0l;\n        long fibfib44 = 0l;\n        long fibfib45\
    \ = 0l;\n        long fibfib46 = 0l;\n        long fibfib47 = 0l;\n        long\
    \ fibfib48 = 0l;\n        long fibfib49 = 0l;\n        long fibfib50 = 0l;\n \
    \       long fibfib51 = 0l;\n        long fibfib52 = 0l;\n        long fibfib53\
    \ = 0l;\n        long fibfib54 = 0l;\n        long fibfib55 = 0l;\n        long\
    \ fibfib56 = 0l;\n        long fibfib57 = 0l;\n        long fibfib58 = 0l;\n \
    \       long fibfib59 = 0l;\n        long fibfib60 = 0l;\n        long fibfib61\
    \ = 0l;\n        long fibfib62 = 0l;\n        long fibfib63\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx4fon4q6.java:87: error: ';' expected\n        long fibfib63\n\
    \                     ^\n1 error\n"
  stdout: ''
  timestamp: 1659800004
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        if\
    \ (n == 0) {\n            fibfib = 0;\n        } else if (n == 1) {\n        \
    \    fibfib = 0;\n        } else if (n == 2) {\n            fibfib = 1;\n    \
    \    } else {\n            fibfib = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \        }\n        return fibfib;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return n;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.j"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) return 0l;\n   \
    \     return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8a73wkm4.java:26)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ n;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1sivdf4x.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.j"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0)\n            return\
    \ 0;\n        if (n == 1)\n            return 1;\n        if (n == 2)\n      \
    \      return 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n  \
    \  }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpos1vajzs.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        long a = fibfib(n-1);\n        long b = fibfib(n-2);\n\
    \        long c = fibfib(n-3);\n        return a + b + c;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ytx5reo.java:31)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        long\
    \ fibfib1 = 1;\n        long fibfib2 = 1;\n        long fibfib3 = 1;\n       \
    \ long fibfib4 = fibfib1 + fibfib2 + fibfib3;\n        long fibfib5 = fibfib4\
    \ + fibfib4;\n        long fibfib6 = fibfib5 + fibfib5;\n        long fibfib7\
    \ = fibfib6 + fibfib6;\n        long fibfib8 = fibfib7 + fibfib7;\n        long\
    \ fibfib9 = fibfib8 + fibfib8;\n        long fibfib10 = fibfib9 + fibfib9;\n \
    \       long fibfib11 = fibfib10 + fibfib10;\n        long fibfib12 = fibfib11\
    \ + fibfib11;\n        long fibfib13 = fibfib12 + fibfib12;\n        long fibfib14\
    \ = fibfib13 + fibfib13;\n        long fibfib15 = fibfib14 + fibfib14;\n     \
    \   long fibfib16 = fibfib15 + fibfib15;\n        long fibfib17 = fibfib16 + fibfib16;\n\
    \        long fibfib18 = fibfib17 + fibfib17;\n        long fibfib19 = fibfib18\
    \ + fibfib18;\n        long fibfib20 = fibfib19 + fibfib19;\n        long fibfib21\
    \ = fibfib20 + fibfib20;\n        long fibfib22 = fibfib21 + fibfib21;\n     \
    \   long fibfib23 = fibfib22 + fibfib22;\n        long fibfib24 = fibfib23 + fibfib23;\n\
    \        long fibfib25 = fibfib24 + fibfib24;\n        long fibfib26 = fibfib25\
    \ + fibfib25;\n        long fibfib27 = fibfib26 + fibfib26;\n        long fibfib28\
    \ = fibfib27 + fibfib27;\n        long fibfib29 = fibfib28 + fibfib28;\n     \
    \   long fibfib30 = fibfib29 + fibfib29;\n        long fibfib31 = fibfib30 + fibfib30;\n\
    \        long fibfib32 = fibfib31 + fibfib31;\n        long fibfib33 = fibfib32\
    \ + fibfib32;\n        long fibfib34 = fibfib33 + fibfib33;\n        long fibfib35\
    \ = fibfib34 + fibfib34;\n        long fibfib36 = fibfib35 + fibfib35;\n     \
    \   long fibfib37 = fibfib36 + fibfib36;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp_wfqkm8.java:61: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1659800004
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.j"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        long\
    \ fibfib1 = 1;\n        long fibfib2 = 1;\n        long fibfib3 = 1;\n       \
    \ long fibfib4 = fibfib1;\n        long fibfib5 = fibfib2;\n        long fibfib6\
    \ = fibfibfib3;\n        long fibfib7 = fibfib4;\n        long fibfib8 = fibfib5;\n\
    \        long fibfib9 = fibfib6;\n        long fibfib10 = fibfib7;\n        long\
    \ fibfib11 = fibfib8;\n        long fibfib12 = fibfib9;\n        long fibfib13\
    \ = fibfib10;\n        long fibfib14 = fibfib11;\n        long fibfib15 = fibfib12;\n\
    \        long fibfib16 = fibfib13;\n        long fibfib17 = fibfib14;\n      \
    \  long fibfib18 = fibfib15;\n        long fibfib19 = fibfib16;\n        long\
    \ fibfib20 = fibfib17;\n        long fibfib21 = fibfib18;\n        long fibfib22\
    \ = fibfib19;\n        long fibfib23 = fibfib20;\n        long fibfib24 = fibfib21;\n\
    \        long fibfib25 = fibfib22;\n        long fibfib26 = fibfib23;\n      \
    \  long fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n        long\
    \ fibfib29 = fibfib26;\n        long fibfib30 = fibfib27;\n        long fibfib31\
    \ = fibfib28;\n        long fibfib32 = fibfib29;\n        long fibfib33 = fibfib30;\n\
    \        long fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n      \
    \  long fibfib36 = fibfib33;\n        long fibfib37 = fibfib34;\n        long\
    \ fibfib38 = fibfib35;\n        long fibfib39 = fibfib36;\n        long fibfib40\
    \ = fibfib37;\n        long fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n\
    \        long fibfib43 = fibfib40;\n        long fibfib44 = fibfib41;\n      \
    \  long fibfib45 = fibfib42;\n        long fibfib46 = fibfib43;\n        long\
    \ fibfib47 = fibfib44;\n        long fibfib48 = fibfib45;\n        long fibfib49\
    \ = fibfib46;\n        long fibfib50 = fibfib\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_p9k9wh.java:72: error: ';' expected\n        long fibfib50 =\
    \ fibfib\n                              ^\n1 error\n"
  stdout: ''
  timestamp: 1659800004
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.j"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.j"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) return 0l;\n   \
    \     return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8a73wkm4.java:26)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) return 0l;\n  \
    \      if (n <= 2l) return 1l;\n        return fibfib(n-1l) + fibfib(n-2l) + fibfib(n-3l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800004
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) return 0l;\n   \
    \     return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8a73wkm4.java:26)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        long fibfib = (long) Math.pow(fibfib(n-1), 2) + fibfib(n-2);\n\
    \        return fibfib;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l))\
    \ == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n\
    \    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcz_6q5rk.java:29)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) return 0l;\n  \
    \      if (n <= 3l) return 1l;\n        return fibfib(n-1l) + fibfib(n-2l) + fibfib(n-3l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0) return 0L;\n   \
    \     if (n == 1) return 1L;\n        if (n == 2) return 1L;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy6sv9w3u.java:29)\n"
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 0) {\n            return\
    \ 0;\n        }\n        if (n == 1) {\n            return 0;\n        }\n   \
    \     if (n == 2) {\n            return 1;\n        }\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        if\
    \ (n == 0) {\n            fibfib = 0;\n        } else if (n == 1) {\n        \
    \    fibfib = 0;\n        } else if (n == 2) {\n            fibfib = 1;\n    \
    \    } else if (n >= 3) {\n            fibfib = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \        }\n        return fibfib;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return 0;\n        }\n        if (n == 2) {\n            return 1;\n\
    \        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n    }\n \
    \   public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800004
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) return 0l;\n   \
    \     return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8a73wkm4.java:26)\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0) {\n            return\
    \ 0;\n        } else if (n == 1) {\n            return 1;\n        } else if (n\
    \ == 2) {\n            return 1;\n        } else {\n            return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp639wc2i4.java:34)\n"
  stdout: ''
  timestamp: 1659800004
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        long\
    \ fibfib1 = 1;\n        long fibfib2 = 1;\n        long fibfib3 = 1;\n       \
    \ long fibfib4 = 1;\n        long fibfib5 = 1;\n        long fibfib6 = 1;\n  \
    \      long fibfib7 = 1;\n        long fibfib8 = 1;\n        long fibfib9 = 1;\n\
    \        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long fibfib12\
    \ = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long fibfib15\
    \ = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long fibfib18\
    \ = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long fibfib21\
    \ = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long fibfib24\
    \ = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long fibfib27\
    \ = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long fibfib30\
    \ = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long fibfib33\
    \ = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long fibfib36\
    \ = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long fibfib39\
    \ = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long fibfib42\
    \ = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long fibfib45\
    \ = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long fibfib48\
    \ = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long fibfib51\
    \ = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long fibfib54\
    \ = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long fibfib57\
    \ = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long fibfib60\
    \ = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long fibfib63\
    \ = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long fibfib66\
    \ = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long fibfib69\
    \ = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long fibfib72\
    \ = \n    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3y3lc4w4.java:95: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.j"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) {\n           \
    \ return 0l;\n        }\n        long fibfib0 = 0l;\n        long fibfib1 = 1l;\n\
    \        long fibfib2 = 1l;\n        long fibfib3 = 1l;\n        long fibfib4\
    \ = 2l;\n        long fibfib5 = 3l;\n        long fibfib6 = 5l;\n        long\
    \ fibfib7 = 8l;\n        long fibfib8 = 1l;\n        long fibfib9 = 2l;\n    \
    \    long fibfib10 = 3l;\n        long fibfib11 = 5l;\n        long fibfib12 =\
    \ 8l;\n        long fibfib13 = 1l;\n        long fibfib14 = 2l;\n        long\
    \ fibfib15 = 3l;\n        long fibfib16 = 5l;\n        long fibfib17 = 8l;\n \
    \       long fibfib18 = 1l;\n        long fibfib19 = 2l;\n        long fibfib20\
    \ = 3l;\n        long fibfib21 = 5l;\n        long fibfib22 = 8l;\n        long\
    \ fibfib23 = 1l;\n        long fibfib24 = 2l;\n        long fibfib25 = 3l;\n \
    \       long fibfib26 = 5l;\n        long fibfib27 = 8l;\n        long fibfib28\
    \ = 1l;\n        long fibfib29 = 2l;\n        long fibfib30 = 3l;\n        long\
    \ fibfib31 = 5l;\n        long fibfib32 = 8l;\n        long fibfib33 = 1l;\n \
    \       long fibfib34 = 2l;\n        long fibfib35 = 3l;\n        long fibfib36\
    \ = 5l;\n        long fibfib37 = 8l;\n        long fibfib38 = 1l;\n        long\
    \ fibfib39 = 2l;\n        long fibfib40 = 3l;\n        long fibfib41 = 5l;\n \
    \       long fibfib42 == 8l;\n        long fibfib43 = 1l;\n        long fibfib44\
    \ = 2l;\n        long fibfib45 = 3l;\n        long fibfib46 = 5l;\n        long\
    \ fibfib47 = 8l;\n        long fibfib48 = 1l;\n        long fibfib49 = 2l;\n \
    \       long fibfib50 = 3l;\n        long fibfib51 = 5l;\n        long fibfib52\
    \ = 8l;\n        long fibfib53 = 1l;\n        long fibfib54 = 2l;\n        long\
    \ fibfib55 = 3l;\n        long fibfib56 = 5l;\n        long fibfib57 = 8l;\n \
    \       long fibfib58 = 1l;\n        long fibfib59 = 2l;\n        long fibfib60\
    \ = 3l;\n        long fibfib61 = \n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqz2f3hbk.java:67: error: ';' expected\n        long fibfib42 ==\
    \ 8l;\n                     ^\n/tmp/tmpqz2f3hbk.java:87: error: illegal start\
    \ of expression\n    }\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) return 0l;\n  \
    \      if (n <= 3l) return 1l;\n        return fibfib(n-1l) + fibfib(n-2l) + fibfib(n-3l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0) return 0L;\n   \
    \     if (n == 1) return 1L;\n        if (n == 2) return 1L;\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy6sv9w3u.java:29)\n"
  stdout: ''
  timestamp: 1659800004
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0)\n            return\
    \ 0;\n        if (n == 1)\n            return 1;\n        if (n == 2)\n      \
    \      return 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n  \
    \  }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpos1vajzs.java:32)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) return 0l;\n  \
    \      if (n <= 2l) return 1l;\n        return fibfib(n-1l) + fibfib(n-2l) + fibfib(n-3l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) {\n           \
    \ return 0l;\n        }\n        if (n <= 3l) {\n            return 1l;\n    \
    \    }\n        return fibfib(n-1l) + fibfib(n-2l) + fibfib(n-3l);\n    }\n  \
    \  public static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n\
    \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
    \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) ==\
    \ (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ n;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1sivdf4x.java:28)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1l) return 0l;\n  \
    \      if (n <= 3l) return 1l;\n        return fibfib(n-1l) + fibfib(n-2l) + fibfib(n-3l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        if\
    \ (n == 0) {\n            fibfib = 0;\n        } else if (n == 1) {\n        \
    \    fibfib = 0;\n        } else if (n == 2) {\n            fibfib = 1;\n    \
    \    } else {\n            fibfib = fibfib + fibfib(n-1) + fibfib(n-2);\n    \
    \    }\n        return fibfib;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n  \
    \  assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_supcvwe.java:37)\n"
  stdout: ''
  timestamp: 1659800004
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        long fibfib = 0;\n        long\
    \ fibfib1 = fibfib;\n        long fibfib2 = fibfib;\n        long fibfib3 = fibfib;\n\
    \        if (n == 0) {\n            fibfib = 0;\n        } else if (n == 1) {\n\
    \            fibfib = 0;\n        } else if (n == 2) {\n            fibfib = 1;\n\
    \        } else if (n >= 3) {\n            fibfib = (fibfib1 + fibfib2 + fibfib3);\n\
    \        }\n        return fibfib;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgfuw2v5n.java:40)\n"
  stdout: ''
  timestamp: 1659800005
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 1)\n            return\
    \ 0;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc1i69v5e.java:27)\n"
  stdout: ''
  timestamp: 1659800004
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0)\n            return\
    \ 0;\n        if (n == 1)\n            return 0;\n        if (n == 2)\n      \
    \      return 1;\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n  \
    \  }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800005
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0) {\n            return\
    \ 0L;\n        } else if (n == 1) {\n            return 1L;\n        } else if\
    \ (n == 2) {\n            return 1L;\n        } else {\n            return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpph7ijyyo.java:34)\n"
  stdout: ''
  timestamp: 1659800005
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0) {\n            return\
    \ 0l;\n        } else if (n == 1) {\n            return 1l;\n        } else if\
    \ (n == 2) {\n            return 1l;\n        } else {\n            return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n\
    \    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l))\
    \ == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) ==\
    \ (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxojw9eu.java:34)\n"
  stdout: ''
  timestamp: 1659800004
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) {\n            return\
    \ 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fibfib((2l)) ==\
    \ (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd47_44fu.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.j"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n <= 3) return 0;\n    \
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l))\
    \ == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n\
    \    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n \
    \   assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps9hsifmy.java:26)\n"
  stdout: ''
  timestamp: 1659800005
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return n;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.java:25)\n\tat Problem.fibfib(tmp7gcasplc.java:25)\n\
    \tat Problem.fibfib(tmp7gcasplc.j"
  stdout: ''
  timestamp: 1659800003
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    //\
    \ fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th\
    \ element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n\
    \    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n\
    \    public static long fibfib(long n) {\n        if (n == 0 || n == 1) {\n  \
    \          return 0;\n        }\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n    public static void main(String[] args) {\n    assert(fibfib((2l))\
    \ == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n\
    \    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n   \
    \ assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n   \
    \ }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.java:25)\n\tat Problem.fibfib(tmp8810inf3.java:25)\n\
    \tat Problem.fibfib(tmp8810inf3.j"
  stdout: ''

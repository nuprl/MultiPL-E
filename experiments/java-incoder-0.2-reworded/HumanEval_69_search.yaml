name: HumanEval_69_search
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // You are given a non-empty array list of positive integers.\
  \ Return the greatest integer that is greater than \n    // zero, and has a frequency\
  \ greater than or equal to the value of the integer itself. \n    // The frequency\
  \ of an integer is the number of times it appears in the array list.\n    // If\
  \ no such a value exist, return -1.\n    // Examples:\n    // >>> search((new ArrayList<Long>(Arrays.asList((long)4l,\
  \ (long)1l, (long)2l, (long)2l, (long)3l, (long)1l))))\n    // (2l)\n    // >>>\
  \ search((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l,\
  \ (long)3l, (long)3l, (long)4l, (long)4l, (long)4l))))\n    // (3l)\n    // >>>\
  \ search((new ArrayList<Long>(Arrays.asList((long)5l, (long)5l, (long)4l, (long)4l,\
  \ (long)4l))))\n    // (-1l)\n    public static long search(ArrayList<Long> lst)\
  \ {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(search((new\
  \ ArrayList<Long>(Arrays.asList((long)5l, (long)5l, (long)5l, (long)5l, (long)1l))))\
  \ == (1l));\n    assert(search((new ArrayList<Long>(Arrays.asList((long)4l, (long)1l,\
  \ (long)4l, (long)1l, (long)4l, (long)4l)))) == (4l));\n    assert(search((new ArrayList<Long>(Arrays.asList((long)3l,\
  \ (long)3l)))) == (-1l));\n    assert(search((new ArrayList<Long>(Arrays.asList((long)8l,\
  \ (long)8l, (long)8l, (long)8l, (long)8l, (long)8l, (long)8l, (long)8l)))) == (8l));\n\
  \    assert(search((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)3l,\
  \ (long)2l, (long)2l)))) == (2l));\n    assert(search((new ArrayList<Long>(Arrays.asList((long)2l,\
  \ (long)7l, (long)8l, (long)8l, (long)4l, (long)8l, (long)7l, (long)3l, (long)9l,\
  \ (long)6l, (long)5l, (long)10l, (long)4l, (long)3l, (long)6l, (long)7l, (long)1l,\
  \ (long)7l, (long)4l, (long)10l, (long)8l, (long)1l)))) == (1l));\n    assert(search((new\
  \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)8l, (long)2l)))) == (2l));\n\
  \    assert(search((new ArrayList<Long>(Arrays.asList((long)6l, (long)7l, (long)1l,\
  \ (long)8l, (long)8l, (long)10l, (long)5l, (long)8l, (long)5l, (long)3l, (long)10l))))\
  \ == (1l));\n    assert(search((new ArrayList<Long>(Arrays.asList((long)8l, (long)8l,\
  \ (long)3l, (long)6l, (long)5l, (long)6l, (long)4l)))) == (-1l));\n    assert(search((new\
  \ ArrayList<Long>(Arrays.asList((long)6l, (long)9l, (long)6l, (long)7l, (long)1l,\
  \ (long)4l, (long)7l, (long)1l, (long)8l, (long)8l, (long)9l, (long)8l, (long)10l,\
  \ (long)10l, (long)8l, (long)4l, (long)10l, (long)4l, (long)10l, (long)1l, (long)2l,\
  \ (long)9l, (long)5l, (long)7l, (long)9l)))) == (1l));\n    assert(search((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)9l, (long)10l, (long)1l, (long)3l)))) == (1l));\n    assert(search((new\
  \ ArrayList<Long>(Arrays.asList((long)6l, (long)9l, (long)7l, (long)5l, (long)8l,\
  \ (long)7l, (long)5l, (long)3l, (long)7l, (long)5l, (long)10l, (long)10l, (long)3l,\
  \ (long)6l, (long)10l, (long)2l, (long)8l, (long)6l, (long)5l, (long)4l, (long)9l,\
  \ (long)5l, (long)3l, (long)10l)))) == (5l));\n    assert(search((new ArrayList<Long>(Arrays.asList((long)1l))))\
  \ == (1l));\n    assert(search((new ArrayList<Long>(Arrays.asList((long)8l, (long)8l,\
  \ (long)10l, (long)6l, (long)4l, (long)3l, (long)5l, (long)8l, (long)2l, (long)4l,\
  \ (long)2l, (long)8l, (long)4l, (long)6l, (long)10l, (long)4l, (long)2l, (long)1l,\
  \ (long)10l, (long)2l, (long)1l, (long)1l, (long)5l)))) == (4l));\n    assert(search((new\
  \ ArrayList<Long>(Arrays.asList((long)2l, (long)10l, (long)4l, (long)8l, (long)2l,\
  \ (long)10l, (long)5l, (long)1l, (long)2l, (long)9l, (long)5l, (long)5l, (long)6l,\
  \ (long)3l, (long)8l, (long)6l, (long)4l, (long)10l)))) == (2l));\n    assert(search((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)6l, (long)10l, (long)1l, (long)6l,\
  \ (long)9l, (long)10l, (long)8l, (long)6l, (long)8l, (long)7l, (long)3l)))) == (1l));\n\
  \    assert(search((new ArrayList<Long>(Arrays.asList((long)9l, (long)2l, (long)4l,\
  \ (long)1l, (long)5l, (long)1l, (long)5l, (long)2l, (long)5l, (long)7l, (long)7l,\
  \ (long)7l, (long)3l, (long)10l, (long)1l, (long)5l, (long)4l, (long)2l, (long)8l,\
  \ (long)4l, (long)1l, (long)9l, (long)10l, (long)7l, (long)10l, (long)2l, (long)8l,\
  \ (long)10l, (long)9l, (long)4l)))) == (4l));\n    assert(search((new ArrayList<Long>(Arrays.asList((long)2l,\
  \ (long)6l, (long)4l, (long)2l, (long)8l, (long)7l, (long)5l, (long)6l, (long)4l,\
  \ (long)10l, (long)4l, (long)6l, (long)3l, (long)7l, (long)8l, (long)8l, (long)3l,\
  \ (long)1l, (long)4l, (long)2l, (long)2l, (long)10l, (long)7l)))) == (4l));\n  \
  \  assert(search((new ArrayList<Long>(Arrays.asList((long)9l, (long)8l, (long)6l,\
  \ (long)10l, (long)2l, (long)6l, (long)10l, (long)2l, (long)7l, (long)8l, (long)10l,\
  \ (long)3l, (long)8l, (long)2l, (long)6l, (long)2l, (long)3l, (long)1l)))) == (2l));\n\
  \    assert(search((new ArrayList<Long>(Arrays.asList((long)5l, (long)5l, (long)3l,\
  \ (long)9l, (long)5l, (long)6l, (long)3l, (long)2l, (long)8l, (long)5l, (long)6l,\
  \ (long)10l, (long)10l, (long)6l, (long)8l, (long)4l, (long)10l, (long)7l, (long)7l,\
  \ (long)10l, (long)8l)))) == (-1l));\n    assert(search((new ArrayList<Long>(Arrays.asList((long)10l))))\
  \ == (-1l));\n    assert(search((new ArrayList<Long>(Arrays.asList((long)9l, (long)7l,\
  \ (long)7l, (long)2l, (long)4l, (long)7l, (long)2l, (long)10l, (long)9l, (long)7l,\
  \ (long)5l, (long)7l, (long)2l)))) == (2l));\n    assert(search((new ArrayList<Long>(Arrays.asList((long)5l,\
  \ (long)4l, (long)10l, (long)2l, (long)1l, (long)1l, (long)10l, (long)3l, (long)6l,\
  \ (long)1l, (long)8l)))) == (1l));\n    assert(search((new ArrayList<Long>(Arrays.asList((long)7l,\
  \ (long)9l, (long)9l, (long)9l, (long)3l, (long)4l, (long)1l, (long)5l, (long)9l,\
  \ (long)1l, (long)2l, (long)1l, (long)1l, (long)10l, (long)7l, (long)5l, (long)6l,\
  \ (long)7l, (long)6l, (long)7l, (long)7l, (long)6l)))) == (1l));\n    assert(search((new\
  \ ArrayList<Long>(Arrays.asList((long)3l, (long)10l, (long)10l, (long)9l, (long)2l))))\
  \ == (-1l));\n    }\n\n}\n"
completions: ["        long max = -1;\n        long freq = 0;\n        for (long i\
    \ : lst) {\n            if (freq == 0 || freq > i) {\n                freq = i;\n\
    \                max = i;\n            }\n        }\n        return max;", " \
    \       long max = 0;\n        long maxFreq = -1;\n        for(long i : lst) {\n\
    \            long freq = Collections.frequency(lst, i);\n            if(freq >\
    \ maxFreq) {\n                max = i;\n                maxFreq = freq;\n    \
    \        }\n        }\n        return max;", "        long max = 0;\n        long\
    \ freq = 0;\n        for(long i : lst) {\n            freq++;\n            if(freq\
    \ > max) {\n                max = freq;\n            }\n        }\n        if(max\
    \ > 0) {\n            for(long i : lst) {\n                if(i == max) {\n  \
    \                  return i;\n                }\n            }\n        }\n  \
    \      return -1;", "        long maxVal = -1;\n        long maxFreq = -1;\n \
    \       for (long val : lst) {\n            if (val > 0) {\n                long\
    \ freq = lst.stream().filter(x -> x == val).count();\n                if (freq\
    \ >= maxFreq) {\n                    maxFreq = freq;\n                    maxVal\
    \ = val;\n                }\n            }\n        }\n        return maxVal;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        for (long val :\
    \ lst) {\n            long freq = Collections.frequency(lst, val);\n         \
    \   if (freq > maxFreq) {\n                maxFreq = freq;\n                maxVal\
    \ = val;\n            }\n        }\n        return maxVal;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        for (long val : lst) {\n        \
    \    long freq = Collections.frequency(lst, val);\n            if (freq > maxFreq)\
    \ {\n                maxFreq = freq;\n                maxVal = val;\n        \
    \    }\n        }\n        return maxVal;", "        long maxVal = -1;\n     \
    \   long maxFreq = -1;\n        for (long val : lst) {\n            if (val >\
    \ 0) {\n                long freq = lst.stream().filter(v -> v == val).count();\n\
    \                if (freq >= maxFreq) {\n                    maxFreq = freq;\n\
    \                    maxVal = val;\n                }\n            }\n       \
    \ }\n        return maxVal;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        for(long val : lst) {\n            if(val > 0) {\n          \
    \      long freq = lst.stream().filter(e -> e == val).count();\n             \
    \   if(freq >= maxFreq) {\n                    maxFreq = freq;\n             \
    \       maxVal = val;\n                }\n            }\n        }\n        return\
    \ maxVal;", "        long max = 0;\n        long freq = 0;\n        for (long\
    \ i : lst) {\n            if (freq >= i) {\n                max = i;\n       \
    \         freq = i;\n            }\n        }\n        return max;", "       \
    \ long max = 0;\n        long freq = 0;\n        for (long i : lst) {\n      \
    \      if (i > 0 && freq >= i) {\n                max = i;\n                freq\
    \ = i;\n            }\n        }\n        return max;", "        long maxVal =\
    \ -1;\n        long maxFreq = -1;\n        for (long val : lst) {\n          \
    \  long freq = Collections.frequency(lst, val);\n            if (freq > maxFreq)\
    \ {\n                maxFreq = freq;\n                maxVal = val;\n        \
    \    }\n        }\n        return maxVal;", "        long max = -1;\n        long\
    \ maxFreq = -1;\n        for(long i : lst) {\n            long freq = Collections.frequency(lst,\
    \ i);\n            if(freq > maxFreq) {\n                max = i;\n          \
    \      maxFreq = freq;\n            }\n        }\n        return max;", "    \
    \    long maxVal = -1;\n        long maxFreq = -1;\n        for (long val : lst)\
    \ {\n            if (val > 0) {\n                long freq = lst.stream().filter(v\
    \ -> v == val).count();\n                if (freq > maxFreq) {\n             \
    \       maxFreq = freq;\n                    maxVal = val;\n                }\n\
    \            }\n        }\n        return maxVal;", "        long max = 0;\n \
    \       long freq = 0;\n        for (long i : lst) {\n            if (freq > i)\
    \ {\n                max = i;\n                freq = i;\n            }\n    \
    \    }\n        return max;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        for(long val : lst) {\n            long freq = Collections.frequency(lst,\
    \ val);\n            if(freq >= maxFreq) {\n                maxFreq = freq;\n\
    \                maxVal = val;\n            }\n        }\n        return maxVal;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        for(long val : lst)\
    \ {\n            long freq = Collections.frequency(lst, val);\n            if(freq\
    \ > maxFreq) {\n                maxFreq = freq;\n                maxVal = val;\n\
    \            }\n        }\n        return maxVal;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        for(long val : lst) {\n            long freq\
    \ = lst.stream().filter(x -> x == val).count();\n            if(freq > maxFreq)\
    \ {\n                maxFreq = freq;\n                maxVal = val;\n        \
    \    }\n        }\n        return maxVal;", "        long maxVal = -1;\n     \
    \   long maxFreq = -1;\n        for(long val : lst) {\n            if(val > 0)\
    \ {\n                long freq = Collections.frequency(lst, val);\n          \
    \      if(freq >= maxFreq) {\n                    maxFreq = freq;\n          \
    \          maxVal = val;\n                }\n            }\n        }\n      \
    \  return maxVal;", "        long max = 0;\n        long freq = 0;\n        for\
    \ (long i : lst) {\n            if (freq > i) {\n                max = i;\n  \
    \              freq = i;\n            }\n        }\n        return max;", "  \
    \      long maxVal = -1;\n        long maxFreq = -1;\n        for (long val :\
    \ lst) {\n            if (val > 0) {\n                long freq = Collections.frequency(lst,\
    \ val);\n                if (freq >= maxFreq) {\n                    maxFreq =\
    \ freq;\n                    maxVal = val;\n                }\n            }\n\
    \        }\n        return maxVal;", "        long max = -1;\n        long maxFreq\
    \ = -1;\n        for(long i : lst) {\n            long freq = Collections.frequency(lst,\
    \ i);\n            if(freq > maxFreq) {\n                maxFreq = freq;\n   \
    \             max = i;\n            }\n        }\n        return max;", "    \
    \    long maxVal = -1;\n        long maxFreq = -1;\n        for (long val : lst)\
    \ {\n            if (val > 0) {\n                long freq = lst.stream().filter(v\
    \ -> v == val).count();\n                if (freq >= maxFreq) {\n            \
    \        maxFreq = freq;\n                    maxVal = val;\n                }\n\
    \            }\n        }\n        return maxVal;", "        long max = -1;\n\
    \        long freq = 0;\n        for (long i : lst) {\n            if (freq >\
    \ i) {\n                freq = i;\n                max = i;\n            }\n \
    \       }\n        return max;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        for (long val : lst) {\n            if (val > 0) {\n        \
    \        if (maxFreq < val) maxFreq = val;\n                if (maxVal < val)\
    \ maxVal = val;\n            }\n        }\n        return maxVal;", "        long\
    \ maxVal = -1;\n        long maxFreq = -1;\n        long currFreq = -1;\n    \
    \    for (long val : lst) {\n            currFreq = lst.stream().filter(v -> v\
    \ == val).count();\n            if (currFreq > maxFreq) {\n                maxFreq\
    \ = currFreq;\n                maxVal = val;\n            } else if (currFreq\
    \ == maxFreq && val > maxVal) {\n                maxFreq = currFreq;\n       \
    \         maxVal = val;\n            }\n        }\n        return maxVal;", " \
    \       long maxVal = -1;\n        long maxFreq = -1;\n        for(long val :\
    \ lst) {\n            if(val > 0) {\n                if(val > maxVal) {\n    \
    \                maxVal = val;\n                    maxFreq = lst.get((int)val);\n\
    \                }\n            }\n        }\n        return maxVal;", "     \
    \   long maxVal = -1;\n        long maxFreq = -1;\n        for(long val : lst)\
    \ {\n            if(val > 0) {\n                long freq = Collections.frequency(lst,\
    \ val);\n                if(freq >= maxFreq) {\n                    maxFreq =\
    \ freq;\n                    maxVal = val;\n                }\n            }\n\
    \        }\n        return maxVal;", "        long maxVal = -1;\n        long\
    \ maxFreq = -1;\n        for (long val : lst) {\n            long freq = Collections.frequency(lst,\
    \ val);\n            if (freq > maxFreq) {\n                maxFreq = freq;\n\
    \                maxVal = val;\n            }\n        }\n        return maxVal;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        for (long val :\
    \ lst) {\n            if (val > 0) {\n                long freq = Collections.frequency(lst,\
    \ val);\n                if (freq >= maxFreq) {\n                    maxFreq =\
    \ freq;\n                    maxVal = val;\n                }\n            }\n\
    \        }\n        return maxVal;", "        long maxVal = -1;\n        long\
    \ maxFreq = -1;\n        for (long val : lst) {\n            if (val > 0) {\n\
    \                long freq = lst.stream().filter(v -> v == val).count();\n   \
    \             if (freq >= maxFreq) {\n                    maxFreq = freq;\n  \
    \                  maxVal = val;\n                }\n            }\n        }\n\
    \        return maxVal;", "        long max = -1;\n        long freq = -1;\n \
    \       for (long i : lst) {\n            if (freq == -1 || freq > i) {\n    \
    \            freq = i;\n                max = i;\n            }\n        }\n \
    \       return max;", "        long maxVal = -1;\n        long maxFreq = -1;\n\
    \        for (long val : lst) {\n            if (val > 0) {\n                long\
    \ freq = lst.stream().filter(x -> x == val).count();\n                if (freq\
    \ >= maxFreq) {\n                    maxFreq = freq;\n                    maxVal\
    \ = val;\n                }\n            }\n        }\n        return maxVal;",
  "        long max = 0;\n        long freq = 0;\n        for (long i : lst) {\n \
    \           freq++;\n            if (freq > i) {\n                max = i;\n \
    \               freq = i;\n            }\n        }\n        return max;", " \
    \       long maxVal = -1;\n        long maxFreq = -1;\n        for (long val :\
    \ lst) {\n            if (val > 0) {\n                long freq = Collections.frequency(lst,\
    \ val);\n                if (freq >= maxFreq) {\n                    maxFreq =\
    \ freq;\n                    maxVal = val;\n                }\n            }\n\
    \        }\n        return maxVal;", "        long maxVal = -1;\n        long\
    \ maxFreq = -1;\n        long currFreq = -1;\n        for (long val : lst) {\n\
    \            currFreq = lst.stream().filter(f -> f == val).count();\n        \
    \    if (currFreq > maxFreq) {\n                maxFreq = currFreq;\n        \
    \        maxVal = val;\n            } else if (currFreq == maxFreq) {\n      \
    \          if (val > maxVal) {\n                    maxFreq = currFreq;\n    \
    \                maxVal = val;\n                }\n            }\n        }\n\
    \        return maxVal;", "        long maxVal = -1;\n        long maxFreq = -1;\n\
    \        for (long val : lst) {\n            if (val > 0) {\n                long\
    \ freq = lst.stream().filter(v -> v == val).count();\n                if (freq\
    \ > maxFreq) {\n                    maxFreq = freq;\n                    maxVal\
    \ = val;\n                }\n            }\n        }\n        return maxVal;",
  "        long max = 0;\n        long freq = 0;\n        for (long i : lst) {\n \
    \           freq++;\n            if (i > max) {\n                max = i;\n  \
    \          }\n        }\n        if (freq >= max) {\n            return max;\n\
    \        }\n        return -1;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        for(long val : lst) {\n            long freq = Collections.frequency(lst,\
    \ val);\n            if(freq > maxFreq) {\n                maxFreq = freq;\n \
    \               maxVal = val;\n            }\n        }\n        return maxVal;",
  "        long max = 0;\n        long freq = 0;\n        for (long i : lst) {\n \
    \           if (freq >= i) {\n                max = i;\n                freq =\
    \ i;\n            }\n        }\n        return max;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        for(long val : lst) {\n            long freq\
    \ = lst.stream().filter(i -> i == val).count();\n            if(freq > maxFreq)\
    \ {\n                maxFreq = freq;\n                maxVal = val;\n        \
    \    }\n        }\n        return maxVal;", "        long max = -1;\n        long\
    \ freq = 0;\n        for (long i : lst) {\n            if (freq < i) {\n     \
    \           freq = i;\n                max = i;\n            }\n        }\n  \
    \      return max;", "        long maxVal = -1;\n        long maxFreq = -1;\n\
    \        for (long val : lst) {\n            if (val > 0) {\n                long\
    \ freq = Collections.frequency(lst, val);\n                if (freq >= maxFreq)\
    \ {\n                    maxFreq = freq;\n                    maxVal = val;\n\
    \                }\n            }\n        }\n        return maxVal;", "     \
    \   long max = -1;\n        long maxFreq = -1;\n        for (long i : lst) {\n\
    \            long freq = Collections.frequency(lst, i);\n            if (freq\
    \ > maxFreq) {\n                max = i;\n                maxFreq = freq;\n  \
    \          }\n        }\n        return max;", "        long max = -1;\n     \
    \   long freq = -1;\n        for(long i : lst) {\n            freq++;\n      \
    \      if(freq > max) {\n                max = freq;\n            }\n        }\n\
    \        return max;", "        long maxVal = -1;\n        long maxFreq = -1;\n\
    \        long curVal = -1;\n        long curFreq = -1;\n        for (long val\
    \ : lst) {\n            if (val > 0) {\n                if (curVal == -1) {\n\
    \                    curVal = val;\n                    curFreq = 1;\n       \
    \         } else {\n                    curFreq++;\n                    if (curFreq\
    \ >= val) {\n                        curVal = val;\n                        curFreq\
    \ = val;\n                    }\n                }\n            }\n          \
    \  if (curVal > maxVal) {\n                maxVal = curVal;\n                maxFreq\
    \ = curFreq;\n            }\n        }\n        return maxVal;", "        long\
    \ maxVal = -1;\n        long maxFreq = -1;\n        for(long val : lst) {\n  \
    \          long freq = lst.stream().filter(x -> x == val).count();\n         \
    \   if(freq > maxFreq) {\n                maxFreq = freq;\n                maxVal\
    \ = val;\n            }\n        }\n        return maxVal;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        for(long val : lst) {\n         \
    \   long freq = Collections.frequency(lst, val);\n            if(freq >= maxFreq)\
    \ {\n                maxFreq = freq;\n                maxVal = val;\n        \
    \    }\n        }\n        return maxVal;", "        long maxVal = -1;\n     \
    \   long maxFreq = -1;\n        long currFreq = -1;\n        for(long val : lst)\
    \ {\n            currFreq = lst.stream().filter(i -> i == val).count();\n    \
    \        if(currFreq > maxFreq) {\n                maxFreq = currFreq;\n     \
    \           maxVal = val;\n            }\n        }\n        return maxVal;",
  "        long max = 0;\n        long freq = 0;\n        for (long i : lst) {\n \
    \           if (freq == 0 || freq > i) {\n                max = i;\n         \
    \       freq = i;\n            }\n            else if (freq == i) {\n        \
    \        freq++;\n            }\n        }\n        return max;", "        long\
    \ maxVal = -1;\n        long maxFreq = -1;\n        for (long val : lst) {\n \
    \           if (val > 0) {\n                long freq = Collections.frequency(lst,\
    \ val);\n                if (freq >= maxFreq) {\n                    maxFreq =\
    \ freq;\n                    maxVal = val;\n                }\n            }\n\
    \        }\n        return maxVal;", "        long maxVal = -1;\n        long\
    \ maxFreq = -1;\n        for (long val : lst) {\n            if (val > 0) {\n\
    \                long freq = Collections.frequency(lst, val);\n              \
    \  if (freq >= maxFreq) {\n                    maxFreq = freq;\n             \
    \       maxVal = val;\n                }\n            }\n        }\n        return\
    \ maxVal;", "        long maxVal = -1;\n        long maxFreq = -1;\n        for\
    \ (long val : lst) {\n            if (val > 0) {\n                long freq =\
    \ lst.stream().filter(x -> x == val).count();\n                if (freq >= maxFreq)\
    \ {\n                    maxFreq = freq;\n                    maxVal = val;\n\
    \                }\n            }\n        }\n        return maxVal;", "     \
    \   long maxVal = -1;\n        long maxFreq = -1;\n        for (long val : lst)\
    \ {\n            long freq = Collections.frequency(lst, val);\n            if\
    \ (freq > maxFreq) {\n                maxFreq = freq;\n                maxVal\
    \ = val;\n            }\n        }\n        return maxVal;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        for (long val : lst) {\n        \
    \    if (val > 0) {\n                long freq = Collections.frequency(lst, val);\n\
    \                if (freq >= maxFreq) {\n                    maxFreq = freq;\n\
    \                    maxVal = val;\n                }\n            }\n       \
    \ }\n        return maxVal;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        for (long val : lst) {\n            if (val > 0) {\n        \
    \        long freq = lst.stream().filter(v -> v == val).count();\n           \
    \     if (freq >= maxFreq) {\n                    maxFreq = freq;\n          \
    \          maxVal = val;\n                }\n            }\n        }\n      \
    \  return maxVal;", "        long maxVal = -1;\n        long maxFreq = -1;\n \
    \       for (long val : lst) {\n            if (val > 0) {\n                long\
    \ freq = Collections.frequency(lst, val);\n                if (freq >= maxFreq)\
    \ {\n                    maxFreq = freq;\n                    maxVal = val;\n\
    \                }\n            }\n        }\n        return maxVal;", "     \
    \   long maxVal = -1;\n        long maxFreq = -1;\n        for (long val : lst)\
    \ {\n            if (val > 0) {\n                long freq = lst.stream().filter(x\
    \ -> x == val).count();\n                if (freq > maxFreq) {\n             \
    \       maxFreq = freq;\n                    maxVal = val;\n                }\n\
    \            }\n        }\n        return maxVal;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        for (long val : lst) {\n            long\
    \ freq = Collections.frequency(lst, val);\n            if (freq > maxFreq) {\n\
    \                maxFreq = freq;\n                maxVal = val;\n            }\n\
    \        }\n        return maxVal;", "        long maxVal = -1;\n        long\
    \ maxFreq = -1;\n        for (long val : lst) {\n            if (val > 0) {\n\
    \                long freq = lst.stream().filter(v -> v == val).count();\n   \
    \             if (freq >= maxFreq) {\n                    maxFreq = freq;\n  \
    \                  maxVal = val;\n                }\n            }\n        }\n\
    \        return maxVal;", "        long max = -1;\n        long freq = -1;\n \
    \       for (long i : lst) {\n            if (freq == -1 || freq > i) {\n    \
    \            freq = i;\n                max = i;\n            }\n        }\n \
    \       return max;", "        long maxVal = -1;\n        long maxFreq = -1;\n\
    \        for(long val : lst) {\n            if(val > 0) {\n                long\
    \ freq = Collections.frequency(lst, val);\n                if(freq > maxFreq)\
    \ {\n                    maxFreq = freq;\n                    maxVal = val;\n\
    \                }\n            }\n        }\n        return maxVal;", "     \
    \   long maxVal = -1;\n        long maxFreq = -1;\n        for(long val : lst)\
    \ {\n            long freq = Collections.frequency(lst, val);\n            if(freq\
    \ >= maxFreq) {\n                maxFreq = freq;\n                maxVal = val;\n\
    \            }\n        }\n        return maxVal;", "        long max = 0;\n \
    \       long maxFreq = 0;\n        for (long i : lst) {\n            if (i > max)\
    \ {\n                max = i;\n                maxFreq = Collections.frequency(lst,\
    \ i);\n            }\n        }\n        if (maxFreq > 0) {\n            return\
    \ max;\n        } else {\n            return -1;\n        }", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        for (long val : lst) {\n        \
    \    if (val > 0) {\n                long freq = Collections.frequency(lst, val);\n\
    \                if (freq >= maxFreq) {\n                    maxFreq = freq;\n\
    \                    maxVal = val;\n                }\n            }\n       \
    \ }\n        return maxVal;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        for(long val : lst) {\n            long freq = Collections.frequency(lst,\
    \ val);\n            if(freq > maxFreq) {\n                maxFreq = freq;\n \
    \               maxVal = val;\n            }\n        }\n        return maxVal;",
  "        long max = -1;\n        long freq = -1;\n        for(long i : lst) {\n\
    \            freq++;\n            if(freq > max) {\n                max = freq;\n\
    \            }\n        }\n        return max;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        for (long val : lst) {\n            if (val\
    \ > 0) {\n                long freq = Collections.frequency(lst, val);\n     \
    \           if (freq >= maxFreq) {\n                    maxFreq = freq;\n    \
    \                maxVal = val;\n                }\n            }\n        }\n\
    \        return maxVal;", "        long maxVal = -1;\n        long maxFreq = -1;\n\
    \        for(long val : lst) {\n            if(val > 0) {\n                long\
    \ freq = lst.stream().filter(x -> x == val).count();\n                if(freq\
    \ >= maxFreq) {\n                    maxFreq = freq;\n                    maxVal\
    \ = val;\n                }\n            }\n        }\n        return maxVal;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        for (long val :\
    \ lst) {\n            if (val > 0) {\n                long freq = lst.stream().filter(x\
    \ -> x == val).count();\n                if (freq >= maxFreq) {\n            \
    \        maxFreq = freq;\n                    maxVal = val;\n                }\n\
    \            }\n        }\n        return maxVal;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        for (long val : lst) {\n            if (val\
    \ > 0) {\n                long freq = Collections.frequency(lst, val);\n     \
    \           if (freq >= maxFreq) {\n                    maxFreq = freq;\n    \
    \                maxVal = val;\n                }\n            }\n        }\n\
    \        return maxVal;", "        long maxVal = -1;\n        long maxFreq = -1;\n\
    \        for (long val : lst) {\n            if (val > 0) {\n                long\
    \ freq = lst.stream().filter(x -> x == val).count();\n                if (freq\
    \ >= maxFreq) {\n                    maxFreq = freq;\n                    maxVal\
    \ = val;\n                }\n            }\n        }\n        return maxVal;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        for (long val :\
    \ lst) {\n            if (val > 0) {\n                if (val > maxVal) {\n  \
    \                  maxVal = val;\n                    maxFreq = lst.get(lst.indexOf(val));\n\
    \                }\n            }\n        }\n        return maxFreq > maxVal\
    \ ? maxVal : -1;", "        long maxVal = -1;\n        long maxFreq = -1;\n  \
    \      for (long val : lst) {\n            long freq = Collections.frequency(lst,\
    \ val);\n            if (freq >= maxFreq) {\n                maxFreq = freq;\n\
    \                maxVal = val;\n            }\n        }\n        return maxVal;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        long maxCount =\
    \ 0;\n        for (long val : lst) {\n            long freq = Collections.frequency(lst,\
    \ val);\n            if (freq > maxFreq) {\n                maxFreq = freq;\n\
    \                maxCount = val;\n            }\n        }\n        if (maxFreq\
    \ > 0) {\n            maxVal = maxCount;\n        }\n        return maxVal;",
  "        long max = -1;\n        long freq = 0;\n        for (long i : lst) {\n\
    \            freq += i;\n            if (freq > max) {\n                max =\
    \ freq;\n            }\n        }\n        return max;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        for(long val : lst) {\n         \
    \   if(val > 0) {\n                long freq = Collections.frequency(lst, val);\n\
    \                if(freq >= maxFreq) {\n                    maxFreq = freq;\n\
    \                    maxVal = val;\n                }\n            }\n       \
    \ }\n        return maxVal;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        for(long val : lst) {\n            if(val > 0) {\n          \
    \      long freq = Collections.frequency(lst, val);\n                if(freq >\
    \ maxFreq) {\n                    maxFreq = freq;\n                    maxVal\
    \ = val;\n                }\n            }\n        }\n        return maxVal;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        for(long val : lst)\
    \ {\n            long freq = Collections.frequency(lst, val);\n            if(freq\
    \ >= maxFreq) {\n                maxFreq = freq;\n                maxVal = val;\n\
    \            }\n        }\n        return maxVal;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        for(long val : lst) {\n            long freq\
    \ = Collections.frequency(lst, val);\n            if(freq >= maxFreq) {\n    \
    \            maxFreq = freq;\n                maxVal = val;\n            }\n \
    \       }\n        return maxVal;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        for (long val : lst) {\n            if (val > 0) {\n        \
    \        if (maxFreq == -1) {\n                    maxFreq = val;\n          \
    \          maxVal = val;\n                } else if (val == maxFreq) {\n     \
    \               maxFreq++;\n                    if (maxFreq >= val) {\n      \
    \                  maxVal = val;\n                    }\n                } else\
    \ {\n                    maxFreq = -1;\n                    maxVal = -1;\n   \
    \             }\n            }\n        }\n        return maxVal;", "        long\
    \ maxVal = -1;\n        long maxFreq = -1;\n        for (long val : lst) {\n \
    \           if (val > 0) {\n                long freq = Collections.frequency(lst,\
    \ val);\n                if (freq >= maxFreq) {\n                    maxFreq =\
    \ freq;\n                    maxVal = val;\n                }\n            }\n\
    \        }\n        return maxVal;", "        long max = 0;\n        long freq\
    \ = 0;\n        for (long i : lst) {\n            if (freq > i) {\n          \
    \      max = i;\n                freq = i;\n            }\n        }\n       \
    \ return max;", "        long maxVal = -1;\n        long maxFreq = -1;\n     \
    \   for (long val : lst) {\n            if (val > 0) {\n                long freq\
    \ = Collections.frequency(lst, val);\n                if (freq >= maxFreq) {\n\
    \                    maxFreq = freq;\n                    maxVal = val;\n    \
    \            }\n            }\n        }\n        return maxVal;", "        long\
    \ maxVal = -1;\n        long maxFreq = -1;\n        for (long val : lst) {\n \
    \           if (val > 0) {\n                long freq = lst.stream().filter(x\
    \ -> x == val).count();\n                if (freq >= maxFreq) {\n            \
    \        maxFreq = freq;\n                    maxVal = val;\n                }\n\
    \            }\n        }\n        return maxVal;", "        long max = -1;\n\
    \        long freq = -1;\n        for (long i : lst) {\n            if (freq ==\
    \ -1 || freq > i) {\n                freq = i;\n                max = i;\n   \
    \         }\n        }\n        return max;", "        long max = 0;\n       \
    \ long freq = 0;\n        for (long i : lst) {\n            if (freq > i) {\n\
    \                max = i;\n                freq = i;\n            }\n        }\n\
    \        return max;", "        long max = 0;\n        long freq = 0;\n      \
    \  for (long i : lst) {\n            if (freq < i) {\n                max = i;\n\
    \                freq = i;\n            }\n        }\n        return max;", " \
    \       long max = -1;\n        long freq = -1;\n        for (long i : lst) {\n\
    \            if (freq == -1 || freq > i) {\n                freq = i;\n      \
    \          max = i;\n            }\n        }\n        return max;", "       \
    \ long maxVal = -1;\n        long maxFreq = -1;\n        for(long val : lst) {\n\
    \            long freq = lst.stream().filter(i -> i == val).count();\n       \
    \     if(freq > maxFreq) {\n                maxFreq = freq;\n                maxVal\
    \ = val;\n            }\n        }\n        return maxVal;", "        long max\
    \ = 0;\n        long freq = 0;\n        for (long i : lst) {\n            freq++;\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \     if (freq > i) {\n                freq = i;\n            }\n        }\n \
    \       return max;", "        long maxVal = -1;\n        long maxFreq = -1;\n\
    \        for(long val : lst) {\n            long freq = Collections.frequency(lst,\
    \ val);\n            if(freq >= maxFreq) {\n                maxFreq = freq;\n\
    \                maxVal = val;\n            }\n        }\n        return maxVal;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        for (long val :\
    \ lst) {\n            if (val > 0) {\n                long freq = Collections.frequency(lst,\
    \ val);\n                if (freq >= maxFreq) {\n                    maxFreq =\
    \ freq;\n                    maxVal = val;\n                }\n            }\n\
    \        }\n        return maxVal;", "        long maxVal = -1;\n        long\
    \ maxFreq = -1;\n        for (long val : lst) {\n            if (val > 0) {\n\
    \                long freq = Collections.frequency(lst, val);\n              \
    \  if (freq >= maxFreq) {\n                    maxFreq = freq;\n             \
    \       maxVal = val;\n                }\n            }\n        }\n        return\
    \ maxVal;", "        long maxVal = -1;\n        long maxFreq = -1;\n        for\
    \ (long val : lst) {\n            if (val > 0) {\n                long freq =\
    \ Collections.frequency(lst, val);\n                if (freq >= maxFreq) {\n \
    \                   maxFreq = freq;\n                    maxVal = val;\n     \
    \           }\n            }\n        }\n        return maxVal;", "        long\
    \ maxVal = -1;\n        long maxFreq = -1;\n        long currVal = -1;\n     \
    \   long currFreq = -1;\n        for (long val : lst) {\n            if (val >\
    \ 0) {\n                currVal = val;\n                currFreq = Collections.frequency(lst,\
    \ val);\n                if (currFreq > maxFreq) {\n                    maxFreq\
    \ = currFreq;\n                    maxVal = currVal;\n                }\n    \
    \        }\n        }\n        return maxVal;", "        long max = -1;\n    \
    \    long freq = -1;\n        for (long i : lst) {\n            if (freq == -1\
    \ || freq > i) {\n                freq = i;\n                max = i;\n      \
    \      }\n        }\n        return max;", "        long max = 0;\n        long\
    \ freq = 0;\n        for (long i : lst) {\n            freq++;\n            if\
    \ (freq > i) {\n                max = i;\n                freq = freq - i;\n \
    \           }\n        }\n        return max;", "        long max = 0;\n     \
    \   long freq = 0;\n        for (long i : lst) {\n            freq++;\n      \
    \      if (freq > max) {\n                max = freq;\n            }\n       \
    \ }\n        if (max > 0) {\n            for (long i : lst) {\n              \
    \  if (freq >= i) {\n                    freq--;\n                }\n        \
    \    }\n        }\n        return max;", "        long maxVal = -1;\n        long\
    \ maxFreq = -1;\n        for (long val : lst) {\n            if (val > 0) {\n\
    \                long freq = lst.stream().filter(i -> i == val).count();\n   \
    \             if (freq >= maxFreq) {\n                    maxFreq = freq;\n  \
    \                  maxVal = val;\n                }\n            }\n        }\n\
    \        return maxVal;", "        long max = 0;\n        long freq = 0;\n   \
    \     for (long i : lst) {\n            freq++;\n            if (freq > i) {\n\
    \                max = i;\n                freq = freq - i;\n            }\n \
    \       }\n        return max;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        for(long val : lst) {\n            if(val > 0) {\n          \
    \      long freq = lst.stream().filter(v -> v == val).count();\n             \
    \   if(freq >= maxFreq) {\n                    maxFreq = freq;\n             \
    \       maxVal = val;\n                }\n            }\n        }\n        return\
    \ maxVal;", "        long maxVal = -1;\n        long maxFreq = -1;\n        for\
    \ (long val : lst) {\n            if (val > 0) {\n                long freq =\
    \ lst.stream().filter(v -> v == val).count();\n                if (freq > maxFreq)\
    \ {\n                    maxFreq = freq;\n                    maxVal = val;\n\
    \                }\n            }\n        }\n        return maxVal;", "     \
    \   long maxVal = -1;\n        long maxFreq = -1;\n        for (long val : lst)\
    \ {\n            if (val > 0) {\n                long freq = lst.stream().filter(v\
    \ -> v == val).count();\n                if (freq >= maxFreq) {\n            \
    \        maxFreq = freq;\n                    maxVal = val;\n                }\n\
    \            }\n        }\n        return maxVal;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        for (long val : lst) {\n            if (val\
    \ > 0) {\n                long freq = Collections.frequency(lst, val);\n     \
    \           if (freq > maxFreq) {\n                    maxFreq = freq;\n     \
    \               maxVal = val;\n                }\n            }\n        }\n \
    \       return maxVal;", "        long max = 0;\n        long freq = 0;\n    \
    \    for (long i : lst) {\n            freq++;\n            if (i > max) {\n \
    \               max = i;\n            }\n        }\n        if (freq >= max) {\n\
    \            return -1;\n        }\n        return max;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        for (long val : lst) {\n        \
    \    long freq = lst.stream().filter(x -> x == val).count();\n            if (freq\
    \ >= maxFreq) {\n                maxFreq = freq;\n                maxVal = val;\n\
    \            }\n        }\n        return maxVal;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        for (long val : lst) {\n            if (val\
    \ > 0) {\n                long freq = lst.stream().filter(v -> v == val).count();\n\
    \                if (freq >= maxFreq) {\n                    maxFreq = freq;\n\
    \                    maxVal = val;\n                }\n            }\n       \
    \ }\n        return maxVal;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        for(long val : lst) {\n            long freq = lst.stream().filter(x\
    \ -> x == val).count();\n            if(freq > maxFreq) {\n                maxFreq\
    \ = freq;\n                maxVal = val;\n            }\n        }\n        return\
    \ maxVal;", "        long maxVal = -1;\n        long maxFreq = -1;\n        for\
    \ (long val : lst) {\n            if (val > 0) {\n                long freq =\
    \ lst.stream().filter(v -> v == val).count();\n                if (freq >= maxFreq)\
    \ {\n                    maxFreq = freq;\n                    maxVal = val;\n\
    \                }\n            }\n        }\n        return maxVal;", "     \
    \   long maxVal = -1;\n        long maxFreq = -1;\n        for (long val : lst)\
    \ {\n            long freq = lst.stream().filter(x -> x == val).count();\n   \
    \         if (freq > maxFreq) {\n                maxFreq = freq;\n           \
    \     maxVal = val;\n            }\n        }\n        return maxVal;", "    \
    \    long max = 0;\n        long freq = 0;\n        for (long i : lst) {\n   \
    \         freq++;\n            if (freq > i) {\n                max = i;\n   \
    \             freq = freq - i;\n            }\n        }\n        return max;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        for(long val : lst)\
    \ {\n            if(val > 0) {\n                long freq = lst.stream().filter(x\
    \ -> x == val).count();\n                if(freq >= maxFreq) {\n             \
    \       maxFreq = freq;\n                    maxVal = val;\n                }\n\
    \            }\n        }\n        return maxVal;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        for (long val : lst) {\n            if (val\
    \ > 0) {\n                long freq = Collections.frequency(lst, val);\n     \
    \           if (freq > maxFreq) {\n                    maxFreq = freq;\n     \
    \               maxVal = val;\n                }\n            }\n        }\n \
    \       return maxVal;", "        long max = -1;\n        long freq = -1;\n  \
    \      for(long i : lst) {\n            freq++;\n            if(freq > max) {\n\
    \                max = freq;\n            }\n            if(freq == i) {\n   \
    \             max = freq;\n            }\n        }\n        return max;", " \
    \       long max = -1;\n        long freq = 0;\n        for (long i : lst) {\n\
    \            freq += i;\n            if (freq > max) {\n                max =\
    \ freq;\n            }\n        }\n        return max;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        for (long val : lst) {\n        \
    \    if (val > 0) {\n                long freq = Collections.frequency(lst, val);\n\
    \                if (freq >= maxFreq) {\n                    maxFreq = freq;\n\
    \                    maxVal = val;\n                }\n            }\n       \
    \ }\n        return maxVal;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        for (long val : lst) {\n            if (val > 0) {\n        \
    \        long freq = lst.stream().filter(x -> x == val).count();\n           \
    \     if (freq >= maxFreq) {\n                    maxFreq = freq;\n          \
    \          maxVal = val;\n                }\n            }\n        }\n      \
    \  return maxVal;", "        long max = -1;\n        long maxFreq = -1;\n    \
    \    for(long i : lst) {\n            if(i == 0) {\n                continue;\n\
    \            }\n            long freq = Collections.frequency(lst, i);\n     \
    \       if(freq > maxFreq) {\n                maxFreq = freq;\n              \
    \  max = i;\n            }\n        }\n        return max;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        for (long val : lst) {\n        \
    \    if (val > 0) {\n                long freq = Collections.frequency(lst, val);\n\
    \                if (freq > maxFreq) {\n                    maxFreq = freq;\n\
    \                    maxVal = val;\n                }\n            }\n       \
    \ }\n        return maxVal;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        for(long val : lst) {\n            long freq = lst.stream().filter(x\
    \ -> x == val).count();\n            if(freq > maxFreq) {\n                maxFreq\
    \ = freq;\n                maxVal = val;\n            }\n        }\n        return\
    \ maxVal;", "        long maxVal = -1;\n        long maxFreq = -1;\n        for(long\
    \ val : lst) {\n            long freq = lst.stream().filter(i -> i == val).count();\n\
    \            if(freq > maxFreq) {\n                maxFreq = freq;\n         \
    \       maxVal = val;\n            }\n        }\n        return maxVal;", "  \
    \      long max = -1;\n        long maxFreq = -1;\n        for(long i : lst) {\n\
    \            long freq = Collections.frequency(lst, i);\n            if(freq >=\
    \ maxFreq) {\n                max = i;\n                maxFreq = freq;\n    \
    \        }\n        }\n        return max;", "        long maxVal = -1;\n    \
    \    long maxFreq = -1;\n        for (long val : lst) {\n            if (val >\
    \ 0) {\n                long freq = Collections.frequency(lst, val);\n       \
    \         if (freq >= maxFreq) {\n                    maxFreq = freq;\n      \
    \              maxVal = val;\n                }\n            }\n        }\n  \
    \      return maxVal;", "        long max = -1;\n        long freq = 0;\n    \
    \    for (long i : lst) {\n            if (freq < i) {\n                freq =\
    \ i;\n                max = i;\n            }\n        }\n        return max;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        for(long val : lst)\
    \ {\n            if(val > 0) {\n                long freq = lst.stream().filter(i\
    \ -> i == val).count();\n                if(freq > maxFreq) {\n              \
    \      maxFreq = freq;\n                    maxVal = val;\n                }\n\
    \            }\n        }\n        return maxVal;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        for (long val : lst) {\n            if (val\
    \ > 0) {\n                long freq = Collections.frequency(lst, val);\n     \
    \           if (freq >= maxFreq) {\n                    maxFreq = freq;\n    \
    \                maxVal = val;\n                }\n            }\n        }\n\
    \        return maxVal;", "        long max = -1;\n        long maxFreq = -1;\n\
    \        for (long i : lst) {\n            if (maxFreq < i) {\n              \
    \  max = i;\n                maxFreq = i;\n            } else if (maxFreq == i)\
    \ {\n                maxFreq++;\n            }\n        }\n        return max;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        for (long val :\
    \ lst) {\n            if (val > 0) {\n                long freq = Collections.frequency(lst,\
    \ val);\n                if (freq >= maxFreq) {\n                    maxFreq =\
    \ freq;\n                    maxVal = val;\n                }\n            }\n\
    \        }\n        return maxVal;", "        long maxVal = -1;\n        long\
    \ maxFreq = -1;\n        for (long val : lst) {\n            long freq = Collections.frequency(lst,\
    \ val);\n            if (freq >= maxFreq) {\n                maxFreq = freq;\n\
    \                maxVal = val;\n            }\n        }\n        return maxVal;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        for (long val :\
    \ lst) {\n            long freq = Collections.frequency(lst, val);\n         \
    \   if (freq >= maxFreq) {\n                maxFreq = freq;\n                maxVal\
    \ = val;\n            }\n        }\n        return maxVal;", "        long max\
    \ = -1;\n        long maxFreq = -1;\n        for (long i : lst) {\n          \
    \  if (maxFreq < i) {\n                maxFreq = i;\n                max = i;\n\
    \            }\n        }\n        return max;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        for(long val : lst) {\n            long freq\
    \ = Collections.frequency(lst, val);\n            if(freq > maxFreq) {\n     \
    \           maxFreq = freq;\n                maxVal = val;\n            }\n  \
    \      }\n        return maxVal;", "        long max = -1;\n        long freq\
    \ = 0;\n        for (long i : lst) {\n            if (freq > i) {\n          \
    \      freq = i;\n                max = i;\n            }\n        }\n       \
    \ return max;", "        long maxVal = -1;\n        long maxFreq = -1;\n     \
    \   for (long val : lst) {\n            long freq = Collections.frequency(lst,\
    \ val);\n            if (freq > maxFreq) {\n                maxFreq = freq;\n\
    \                maxVal = val;\n            }\n        }\n        return maxVal;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        for(long val : lst)\
    \ {\n            long freq = Collections.frequency(lst, val);\n            if(freq\
    \ > maxFreq) {\n                maxFreq = freq;\n                maxVal = val;\n\
    \            }\n        }\n        return maxVal;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        for (long val : lst) {\n            if (val\
    \ > 0) {\n                long freq = Collections.frequency(lst, val);\n     \
    \           if (freq > maxFreq) {\n                    maxFreq = freq;\n     \
    \               maxVal = val;\n                }\n            }\n        }\n \
    \       return maxVal;", "        long max = 0;\n        long freq = 0;\n    \
    \    for (long i : lst) {\n            freq++;\n            if (freq > i) {\n\
    \                max = i;\n                freq = i;\n            }\n        }\n\
    \        return max;", "        long maxVal = -1;\n        long maxFreq = -1;\n\
    \        for(long val : lst) {\n            if(val > 0) {\n                if(val\
    \ > maxVal) {\n                    maxVal = val;\n                    maxFreq\
    \ = val;\n                } else if(val == maxFreq) {\n                    maxFreq++;\n\
    \                }\n            }\n        }\n        return maxVal;", "     \
    \   long maxVal = -1;\n        long maxFreq = -1;\n        long currVal = -1;\n\
    \        long currFreq = -1;\n        for (long val : lst) {\n            if (val\
    \ > 0) {\n                if (currFreq == -1) {\n                    currFreq\
    \ = val;\n                    currVal = val;\n                } else if (currFreq\
    \ > val) {\n                    currFreq = val;\n                    currVal =\
    \ val;\n                }\n            }\n        }\n        if (currFreq > maxFreq)\
    \ {\n            maxFreq = currFreq;\n            maxVal = currVal;\n        }\n\
    \        return maxVal;", "        long max = -1;\n        long freq = -1;\n \
    \       for (long i : lst) {\n            if (freq == -1) {\n                freq\
    \ = i;\n                max = i;\n            } else if (freq > i) {\n       \
    \         freq = i;\n                max = i;\n            }\n        }\n    \
    \    return max;", "        long maxVal = -1;\n        long maxFreq = -1;\n  \
    \      for (long val : lst) {\n            if (val > 0) {\n                long\
    \ freq = lst.stream().filter(v -> v == val).count();\n                if (freq\
    \ >= maxFreq) {\n                    maxFreq = freq;\n                    maxVal\
    \ = val;\n                }\n            }\n        }\n        return maxVal;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        for (long val :\
    \ lst) {\n            if (val > 0) {\n                if (maxFreq < val) maxFreq\
    \ = val;\n                if (maxVal < val) maxVal = val;\n            }\n   \
    \     }\n        return maxVal;", "        long max = -1;\n        long maxFreq\
    \ = -1;\n        for (long i : lst) {\n            if (i > 0 && maxFreq < i) {\n\
    \                maxFreq = i;\n                max = i;\n            }\n     \
    \   }\n        return max;", "        long max = -1;\n        long freq = 0;\n\
    \        for (long i : lst) {\n            if (freq > i) {\n                freq\
    \ = i;\n                max = i;\n            }\n        }\n        return max;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        for (long val :\
    \ lst) {\n            if (val > 0) {\n                long freq = lst.stream().filter(v\
    \ -> v == val).count();\n                if (freq >= maxFreq) {\n            \
    \        maxFreq = freq;\n                    maxVal = val;\n                }\n\
    \            }\n        }\n        return maxVal;", "        long max = -1;\n\
    \        long freq = -1;\n        for(long i : lst) {\n            freq++;\n \
    \           if(freq > max) {\n                max = freq;\n            }\n   \
    \         if(freq == i) {\n                max = freq;\n            }\n      \
    \  }\n        return max;", "        long maxVal = -1;\n        long maxFreq =\
    \ -1;\n        for (long val : lst) {\n            if (val > 0) {\n          \
    \      long freq = Collections.frequency(lst, val);\n                if (freq\
    \ >= maxFreq) {\n                    maxFreq = freq;\n                    maxVal\
    \ = val;\n                }\n            }\n        }\n        return maxVal;",
  "        long max = 0;\n        long freq = 0;\n        for(long i : lst) {\n  \
    \          freq += i;\n            if(freq > max) {\n                max = freq;\n\
    \            }\n        }\n        if(max > 0) {\n            return max;\n  \
    \      }\n        return -1;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        long currFreq = -1;\n        for (long val : lst) {\n       \
    \     currFreq = lst.stream().filter(x -> x == val).count();\n            if (currFreq\
    \ > maxFreq) {\n                maxFreq = currFreq;\n                maxVal =\
    \ val;\n            } else if (currFreq == maxFreq) {\n                if (val\
    \ > maxVal) {\n                    maxFreq = currFreq;\n                    maxVal\
    \ = val;\n                }\n            }\n        }\n        return maxVal;",
  "        long max = -1;\n        long freq = 0;\n        for (long i : lst) {\n\
    \            freq++;\n            if (freq > max) {\n                max = freq;\n\
    \            }\n            if (freq == i) {\n                freq--;\n      \
    \      }\n        }\n        return max;", "        long maxVal = -1;\n      \
    \  long maxFreq = -1;\n        for (long val : lst) {\n            if (val > 0)\
    \ {\n                long freq = lst.stream().filter(i -> i == val).count();\n\
    \                if (freq >= maxFreq) {\n                    maxFreq = freq;\n\
    \                    maxVal = val;\n                }\n            }\n       \
    \ }\n        return maxVal;", "        long max = 0;\n        long freq = 0;\n\
    \        for(long i : lst) {\n            freq++;\n            if(freq > max)\
    \ {\n                max = freq;\n            }\n        }\n        return max;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        long freq = -1;\n\
    \        for(long i : lst) {\n            freq++;\n            if(freq > maxFreq)\
    \ {\n                maxFreq = freq;\n                maxVal = i;\n          \
    \  }\n        }\n        return maxVal;", "        long maxVal = -1;\n       \
    \ long maxFreq = -1;\n        for (long val : lst) {\n            if (val > 0)\
    \ {\n                long freq = Collections.frequency(lst, val);\n          \
    \      if (freq >= maxFreq) {\n                    maxFreq = freq;\n         \
    \           maxVal = val;\n                }\n            }\n        }\n     \
    \   return maxVal;", "        long maxVal = -1;\n        long maxFreq = -1;\n\
    \        long currFreq = 0;\n        for (long val : lst) {\n            currFreq++;\n\
    \            if (currFreq > maxFreq) {\n                maxFreq = currFreq;\n\
    \                maxVal = val;\n            } else if (currFreq == maxFreq) {\n\
    \                if (val > maxVal) {\n                    maxFreq = currFreq;\n\
    \                    maxVal = val;\n                }\n            }\n       \
    \ }\n        return maxVal;", "        long max = -1;\n        long freq = 0;\n\
    \        for (long i : lst) {\n            freq++;\n            if (freq > max)\
    \ {\n                max = freq;\n            }\n        }\n        return max;",
  "        long max = -1;\n        long freq = 0;\n        for (long i : lst) {\n\
    \            freq++;\n            if (freq > max) {\n                max = freq;\n\
    \            }\n        }\n        return max;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        for (long val : lst) {\n            if (val\
    \ > 0) {\n                long freq = lst.stream().filter(x -> x == val).count();\n\
    \                if (freq >= maxFreq) {\n                    maxFreq = freq;\n\
    \                    maxVal = val;\n                }\n            }\n       \
    \ }\n        return maxVal;", "        long max = -1;\n        long freq = -1;\n\
    \        for(long i : lst) {\n            freq++;\n            if(freq > max)\
    \ {\n                max = freq;\n            }\n        }\n        return max;",
  "        long max = 0;\n        long freq = 0;\n        for (long i : lst) {\n \
    \           if (freq > i) {\n                max = i;\n                freq =\
    \ i;\n            }\n        }\n        return max;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        long freq = -1;\n        for (long val :\
    \ lst) {\n            freq = Collections.frequency(lst, val);\n            if\
    \ (freq > maxFreq) {\n                maxFreq = freq;\n                maxVal\
    \ = val;\n            }\n        }\n        return maxVal;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        long currVal = -1;\n        long\
    \ currFreq = -1;\n        for (long val : lst) {\n            currVal = val;\n\
    \            currFreq = lst.stream().filter(x -> x == val).count();\n        \
    \    if (currFreq > maxFreq) {\n                maxFreq = currFreq;\n        \
    \        maxVal = currVal;\n            } else if (currFreq == maxFreq) {\n  \
    \              if (currVal > maxVal) {\n                    maxFreq = currFreq;\n\
    \                    maxVal = currVal;\n                }\n            }\n   \
    \     }\n        return maxVal;", "        long max = 0;\n        long freq =\
    \ 0;\n        for (long i : lst) {\n            freq++;\n            if (freq\
    \ > i) {\n                max = i;\n                freq = freq - i;\n       \
    \     }\n        }\n        return max;", "        long max = 0;\n        long\
    \ freq = 0;\n        for (long i : lst) {\n            if (i > 0 && freq >= i)\
    \ {\n                freq--;\n                max = i;\n            }\n      \
    \      freq++;\n        }\n        return max;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        for (long val : lst) {\n            if (val\
    \ > 0) {\n                if (maxFreq < val) {\n                    maxFreq =\
    \ val;\n                    maxVal = val;\n                }\n            }\n\
    \        }\n        return maxVal;", "        long maxVal = -1;\n        long\
    \ maxFreq = -1;\n        for (long val : lst) {\n            if (val > 0) {\n\
    \                long freq = lst.stream().filter(x -> x == val).count();\n   \
    \             if (freq >= maxFreq) {\n                    maxFreq = freq;\n  \
    \                  maxVal = val;\n                }\n            }\n        }\n\
    \        return maxVal;", "        long maxVal = -1;\n        long maxFreq = -1;\n\
    \        for (long val : lst) {\n            if (val > 0) {\n                long\
    \ freq = Collections.frequency(lst, val);\n                if (freq >= maxFreq)\
    \ {\n                    maxFreq = freq;\n                    maxVal = val;\n\
    \                }\n            }\n        }\n        return maxVal;", "     \
    \   long max = 0;\n        long freq = 0;\n        for (long i : lst) {\n    \
    \        if (freq > i) {\n                max = i;\n                freq = i;\n\
    \            }\n        }\n        return max;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        for (long val : lst) {\n            long\
    \ freq = Collections.frequency(lst, val);\n            if (freq >= maxFreq) {\n\
    \                maxFreq = freq;\n                maxVal = val;\n            }\n\
    \        }\n        return maxVal;", "        long maxVal = -1;\n        long\
    \ maxFreq = -1;\n        for(long val : lst) {\n            long freq = Collections.frequency(lst,\
    \ val);\n            if(freq >= maxFreq) {\n                maxFreq = freq;\n\
    \                maxVal = val;\n            }\n        }\n        return maxVal;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        for (long val :\
    \ lst) {\n            long freq = Collections.frequency(lst, val);\n         \
    \   if (freq > maxFreq) {\n                maxFreq = freq;\n                maxVal\
    \ = val;\n            }\n        }\n        return maxVal;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        for(long val : lst) {\n         \
    \   long freq = lst.stream().filter(i -> i == val).count();\n            if(freq\
    \ >= maxFreq) {\n                maxFreq = freq;\n                maxVal = val;\n\
    \            }\n        }\n        return maxVal;", "        long max = 0;\n \
    \       long freq = 0;\n        for(long i : lst) {\n            freq++;\n   \
    \         if(freq > max) {\n                max = freq;\n            }\n     \
    \   }\n        for(long i : lst) {\n            if(i == max) {\n             \
    \   return i;\n            }\n        }\n        return -1;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        for (long val : lst) {\n        \
    \    if (val > 0) {\n                long freq = Collections.frequency(lst, val);\n\
    \                if (freq >= maxFreq) {\n                    maxFreq = freq;\n\
    \                    maxVal = val;\n                }\n            }\n       \
    \ }\n        return maxVal;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        for (long val : lst) {\n            if (val > 0) {\n        \
    \        long freq = lst.stream().filter(x -> x == val).count();\n           \
    \     if (freq >= maxFreq) {\n                    maxFreq = freq;\n          \
    \          maxVal = val;\n                }\n            }\n        }\n      \
    \  return maxVal;", "        long max = 0;\n        long freq = 0;\n        for\
    \ (long i : lst) {\n            freq += i;\n            if (freq > max) {\n  \
    \              max = freq;\n            }\n        }\n        return max > 0 ?\
    \ max : -1;", "        long maxVal = -1;\n        long maxFreq = -1;\n       \
    \ for(long val : lst) {\n            if(val > 0) {\n                long freq\
    \ = Collections.frequency(lst, val);\n                if(freq >= maxFreq) {\n\
    \                    maxFreq = freq;\n                    maxVal = val;\n    \
    \            }\n            }\n        }\n        return maxVal;", "        long\
    \ maxVal = -1;\n        long maxFreq = -1;\n        for(long val : lst) {\n  \
    \          long freq = Collections.frequency(lst, val);\n            if(freq >=\
    \ maxFreq) {\n                maxFreq = freq;\n                maxVal = val;\n\
    \            }\n        }\n        return maxVal;", "        long max = 0;\n \
    \       long freq = 0;\n        for (long i : lst) {\n            freq++;\n  \
    \          if (freq > i) {\n                max = i;\n                freq = freq\
    \ - i;\n            }\n        }\n        return max;", "        long maxVal =\
    \ -1;\n        long maxFreq = -1;\n        for(long val : lst) {\n           \
    \ long freq = Collections.frequency(lst, val);\n            if(freq >= maxFreq)\
    \ {\n                maxFreq = freq;\n                maxVal = val;\n        \
    \    }\n        }\n        return maxVal;", "        long max = 0;\n        long\
    \ freq = 0;\n        for (long i : lst) {\n            freq += i;\n          \
    \  if (freq > max) {\n                max = freq;\n            }\n        }\n\
    \        if (max > 0) {\n            return max;\n        }\n        return -1;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        for (long val :\
    \ lst) {\n            if (val > 0) {\n                long freq = lst.stream().filter(x\
    \ -> x == val).count();\n                if (freq >= maxFreq) {\n            \
    \        maxFreq = freq;\n                    maxVal = val;\n                }\n\
    \            }\n        }\n        return maxVal;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        for (long val : lst) {\n            if (val\
    \ > 0) {\n                long freq = Collections.frequency(lst, val);\n     \
    \           if (freq > maxFreq) {\n                    maxFreq = freq;\n     \
    \               maxVal = val;\n                }\n            }\n        }\n \
    \       return maxVal;", "        long max = -1;\n        long freq = 0;\n   \
    \     for (long i : lst) {\n            freq++;\n            if (freq > max) {\n\
    \                max = i;\n                freq = freq - 1;\n            }\n \
    \       }\n        return max;", "        long max = 0;\n        long freq = 0;\n\
    \        for (long i : lst) {\n            freq++;\n            if (freq > i)\
    \ {\n                max = i;\n                freq = freq - i;\n            }\n\
    \        }\n        return max;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        for (long val : lst) {\n            if (val > 0) {\n        \
    \        long freq = lst.stream().filter(x -> x == val).count();\n           \
    \     if (freq > maxFreq) {\n                    maxFreq = freq;\n           \
    \         maxVal = val;\n                }\n            }\n        }\n       \
    \ return maxVal;", "        long maxVal = -1;\n        long maxFreq = -1;\n  \
    \      for (long val : lst) {\n            if (val > 0) {\n                long\
    \ freq = Collections.frequency(lst, val);\n                if (freq >= maxFreq)\
    \ {\n                    maxFreq = freq;\n                    maxVal = val;\n\
    \                }\n            }\n        }\n        return maxVal;", "     \
    \   long maxVal = -1;\n        long maxFreq = -1;\n        for (long val : lst)\
    \ {\n            if (val > 0) {\n                long freq = lst.stream().filter(x\
    \ -> x == val).count();\n                if (freq > maxFreq) {\n             \
    \       maxFreq = freq;\n                    maxVal = val;\n                }\n\
    \            }\n        }\n        return maxVal;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        for (long val : lst) {\n            if (val\
    \ > 0) {\n                if (maxFreq == -1 || maxFreq > val) {\n            \
    \        maxFreq = val;\n                    maxVal = val;\n                }\n\
    \            }\n        }\n        return maxVal;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        for (long val : lst) {\n            if (val\
    \ > 0) {\n                long freq = lst.stream().filter(v -> v == val).count();\n\
    \                if (freq > maxFreq) {\n                    maxFreq = freq;\n\
    \                    maxVal = val;\n                }\n            }\n       \
    \ }\n        return maxVal;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        for (long val : lst) {\n            long freq = Collections.frequency(lst,\
    \ val);\n            if (freq >= maxFreq) {\n                maxFreq = freq;\n\
    \                maxVal = val;\n            }\n        }\n        return maxVal;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        for (long val :\
    \ lst) {\n            if (val > 0) {\n                long freq = lst.stream().filter(x\
    \ -> x == val).count();\n                if (freq > maxFreq) {\n             \
    \       maxFreq = freq;\n                    maxVal = val;\n                }\n\
    \            }\n        }\n        return maxVal;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        for (long val : lst) {\n            if (val\
    \ > 0) {\n                long freq = Collections.frequency(lst, val);\n     \
    \           if (freq >= maxFreq) {\n                    maxFreq = freq;\n    \
    \                maxVal = val;\n                }\n            }\n        }\n\
    \        return maxVal;", "        long max = 0;\n        long freq = 0;\n   \
    \     for (long i : lst) {\n            freq++;\n            if (freq > i) {\n\
    \                max = i;\n                freq = freq - i;\n            }\n \
    \       }\n        return max;", "        long max = 0;\n        long freq = 0;\n\
    \        for (long i : lst) {\n            if (freq == 0 || freq > i) {\n    \
    \            max = i;\n                freq = i;\n            }\n            else\
    \ if (freq == i) {\n                freq++;\n            }\n        }\n      \
    \  return max;", "        long max = -1;\n        long freq = 0;\n        for\
    \ (long i : lst) {\n            if (freq >= i) {\n                freq--;\n  \
    \          } else {\n                max = i;\n                freq++;\n     \
    \       }\n        }\n        return max;", "        long maxVal = -1;\n     \
    \   long maxFreq = -1;\n        for (long val : lst) {\n            long freq\
    \ = lst.stream().filter(i -> i == val).count();\n            if (freq > maxFreq)\
    \ {\n                maxFreq = freq;\n                maxVal = val;\n        \
    \    }\n        }\n        return maxVal;", "        long maxVal = -1;\n     \
    \   long maxFreq = -1;\n        for (long val : lst) {\n            if (val >\
    \ 0) {\n                long freq = lst.stream().filter(x -> x == val).count();\n\
    \                if (freq >= maxFreq) {\n                    maxFreq = freq;\n\
    \                    maxVal = val;\n                }\n            }\n       \
    \ }\n        return maxVal;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        for (long val : lst) {\n            if (val > 0) {\n        \
    \        long freq = Collections.frequency(lst, val);\n                if (freq\
    \ >= maxFreq) {\n                    maxFreq = freq;\n                    maxVal\
    \ = val;\n                }\n            }\n        }\n        return maxVal;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        for(long val : lst)\
    \ {\n            long freq = Collections.frequency(lst, val);\n            if(freq\
    \ > maxFreq) {\n                maxFreq = freq;\n                maxVal = val;\n\
    \            }\n        }\n        return maxVal;"]
stop_tokens:
- "\n    }\n"

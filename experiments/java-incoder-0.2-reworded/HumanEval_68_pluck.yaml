name: HumanEval_68_pluck
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // \"Given an array array list representing a branch of a tree\
  \ that has non-negative integer nodes\n    // your task is to pluck one of the nodes\
  \ and return it.\n    // The plucked node should be the node with the smallest even\
  \ value.\n    // If multiple nodes with the same smallest even value are found return\
  \ the node that has smallest index.\n    // The plucked node should be returned\
  \ in an array array list, [ smalest_value, its index ],\n    // If there are no\
  \ even values or the given array array list is empty, return [].\n    // Example\
  \ 1:\n    // >>> pluck((new ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)3l))))\n\
  \    // (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l)))\n    // Explanation:\
  \ 2 has the smallest even value, and 2 has the smallest index.\n    // Example 2:\n\
  \    // >>> pluck((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))))\n\
  \    // (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l)))\n    // Explanation:\
  \ 2 has the smallest even value, and 2 has the smallest index.\n    // Example 3:\n\
  \    // >>> pluck((new ArrayList<Long>(Arrays.asList())))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
  \    // Example 4:\n    // >>> pluck((new ArrayList<Long>(Arrays.asList((long)5l,\
  \ (long)0l, (long)3l, (long)0l, (long)4l, (long)2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)1l)))\n    // Explanation: 0 is the smallest value, but  there are two zeros,\n\
  \    // so we will choose the first zero, which has the smallest index.\n    //\
  \ Constraints:\n    // * 1 <= nodes.length <= 10000\n    // * 0 <= node.value\n\
  \    public static ArrayList<Long> pluck(ArrayList<Long> arr) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(pluck((new\
  \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
  \ (long)1l)))));\n    assert(pluck((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l)))));\n\
  \    assert(pluck((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
  \    assert(pluck((new ArrayList<Long>(Arrays.asList((long)5l, (long)0l, (long)3l,\
  \ (long)0l, (long)4l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)1l)))));\n    assert(pluck((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l, (long)0l, (long)5l, (long)3l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)3l)))));\n    assert(pluck((new ArrayList<Long>(Arrays.asList((long)5l,\
  \ (long)4l, (long)8l, (long)4l, (long)8l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
  \ (long)1l)))));\n    assert(pluck((new ArrayList<Long>(Arrays.asList((long)7l,\
  \ (long)6l, (long)7l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
  \ (long)1l)))));\n    assert(pluck((new ArrayList<Long>(Arrays.asList((long)7l,\
  \ (long)9l, (long)7l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
  \    }\n\n}\n"
completions: ["        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long smallest_value = arr.get(0);\n        int smallest_index = -1;\n\
    \        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smallest_value < arr.get(i)) {\n            \
    \        smallest_value = arr.get(i);\n                    smallest_index = i;\n\
    \                }\n            }\n        }\n        if (smallest_index != -1)\
    \ {\n            result.add(smallest_value);\n            result.add(smallest_index);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long value =\
    \ arr.get(i);\n            if (value % 2 == 0) {\n                if (value <\
    \ smallestEvenValue) {\n                    smallestEvenValue = value;\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        if (smallestEvenValue == Long.MAX_VALUE) {\n            return result;\n\
    \        }\n        ArrayList<Long> evens = new ArrayList<Long>();\n        for\
    \ (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n \
    \           if (value % 2 == 0) {\n                evens.add(value);\n       \
    \     }\n        }\n        Collections.sort(evens);\n        evens.remove(smallestEvenValue);\n\
    \        evens.remove(smallestIndex);\n        evens.add(smallestEvenValue);\n\
    \        evens.add(smallestIndex);\n        result.addAll(evens);\n        return\
    \ result;", "        ArrayList<Long> res = new ArrayList<>();\n        ArrayList<Long>\
    \ temp = new ArrayList<>();\n        long smallest_even_value = Long.MAX_VALUE;\n\
    \        int smallest_even_index = 0;\n        int size = arr.size();\n      \
    \  for (int i = 0; i < size; i++) {\n            if (arr.get(i) % 2 == 0) {\n\
    \                smallest_even_value = arr.get(i);\n                smallest_even_index\
    \ = i;\n            }\n        }\n        if (smallest_even_value == Long.MAX_VALUE)\
    \ {\n            return res;\n        }\n        for (int i = 0; i < size; i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (arr.get(i) <\
    \ smallest_even_value) {\n                    smallest_even_value = arr.get(i);\n\
    \                    smallest_even_index = i;\n                }\n           \
    \ }\n        }\n        temp.add(smallest_even_value);\n        temp.add(smallest_even_index);\n\
    \        res.add(temp);\n        return res;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n        int\
    \ smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n       \
    \     if (arr.get(i) % 2 == 0) {\n                if (smallestEven > arr.get(i))\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        ArrayList<Long> temp = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallestEvenValue > arr.get(i)) {\n       \
    \             smallestEvenValue = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        temp.add(smallestEvenValue);\n\
    \        temp.add(smallestIndex);\n        result.add(temp);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long smallest = arr.get(0);\n        int smallest_index = -1;\n     \
    \   for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) % 2 ==\
    \ 0) {\n                if (smallest > arr.get(i)) {\n                    smallest\
    \ = arr.get(i);\n                    smallest_index = i;\n                }\n\
    \            }\n        }\n        result.add(smallest);\n        result.add(smallest_index);\n\
    \        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MIN_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (Long val : arr) {\n            if (val % 2 == 0) {\n      \
    \          if (smallestEvenValue < val) {\n                    smallestEvenValue\
    \ = val;\n                    smallestIndex = arr.indexOf(val);\n            \
    \    }\n            }\n        }\n        if (smallestEvenValue == Long.MIN_VALUE)\
    \ {\n            return res;\n        }\n        ArrayList<Long> evens = new ArrayList<>();\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                evens.add(arr.get(i));\n            }\n        }\n\
    \        evens.sort(Comparator.comparingLong(Long::longValue));\n        evens.remove(smallestIndex);\n\
    \        res.add(smallestEvenValue);\n        res.add(smallestIndex);\n      \
    \  return res;", "        ArrayList<Long> result = new ArrayList<>();\n      \
    \  Arrays.sort(arr);\n        long smallest = arr.get(0);\n        int smallest_index\
    \ = -1;\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallest > arr.get(i)) {\n                \
    \    smallest = arr.get(i);\n                    smallest_index = i;\n       \
    \         }\n            }\n        }\n        result.add(smallest);\n       \
    \ result.add(smallest_index);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MIN_VALUE;\n \
    \       int smallestIndex = 0;\n        for (Long node : arr) {\n            if\
    \ (node % 2 == 0) {\n                if (smallestEven > node) {\n            \
    \        smallestEven = node;\n                    smallestIndex = arr.indexOf(node);\n\
    \                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallest_value = Long.MAX_VALUE;\n\
    \        int smallest_index = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if (value % 2 == 0) {\n\
    \                if (value < smallest_value) {\n                    smallest_value\
    \ = value;\n                    smallest_index = i;\n                }\n     \
    \       }\n        }\n        if (smallest_index != 0) {\n            result.add(smallest_value,\
    \ smallest_index);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        ArrayList<Long> evens = new ArrayList<>();\n\
    \        ArrayList<Long> indexes = new ArrayList<>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for(Long node : arr)\
    \ {\n            if(node % 2 == 0) {\n                evens.add(node);\n     \
    \           for(Long index : indexes) {\n                    if(node < smallestEven)\
    \ {\n                        smallestEven = node;\n                        smallestIndex\
    \ = index;\n                    }\n                }\n            } else {\n \
    \               for(Long index : indexes) {\n                    if(node < smallestEven)\
    \ {\n                        smallestEven = node;\n                        smallestIndex\
    \ = index;\n                    }\n                }\n            }\n        }\n\
    \        if(evens.size() > 0) {\n            smallestEven = evens.get(0);\n  \
    \          smallestIndex = indexes.get(0);\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        if (arr.isEmpty())\
    \ {\n            return result;\n        }\n        long smallest = arr.get(0);\n\
    \        int smallest_index = -1;\n        for (int i = 1; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallest > arr.get(i))\
    \ {\n                    smallest = arr.get(i);\n                    smallest_index\
    \ = i;\n                }\n            }\n        }\n        result.add(smallest);\n\
    \        result.add(smallest_index);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long smallest\
    \ = arr.get(0);\n        int smallest_index = -1;\n        for (int i = 1; i <\
    \ arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n               \
    \ if (smallest > arr.get(i)) {\n                    smallest = arr.get(i);\n \
    \                   smallest_index = i;\n                }\n            }\n  \
    \      }\n        if (smallest == 0) {\n            return result;\n        }\n\
    \        result.add(smallest);\n        result.add(smallest_index);\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ smallestEvenValue = 0;\n        int smallestIndex = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n        \
    \        if (smallestEvenValue < arr.get(i)) {\n                    smallestEvenValue\
    \ = arr.get(i);\n                    smallestIndex = i;\n                }\n \
    \           }\n        }\n        if (smallestEvenValue == 0) {\n            return\
    \ result;\n        }\n        ArrayList<Long> evenValues = new ArrayList<>();\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                evenValues.add(arr.get(i));\n            }\n    \
    \    }\n        evenValues.sort((a, b) -> a - b);\n        evenValues.stream().forEach((e)\
    \ -> {\n            if (smallestEvenValue == e) {\n                result.add(e);\n\
    \            }\n        });\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n    \
    \    int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if (value % 2 == 0) {\n   \
    \             if (value < smallestEven) {\n                    smallestEven =\
    \ value;\n                    smallestIndex = i;\n                }\n        \
    \    }\n        }\n        if (smallestEven != Long.MAX_VALUE) {\n           \
    \ res.add(smallestEven);\n            res.add(smallestIndex);\n        }\n   \
    \     return res;", "        ArrayList<Long> res = new ArrayList<>();\n      \
    \  long smallest_even_value = Long.MIN_VALUE;\n        long smallest_index = -1;\n\
    \        long smallest_value = Long.MAX_VALUE;\n        for (Long val : arr) {\n\
    \            if (val % 2 == 0) {\n                if (smallest_even_value < val)\
    \ {\n                    smallest_even_value = val;\n                    smallest_index\
    \ = arr.indexOf(val);\n                }\n                if (smallest_value <\
    \ val) {\n                    smallest_value = val;\n                }\n     \
    \       }\n        }\n        if (smallest_even_value == Long.MIN_VALUE) {\n \
    \           return res;\n        }\n        ArrayList<Long> evens = new ArrayList<>();\n\
    \        evens.add(smallest_even_value);\n        evens.add(smallest_index);\n\
    \        for (Long val : arr) {\n            if (val % 2 == 0) {\n           \
    \     if (smallest_even_value < val) {\n                    evens.add(val);\n\
    \                }\n            }\n        }\n        if (evens.size() == 0) {\n\
    \            return res;\n        }\n        evens.sort(Comparator.comparingLong(Long::longValue));\n\
    \        ArrayList<Long> evens_arr = new ArrayList<>();\n        for (Long val\
    \ : evens) {\n            evens_arr.add(val);\n        }\n        evens_arr.sort(Comparator.comparingLong(Long::longValue));\n\
    \        ArrayList<Long> evens_arr_res = new ArrayList<>();\n        for (Long\
    \ val : evens_arr) {\n            evens_arr_res\n                    .add(evens_arr_res.size()\
    \ - evens_arr_res.indexOf(val) + 1);\n        }\n        evens_arr_res.sort(Comparator.comparingLong(Long::longValue));\n\
    \        evens_arr_res.add(evens_arr_res.size() - evens_arr_res.indexOf(smallest_even_value)\
    \ + 1);\n        for (Long val : evens_arr) {\n            if (val % 2 == 0) {\n\
    \                if (smallest_even_value < val) {\n                    evens_arr_res.add(val);\n\
    \                }\n            }\n        }\n        if (evens_arr_res.size()\
    \ == 0) {\n            return res;\n        }\n        evens_arr_res.sort(Comparator.comparingLong(Long::longValue));\n\
    \        evens_arr_res.add(evens_arr_res.size() - evens_arr_res.indexOf(smallest_even_value)\
    \ + 1);\n        for (Long val : evens_arr) {\n            if (val % 2 == 0) {\n\
    \                if (smallest_even_value < val) {\n                    evens_arr_res.add(val);\n\
    \                }\n            }\n        }\n        if (evens_arr_res.size()\
    \ == 0) {\n            return res;\n        }\n        evens_arr_res.sort(Comparator.comparingLong(Long::longValue));\n\
    \        evens_arr_res.add(evens_arr_res.size() - evens_", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long smallest\
    \ = arr.get(0);\n        int smallest_index = -1;\n        for (int i = 1; i <\
    \ arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n               \
    \ if (smallest > arr.get(i)) {\n                    smallest = arr.get(i);\n \
    \                   smallest_index = i;\n                }\n            }\n  \
    \      }\n        if (smallest == 0) {\n            return result;\n        }\n\
    \        result.add(smallest);\n        result.add(smallest_index);\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for\
    \ (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n\
    \                if (smallestEven > arr.get(i)) {\n                    smallestEven\
    \ = arr.get(i);\n                    smallestIndex = i;\n                }\n \
    \           }\n        }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = -1;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (smallestEven > value)\
    \ {\n                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if (smallestEven\
    \ != Long.MAX_VALUE) {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smallestEven > arr.get(i)) {\n              \
    \      smallestEven = arr.get(i);\n                    smallestIndex = i;\n  \
    \              }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        ArrayList<Long> temp = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                smallestEven = Math.min(smallestEven, arr.get(i));\n\
    \                smallestIndex++;\n            } else {\n                temp.add(arr.get(i));\n\
    \            }\n        }\n        if (smallestEven != Long.MAX_VALUE) {\n   \
    \         result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        if (temp.isEmpty()) {\n            return result;\n      \
    \  }\n        ArrayList<Long> temp2 = new ArrayList<>();\n        for (int i =\
    \ 0; i < temp.size(); i++) {\n            temp2.add(temp.get(i));\n        }\n\
    \        ArrayList<Long> temp3 = new ArrayList<>();\n        for (int i = 0; i\
    \ < temp2.size(); i++) {\n            temp3.add(temp2.get(i));\n        }\n  \
    \      ArrayList<Long> temp4 = new ArrayList<>();\n        for (int i = 0; i <\
    \ temp3.size(); i++) {\n            temp4.add(temp3.get(i));\n        }\n    \
    \    ArrayList<Long> temp5 = new ArrayList<>();\n        for (int i = 0; i < temp4.size();\
    \ i++) {\n            temp5.add(temp4.get(i));\n        }\n        ArrayList<Long>\
    \ temp6 = new ArrayList<>();\n        for (int i = 0; i < temp5.size(); i++) {\n\
    \            temp6.add(temp5.get(i));\n        }\n        ArrayList<Long> temp7\
    \ = new ArrayList<>();\n        for (int i = 0; i < temp6.size(); i++) {\n   \
    \         temp7.add(temp6.get(i));\n        }\n        ArrayList<Long> temp8 =\
    \ new ArrayList<>();\n        for (int i = 0; i < temp7.size(); i++) {\n     \
    \       temp8.add(temp7.get(i));\n        }\n        ArrayList<Long> temp9 = new\
    \ ArrayList<>();\n        for (int i = 0; i < temp8.size(); i++) {\n         \
    \   temp9.add(temp8.get(i));\n        }\n        ArrayList<Long> temp10 = new\
    \ ArrayList<>();\n        for (int i = 0; i < temp9.size(); i++) {\n         \
    \   temp10.add(temp9.get(i));\n        }\n        ArrayList<Long> temp11 = new\
    \ ArrayList<>();\n        for (int i = 0; i < temp10.size(); i++) {\n        \
    \    temp11.add(temp10.get(i));\n        }\n        ArrayList<Long> temp12 = new\
    \ ArrayList<>();\n        for (int i = 0; i < temp11.size(); i++) {\n        \
    \    temp12.add(temp11.get(i));\n        }\n        ArrayList<Long> temp13 = new\
    \ ArrayList<>();\n        for (int i = 0; i < temp12.size(); i++) {\n        \
    \    temp13.add(temp12.get(i));\n        }\n        ArrayList<Long> temp14 = new\
    \ ArrayList<>();\n        for (int i = 0; i < temp13.size(); i++) {\n        \
    \    temp14.add(temp13.get(i));\n        }\n        ArrayList<Long> temp15 = new\
    \ ArrayList<>();\n        for (int i = 0; i < temp14.", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if(value % 2 == 0) {\n    \
    \            if(value < smallestEvenValue) {\n                    smallestEvenValue\
    \ = value;\n                    smallestIndex = i;\n                }\n      \
    \      }\n        }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallest_even_value = Long.MAX_VALUE;\n        int smallest_even_index\
    \ = 0;\n        int index = 0;\n        for(Long val : arr) {\n            if(val\
    \ % 2 == 0) {\n                if(smallest_even_value < val) {\n             \
    \       smallest_even_value = val;\n                    smallest_even_index =\
    \ index;\n                }\n                index++;\n            }\n       \
    \ }\n        if(smallest_even_value == Long.MAX_VALUE) {\n            return res;\n\
    \        }\n        ArrayList<Long> evens = new ArrayList<>();\n        for(Long\
    \ val : arr) {\n            if(val % 2 == 0) {\n                evens.add(val);\n\
    \            }\n        }\n        Collections.sort(evens);\n        for(Long\
    \ val : evens) {\n            if(val == smallest_even_value) {\n             \
    \   res.add(smallest_even_value);\n                res.add(smallest_even_index);\n\
    \            }\n        }\n        return res;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        long smallestEven = Long.MAX_VALUE;\n    \
    \    int smallestIndex = 0;\n        for(Long val : arr) {\n            if(val\
    \ % 2 == 0) {\n                if(smallestEven > val) {\n                    smallestEven\
    \ = val;\n                    smallestIndex = arr.indexOf(val);\n            \
    \    }\n            }\n        }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long smallest = arr.get(0);\n        int smallest_index\
    \ = -1;\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallest > arr.get(i)) {\n                \
    \    smallest = arr.get(i);\n                    smallest_index = i;\n       \
    \         }\n            }\n        }\n        result.add(smallest, smallest_index);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        Arrays.sort(arr);\n        if (arr.isEmpty()) {\n            return result;\n\
    \        }\n        long smallest = arr.get(0);\n        int smallest_index =\
    \ -1;\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallest > arr.get(i)) {\n                \
    \    smallest = arr.get(i);\n                    smallest_index = i;\n       \
    \         }\n            }\n        }\n        result.add(smallest);\n       \
    \ result.add(smallest_index);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallestEvenValue\
    \ > arr.get(i)) {\n                    smallestEvenValue = arr.get(i);\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smallestEven > arr.get(i)) {\n              \
    \      smallestEven = arr.get(i);\n                    smallestIndex = i;\n  \
    \              }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        Arrays.sort(arr);\n        long smallest =\
    \ arr.get(0);\n        int smallest_index = 0;\n        for (int i = 1; i < arr.size();\
    \ i++) {\n            if (arr.get(i) % 2 == 0) {\n                if (smallest\
    \ > arr.get(i)) {\n                    smallest = arr.get(i);\n              \
    \      smallest_index = i;\n                }\n            }\n        }\n    \
    \    res.add(smallest);\n        res.add(smallest_index);\n        return res;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long smallestEvenValue\
    \ = 0;\n        int smallestIndex = 0;\n        for (Long node : arr) {\n    \
    \        if (node.isEven()) {\n                if (smallestEvenValue < node.value)\
    \ {\n                    smallestEvenValue = node.value;\n                   \
    \ smallestIndex = arr.indexOf(node);\n                }\n            }\n     \
    \   }\n        if (smallestEvenValue == 0) {\n            return new ArrayList<>();\n\
    \        }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp2 = new ArrayList<Long>();\n        ArrayList<Long> temp3 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp4 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp5 = new ArrayList<Long>();\n        ArrayList<Long> temp6 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp7 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp8 = new ArrayList<Long>();\n        ArrayList<Long> temp9 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp10 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp11 = new ArrayList<Long>();\n        ArrayList<Long> temp12 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp13 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp14 = new ArrayList<Long>();\n        ArrayList<Long> temp15 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp16 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp17 = new ArrayList<Long>();\n        ArrayList<Long> temp18 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp19 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp20 = new ArrayList<Long>();\n        ArrayList<Long> temp21 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp22 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp23 = new ArrayList<Long>();\n        ArrayList<Long> temp24 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp25 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp26 = new ArrayList<Long>();\n        ArrayList<Long> temp27 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp28 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp29 = new ArrayList<Long>();\n        ArrayList<Long> temp30 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp31 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp32 = new ArrayList<Long>();\n        ArrayList<Long> temp33 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp34 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp35 = new ArrayList<Long>();\n        ArrayList<Long> temp36 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp37 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp38 = new ArrayList<Long>();\n        ArrayList<Long> temp39 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp40 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp41 = new ArrayList<Long>();\n        ArrayList<Long> temp42 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp43 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp44 = new ArrayList<Long>();\n        ArrayList<Long> temp45 = new ArrayList<Long>();\n\
    \        ArrayList<Long", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = 0;\n        int smallestIndex = 0;\n       \
    \ boolean isEven = false;\n        for (int i = 0; i < arr.size(); i++) {\n  \
    \          long value = arr.get(i);\n            if (isEven) {\n             \
    \   if (value < smallestEvenValue) {\n                    smallestEvenValue =\
    \ value;\n                    smallestIndex = i;\n                }\n        \
    \    } else if (value < smallestEvenValue) {\n                smallestEvenValue\
    \ = value;\n                smallestIndex = i;\n            }\n            if\
    \ (value % 2 == 0) {\n                isEven = true;\n            } else {\n \
    \               isEven = false;\n            }\n        }\n        if (smallestEvenValue\
    \ == 0) {\n            return result;\n        }\n        ArrayList<Long> temp\
    \ = new ArrayList<>();\n        for (int i = 0; i < arr.size(); i++) {\n     \
    \       if (arr.get(i) == smallestEvenValue) {\n                temp.add(smallestEvenValue);\n\
    \                temp.add(smallestIndex);\n            }\n        }\n        result.addAll(temp);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long smallest = arr.get(0);\n        int smallest_index\
    \ = 0;\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallest > arr.get(i)) {\n                \
    \    smallest = arr.get(i);\n                    smallest_index = i;\n       \
    \         }\n            }\n        }\n        result.add(smallest);\n       \
    \ result.add(smallest_index);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallest_value = Long.MAX_VALUE;\n\
    \        int smallest_index = -1;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if (value % 2 == 0) {\n\
    \                if (value < smallest_value) {\n                    smallest_value\
    \ = value;\n                    smallest_index = i;\n                }\n     \
    \       }\n        }\n        if (smallest_index != -1) {\n            result.add(smallest_value);\n\
    \            result.add(smallest_index);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long smallestEven = arr.get(0);\n        int smallestIndex = 0;\n   \
    \     for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) % 2 ==\
    \ 0) {\n                if (smallestEven < arr.get(i)) {\n                   \
    \ smallestEven = arr.get(i);\n                    smallestIndex = i;\n       \
    \         }\n            }\n        }\n        result.add(smallestEven);\n   \
    \     result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n    \
    \    int smallestIndex = 0;\n        for(long i : arr) {\n            if(i%2 ==\
    \ 0) {\n                if(i<smallestEven) {\n                    smallestEven\
    \ = i;\n                    smallestIndex = i;\n                }\n          \
    \  }\n        }\n        if(smallestEven == Long.MAX_VALUE) {\n            return\
    \ res;\n        }\n        for(long i : arr) {\n            if(i%2 == 0) {\n \
    \               if(i == smallestEven) {\n                    res.add(smallestEven);\n\
    \                    res.add(smallestIndex);\n                }\n            }\n\
    \        }\n        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (Long node : arr) {\n            if (node % 2 == 0) {\n         \
    \       if (smallestEven > node) {\n                    smallestEven = node;\n\
    \                    smallestIndex = arr.indexOf(node);\n                }\n \
    \           }\n        }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = -1;\n\
    \        for (Long value : arr) {\n            if (value % 2 == 0) {\n       \
    \         if (smallestEven > value) {\n                    smallestEven = value;\n\
    \                    smallestIndex = arr.indexOf(value);\n                }\n\
    \            }\n        }\n        if (smallestEven != Long.MAX_VALUE) {\n   \
    \         result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        if (arr.isEmpty()) {\n            return result;\n\
    \        }\n        long smallest = arr.get(0);\n        int smallest_index =\
    \ -1;\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallest > arr.get(i)) {\n                \
    \    smallest = arr.get(i);\n                    smallest_index = i;\n       \
    \         }\n            }\n        }\n        result.add(smallest);\n       \
    \ result.add(smallest_index);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       long smallestIndex = -1;\n        for(Long node : arr) {\n           \
    \ if(node.isEven()) {\n                if(smallestEven == Long.MAX_VALUE) {\n\
    \                    smallestEven = node;\n                    smallestIndex =\
    \ arr.indexOf(node);\n                } else if(smallestEven != node) {\n    \
    \                if(smallestEven == node) {\n                        smallestIndex\
    \ = arr.indexOf(node);\n                    } else {\n                       \
    \ smallestEven = node;\n                        smallestIndex = arr.indexOf(node);\n\
    \                    }\n                }\n            }\n        }\n        if(smallestEven\
    \ == Long.MAX_VALUE) {\n            return result;\n        }\n        for(Long\
    \ node : arr) {\n            if(node.isEven() && node != smallestEven) {\n   \
    \             result.add(smallestEven);\n                result.add(smallestIndex);\n\
    \                return result;\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        if (arr.isEmpty()) {\n            return result;\n        }\n       \
    \ long smallest = arr.get(0);\n        int smallest_index = 0;\n        for (int\
    \ i = 1; i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n    \
    \            if (smallest > arr.get(i)) {\n                    smallest = arr.get(i);\n\
    \                    smallest_index = i;\n                }\n            }\n \
    \       }\n        result.add(smallest);\n        result.add(smallest_index);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long smallestEven = arr.get(0);\n        int\
    \ smallestIndex = -1;\n        for (int i = 1; i < arr.size(); i++) {\n      \
    \      if (arr.get(i) % 2 == 0) {\n                if (smallestEven == arr.get(i))\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if (smallestEven\
    \ == 0) {\n            return result;\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallest_value = Long.MAX_VALUE;\n\
    \        int smallest_index = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if (value % 2 == 0) {\n\
    \                if (value < smallest_value) {\n                    smallest_value\
    \ = value;\n                    smallest_index = i;\n                }\n     \
    \       }\n        }\n        if (smallest_index != 0) {\n            result.add(smallest_value,\
    \ smallest_index);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallest_value = 0;\n        int smallest_index\
    \ = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long value\
    \ = arr.get(i);\n            if(value % 2 == 0) {\n                if(smallest_value\
    \ < value) {\n                    smallest_value = value;\n                  \
    \  smallest_index = i;\n                }\n            }\n        }\n        if(smallest_value\
    \ == 0) {\n            return result;\n        }\n        ArrayList<Long> temp\
    \ = new ArrayList<>();\n        for(int i = 0; i < arr.size(); i++) {\n      \
    \      long value = arr.get(i);\n            if(value % 2 == 0) {\n          \
    \      if(smallest_value == value) {\n                    temp.add(smallest_index);\n\
    \                }\n            }\n        }\n        if(temp.isEmpty()) {\n \
    \           return result;\n        }\n        for(int i = 0; i < temp.size();\
    \ i++) {\n            int index = temp.get(i);\n            ArrayList<Long> temp2\
    \ = new ArrayList<>();\n            for(int j = 0; j < arr.size(); j++) {\n  \
    \              long value = arr.get(j);\n                if(value % 2 == 0) {\n\
    \                    if(index == j) {\n                        temp2.add(smallest_index);\n\
    \                    }\n                }\n            }\n            result.addAll(temp2);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MIN_VALUE;\n        long smallestIndex = -1;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(smallestEven == Long.MIN_VALUE)\
    \ {\n                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                } else if(value < smallestEven) {\n                  \
    \  smallestEven = value;\n                    smallestIndex = i;\n           \
    \     }\n            }\n        }\n        result.add(smallestEven);\n       \
    \ result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        ArrayList<Long> temp = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                smallestEven = Math.min(smallestEven, arr.get(i));\n\
    \                smallestIndex++;\n            } else {\n                temp.add(arr.get(i));\n\
    \            }\n        }\n        if (smallestEven != Long.MAX_VALUE) {\n   \
    \         smallestEven = Math.min(smallestEven, Long.MAX_VALUE);\n           \
    \ result.add(smallestEven);\n            result.add(smallestIndex);\n        }\
    \ else {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        ArrayList<Long> temp = new ArrayList<>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        boolean foundSmallestEven\
    \ = false;\n        for(Long node : arr) {\n            if(!foundSmallestEven)\
    \ {\n                if(node % 2 == 0) {\n                    smallestEven = node;\n\
    \                    foundSmallestEven = true;\n                }\n          \
    \  }\n            else if(node == smallestEven) {\n                foundSmallestEven\
    \ = true;\n                smallestIndex = arr.indexOf(node);\n            }\n\
    \            else {\n                temp.add(node);\n            }\n        }\n\
    \        if(!foundSmallestEven) {\n            return result;\n        }\n   \
    \     for(Long node : temp) {\n            if(node % 2 == 0) {\n             \
    \   smallestEven = node;\n                foundSmallestEven = true;\n        \
    \    }\n        }\n        for(Long node : temp) {\n            if(node == smallestEven)\
    \ {\n                foundSmallestEven = true;\n                smallestIndex\
    \ = arr.indexOf(node);\n            }\n        }\n        if(!foundSmallestEven)\
    \ {\n            return result;\n        }\n        for(Long node : temp) {\n\
    \            if(node % 2 == 0) {\n                smallestEven = node;\n     \
    \           foundSmallestEven = true;\n            }\n        }\n        for(Long\
    \ node : temp) {\n            if(node == smallestEven) {\n                foundSmallestEven\
    \ = true;\n                smallestIndex = arr.indexOf(node);\n            }\n\
    \        }\n        if(!foundSmallestEven) {\n            return result;\n   \
    \     }\n        for(Long node : temp) {\n            if(node % 2 == 0) {\n  \
    \              smallestEven = node;\n                foundSmallestEven = true;\n\
    \            }\n        }\n        for(Long node : temp) {\n            if(node\
    \ == smallestEven) {\n                foundSmallestEven = true;\n            \
    \    smallestIndex = arr.indexOf(node);\n            }\n        }\n        if(!foundSmallestEven)\
    \ {\n            return result;\n        }\n        for(Long node : temp) {\n\
    \            if(node % 2 == 0) {\n                smallestEven = node;\n     \
    \           foundSmallestEven = true;\n            }\n        }\n        for(Long\
    \ node : temp) {\n            if(node == smallestEven) {\n                foundSmallestEven\
    \ = true;\n                smallestIndex = arr.indexOf(node);\n            }\n\
    \        }\n        if(!foundSmallestEven) {\n            return result;\n   \
    \     }\n        for(Long node : temp) {\n            if(node % 2 == 0) {\n  \
    \              smallestEven = node;\n                foundSmallest", "       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long smallestEvenValue\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for(int i = 0; i\
    \ < arr.size(); i++) {\n            long value = arr.get(i);\n            if(value\
    \ % 2 == 0) {\n                if(value < smallestEvenValue) {\n             \
    \       smallestEvenValue = value;\n                    smallestIndex = i;\n \
    \               }\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallestEvenValue\
    \ > arr.get(i)) {\n                    smallestEvenValue = arr.get(i);\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        if (smallestEvenValue == Long.MAX_VALUE) {\n            return result;\n\
    \        }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smallestEven > arr.get(i)) {\n              \
    \      smallestEven = arr.get(i);\n                    smallestIndex = i;\n  \
    \              }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = -1;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallestEven\
    \ > arr.get(i)) {\n                    smallestEven = arr.get(i);\n          \
    \          smallestIndex = i;\n                }\n            }\n        }\n \
    \       if (smallestEven != Long.MAX_VALUE) {\n            result.add(smallestEven);\n\
    \            result.add(smallestIndex);\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n             \
    \   if (smallestEven > arr.get(i)) {\n                    smallestEven = arr.get(i);\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp = new ArrayList<Long>();\n        long smallestEvenValue\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n             \
    \   smallestEvenValue = Math.min(smallestEvenValue, arr.get(i));\n           \
    \     smallestIndex = i;\n            }\n        }\n        if (smallestEvenValue\
    \ == Long.MAX_VALUE) {\n            return result;\n        }\n        temp.add(smallestEvenValue);\n\
    \        temp.add(smallestIndex);\n        result.add(temp);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long smallestEvenValue\
    \ = Long.MIN_VALUE;\n        long smallestIndex = 0;\n        boolean foundSmallestEvenValue\
    \ = false;\n        boolean foundSmallestIndex = false;\n        for(int i = 0;\
    \ i < arr.size(); i++) {\n            long value = arr.get(i);\n            if(!foundSmallestEvenValue\
    \ && value % 2 == 0) {\n                foundSmallestEvenValue = true;\n     \
    \           smallestEvenValue = value;\n                smallestIndex = i;\n \
    \           }\n            if(!foundSmallestIndex && value == smallestEvenValue)\
    \ {\n                foundSmallestIndex = true;\n                smallestIndex\
    \ = i;\n            }\n        }\n        if(foundSmallestEvenValue) {\n     \
    \       result.add(smallestEvenValue);\n            result.add(smallestIndex);\n\
    \        }\n        if(!foundSmallestEvenValue && !foundSmallestIndex) {\n   \
    \         result.add(smallestEvenValue);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = -1;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (value < smallestEven)\
    \ {\n                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if (smallestEven\
    \ != Long.MAX_VALUE) {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = -1;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smallestEven > arr.get(i)) {\n              \
    \      smallestEven = arr.get(i);\n                    smallestIndex = i;\n  \
    \              }\n            }\n        }\n        if (smallestEven != Long.MAX_VALUE)\
    \ {\n            res.add(smallestEven);\n            res.add(smallestIndex);\n\
    \        }\n        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (value < smallestEven)\
    \ {\n                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if (smallestEven\
    \ != Long.MAX_VALUE) {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smallestEven > arr.get(i)) {\n              \
    \      smallestEven = arr.get(i);\n                    smallestIndex = i;\n  \
    \              }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long smallestEvenValue\
    \ = arr.get(0);\n        int smallestIndex = 0;\n        for (int i = 1; i < arr.size();\
    \ i++) {\n            if (arr.get(i) % 2 == 0) {\n                if (smallestEvenValue\
    \ > arr.get(i)) {\n                    smallestEvenValue = arr.get(i);\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long minValue = Long.MAX_VALUE;\n        int minIndex = 0;\n        for\
    \ (Long val : arr) {\n            if (val % 2 == 0) {\n                if (val\
    \ < minValue) {\n                    minValue = val;\n                    minIndex\
    \ = arr.indexOf(val);\n                }\n            }\n        }\n        if\
    \ (minIndex != arr.size() - 1) {\n            res.add(minValue);\n           \
    \ res.add(minIndex);\n        } else {\n            res.add(minValue);\n     \
    \       res.add(0);\n        }\n        return res;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MIN_VALUE;\n\
    \        int smallestIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if(value % 2 == 0) {\n    \
    \            if(smallestEvenValue < value) {\n                    smallestEvenValue\
    \ = value;\n                    smallestIndex = i;\n                }\n      \
    \      }\n        }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> res = new ArrayList<Long>();\n\
    \        long smallest_even_val = Long.MAX_VALUE;\n        int smallest_even_index\
    \ = -1;\n        int size = arr.size();\n        for (int i = 0; i < size; i++)\
    \ {\n            long even_val = arr.get(i);\n            if (even_val % 2 ==\
    \ 0) {\n                if (even_val < smallest_even_val) {\n                \
    \    smallest_even_val = even_val;\n                    smallest_even_index =\
    \ i;\n                }\n            }\n        }\n        if (smallest_even_val\
    \ == Long.MAX_VALUE) {\n            return res;\n        }\n        ArrayList<Long>\
    \ evens = new ArrayList<Long>();\n        for (int i = 0; i < size; i++) {\n \
    \           long even_val = arr.get(i);\n            if (even_val % 2 == 0) {\n\
    \                evens.add(even_val);\n            }\n        }\n        Collections.sort(evens);\n\
    \        if (evens.size() == 1) {\n            ArrayList<Long> evens_sorted =\
    \ new ArrayList<Long>();\n            evens_sorted.add(evens.get(0));\n      \
    \      evens_sorted.add(evens.get(0));\n            evens_sorted.add(evens.get(0));\n\
    \            evens_sorted.add(evens.get(0));\n            evens_sorted.add(evens.get(0));\n\
    \            evens_sorted.add(evens.get(0));\n            evens_sorted.add(evens.get(0));\n\
    \            evens_sorted.add(evens.get(0));\n            evens_sorted.add(evens.get(0));\n\
    \            evens_sorted.add(evens.get(0));\n            evens_sorted.add(evens.get(0));\n\
    \            evens_sorted.add(evens.get(0));\n            evens_sorted.add(evens.get(0));\n\
    \            evens_sorted.add(evens.get(0));\n            evens_sorted.add(evens.get(0));\n\
    \            evens_sorted.add(evens.get(0));\n            evens_sorted.add(evens.get(0));\n\
    \            evens_sorted.add(evens.get(0));\n            evens_sorted.add(evens.get(0));\n\
    \            evens_sorted.add(evens.get(0));\n            evens_sorted.add(evens.get(0));\n\
    \            evens_sorted.add(evens.get(0));\n            evens_sorted.add(evens.get(0));\n\
    \            evens_sorted.add(evens.get(0));\n            evens_sorted.add(evens.get(0));\n\
    \            evens_sorted.add(evens.get(0));\n            evens_sorted.add(evens.get(0));\n\
    \            evens_sorted.add(evens.get(0));\n            evens_sorted.add(evens.get(0));\n\
    \            evens_sorted.add(evens.get(0));\n            even", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MIN_VALUE;\n\
    \        int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallestEvenValue\
    \ > arr.get(i)) {\n                    smallestEvenValue = arr.get(i);\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (Long value : arr) {\n            if (value % 2 == 0) {\n       \
    \         if (smallestEven > value) {\n                    smallestEven = value;\n\
    \                    smallestIndex = arr.indexOf(value);\n                }\n\
    \            }\n        }\n        if (smallestEven != Long.MAX_VALUE) {\n   \
    \         result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        Long smallestEvenValue = arr.get(0);\n   \
    \     int smallestIndex = 0;\n        for (int i = 1; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                if (smallestEvenValue\
    \ < arr.get(i)) {\n                    smallestEvenValue = arr.get(i);\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (Long node : arr) {\n            if (node.isEven()) {\n         \
    \       if (node.compareTo(smallestEven) < 0) {\n                    smallestEven\
    \ = node;\n                    smallestIndex = arr.indexOf(node);\n          \
    \      }\n            }\n        }\n        result.add(smallestEven);\n      \
    \  result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long smallestEven\
    \ = arr.get(0);\n        int smallestIndex = -1;\n        for (int i = 1; i <\
    \ arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n               \
    \ if (smallestEven == arr.get(i)) {\n                    smallestIndex = i;\n\
    \                    smallestEven = arr.get(i);\n                } else {\n  \
    \                  smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if (smallestIndex\
    \ != -1) {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallest_even_value = Long.MAX_VALUE;\n        int smallest_even_index\
    \ = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            long value\
    \ = arr.get(i);\n            if (value % 2 == 0) {\n                if (smallest_even_value\
    \ < value) {\n                    smallest_even_value = value;\n             \
    \       smallest_even_index = i;\n                }\n            }\n        }\n\
    \        if (smallest_even_value == Long.MAX_VALUE) {\n            return res;\n\
    \        }\n        res.add(smallest_even_value);\n        res.add(smallest_even_index);\n\
    \        return res;", "        ArrayList<Long> res = new ArrayList<>();\n   \
    \     long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n  \
    \      for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(value < smallestEven) {\n\
    \                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if(smallestEven !=\
    \ Long.MAX_VALUE) {\n            res.add(smallestEven);\n            res.add(smallestIndex);\n\
    \        }\n        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = 0;\n        long smallestIndex = 0;\n      \
    \  long currentValue = 0;\n        long currentIndex = 0;\n        boolean found\
    \ = false;\n        for (long value : arr) {\n            if (value % 2 == 0)\
    \ {\n                currentValue = value;\n                found = true;\n  \
    \          }\n        }\n        if (found) {\n            for (long value : arr)\
    \ {\n                if (value % 2 == 0) {\n                    if (currentValue\
    \ < smallestEvenValue) {\n                        smallestEvenValue = currentValue;\n\
    \                        smallestIndex = currentIndex;\n                    }\n\
    \                    currentValue = value;\n                    currentIndex++;\n\
    \                }\n            }\n            result.add(smallestEvenValue);\n\
    \            result.add(smallestIndex);\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long smallestEven\
    \ = Long.MIN_VALUE;\n        long smallestIndex = -1;\n        long currentEven\
    \ = Long.MIN_VALUE;\n        long currentIndex = -1;\n        for(int i = 0; i\
    \ < arr.size(); i++) {\n            currentEven = arr.get(i);\n            currentIndex\
    \ = i;\n            if(currentEven % 2 == 0) {\n                smallestEven =\
    \ currentEven;\n                smallestIndex = currentIndex;\n            }\n\
    \        }\n        if(smallestEven == Long.MIN_VALUE) {\n            return result;\n\
    \        }\n        for(int i = 0; i < arr.size(); i++) {\n            currentEven\
    \ = arr.get(i);\n            currentIndex = i;\n            if(currentEven % 2\
    \ == 0) {\n                if(currentEven == smallestEven) {\n               \
    \     result.add(smallestEven);\n                    result.add(smallestIndex);\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   ArrayList<Long> result = new ArrayList<>();\n        long smallestEvenValue\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for(int i = 0; i\
    \ < arr.size(); i++) {\n            long value = arr.get(i);\n            if(value\
    \ % 2 == 0) {\n                if(value < smallestEvenValue) {\n             \
    \       smallestEvenValue = value;\n                    smallestIndex = i;\n \
    \               }\n            }\n        }\n        if(smallestEvenValue == Long.MAX_VALUE)\
    \ {\n            return result;\n        }\n        ArrayList<Long> evenValues\
    \ = new ArrayList<>();\n        for(int i = 0; i < arr.size(); i++) {\n      \
    \      long value = arr.get(i);\n            if(value % 2 == 0) {\n          \
    \      evenValues.add(value);\n            }\n        }\n        Arrays.sort(evenValues);\n\
    \        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long smallest = arr.get(0);\n        int smallest_index\
    \ = -1;\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallest > arr.get(i)) {\n                \
    \    smallest = arr.get(i);\n                    smallest_index = i;\n       \
    \         }\n            }\n        }\n        result.add(smallest);\n       \
    \ result.add(smallest_index);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if (value % 2 == 0) {\n   \
    \             if (value < smallestEven) {\n                    smallestEven =\
    \ value;\n                    smallestIndex = i;\n                }\n        \
    \    }\n        }\n        if (smallestEven != Long.MAX_VALUE) {\n           \
    \ result.add(smallestEven);\n            result.add(smallestIndex);\n        }\n\
    \        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallest_even_value = Long.MAX_VALUE;\n        int smallest_even_index\
    \ = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallest_even_value < arr.get(i)) {\n     \
    \               smallest_even_value = arr.get(i);\n                    smallest_even_index\
    \ = i;\n                }\n            }\n        }\n        if (smallest_even_value\
    \ == Long.MAX_VALUE) {\n            return res;\n        }\n        res.add(smallest_even_value);\n\
    \        res.add(smallest_even_index);\n        return res;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                if (smallestEven > arr.get(i))\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n    \
    \    int smallestIndex = -1;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                if (smallestEven == Long.MAX_VALUE)\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                } else if (arr.get(i) < smallestEven) {\n            \
    \        smallestEven = arr.get(i);\n                    smallestIndex = i;\n\
    \                }\n            }\n        }\n        if (smallestEven == Long.MAX_VALUE)\
    \ {\n            return res;\n        }\n        res.add(smallestEven);\n    \
    \    res.add(smallestIndex);\n        return res;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        Arrays.sort(arr);\n        long smallest = arr.get(0);\n\
    \        int smallest_index = -1;\n        for (int i = 1; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallest > arr.get(i))\
    \ {\n                    smallest = arr.get(i);\n                    smallest_index\
    \ = i;\n                }\n            }\n        }\n        result.add(smallest);\n\
    \        result.add(smallest_index);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            int index = i;\n          \
    \  while(index > 0 && value % 2 == 0) {\n                value /= 2;\n       \
    \         index--;\n            }\n            if(value == smallestEven) {\n \
    \               result.add(smallestEven);\n                result.add(index);\n\
    \            }\n            else if(value < smallestEven) {\n                smallestEven\
    \ = value;\n                smallestIndex = index;\n            }\n        }\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (Long val : arr) {\n            if (val % 2 == 0) {\n           \
    \     if (smallestEven > val) {\n                    smallestEven = val;\n   \
    \                 smallestIndex = arr.indexOf(val);\n                }\n     \
    \       }\n        }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MIN_VALUE;\n        int smallestIndex = 0;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(smallestEven > value) {\n\
    \                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        ArrayList<Long> temp = new ArrayList<>();\n\
    \        long smallestEvenValue = 0;\n        int smallestIndex = 0;\n       \
    \ for(long value : arr) {\n            if(value % 2 == 0) {\n                smallestEvenValue\
    \ = value;\n                smallestIndex = arr.indexOf(value);\n            }\n\
    \        }\n        if(smallestEvenValue == 0) {\n            return result;\n\
    \        }\n        for(long value : arr) {\n            if(value % 2 == 0) {\n\
    \                temp.add(value);\n            }\n        }\n        Collections.sort(temp);\n\
    \        for(long value : temp) {\n            if(value % 2 == 0) {\n        \
    \        result.add(smallestEvenValue, smallestIndex);\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MIN_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long value =\
    \ arr.get(i);\n            if (value % 2 == 0) {\n                if (smallestEvenValue\
    \ < value) {\n                    smallestEvenValue = value;\n               \
    \     smallestIndex = i;\n                }\n            }\n        }\n      \
    \  result.add(smallestEvenValue);\n        result.add(smallestIndex);\n      \
    \  return result;", "        ArrayList<Long> result = new ArrayList<>();\n   \
    \     Arrays.sort(arr);\n        long smallest = arr.get(0);\n        int smallest_index\
    \ = 0;\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallest > arr.get(i)) {\n                \
    \    smallest = arr.get(i);\n                    smallest_index = i;\n       \
    \         }\n            }\n        }\n        result.add(smallest);\n       \
    \ result.add(smallest_index);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if(value % 2 == 0) {\n    \
    \            if(value < smallestEvenValue) {\n                    smallestEvenValue\
    \ = value;\n                    smallestIndex = i;\n                }\n      \
    \      }\n        }\n        if(smallestEvenValue == Long.MAX_VALUE) {\n     \
    \       return result;\n        }\n        ArrayList<Long> evenValues = new ArrayList<>();\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                evenValues.add(value);\n  \
    \          }\n        }\n        Collections.sort(evenValues);\n        for(int\
    \ i = 0; i < evenValues.size(); i++) {\n            if(evenValues.get(i) == smallestEvenValue)\
    \ {\n                result.add(smallestEvenValue);\n                result.add(smallestIndex);\n\
    \                break;\n            }\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long smallestEvenValue\
    \ = 0;\n        long smallestIndex = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            if (arr.get(i) % 2 == 0) {\n                if (smallestEvenValue\
    \ == 0) {\n                    smallestEvenValue = arr.get(i);\n             \
    \       smallestIndex = i;\n                } else if (arr.get(i) < smallestEvenValue)\
    \ {\n                    smallestEvenValue = arr.get(i);\n                   \
    \ smallestIndex = i;\n                }\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        ArrayList<Long> evens = new ArrayList<>();\n\
    \        ArrayList<Long> indexes = new ArrayList<>();\n        ArrayList<Long>\
    \ evenIndexes = new ArrayList<>();\n        for(Long e : arr) {\n            if(e\
    \ % 2 == 0) {\n                evens.add(e);\n                evenIndexes.add(arr.indexOf(e));\n\
    \            } else {\n                indexes.add(e);\n            }\n      \
    \  }\n        Collections.sort(evens);\n        Collections.sort(indexes);\n \
    \       Collections.sort(evenIndexes);\n        Long smallestEven = evens.get(0);\n\
    \        Long smallestIndex = indexes.get(0);\n        for(Long e : evens) {\n\
    \            if(e == smallestEven) {\n                smallestIndex = indexes.get(e);\n\
    \            }\n        }\n        for(Long e : evenIndexes) {\n            if(e\
    \ == smallestIndex) {\n                smallestEven = evens.get(e.intValue());\n\
    \            }\n        }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long value =\
    \ arr.get(i);\n            if(value % 2 == 0) {\n                if(value < smallestEvenValue)\
    \ {\n                    smallestEvenValue = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n    \
    \    int smallestIndex = -1;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if (value % 2 == 0) {\n   \
    \             if (smallestEven == Long.MAX_VALUE) {\n                    smallestEven\
    \ = value;\n                    smallestIndex = i;\n                } else if\
    \ (value < smallestEven) {\n                    smallestEven = value;\n      \
    \              smallestIndex = i;\n                }\n            }\n        }\n\
    \        if (smallestEven == Long.MAX_VALUE) {\n            return res;\n    \
    \    }\n        res.add(smallestEven);\n        res.add(smallestIndex);\n    \
    \    return res;", "        ArrayList<Long> result = new ArrayList<>();\n    \
    \    long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        boolean foundSmallestEvenValue = false;\n        for (int i = 0; i <\
    \ arr.size(); i++) {\n            long value = arr.get(i);\n            if (value\
    \ % 2 == 0) {\n                if (!foundSmallestEvenValue) {\n              \
    \      smallestEvenValue = value;\n                    smallestIndex = i;\n  \
    \                  foundSmallestEvenValue = true;\n                }\n       \
    \     } else if (foundSmallestEvenValue) {\n                if (value < smallestEvenValue)\
    \ {\n                    smallestEvenValue = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if (smallestEvenValue\
    \ == Long.MAX_VALUE) {\n            return result;\n        }\n        ArrayList<Long>\
    \ evenValues = new ArrayList<>();\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                evenValues.add(arr.get(i));\n\
    \            }\n        }\n        evenValues.sort(Comparator.comparingLong(Long::longValue));\n\
    \        evenValues.stream().forEach((e) -> {\n            if (smallestEvenValue\
    \ == e) {\n                result.add(e);\n            }\n        });\n      \
    \  return result;", "        ArrayList<Long> result = new ArrayList<>();\n   \
    \     long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (Long node : arr) {\n            if (node % 2 == 0) {\n         \
    \       if (smallestEvenValue < node) {\n                    smallestEvenValue\
    \ = node;\n                    smallestIndex = arr.indexOf(node);\n          \
    \      }\n            }\n        }\n        if (smallestEvenValue == Long.MAX_VALUE)\
    \ {\n            return result;\n        }\n        ArrayList<Long> evenValues\
    \ = new ArrayList<>();\n        evenValues.add(smallestEvenValue);\n        evenValues.addAll(arr.subList(0,\
    \ smallestIndex));\n        evenValues.addAll(arr.subList(smallestIndex + 1, arr.size()));\n\
    \        result.addAll(evenValues);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long smallest\
    \ = arr.get(0);\n        int smallest_index = 0;\n        for (int i = 1; i <\
    \ arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n               \
    \ if (smallest > arr.get(i)) {\n                    smallest = arr.get(i);\n \
    \                   smallest_index = i;\n                }\n            }\n  \
    \      }\n        result.add(smallest, smallest_index);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        long smallestEvenValue\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for(int i = 0; i\
    \ < arr.size(); i++) {\n            long value = arr.get(i);\n            if(value\
    \ % 2 == 0) {\n                if(value < smallestEvenValue) {\n             \
    \       smallestEvenValue = value;\n                    smallestIndex = i;\n \
    \               }\n            }\n        }\n        if(smallestEvenValue == Long.MAX_VALUE)\
    \ {\n            return result;\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = 0;\n        int\
    \ smallestIndex = 0;\n        for(Long value : arr) {\n            if(value %\
    \ 2 == 0) {\n                smallestEvenValue = value;\n                smallestIndex\
    \ = arr.indexOf(value);\n            }\n        }\n        if(smallestEvenValue\
    \ == 0) {\n            return result;\n        }\n        for(Long value : arr)\
    \ {\n            if(value % 2 == 0 && value < smallestEvenValue) {\n         \
    \       smallestEvenValue = value;\n                smallestIndex = arr.indexOf(value);\n\
    \            }\n        }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long smallestEven = arr.get(0);\n        int\
    \ smallestIndex = 0;\n        for (int i = 1; i < arr.size(); i++) {\n       \
    \     if (arr.get(i) % 2 == 0) {\n                if (smallestEven > arr.get(i))\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n    \
    \    int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                if (smallestEven > arr.get(i))\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        res.add(smallestEven);\n\
    \        res.add(smallestIndex);\n        return res;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        ArrayList<Long> temp = new ArrayList<>();\n\
    \        long smallest_even_value = Long.MAX_VALUE;\n        long smallest_even_index\
    \ = 0;\n        long smallest_value = 0;\n        int smallest_index = 0;\n  \
    \      for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) % 2\
    \ == 0) {\n                smallest_even_value = arr.get(i);\n               \
    \ smallest_even_index = i;\n            }\n            if (arr.get(i) < smallest_even_value)\
    \ {\n                smallest_value = arr.get(i);\n                smallest_index\
    \ = i;\n            }\n        }\n        if (smallest_even_index != 0) {\n  \
    \          temp.add(smallest_even_value);\n            temp.add(smallest_even_index);\n\
    \            result.add(temp);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        ArrayList<Long> temp = new ArrayList<Long>();\n\
    \        long smallestEvenValue = 0;\n        long smallestIndex = 0;\n      \
    \  long tempValue = 0;\n        boolean isSmallestEvenValue = false;\n       \
    \ boolean isSmallestIndex = false;\n        boolean isSmallestValue = false;\n\
    \        boolean isSmallestIndex = false;\n        boolean isSmallestEvenValue\
    \ = false;\n        boolean isSmallestIndex = false;\n        boolean isSmallestValue\
    \ = false;\n        boolean isSmallestIndex = false;\n        boolean isSmallestEvenValue\
    \ = false;\n        boolean isSmallestIndex = false;\n        boolean isSmallestValue\
    \ = false;\n        boolean isSmallestIndex = false;\n        boolean isSmallestEvenValue\
    \ = false;\n        boolean isSmallestIndex = false;\n        boolean isSmallestValue\
    \ = false;\n        boolean isSmallestIndex = false;\n        boolean isSmallestEvenValue\
    \ = false;\n        boolean isSmallestIndex = false;\n        boolean isSmallestValue\
    \ = false;\n        boolean isSmallestIndex = false;\n        boolean isSmallestEvenValue\
    \ = false;\n        boolean isSmallestIndex = false;\n        boolean isSmallestValue\
    \ = false;\n        boolean isSmallestIndex = false;\n        boolean isSmallestEvenValue\
    \ = false;\n        boolean isSmallestIndex = false;\n        boolean isSmallestValue\
    \ = false;\n        boolean isSmallestIndex = false;\n        boolean isSmallestEvenValue\
    \ = false;\n        boolean isSmallestIndex = false;\n        boolean isSmallestValue\
    \ = false;\n        boolean isSmallestIndex = false;\n        boolean isSmallestEvenValue\
    \ = false;\n        boolean isSmallestIndex = false;\n        boolean isSmallestValue\
    \ = false;\n        boolean isSmallestIndex = false;\n        boolean isSmallestEvenValue\
    \ = false;\n        boolean isSmallestIndex = false;\n        boolean isSmallestValue\
    \ = false;\n        boolean isSmallestIndex = false;\n        boolean isSmallestEvenValue\
    \ = false;\n        boolean isSmallestIndex = false;\n        boolean isSmallestValue\
    \ = false;\n        boolean isSmallestIndex = false;\n        boolean isSmallestEvenValue\
    \ = false;\n        boolean isSmallestIndex = false;\n        boolean isSmallestValue\
    \ = false;\n        boolean isSmallestIndex = false;\n        boolean isSmallestEvenValue\
    \ = false;\n        boolean isSmallestIndex = false;\n        boolean isSmallestValue\
    \ = false;", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ smallestEven = Long.MIN_VALUE;\n        long smallestIndex = -1;\n        for\
    \ (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n\
    \                if (smallestEven == Long.MIN_VALUE) {\n                    smallestEven\
    \ = arr.get(i);\n                    smallestIndex = i;\n                } else\
    \ if (arr.get(i) < smallestEven) {\n                    smallestEven = arr.get(i);\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long smallest_value = arr.get(0);\n      \
    \  long smallest_index = 0;\n        for (int i = 1; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                if (smallest_value <\
    \ arr.get(i)) {\n                    smallest_value = arr.get(i);\n          \
    \          smallest_index = i;\n                }\n            }\n        }\n\
    \        result.add(smallest_value, smallest_index);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long smallestEven\
    \ = Long.MIN_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n             \
    \   if (smallestEven == Long.MIN_VALUE) {\n                    smallestEven =\
    \ arr.get(i);\n                    smallestIndex = i;\n                } else\
    \ if (arr.get(i) < smallestEven) {\n                    smallestEven = arr.get(i);\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MIN_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (smallestEven > value)\
    \ {\n                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if (smallestEven\
    \ != Long.MIN_VALUE) {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MIN_VALUE;\n        int smallestIndex = -1;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (smallestEven == Long.MIN_VALUE)\
    \ {\n                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                } else if (value < smallestEven) {\n                 \
    \   smallestEven = value;\n                    smallestIndex = i;\n          \
    \      }\n            }\n        }\n        if (smallestEven == Long.MIN_VALUE)\
    \ {\n            return result;\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if (value % 2 == 0) {\n   \
    \             if (value < smallestEven) {\n                    smallestEven =\
    \ value;\n                    smallestIndex = i;\n                }\n        \
    \    }\n        }\n        if (smallestEven != Long.MAX_VALUE) {\n           \
    \ result.add(smallestEven);\n            result.add(smallestIndex);\n        }\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smallestEven > arr.get(i)) {\n              \
    \      smallestEven = arr.get(i);\n                    smallestIndex = i;\n  \
    \              }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallestEvenValue\
    \ > arr.get(i)) {\n                    smallestEvenValue = arr.get(i);\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long smallestEvenValue = arr.get(0);\n   \
    \     int smallestIndex = 0;\n        for (int i = 1; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                if (smallestEvenValue\
    \ < arr.get(i)) {\n                    smallestEvenValue = arr.get(i);\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = -1;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (smallestEven == Long.MAX_VALUE)\
    \ {\n                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                } else if (value < smallestEven) {\n                 \
    \   smallestEven = value;\n                    smallestIndex = i;\n          \
    \      }\n            }\n        }\n        if (smallestEven == Long.MAX_VALUE)\
    \ {\n            return result;\n        }\n        ArrayList<Long> evens = new\
    \ ArrayList<>();\n        for (int i = 0; i < arr.size(); i++) {\n           \
    \ long value = arr.get(i);\n            if (value % 2 == 0) {\n              \
    \  evens.add(value);\n            }\n        }\n        Collections.sort(evens);\n\
    \        result.add(smallestEven);\n        result.add(smallestIndex);\n     \
    \   return result;", "        ArrayList<Long> result = new ArrayList<>();\n  \
    \      long smallestEvenValue = 0;\n        long smallestIndex = 0;\n        boolean\
    \ foundSmallestEvenValue = false;\n        boolean foundSmallestIndex = false;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (!foundSmallestEvenValue)\
    \ {\n                    smallestEvenValue = value;\n                    foundSmallestEvenValue\
    \ = true;\n                }\n                else {\n                    if (smallestEvenValue\
    \ == value) {\n                        foundSmallestEvenValue = true;\n      \
    \                  smallestIndex = i;\n                    }\n               \
    \ }\n            }\n        }\n        if (foundSmallestEvenValue) {\n       \
    \     result.add(smallestEvenValue);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = 0;\n        int smallestIndex = 0;\n       \
    \ for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0)\
    \ {\n                if (smallestEvenValue == 0) {\n                    smallestEvenValue\
    \ = arr.get(i);\n                    smallestIndex = i;\n                } else\
    \ {\n                    if (arr.get(i) < smallestEvenValue) {\n             \
    \           smallestEvenValue = arr.get(i);\n                        smallestIndex\
    \ = i;\n                    }\n                }\n            }\n        }\n \
    \       result.add(smallestEvenValue);\n        result.add(smallestIndex);\n \
    \       return result;", "        ArrayList<Long> res = new ArrayList<>();\n \
    \       long min = Long.MAX_VALUE;\n        int minIndex = 0;\n        for (int\
    \ i = 0; i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n    \
    \            min = Math.min(min, arr.get(i));\n                minIndex = i;\n\
    \            }\n        }\n        if (min == Long.MAX_VALUE) {\n            return\
    \ res;\n        }\n        ArrayList<Long> temp = new ArrayList<>();\n       \
    \ for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) == min) {\n\
    \                temp.add(arr.get(i));\n            }\n        }\n        if (temp.size()\
    \ == 0) {\n            return res;\n        }\n        Collections.sort(temp);\n\
    \        res.add(min);\n        res.add(minIndex);\n        return res;", "  \
    \      ArrayList<Long> res = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallestEven\
    \ > arr.get(i)) {\n                    smallestEven = arr.get(i);\n          \
    \          smallestIndex = i;\n                }\n            }\n        }\n \
    \       res.add(smallestEven);\n        res.add(smallestIndex);\n        return\
    \ res;", "        ArrayList<Long> result = new ArrayList<Long>();\n        long\
    \ smallestEven = Long.MAX_VALUE;\n        int smallestIndex = -1;\n        for\
    \ (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n\
    \                if (smallestEven > arr.get(i)) {\n                    smallestEven\
    \ = arr.get(i);\n                    smallestIndex = i;\n                }\n \
    \           }\n        }\n        if (smallestEven != Long.MAX_VALUE) {\n    \
    \        result.add(smallestEven);\n            result.add(smallestIndex);\n \
    \       }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(value < smallestEven) {\n\
    \                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for(Long val : arr) {\n            if(val\
    \ % 2 == 0) {\n                if(smallestEven > val) {\n                    smallestEven\
    \ = val;\n                    smallestIndex = arr.indexOf(val);\n            \
    \    }\n            }\n        }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallest_even_value = Long.MIN_VALUE;\n        int smallest_even_index\
    \ = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallest_even_value < arr.get(i)) {\n     \
    \               smallest_even_value = arr.get(i);\n                    smallest_even_index\
    \ = i;\n                }\n            }\n        }\n        res.add(smallest_even_value);\n\
    \        res.add(smallest_even_index);\n        return res;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        ArrayList<Long> temp = new ArrayList<>();\n\
    \        long smallestEvenValue = 0;\n        long smallestIndex = 0;\n      \
    \  boolean foundSmallestEvenValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        for(int i = 0; i < arr.size(); i++) {\n            long value\
    \ = arr.get(i);\n            if(value % 2 == 0) {\n                smallestEvenValue\
    \ = value;\n                foundSmallestEvenValue = true;\n            }\n  \
    \          if(!foundSmallestEvenValue) {\n                smallestIndex = i;\n\
    \                foundSmallestEvenValue = true;\n            }\n        }\n  \
    \      if(foundSmallestEvenValue) {\n            smallestEvenValue = smallestEvenValue\
    \ + 1;\n            smallestIndex = smallestIndex + 1;\n        }\n        if(smallestEvenValue\
    \ == 0) {\n            result.add(0);\n            result.add(smallestIndex);\n\
    \            return result;\n        }\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            long value = arr.get(i);\n            if(value % 2 == 0)\
    \ {\n                if(smallestEvenValue == value) {\n                    result.add(smallestEvenValue);\n\
    \                    result.add(smallestIndex);\n                    return result;\n\
    \                }\n                if(smallestEvenValue > value) {\n        \
    \            result.add(smallestEvenValue);\n                    result.add(smallestIndex);\n\
    \                    return result;\n                }\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long value =\
    \ arr.get(i);\n            if((value % 2) == 0) {\n                if(value <\
    \ smallestEvenValue) {\n                    smallestEvenValue = value;\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        if(smallestEvenValue != Long.MAX_VALUE) {\n            result.add(smallestEvenValue);\n\
    \            result.add(smallestIndex);\n        }\n        return result;", " \
    \       ArrayList<Long> res = new ArrayList<>();\n        long smallestEven =\
    \ Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (Long node : arr)\
    \ {\n            if (node % 2 == 0) {\n                if (smallestEven > node)\
    \ {\n                    smallestEven = node;\n                    smallestIndex\
    \ = arr.indexOf(node);\n                }\n            }\n        }\n        if\
    \ (smallestEven != Long.MAX_VALUE) {\n            res.add(smallestEven);\n   \
    \         res.add(smallestIndex);\n        }\n        return res;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        ArrayList<Long> temp = new ArrayList<Long>();\n\
    \        long smallestEvenValue = 0;\n        long smallestIndex = 0;\n      \
    \  boolean foundSmallestEvenValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        for(Long node : arr) {\n            if(node % 2 == 0) {\n\
    \                foundSmallestEvenValue = true;\n                smallestEvenValue\
    \ = node;\n                foundSmallestIndex = true;\n            }\n       \
    \     else if(foundSmallestEvenValue) {\n                if(node < smallestEvenValue)\
    \ {\n                    foundSmallestEvenValue = false;\n                   \
    \ smallestEvenValue = node;\n                    foundSmallestIndex = true;\n\
    \                }\n                else if(node == smallestEvenValue) {\n   \
    \                 foundSmallestIndex = true;\n                }\n            }\n\
    \            else if(foundSmallestIndex) {\n                if(node < smallestIndex)\
    \ {\n                    foundSmallestIndex = false;\n                    smallestIndex\
    \ = node;\n                }\n            }\n        }\n        if(foundSmallestEvenValue)\
    \ {\n            result.add(smallestEvenValue);\n            result.add(smallestIndex);\n\
    \        }\n        else if(foundSmallestIndex) {\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (Long node : arr) {\n            if (node.isEven()) {\n         \
    \       if (smallestEven > node.value) {\n                    smallestEven = node.value;\n\
    \                    smallestIndex = arr.indexOf(node);\n                }\n \
    \           }\n        }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long smallestEvenValue = arr.get(0);\n   \
    \     long smallestIndex = 0;\n        boolean foundSmallestEvenValue = false;\n\
    \        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (!foundSmallestEvenValue) {\n                \
    \    smallestEvenValue = arr.get(i);\n                    smallestIndex = i;\n\
    \                    foundSmallestEvenValue = true;\n                }\n     \
    \       } else if (foundSmallestEvenValue) {\n                result.add(smallestEvenValue);\n\
    \                result.add(smallestIndex);\n                break;\n        \
    \    }\n        }\n        return result;", "        ArrayList<Long> result =\
    \ new ArrayList<Long>();\n        Arrays.sort(arr);\n        long smallest_value\
    \ = arr.get(0);\n        int smallest_index = 0;\n        for (int i = 1; i <\
    \ arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n               \
    \ if (arr.get(i) < smallest_value) {\n                    smallest_value = arr.get(i);\n\
    \                    smallest_index = i;\n                }\n            }\n \
    \       }\n        result.add(smallest_value);\n        result.add(smallest_index);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long smallest = arr.get(0);\n        int smallest_index\
    \ = -1;\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallest > arr.get(i)) {\n                \
    \    smallest = arr.get(i);\n                    smallest_index = i;\n       \
    \         }\n            }\n        }\n        if (smallest == 0) {\n        \
    \    return result;\n        }\n        result.add(smallest);\n        result.add(smallest_index);\n\
    \        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallestEven = Long.MIN_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smallestEven > arr.get(i)) {\n              \
    \      smallestEven = arr.get(i);\n                    smallestIndex = i;\n  \
    \              }\n            }\n        }\n        res.add(smallestEven);\n \
    \       res.add(smallestIndex);\n        return res;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = 0;\n        int\
    \ smallestIndex = 0;\n        for(Long node : arr) {\n            if(node % 2\
    \ == 0) {\n                if(smallestEvenValue < node) {\n                  \
    \  smallestEvenValue = node;\n                    smallestIndex = arr.indexOf(node);\n\
    \                }\n            }\n        }\n        if(smallestEvenValue ==\
    \ 0) {\n            return result;\n        }\n        for(Long node : arr) {\n\
    \            if(node % 2 == 0) {\n                if(smallestEvenValue == node)\
    \ {\n                    result.add(node);\n                    result.add(smallestIndex);\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n \
    \       Long min = arr.get(0);\n        int index = 0;\n        for (int i = 1;\
    \ i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n           \
    \     if (min > arr.get(i)) {\n                    min = arr.get(i);\n       \
    \             index = i;\n                }\n            }\n        }\n      \
    \  result.add(min);\n        result.add(index);\n        return result;", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        ArrayList<Long> temp\
    \ = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n        int\
    \ smallestIndex = 0;\n        boolean found = false;\n        for(Long val : arr)\
    \ {\n            if(val % 2 == 0) {\n                found = true;\n         \
    \       smallestEven = val;\n                smallestIndex = arr.indexOf(val);\n\
    \            }\n        }\n        if(found) {\n            for(Long val : arr)\
    \ {\n                if(val % 2 == 0) {\n                    if(val < smallestEven)\
    \ {\n                        smallestEven = val;\n                        smallestIndex\
    \ = arr.indexOf(val);\n                    }\n                }\n            }\n\
    \            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        } else {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long smallestEvenValue = 0;\n        long smallestIndex = 0;\n      \
    \  for(long value : arr) {\n            if(value % 2 == 0) {\n               \
    \ if(smallestEvenValue < value) {\n                    smallestEvenValue = value;\n\
    \                    smallestIndex = arr.indexOf(value);\n                }\n\
    \            }\n        }\n        if(smallestEvenValue != 0) {\n            result.add(smallestEvenValue);\n\
    \            result.add(smallestIndex);\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            long value = arr.get(i);\n            if (value\
    \ % 2 == 0) {\n                if (value < smallestEven) {\n                 \
    \   smallestEven = value;\n                    smallestIndex = i;\n          \
    \      }\n            }\n        }\n        if (smallestEven != Long.MAX_VALUE)\
    \ {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smalest_value = Long.MAX_VALUE;\n        int smalest_index = -1;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (smalest_value < value)\
    \ {\n                    smalest_value = value;\n                    smalest_index\
    \ = i;\n                }\n            }\n        }\n        if (smalest_index\
    \ != -1) {\n            res.add(smalest_value);\n            res.add(smalest_index);\n\
    \        }\n        return res;", "        ArrayList<Long> res = new ArrayList<Long>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long value =\
    \ arr.get(i);\n            if(value % 2 == 0) {\n                if(value < smallestEvenValue)\
    \ {\n                    smallestEvenValue = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if(smallestEvenValue\
    \ != Long.MAX_VALUE) {\n            res.add(smallestEvenValue);\n            res.add(smallestIndex);\n\
    \        }\n        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long smallest = arr.get(0);\n        int smallest_index\
    \ = 0;\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallest > arr.get(i)) {\n                \
    \    smallest = arr.get(i);\n                    smallest_index = i;\n       \
    \         }\n            }\n        }\n        result.add(smallest);\n       \
    \ result.add(smallest_index);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smallestEven = Long.MIN_VALUE;\n    \
    \    long smallestIndex = Long.MIN_VALUE;\n        long currentEven = Long.MIN_VALUE;\n\
    \        long currentIndex = Long.MIN_VALUE;\n        for (Long node : arr) {\n\
    \            if (node.isEven()) {\n                if (currentEven == node.value)\
    \ {\n                    currentEven = Long.MIN_VALUE;\n                    currentIndex\
    \ = Long.MIN_VALUE;\n                }\n                else {\n             \
    \       if (currentEven == smallestEven) {\n                        currentIndex\
    \ = currentIndex + 1;\n                    }\n                    else {\n   \
    \                     res.add(smallestEven);\n                        res.add(currentIndex);\n\
    \                        smallestEven = node.value;\n                        currentEven\
    \ = node.value;\n                        currentIndex = Long.MIN_VALUE;\n    \
    \                }\n                }\n            }\n            else {\n   \
    \             if (currentEven == node.value) {\n                    currentEven\
    \ = Long.MIN_VALUE;\n                    currentIndex = Long.MIN_VALUE;\n    \
    \            }\n                else {\n                    if (currentEven ==\
    \ smallestEven) {\n                        currentIndex = currentIndex + 1;\n\
    \                    }\n                    else {\n                        res.add(smallestEven);\n\
    \                        res.add(currentIndex);\n                        smallestEven\
    \ = node.value;\n                        currentEven = node.value;\n         \
    \               currentIndex = Long.MIN_VALUE;\n                    }\n      \
    \          }\n            }\n        }\n        if (currentEven == smallestEven)\
    \ {\n            currentIndex = currentIndex + 1;\n        }\n        else {\n\
    \            res.add(smallestEven);\n            res.add(currentIndex);\n    \
    \    }\n        return res;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallest_value = Long.MAX_VALUE;\n        int smallest_index = -1;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (value < smallest_value)\
    \ {\n                    smallest_value = value;\n                    smallest_index\
    \ = i;\n                }\n            }\n        }\n        if (smallest_index\
    \ != -1) {\n            res.add(smallest_value);\n            res.add(smallest_index);\n\
    \        }\n        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (smallestEven > value)\
    \ {\n                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if (smallestEven\
    \ != Long.MAX_VALUE) {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        ArrayList<Long> temp = new ArrayList<>();\n        long smallestEvenValue\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n             \
    \   if (smallestEvenValue > arr.get(i)) {\n                    smallestEvenValue\
    \ = arr.get(i);\n                    smallestIndex = i;\n                }\n \
    \           }\n        }\n        temp.add(smallestEvenValue);\n        temp.add(smallestIndex);\n\
    \        result.add(temp);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallest_value = Long.MAX_VALUE;\n\
    \        int smallest_index = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if(value % 2 == 0) {\n\
    \                if(value < smallest_value) {\n                    smallest_value\
    \ = value;\n                    smallest_index = i;\n                }\n     \
    \       }\n        }\n        result.add(smallest_value, smallest_index);\n  \
    \      return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                smallestEven = Math.min(smallestEven, arr.get(i));\n\
    \                smallestIndex = i;\n            }\n        }\n        if (smallestEven\
    \ != Long.MAX_VALUE) {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long value =\
    \ arr.get(i);\n            if (value % 2 == 0) {\n                if (smallestEvenValue\
    \ < value) {\n                    smallestEvenValue = value;\n               \
    \     smallestIndex = i;\n                }\n            }\n        }\n      \
    \  if (smallestEvenValue != Long.MAX_VALUE) {\n            result.add(smallestEvenValue);\n\
    \            result.add(smallestIndex);\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp = new ArrayList<Long>();\n        long smallestEven = Long.MAX_VALUE;\n\
    \        long smallestIndex = -1;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallestEven\
    \ == Long.MAX_VALUE) {\n                    smallestEven = arr.get(i);\n     \
    \               smallestIndex = i;\n                } else {\n               \
    \     if (arr.get(i) < smallestEven) {\n                        smallestEven =\
    \ arr.get(i);\n                        smallestIndex = i;\n                  \
    \  }\n                }\n            }\n        }\n        if (smallestEven !=\
    \ Long.MAX_VALUE) {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MIN_VALUE;\n        int smallestIndex = 0;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(smallestEven > value) {\n\
    \                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if(smallestEven !=\
    \ Long.MIN_VALUE) {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> res = new ArrayList<Long>();\n\
    \        long smallest_value = 0;\n        int smallest_index = 0;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n      \
    \      if(value % 2 == 0) {\n                if(value < smallest_value) {\n  \
    \                  smallest_value = value;\n                    smallest_index\
    \ = i;\n                }\n            }\n        }\n        if(smallest_index\
    \ != 0) {\n            res.add(smallest_value);\n            res.add(smallest_index);\n\
    \        }\n        return res;", "        ArrayList<Long> res = new ArrayList<Long>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if((value % 2) == 0) {\n                if(smallestEven > value)\
    \ {\n                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if(smallestEven !=\
    \ Long.MAX_VALUE) {\n            res.add(smallestEven);\n            res.add(smallestIndex);\n\
    \        }\n        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        ArrayList<Long> temp = new ArrayList<>();\n        long smallestEvenValue\
    \ = 0;\n        int smallestIndex = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            if (arr.get(i) % 2 == 0) {\n                smallestEvenValue\
    \ = arr.get(i);\n                smallestIndex = i;\n            }\n        }\n\
    \        if (smallestEvenValue == 0) {\n            return result;\n        }\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) ==\
    \ smallestEvenValue) {\n                temp.add(arr.get(i));\n            }\n\
    \        }\n        Collections.sort(temp);\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long smallest\
    \ = arr.get(0);\n        int smallest_index = -1;\n        for (int i = 1; i <\
    \ arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n               \
    \ if (smallest > arr.get(i)) {\n                    smallest = arr.get(i);\n \
    \                   smallest_index = i;\n                }\n            }\n  \
    \      }\n        if (smallest == 0) {\n            return result;\n        }\n\
    \        result.add(smallest);\n        result.add(smallest_index);\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for\
    \ (Long node : arr) {\n            if (node.isEven()) {\n                if (smallestEven\
    \ > node.value) {\n                    smallestEven = node.value;\n          \
    \          smallestIndex = arr.indexOf(node);\n                }\n           \
    \ }\n        }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        ArrayList<Long> temp = new ArrayList<>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n             \
    \   if (smallestEven > arr.get(i)) {\n                    smallestEven = arr.get(i);\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        temp.add(smallestEven);\n        temp.add(smallestIndex);\n\
    \        res.add(temp);\n        return res;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        ArrayList<Long> temp = new ArrayList<>();\n  \
    \      long smallestEven = Long.MAX_VALUE;\n        long smallestIndex = -1;\n\
    \        long tempSmallestEven = Long.MAX_VALUE;\n        long tempSmallestIndex\
    \ = -1;\n        for(long i : arr) {\n            if(i%2 == 0) {\n           \
    \     tempSmallestEven = i;\n                tempSmallestIndex = i;\n        \
    \    }\n            if(i == smallestEven) {\n                smallestIndex = i;\n\
    \            }\n            if(i<smallestEven) {\n                smallestEven\
    \ = i;\n                smallestIndex = i;\n            }\n        }\n       \
    \ if(smallestEven == Long.MAX_VALUE) {\n            return result;\n        }\n\
    \        for(long i : arr) {\n            if(i%2 == 0) {\n                tempSmallestEven\
    \ = i;\n                tempSmallestIndex = i;\n            }\n            if(i\
    \ == smallestEven) {\n                smallestIndex = i;\n            }\n    \
    \        if(i<smallestEven) {\n                smallestEven = i;\n           \
    \     smallestIndex = i;\n            }\n        }\n        temp.add(smallestEven);\n\
    \        temp.add(smallestIndex);\n        result.add(temp);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long smallestEvenValue\
    \ = Long.MIN_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            long value = arr.get(i);\n            if (value\
    \ % 2 == 0) {\n                if (smallestEvenValue < value) {\n            \
    \        smallestEvenValue = value;\n                    smallestIndex = i;\n\
    \                }\n            }\n        }\n        if (smallestEvenValue ==\
    \ Long.MIN_VALUE) {\n            return result;\n        }\n        ArrayList<Long>\
    \ evenValues = new ArrayList<>();\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if (value % 2 == 0) {\n\
    \                evenValues.add(value);\n            }\n        }\n        Arrays.sort(evenValues);\n\
    \        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = 0;\n        int smallestIndex = 0;\n       \
    \ for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0)\
    \ {\n                if (smallestEvenValue == 0) {\n                    smallestEvenValue\
    \ = arr.get(i);\n                    smallestIndex = i;\n                } else\
    \ if (arr.get(i) < smallestEvenValue) {\n                    smallestEvenValue\
    \ = arr.get(i);\n                    smallestIndex = i;\n                }\n \
    \           }\n        }\n        if (smallestEvenValue == 0) {\n            return\
    \ result;\n        }\n        ArrayList<Long> evenValues = new ArrayList<>();\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                evenValues.add(arr.get(i));\n            }\n    \
    \    }\n        Collections.sort(evenValues);\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallest_value = Long.MAX_VALUE;\n\
    \        int smallest_index = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if (value % 2 == 0) {\n\
    \                if (value < smallest_value) {\n                    smallest_value\
    \ = value;\n                    smallest_index = i;\n                }\n     \
    \       }\n        }\n        if (smallest_index != 0) {\n            result.add(smallest_value);\n\
    \            result.add(smallest_index);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        long smallestIndex = -1;\n        long currentEven\
    \ = Long.MAX_VALUE;\n        long currentIndex = -1;\n        for(int i = 0; i\
    \ < arr.size(); i++) {\n            long value = arr.get(i);\n            if(value\
    \ % 2 == 0) {\n                if(currentEven == Long.MAX_VALUE) {\n         \
    \           currentEven = value;\n                    currentIndex = i;\n    \
    \            } else if(value < currentEven) {\n                    currentEven\
    \ = value;\n                    currentIndex = i;\n                }\n       \
    \     }\n        }\n        if(currentEven != Long.MAX_VALUE) {\n            smallestEven\
    \ = currentEven;\n            smallestIndex = currentIndex;\n        }\n     \
    \   for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(value < smallestEven) {\n\
    \                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if(smallestEven !=\
    \ Long.MAX_VALUE) {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (value < smallestEven)\
    \ {\n                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if (smallestEven\
    \ != Long.MAX_VALUE) {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smalest_value = Long.MIN_VALUE;\n        int smalest_index = -1;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            int index = i;\n            while(index > 0 && arr.get(index - 1)\
    \ % 2 == 0) {\n                index--;\n            }\n            if(value ==\
    \ smalest_value) {\n                res.add(value);\n                res.add(index);\n\
    \            } else {\n                if(value < smalest_value) {\n         \
    \           smalest_value = value;\n                    smalest_index = index;\n\
    \                }\n            }\n        }\n        if(smalest_index == -1)\
    \ {\n            return res;\n        } else {\n            return res.subList(0,\
    \ smalest_index + 1);\n        }", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (value < smallestEven)\
    \ {\n                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if (smallestEven\
    \ != Long.MAX_VALUE) {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long smallest = arr.get(0);\n        int smallest_index\
    \ = 0;\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallest > arr.get(i)) {\n                \
    \    smallest = arr.get(i);\n                    smallest_index = i;\n       \
    \         }\n            }\n        }\n        result.add(smallest);\n       \
    \ result.add(smallest_index);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for(Long value : arr) {\n            if(value\
    \ % 2 == 0) {\n                if(smallestEven > value) {\n                  \
    \  smallestEven = value;\n                    smallestIndex = arr.indexOf(value);\n\
    \                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallest_value = Long.MAX_VALUE;\n\
    \        int smallest_index = -1;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if (value % 2 == 0) {\n\
    \                if (value < smallest_value) {\n                    smallest_value\
    \ = value;\n                    smallest_index = i;\n                }\n     \
    \       }\n        }\n        if (smallest_index != -1) {\n            result.add(smallest_value,\
    \ smallest_index);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long smallestEven\
    \ = arr.get(0);\n        int smallestIndex = -1;\n        for (int i = 1; i <\
    \ arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n               \
    \ if (smallestEven == arr.get(i)) {\n                    smallestIndex = i;\n\
    \                    smallestEven = arr.get(i);\n                }\n         \
    \   }\n        }\n        if (smallestIndex != -1) {\n            result.add(smallestEven);\n\
    \            result.add(smallestIndex);\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long smallestEvenValue\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n             \
    \   if (smallestEvenValue > arr.get(i)) {\n                    smallestEvenValue\
    \ = arr.get(i);\n                    smallestIndex = i;\n                }\n \
    \           }\n        }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp = new ArrayList<Long>();\n        long smallestEvenValue\
    \ = 0;\n        long smallestIndex = 0;\n        long smallestValue = 0;\n   \
    \     boolean foundSmallestEvenValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestEvenValue\
    \ = false;\n        boolean foundSmallestIndex = false;\n        boolean foundSmallestValue\
    \ = false;\n        boolean foundSmallestEvenValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestEvenValue\
    \ = false;\n        boolean foundSmallestIndex = false;\n        boolean foundSmallestValue\
    \ = false;\n        boolean foundSmallestEvenValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestEvenValue\
    \ = false;\n        boolean foundSmallestIndex = false;\n        boolean foundSmallestValue\
    \ = false;\n        boolean foundSmallestEvenValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestEvenValue\
    \ = false;\n        boolean foundSmallestIndex = false;\n        boolean foundSmallestValue\
    \ = false;\n        boolean foundSmallestEvenValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestEvenValue\
    \ = false;\n        boolean foundSmallestIndex = false;\n        boolean foundSmallestValue\
    \ = false;\n        boolean foundSmallestEvenValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestEvenValue\
    \ = false;\n        boolean foundSmallestIndex = false;\n        boolean foundSmallestValue\
    \ = false;\n        boolean foundSmallestEvenValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestEvenValue\
    \ = false;\n        boolean foundSmallestIndex = false;\n        boolean foundSmallestValue\
    \ = false;\n        boolean foundSmallestEvenValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestEvenValue\
    \ = false;\n        boolean foundSmallestIndex = false;\n        boolean foundSmallestValue\
    \ = false;\n        boolean foundSmallestEvenValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean found", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallest_even = Long.MAX_VALUE;\n        int smallest_index = -1;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (smallest_even > value)\
    \ {\n                    smallest_even = value;\n                    smallest_index\
    \ = i;\n                }\n            }\n        }\n        if (smallest_even\
    \ != Long.MAX_VALUE) {\n            res.add(smallest_even);\n            res.add(smallest_index);\n\
    \        }\n        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (Long node : arr) {\n            if (node % 2 == 0) {\n         \
    \       if (smallestEven > node) {\n                    smallestEven = node;\n\
    \                    smallestIndex = arr.indexOf(node);\n                }\n \
    \           }\n        }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long smallestEven = arr.get(0);\n        long\
    \ smallestIndex = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                if (smallestEven > arr.get(i))\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        res.add(smallestEven);\n\
    \        res.add(smallestIndex);\n        return res;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long smallestEven = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if (value % 2 == 0) {\n\
    \                if (value < smallestEven) {\n                    smallestEven\
    \ = value;\n                    smallestIndex = i;\n                }\n      \
    \      }\n        }\n        if (smallestEven != Long.MAX_VALUE) {\n         \
    \   result.add(smallestEven);\n            result.add(smallestIndex);\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smallestEven > arr.get(i)) {\n              \
    \      smallestEven = arr.get(i);\n                    smallestIndex = i;\n  \
    \              }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MIN_VALUE;\n\
    \        int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallestEvenValue\
    \ < arr.get(i)) {\n                    smallestEvenValue = arr.get(i);\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        if (smallestEvenValue == Long.MIN_VALUE) {\n            return result;\n\
    \        }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = -1;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(value < smallestEven) {\n\
    \                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if(smallestEven !=\
    \ Long.MAX_VALUE) {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        int size = arr.size();\n        long smalest_value\
    \ = arr.get(0);\n        int smalest_index = 0;\n        for (int i = 1; i < size;\
    \ i++) {\n            if (arr.get(i) % 2 == 0) {\n                smalest_value\
    \ = arr.get(i);\n                smalest_index = i;\n            }\n        }\n\
    \        res.add(smalest_value);\n        res.add(smalest_index);\n        return\
    \ res;", "        ArrayList<Long> result = new ArrayList<>();\n        ArrayList<Long>\
    \ temp = new ArrayList<>();\n        long smallestEvenValue = 0;\n        int\
    \ smallestIndex = 0;\n        for(Long i : arr) {\n            if(i%2 == 0) {\n\
    \                smallestEvenValue = i;\n            }\n        }\n        for(Long\
    \ i : arr) {\n            if(i%2 == 0) {\n                if(i == smallestEvenValue)\
    \ {\n                    smallestIndex = arr.indexOf(i);\n                }\n\
    \            }\n        }\n        if(smallestIndex != 0) {\n            temp.add(smallestEvenValue);\n\
    \            temp.add(smallestIndex);\n            result.add(temp);\n       \
    \ }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long value =\
    \ arr.get(i);\n            if(value % 2 == 0) {\n                if(value < smallestEvenValue)\
    \ {\n                    smallestEvenValue = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MIN_VALUE;\n\
    \        long smallestIndex = 0;\n        long currentEvenValue = Long.MIN_VALUE;\n\
    \        long currentIndex = 0;\n        boolean foundSmallestEvenValue = false;\n\
    \        boolean foundSmallestIndex = false;\n        for(Long val : arr) {\n\
    \            if(val % 2 == 0) {\n                currentEvenValue = val;\n   \
    \             currentIndex++;\n            }\n            else {\n           \
    \     if(currentEvenValue < smallestEvenValue) {\n                    foundSmallestEvenValue\
    \ = true;\n                    smallestEvenValue = currentEvenValue;\n       \
    \             smallestIndex = currentIndex;\n                }\n             \
    \   currentEvenValue = Long.MIN_VALUE;\n                currentIndex = 0;\n  \
    \          }\n        }\n        if(foundSmallestEvenValue) {\n            result.add(smallestEvenValue);\n\
    \            result.add(smallestIndex);\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long smallest = arr.get(0);\n        int smallest_index = -1;\n     \
    \   for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) % 2 ==\
    \ 0) {\n                if (smallest > arr.get(i)) {\n                    smallest\
    \ = arr.get(i);\n                    smallest_index = i;\n                }\n\
    \            }\n        }\n        result.add(smallest);\n        result.add(smallest_index);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (value < smallestEven)\
    \ {\n                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if (smallestEven\
    \ != Long.MAX_VALUE) {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long smallest = arr.get(0);\n        int smallest_index\
    \ = 0;\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallest > arr.get(i)) {\n                \
    \    smallest = arr.get(i);\n                    smallest_index = i;\n       \
    \         }\n            }\n        }\n        result.add(smallest);\n       \
    \ result.add(smallest_index);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n    \
    \    int smallestIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n \
    \           long value = arr.get(i);\n            if((value & 1) == 0) {\n   \
    \             if(value < smallestEven) {\n                    smallestEven = value;\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        if(smallestEven != Long.MAX_VALUE) {\n            res.add(smallestEven);\n\
    \            res.add(smallestIndex);\n        }\n        return res;", "     \
    \   ArrayList<Long> result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if (value % 2 == 0) {\n\
    \                if (value < smallestEven) {\n                    smallestEven\
    \ = value;\n                    smallestIndex = i;\n                }\n      \
    \      }\n        }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(value < smallestEven) {\n\
    \                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if(smallestEven !=\
    \ Long.MAX_VALUE) {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = 0;\n        int smallestIndex = 0;\n       \
    \ for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(smallestEvenValue < value)\
    \ {\n                    smallestEvenValue = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if(smallestEvenValue\
    \ != 0) {\n            result.add(smallestEvenValue);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallest_value = Long.MAX_VALUE;\n        int smallest_index = 0;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(value < smallest_value)\
    \ {\n                    smallest_value = value;\n                    smallest_index\
    \ = i;\n                }\n            }\n        }\n        result.add(smallest_value,\
    \ smallest_index);\n        return result;", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        long smallestEvenValue = 0;\n        long smallestIndex\
    \ = 0;\n        long smallestValue = 0;\n        boolean foundSmallestEvenValue\
    \ = false;\n        boolean foundSmallestIndex = false;\n        boolean foundSmallestValue\
    \ = false;\n        boolean foundSmallestEvenValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestEvenValue\
    \ = false;\n        boolean foundSmallestIndex = false;\n        boolean foundSmallestValue\
    \ = false;\n        boolean foundSmallestEvenValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestEvenValue\
    \ = false;\n        boolean foundSmallestIndex = false;\n        boolean foundSmallestValue\
    \ = false;\n        boolean foundSmallestEvenValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestEvenValue\
    \ = false;\n        boolean foundSmallestIndex = false;\n        boolean foundSmallestValue\
    \ = false;\n        boolean foundSmallestEvenValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestEvenValue\
    \ = false;\n        boolean foundSmallestIndex = false;\n        boolean foundSmallestValue\
    \ = false;\n        boolean foundSmallestEvenValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestEvenValue\
    \ = false;\n        boolean foundSmallestIndex = false;\n        boolean foundSmallestValue\
    \ = false;\n        boolean foundSmallestEvenValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestEvenValue\
    \ = false;\n        boolean foundSmallestIndex = false;\n        boolean foundSmallestValue\
    \ = false;\n        boolean foundSmallestEvenValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestEvenValue\
    \ = false;\n        boolean foundSmallestIndex = false;\n        boolean foundSmallestValue\
    \ = false;\n        boolean foundSmallestEvenValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        boolean foundSmallestValue = false;\n        boolean foundSmallestEvenValue\
    \ = false;\n        boolean foundSmallestIndex = false;\n        boolean foundSmallestValue\
    \ = false;\n        boolean foundSmalle", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        Arrays.sort(arr);\n        long smallest = arr.get(0);\n\
    \        int smallest_index = -1;\n        for (int i = 1; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallest > arr.get(i))\
    \ {\n                    smallest = arr.get(i);\n                    smallest_index\
    \ = i;\n                }\n            }\n        }\n        result.add(smallest);\n\
    \        result.add(smallest_index);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = 0;\n        long\
    \ smallestIndex = 0;\n        long currentIndex = 0;\n        for(Long node :\
    \ arr) {\n            if(node % 2 == 0) {\n                smallestEvenValue =\
    \ node;\n                smallestIndex = currentIndex;\n            }\n      \
    \      currentIndex++;\n        }\n        if(smallestEvenValue == 0) {\n    \
    \        return result;\n        }\n        for(Long node : arr) {\n         \
    \   if(node % 2 == 0) {\n                if(node < smallestEvenValue) {\n    \
    \                smallestEvenValue = node;\n                    smallestIndex\
    \ = currentIndex;\n                }\n            }\n            currentIndex++;\n\
    \        }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallestEven = Long.MIN_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smallestEven > arr.get(i)) {\n              \
    \      smallestEven = arr.get(i);\n                    smallestIndex = i;\n  \
    \              }\n            }\n        }\n        res.add(smallestEven);\n \
    \       res.add(smallestIndex);\n        return res;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        ArrayList<Long> temp = new ArrayList<>();\n\
    \        ArrayList<Long> temp2 = new ArrayList<>();\n        ArrayList<Long> temp3\
    \ = new ArrayList<>();\n        ArrayList<Long> temp4 = new ArrayList<>();\n \
    \       ArrayList<Long> temp5 = new ArrayList<>();\n        ArrayList<Long> temp6\
    \ = new ArrayList<>();\n        ArrayList<Long> temp7 = new ArrayList<>();\n \
    \       ArrayList<Long> temp8 = new ArrayList<>();\n        ArrayList<Long> temp9\
    \ = new ArrayList<>();\n        ArrayList<Long> temp10 = new ArrayList<>();\n\
    \        ArrayList<Long> temp11 = new ArrayList<>();\n        ArrayList<Long>\
    \ temp12 = new ArrayList<>();\n        ArrayList<Long> temp13 = new ArrayList<>();\n\
    \        ArrayList<Long> temp14 = new ArrayList<>();\n        ArrayList<Long>\
    \ temp15 = new ArrayList<>();\n        ArrayList<Long> temp16 = new ArrayList<>();\n\
    \        ArrayList<Long> temp17 = new ArrayList<>();\n        ArrayList<Long>\
    \ temp18 = new ArrayList<>();\n        ArrayList<Long> temp19 = new ArrayList<>();\n\
    \        ArrayList<Long> temp20 = new ArrayList<>();\n        ArrayList<Long>\
    \ temp21 = new ArrayList<>();\n        ArrayList<Long> temp22 = new ArrayList<>();\n\
    \        ArrayList<Long> temp23 = new ArrayList<>();\n        ArrayList<Long>\
    \ temp24 = new ArrayList<>();\n        ArrayList<Long> temp25 = new ArrayList<>();\n\
    \        ArrayList<Long> temp26 = new ArrayList<>();\n        ArrayList<Long>\
    \ temp27 = new ArrayList<>();\n        ArrayList<Long> temp28 = new ArrayList<>();\n\
    \        ArrayList<Long> temp29 = new ArrayList<>();\n        ArrayList<Long>\
    \ temp30 = new ArrayList<>();\n        ArrayList<Long> temp31 = new ArrayList<>();\n\
    \        ArrayList<Long> temp32 = new ArrayList<>();\n        ArrayList<Long>\
    \ temp33 = new ArrayList<>();\n        ArrayList<Long> temp34 = new ArrayList<>();\n\
    \        ArrayList<Long> temp35 = new ArrayList<>();\n        ArrayList<Long>\
    \ temp36 = new ArrayList<>();\n        ArrayList<Long> temp37 = new ArrayList<>();\n\
    \        ArrayList<Long> temp38 = new ArrayList<>();\n        ArrayList<Long>\
    \ temp39 = new ArrayList<>();\n        ArrayList<Long> temp40 = new ArrayList<>();\n\
    \        ArrayList<Long> temp41 = new ArrayList<>();\n        ArrayList<Long>\
    \ temp42 = new ArrayList<>();\n        ArrayList<Long> temp43 = new ArrayList<>();\n\
    \        ArrayList<Long> temp44 = new ArrayList<>();\n        ArrayList<Long>\
    \ temp45 = new ArrayList<>();\n        ArrayList<Long> temp46 = new ArrayList<>();\n\
    \        ArrayList<Long> temp47 = new ArrayList<>();\n        ArrayList<Long>\
    \ temp48 = new ArrayList<>();\n        ArrayList<Long> temp49 = new ArrayList<>();\n\
    \        ArrayList<Long> temp50 = new ArrayList<", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long smallest_even_value = Long.MAX_VALUE;\n \
    \       int smallest_even_index = -1;\n        int smallest_index = -1;\n    \
    \    for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (smallest_even_value <\
    \ value) {\n                    smallest_even_value = value;\n               \
    \     smallest_even_index = i;\n                }\n                if (smallest_even_value\
    \ == value) {\n                    if (smallest_index < 0) {\n               \
    \         smallest_index = i;\n                    }\n                }\n    \
    \        }\n        }\n        if (smallest_even_value == Long.MAX_VALUE) {\n\
    \            return result;\n        }\n        ArrayList<Long> smallest_even_value_arr\
    \ = new ArrayList<>();\n        smallest_even_value_arr.add(smallest_even_value);\n\
    \        smallest_even_value_arr.add(smallest_even_index);\n        result.add(smallest_even_value_arr);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (Long node : arr) {\n            if (node.intValue() % 2 ==\
    \ 0) {\n                if (smallestEvenValue > node.intValue()) {\n         \
    \           smallestEvenValue = node.intValue();\n                    smallestIndex\
    \ = arr.indexOf(node);\n                }\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long smallest_value\
    \ = arr.get(0);\n        int smallest_index = -1;\n        for (int i = 1; i <\
    \ arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n               \
    \ if (smallest_value < arr.get(i)) {\n                    smallest_value = arr.get(i);\n\
    \                    smallest_index = i;\n                }\n            }\n \
    \       }\n        result.add(smallest_value);\n        result.add(smallest_index);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = -1;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                long value = arr.get(i);\n                if (value\
    \ < smallestEven) {\n                    smallestEven = value;\n             \
    \       smallestIndex = i;\n                }\n            }\n        }\n    \
    \    if (smallestEven != Long.MAX_VALUE) {\n            result.add(smallestEven);\n\
    \            result.add(smallestIndex);\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long smallestEven\
    \ = Long.MIN_VALUE;\n        int smallestIndex = -1;\n        long smallestValue\
    \ = Long.MIN_VALUE;\n        for(Long node : arr) {\n            if(node % 2 ==\
    \ 0) {\n                if(smallestEven == Long.MIN_VALUE) {\n               \
    \     smallestEven = node;\n                    smallestIndex = -1;\n        \
    \            smallestValue = node;\n                }\n                else if(smallestEven\
    \ == node) {\n                    smallestIndex = arr.indexOf(node);\n       \
    \             smallestValue = node;\n                }\n                else if(smallestEven\
    \ == node && smallestIndex == -1) {\n                    smallestIndex = arr.indexOf(node);\n\
    \                    smallestValue = node;\n                }\n            }\n\
    \        }\n        if(smallestEven == Long.MIN_VALUE) {\n            return result;\n\
    \        }\n        else if(smallestEven == smallestValue) {\n            int\
    \ index = arr.indexOf(smallestEven);\n            result.add(smallestEven);\n\
    \            result.add(smallestIndex);\n            return result;\n        }\n\
    \        else if(smallestEven == smallestValue && smallestIndex == -1) {\n   \
    \         result.add(smallestEven);\n            return result;\n        }\n \
    \       else if(smallestEven == smallestValue && smallestIndex != -1) {\n    \
    \        int index = arr.indexOf(smallestEven);\n            result.add(smallestEven);\n\
    \            result.add(index);\n            return result;\n        }\n     \
    \   return result;", "        ArrayList<Long> result = new ArrayList<>();\n  \
    \      ArrayList<Long> temp = new ArrayList<>();\n        long smallestEvenValue\
    \ = 0;\n        long smallestIndex = 0;\n        long currentEvenValue = 0;\n\
    \        long currentIndex = 0;\n        boolean foundSmallestEvenValue = false;\n\
    \        boolean foundSmallestIndex = false;\n        boolean foundSmallestValue\
    \ = false;\n        boolean foundSmallestIndex = false;\n        boolean foundSmallestValue\
    \ = false;\n        boolean foundSmallestIndex = false;\n        for (long value\
    \ : arr) {\n            if (value % 2 == 0) {\n                currentEvenValue\
    \ = value;\n                currentIndex = 0;\n                foundSmallestEvenValue\
    \ = false;\n                foundSmallestIndex = false;\n                foundSmallestValue\
    \ = false;\n                foundSmallestIndex = false;\n                foundSmallestValue\
    \ = false;\n                foundSmallestIndex = false;\n                foundSmallestValue\
    \ = false;\n                foundSmallestIndex = false;\n                foundSmallestValue\
    \ = false;\n                foundSmallestIndex = false;\n                foundSmallestValue\
    \ = false;\n                foundSmallestIndex = false;\n                foundSmallestValue\
    \ = false;\n                foundSmallestIndex = false;\n                foundSmallestValue\
    \ = false;\n                foundSmallestIndex = false;\n                foundSmallestValue\
    \ = false;\n                foundSmallestIndex = false;\n                foundSmallestValue\
    \ = false;\n                foundSmallestIndex = false;\n                foundSmallestValue\
    \ = false;\n                foundSmallestIndex = false;\n                foundSmallestValue\
    \ = false;\n                foundSmallestIndex = false;\n                foundSmallestValue\
    \ = false;\n                foundSmallestIndex = false;\n                foundSmallestValue\
    \ = false;\n                foundSmallestIndex = false;\n                foundSmallestValue\
    \ = false;\n                foundSmallestIndex = false;\n                foundSmallestValue\
    \ = false;\n                foundSmallestIndex = false;\n                foundSmallestValue\
    \ = false;\n                foundSmallestIndex = false;\n                foundSmallestValue\
    \ = false;\n                foundSmallestIndex = false;\n                foundSmallestValue\
    \ = false;\n                foundSmallestIndex = false;\n                foundSmallestValue\
    \ = false;\n                foundSmallestIndex = false;\n                foundSmallestValue\
    \ = false;\n                foundSmallestIndex = false;\n                foundSmallestValue\
    \ = false;\n                foundSmallestIndex = false;\n                foundSmallestValue\
    \ = false;\n                foundSmallestIndex = false;\n                foundSmallestValue\
    \ = false;\n                foundSmallestIndex = false;\n                found",
  "        ArrayList<Long> result = new ArrayList<>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            long value = arr.get(i);\n            if (value\
    \ % 2 == 0) {\n                if (value < smallestEven) {\n                 \
    \   smallestEven = value;\n                    smallestIndex = i;\n          \
    \      }\n            }\n        }\n        result.add(smallestEven);\n      \
    \  result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = 0;\n        int\
    \ smallestIndex = 0;\n        for(long value : arr) {\n            if(value %\
    \ 2 == 0) {\n                if(smallestEvenValue < value) {\n               \
    \     smallestEvenValue = value;\n                    smallestIndex = arr.indexOf(value);\n\
    \                }\n            }\n        }\n        if(smallestEvenValue ==\
    \ 0) {\n            return new ArrayList<>();\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smallest_even_value = Long.MAX_VALUE;\n\
    \        int smallest_even_index = -1;\n        int smallest_index = -1;\n   \
    \     for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(smallest_even_value < value)\
    \ {\n                    smallest_even_value = value;\n                    smallest_even_index\
    \ = i;\n                }\n                if(smallest_even_value == value) {\n\
    \                    smallest_index = i;\n                }\n            }\n \
    \       }\n        if(smallest_even_value == Long.MAX_VALUE) {\n            return\
    \ res;\n        }\n        ArrayList<Long> new_arr = new ArrayList<>();\n    \
    \    for(int i = 0; i < arr.size(); i++) {\n            if(i != smallest_even_index)\
    \ {\n                new_arr.add(arr.get(i));\n            }\n        }\n    \
    \    res.add(smallest_even_value);\n        res.add(smallest_index);\n       \
    \ return res;", "        ArrayList<Long> result = new ArrayList<>();\n       \
    \ long smallestEvenValue = Long.MIN_VALUE;\n        int smallestIndex = 0;\n \
    \       int size = arr.size();\n        for (int i = 0; i < size; i++) {\n   \
    \         if (arr.get(i) % 2 == 0) {\n                if (smallestEvenValue >\
    \ arr.get(i)) {\n                    smallestEvenValue = arr.get(i);\n       \
    \             smallestIndex = i;\n                }\n            }\n        }\n\
    \        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = 0;\n        int smallestIndex = 0;\n       \
    \ for(Long node : arr) {\n            if(node % 2 == 0) {\n                smallestEvenValue\
    \ = node;\n                smallestIndex = arr.indexOf(node);\n            }\n\
    \        }\n        if(smallestEvenValue == 0) {\n            return result;\n\
    \        }\n        for(Long node : arr) {\n            if(node % 2 == 0 && node\
    \ < smallestEvenValue) {\n                smallestEvenValue = node;\n        \
    \        smallestIndex = arr.indexOf(node);\n            }\n        }\n      \
    \  result.add(smallestEvenValue);\n        result.add(smallestIndex);\n      \
    \  return result;", "        ArrayList<Long> result = new ArrayList<>();\n   \
    \     long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n  \
    \      for (Long node : arr) {\n            if (node.isEven()) {\n           \
    \     if (smallestEven > node.value) {\n                    smallestEven = node.value;\n\
    \                    smallestIndex = arr.indexOf(node);\n                }\n \
    \           }\n        }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        ArrayList<Long> temp = new ArrayList<>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        long smallestIndex = -1;\n        for (Long val :\
    \ arr) {\n            if (val % 2 == 0) {\n                if (smallestEven ==\
    \ Long.MAX_VALUE) {\n                    smallestEven = val;\n               \
    \     smallestIndex = arr.indexOf(val);\n                } else {\n          \
    \          if (val < smallestEven) {\n                        smallestEven = val;\n\
    \                        smallestIndex = arr.indexOf(val);\n                 \
    \   }\n                }\n            }\n        }\n        if (smallestEven ==\
    \ Long.MAX_VALUE) {\n            return result;\n        } else {\n          \
    \  result.add(smallestEven);\n            result.add(smallestIndex);\n       \
    \     return result;\n        }", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        ArrayList<Long> temp = new ArrayList<>();\n        long smallestEvenValue\
    \ = 0;\n        long smallestIndex = 0;\n        long tempValue = 0;\n       \
    \ boolean foundSmallestEvenValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        for(int i = 0; i < arr.size(); i++) {\n            tempValue\
    \ = arr.get(i);\n            if(tempValue % 2 == 0) {\n                foundSmallestEvenValue\
    \ = true;\n                smallestEvenValue = tempValue;\n                smallestIndex\
    \ = i;\n            }\n            else if(foundSmallestEvenValue) {\n       \
    \         if(tempValue < smallestEvenValue) {\n                    foundSmallestEvenValue\
    \ = false;\n                    smallestEvenValue = tempValue;\n             \
    \       smallestIndex = i;\n                }\n            }\n            else\
    \ if(foundSmallestEvenValue && !foundSmallestIndex) {\n                foundSmallestIndex\
    \ = true;\n                smallestIndex = i;\n            }\n        }\n    \
    \    if(foundSmallestEvenValue) {\n            tempValue = smallestEvenValue;\n\
    \            temp = new ArrayList<>(Arrays.asList(smallestEvenValue, smallestIndex));\n\
    \            result.add(temp);\n        }\n        return result;"]
stop_tokens:
- "\n    }\n"

name: HumanEval_82_prime_length
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Write a function that takes a string and returns true if\
  \ the string\n    // length is a prime number or false otherwise\n    // Examples\n\
  \    // >>> primeLength((\"Hello\"))\n    // (true)\n    // >>> primeLength((\"\
  abcdcba\"))\n    // (true)\n    // >>> primeLength((\"kittens\"))\n    // (true)\n\
  \    // >>> primeLength((\"orange\"))\n    // (false)\n    public static boolean\
  \ primeLength(String string) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(primeLength((\"\
  Hello\")) == (true));\n    assert(primeLength((\"abcdcba\")) == (true));\n    assert(primeLength((\"\
  kittens\")) == (true));\n    assert(primeLength((\"orange\")) == (false));\n   \
  \ assert(primeLength((\"wow\")) == (true));\n    assert(primeLength((\"world\"))\
  \ == (true));\n    assert(primeLength((\"MadaM\")) == (true));\n    assert(primeLength((\"\
  Wow\")) == (true));\n    assert(primeLength((\"\")) == (false));\n    assert(primeLength((\"\
  HI\")) == (true));\n    assert(primeLength((\"go\")) == (true));\n    assert(primeLength((\"\
  gogo\")) == (false));\n    assert(primeLength((\"aaaaaaaaaaaaaaa\")) == (false));\n\
  \    assert(primeLength((\"Madam\")) == (true));\n    assert(primeLength((\"M\"\
  )) == (false));\n    assert(primeLength((\"0\")) == (false));\n    }\n\n}\n"
completions: ["        boolean isPrime = true;\n        int length = string.length();\n\
    \        for (int i = 2; i <= length; i++) {\n            if (string.charAt(i)\
    \ != string.charAt(i - 1)) {\n                isPrime = false;\n             \
    \   break;\n            }\n        }\n        return isPrime;", "        // Write\
    \ your code here\n        boolean isPrime = true;\n        for(int i = 0; i <=\
    \ string.length(); i++) {\n            for(int j = i; j < string.length(); j++)\
    \ {\n                if(string.charAt(i) == string.charAt(j)) {\n            \
    \        isPrime = false;\n                }\n            }\n        }\n     \
    \   return isPrime;", "        boolean isPrime = true;\n        for (int i = 2;\
    \ i <= string.length(); i++) {\n            if (string.charAt(i) != string.charAt(i\
    \ - 1)) {\n                isPrime = false;\n                break;\n        \
    \    }\n        }\n        return isPrime;", "        boolean isPrime = true;\n\
    \        int length = string.length();\n        for (int i = 2; i <= length /\
    \ 2; i++) {\n            if (string.charAt(i) != string.charAt(length - i - 1))\
    \ {\n                isPrime = false;\n                break;\n            }\n\
    \        }\n        return isPrime;", "        // Write your code here\n     \
    \   boolean isPrime = true;\n        for(int i=0;i<string.length();i++){\n   \
    \         int count = 0;\n            for(int j=2;j<string.length();j++){\n  \
    \              if(string.charAt(i)==string.charAt(j)){\n                    count++;\n\
    \                }\n            }\n            if(count==0){\n               \
    \ isPrime = false;\n                break;\n            }\n        }\n       \
    \ return isPrime;", "        boolean isPrime = true;\n        int length = string.length();\n\
    \        for (int i = 1; i <= length; i++) {\n            if (string.charAt(i)\
    \ == ' ') {\n                isPrime = false;\n                break;\n      \
    \      }\n            if (string.charAt(i) % 2 == 0) {\n                isPrime\
    \ = false;\n                break;\n            }\n        }\n        return isPrime;",
  "        if (string.length() < 2) {\n            return false;\n        }\n    \
    \    boolean isPrime = true;\n        for (int i = 2; i <= string.length() - 1;\
    \ i++) {\n            if (string.charAt(i) != string.charAt(i - 1)) {\n      \
    \          isPrime = false;\n                break;\n            }\n        }\n\
    \        return isPrime;", "        boolean result = true;\n        for (int i\
    \ = 0; i < string.length(); i++) {\n            int count = 0;\n            char\
    \ c = string.charAt(i);\n            for (int j = i; j < string.length(); j++)\
    \ {\n                if (string.charAt(j) == c) {\n                    count++;\n\
    \                }\n            }\n            if (count == string.length() /\
    \ 2) {\n                result = false;\n                break;\n            }\n\
    \        }\n        return result;", "        if (string.length() < 2) {\n   \
    \         return false;\n        }\n        char[] charArray = string.toCharArray();\n\
    \        Arrays.sort(charArray);\n        boolean isPrime = true;\n        for\
    \ (int i = 0; i < charArray.length; i++) {\n            if (charArray[i] != (charArray[i\
    \ - 1] + 1)) {\n                isPrime = false;\n                break;\n   \
    \         }\n        }\n        return isPrime;", "        boolean isPrime = true;\n\
    \        int length = string.length();\n        for (int i = 1; i < length; i++)\
    \ {\n            if (string.charAt(i) == string.charAt(i - 1)) {\n           \
    \     isPrime = false;\n                break;\n            }\n        }\n   \
    \     return isPrime;", "        boolean isPrime = true;\n        for(int i =\
    \ 0; i <= string.length(); i++) {\n            for(int j = 2; j < i; j++) {\n\
    \                if(string.charAt(i) == string.charAt(j)) {\n                \
    \    isPrime = false;\n                    break;\n                }\n       \
    \     }\n        }\n        return isPrime;", "        int length = string.length();\n\
    \        if (length < 2) {\n            return true;\n        }\n        boolean\
    \ prime = true;\n        for (int i = 2; i <= length; i++) {\n            if (string.charAt(i)\
    \ != string.charAt(i - 1)) {\n                prime = false;\n               \
    \ break;\n            }\n        }\n        return prime;", "        if (string.length()\
    \ < 2) {\n            return false;\n        }\n        boolean isPrime = true;\n\
    \        for (int i = 2; i <= string.length(); i++) {\n            if (string.charAt(i)\
    \ != string.charAt(i - 1)) {\n                isPrime = false;\n             \
    \   break;\n            }\n        }\n        return isPrime;", "        boolean\
    \ isPrime = true;\n        for (int i = 0; i < string.length(); i++) {\n     \
    \       char c = string.charAt(i);\n            int count = 0;\n            while\
    \ (c != ' ') {\n                count++;\n                c = string.charAt(++i);\n\
    \            }\n            if (count % 2 == 0) {\n                isPrime = false;\n\
    \                break;\n            }\n        }\n        return isPrime;", " \
    \       if (string.length() < 2) {\n            return false;\n        }\n   \
    \     boolean isPrime = true;\n        for (int i = 2; i <= string.length(); i++)\
    \ {\n            if (string.charAt(i) != string.charAt(i - 1)) {\n           \
    \     isPrime = false;\n                break;\n            }\n        }\n   \
    \     return isPrime;", "        boolean isPrime = true;\n        for(int i =\
    \ 0; i < string.length(); i++) {\n            if(!Character.isLetter(string.charAt(i)))\
    \ {\n                isPrime = false;\n                break;\n            }\n\
    \        }\n        return isPrime;", "        if (string.length() < 2) {\n  \
    \          return false;\n        }\n        char[] charArray = string.toCharArray();\n\
    \        Arrays.sort(charArray);\n        int length = charArray.length;\n   \
    \     int counter = 1;\n        for (int i = 0; i < length; i++) {\n         \
    \   if (charArray[i] == charArray[i + 1]) {\n                counter++;\n    \
    \        }\n        }\n        if (counter == 2) {\n            return true;\n\
    \        }\n        return false;", "        boolean isPrime = true;\n       \
    \ for(int i = 0; i <= string.length(); i++) {\n            isPrime = string.charAt(i)\
    \ > '0' && string.charAt(i) <= '9' && isPrime;\n        }\n        return isPrime;",
  "        boolean isPrime = true;\n        for(int i = 0; i <= string.length(); i++)\
    \ {\n            isPrime = string.charAt(i) == string.charAt(i+1);\n        }\n\
    \        return isPrime;", "        // Your code here\n        boolean isPrime\
    \ = true;\n        for(int i=0;i<string.length();i++){\n            int count\
    \ = 0;\n            for(int j=2;j<string.length();j++){\n                if(string.charAt(i)==string.charAt(j)){\n\
    \                    count++;\n                }\n            }\n            if(count==0){\n\
    \                isPrime = false;\n            }\n        }\n        return isPrime;"]
stop_tokens:
- "\n    }\n"

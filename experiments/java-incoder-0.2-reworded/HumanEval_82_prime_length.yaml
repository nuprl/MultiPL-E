name: HumanEval_82_prime_length
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Write a function that takes a string and returns true if\
  \ the string\n    // length is a prime number or false otherwise\n    // Examples\n\
  \    // >>> primeLength((\"Hello\"))\n    // (true)\n    // >>> primeLength((\"\
  abcdcba\"))\n    // (true)\n    // >>> primeLength((\"kittens\"))\n    // (true)\n\
  \    // >>> primeLength((\"orange\"))\n    // (false)\n    public static boolean\
  \ primeLength(String string) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(primeLength((\"\
  Hello\")) == (true));\n    assert(primeLength((\"abcdcba\")) == (true));\n    assert(primeLength((\"\
  kittens\")) == (true));\n    assert(primeLength((\"orange\")) == (false));\n   \
  \ assert(primeLength((\"wow\")) == (true));\n    assert(primeLength((\"world\"))\
  \ == (true));\n    assert(primeLength((\"MadaM\")) == (true));\n    assert(primeLength((\"\
  Wow\")) == (true));\n    assert(primeLength((\"\")) == (false));\n    assert(primeLength((\"\
  HI\")) == (true));\n    assert(primeLength((\"go\")) == (true));\n    assert(primeLength((\"\
  gogo\")) == (false));\n    assert(primeLength((\"aaaaaaaaaaaaaaa\")) == (false));\n\
  \    assert(primeLength((\"Madam\")) == (true));\n    assert(primeLength((\"M\"\
  )) == (false));\n    assert(primeLength((\"0\")) == (false));\n    }\n\n}\n"
completions: []
stop_tokens:
- "\n    }\n"

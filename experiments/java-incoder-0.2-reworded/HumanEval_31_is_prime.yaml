name: HumanEval_31_is_prime
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
  \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n\
  \    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    //\
  \ (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n \
  \   // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
  \ isPrime(long n) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
  \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
  \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
  \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) ==\
  \ (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) ==\
  \ (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) ==\
  \ (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
  \ == (false));\n    }\n\n}\n"
completions: ["        if (n < 2l) return false; // 0 and 1 are not primes\n     \
    \   if (n == 2l) return true;\n        if (n % 2l == 0l) return false; // 0 and\
    \ 1 are not primes\n        if (n % 3l == 0l) return false; // 0 and 1 are not\
    \ primes\n        if (n % 5l == 0l) return false; // 0 and 1 are not primes\n\
    \        if (n % 7l == 0l) return false; // 0 and 1 are not primes\n        if\
    \ (n % 11l == 0l) return false; // 0 and 1 are not primes\n        if (n % 13l\
    \ == 0l) return false; // 0 and 1 are not primes\n        if (n % 17l == 0l) return\
    \ false; // 0 and 1 are not primes\n        if (n % 19l == 0l) return false; //\
    \ 0 and 1 are not primes\n        if (n % 23l == 0l) return false; // 0 and 1\
    \ are not primes\n        if (n % 29l == 0l) return false; // 0 and 1 are not\
    \ primes\n        if (n % 31l == 0l) return false; // 0 and 1 are not primes\n\
    \        if (n % 37l == 0l) return false; // 0 and 1 are not primes\n        if\
    \ (n % 41l == 0l) return false; // 0 and 1 are not primes\n        if (n % 43l\
    \ == 0l) return false; // 0 and 1 are not primes\n        if (n % 47l == 0l) return\
    \ false; // 0 and 1 are not primes\n        if (n % 53l == 0l) return false; //\
    \ 0 and 1 are not primes\n        if (n % 59l == 0l) return false; // 0 and 1\
    \ are not primes\n        if (n % 61l == 0l) return false; // 0 and 1 are not\
    \ primes\n        if (n % 67l == 0l) return false; // 0 and 1 are not primes\n\
    \        if (n % 71l == 0l) return false; // 0 and 1 are not primes\n        if\
    \ (n % 73l == 0l) return false; // 0 and 1 are not primes\n        if (n % 79l\
    \ == 0l) return false; // 0 and 1 are not primes\n        if (n % 83l == 0l) return\
    \ false; // 0 and 1 are not primes\n        if (n % 89l == 0l) return false; //\
    \ 0 and 1 are not primes\n        if (n % 97l == 0l) return false; // 0 and 1\
    \ are not primes\n        if (n % 101l == 0l) return false; // 0 and 1 are not\
    \ primes\n        if (n % 103l == 0l) return false; // 0 and 1 are not primes\n\
    \        if (n % 107l == 0l) return false; // 0 and 1 are not primes\n       \
    \ if (n % 113l == 0l) return false; // 0 and 1 are not primes\n        if (n %\
    \ 121l == 0l) return false; // 0 and 1 are not primes\n        if (n % 127l ==\
    \ 0l) return false; // ", "        if (n <= 1l) return false;\n        if (n ==\
    \ 2l) return true;\n        if (n % 2 == 0l) return false;\n        if (n % 3\
    \ == 0l) return false;\n        long limit = (long) Math.sqrt(n);\n        for\
    \ (long i = 3l; i * i <= limit; i += 6l) if (n % i == 0l) return false;\n    \
    \    return true;", "        if (n <= 1l) return false;\n        if (n == 2l)\
    \ return true;\n        if (n % 2 == 0l) return false;\n        if (n % 3 == 0l)\
    \ return false;\n        if (n % 5 == 0l) return false;\n        long limit =\
    \ (long) Math.sqrt(n);\n        for (long i = 3l; i <= limit; i += 2l) {\n   \
    \         if (n % i == 0l) return false;\n        }\n        return true;", " \
    \       if (n < 2l) return false; // 0 and 1 are not primes\n        if (n ==\
    \ 2l) return true;\n        if (n % 2l == 0l) return false; // even numbers are\
    \ not primes\n        if (n % 3l == 0l) return false; // prime factors of 3 are\
    \ not primes\n        if (n % 5l == 0l) return false; // prime factors of 5 are\
    \ not primes\n        if (n % 7l == 0l) return false; // prime factors of 7 are\
    \ not primes\n        long max = (long) Math.sqrt(n); // only need to test up\
    \ to sqrt(n)\n        for (long i = 2l; i <= max; i++) {\n            if (n %\
    \ i == 0l) return false; // n is not prime\n        }\n        return true;",
  "        if (n < 2l) return false; // 0 and 1 are not primes\n        if (n == 2l)\
    \ return true;\n        if (n % 2l == 0l) return false; // even numbers are not\
    \ primes\n        if (n % 3l == 0l) return false; // factors of 2 are not primes\n\
    \        long limit = (long) Math.sqrt(n); // limit is the square root of n\n\
    \        for (long i = 2l; i <= limit; i++) {\n            if (n % i == 0l) return\
    \ false; // factors of n are not primes\n        }\n        return true;", " \
    \       if (n < 2l) return false; // 0 and 1 are not primes\n        if (n ==\
    \ 2l) return true;\n        if (n % 2l == 0l) return false; // even numbers are\
    \ not primes\n        long limit = (long) Math.sqrt(n); // limit is the largest\
    \ integer less than or equal to n\n        long limitSquare = limit * limit;\n\
    \        for (long i = 2l; i <= limitSquare; i++) {\n            if (n % i ==\
    \ 0l) return false; // n is not prime\n        }\n        return true;", "   \
    \     if (n < 2l) return false; // 0 and 1 are not primes\n        if (n == 2l)\
    \ return true;\n        if (n % 2l == 0l) return false; // even numbers are not\
    \ primes\n        long limit = (long) Math.sqrt(n); // limit is the largest number\
    \ <= sqrt(n)\n        for (long i = 2l; i <= limit; i++) {\n            if (n\
    \ % i == 0l) return false; // n is not prime\n        }\n        return true;",
  "        if (n <= 1l) return false;\n        if (n == 2l) return true;\n       \
    \ if (n % 2l == 0l) return false;\n        if (n % 3l == 0l) return false;\n \
    \       if (n % 5l == 0l) return false;\n        if (n % 7l == 0l) return false;\n\
    \        if (n % 11l == 0l) return false;\n        if (n % 13l == 0l) return false;\n\
    \        if (n % 17l == 0l) return false;\n        if (n % 19l == 0l) return false;\n\
    \        if (n % 23l == 0l) return false;\n        if (n % 29l == 0l) return false;\n\
    \        if (n % 31l == 0l) return false;\n        if (n % 37l == 0l) return false;\n\
    \        if (n % 41l == 0l) return false;\n        if (n % 43l == 0l) return false;\n\
    \        if (n % 47l == 0l) return false;\n        if (n % 53l == 0l) return false;\n\
    \        if (n % 59l == 0l) return false;\n        if (n % 61l == 0l) return false;\n\
    \        if (n % 67l == 0l) return false;\n        if (n % 71l == 0l) return false;\n\
    \        if (n % 73l == 0l) return false;\n        if (n % 79l == 0l) return false;\n\
    \        if (n % 83l == 0l) return false;\n        if (n % 89l == 0l) return false;\n\
    \        if (n % 97l == 0l) return false;\n        if (n % 101l == 0l) return\
    \ false;\n        if (n % 103l == 0l) return false;\n        if (n % 107l == 0l)\
    \ return false;\n        if (n % 109l == 0l) return false;\n        if (n % 113l\
    \ == 0l) return false;\n        if (n % 117l == 0l) return false;\n        if\
    \ (n % 121l == 0l) return false;\n        if (n % 123l == 0l) return false;\n\
    \        if (n % 127l == 0l) return false;\n        if (n % 131l == 0l) return\
    \ false;\n        if (n % 137l == 0l) return false;\n        if (n % 139l == 0l)\
    \ return false;\n        if (n % 141l == 0l) return false;\n        if (n % 147l\
    \ == 0l) return false;\n        if (n % 151l == 0l) return false;\n        if\
    \ (n % 157l == 0l) return false;\n        if (n % 163l == 0l) return false;\n\
    \        if (n % 167l == 0l) return false;\n        if (n % 173l == 0l) return\
    \ false;\n        if (n % 179l == 0l) return false;\n        if (n % 181l == 0l)\
    \ return false;\n        if (n % 191l == 0l) return false;\n        if (n % 197l\
    \ == 0l) return false;\n        if (n % 199l == 0l) return false;\n        if\
    \ (n % 201l == 0l) return false;\n        if (n % 207l == 0l) return false;\n\
    \        if (n % 211l == 0l) return false;\n        if (n % 215l == 0l) return\
    \ false;\n        if (n % 223l == 0l) return false;\n        if (n % 227", " \
    \       if (n < 2l) return false; // 0 and 1 are not primes\n        if (n ==\
    \ 2l) return true;\n        if (n % 2l == 0l) return false; // even numbers are\
    \ not primes\n        long limit = (long) Math.sqrt(n); // limit is the square\
    \ root of n\n        for (long i = 2l; i <= limit; i++) {\n            if (n %\
    \ i == 0l) return false; // n is not prime\n        }\n        return true;",
  "        if (n < 2l) return false;\n        if (n == 2l) return true;\n        if\
    \ (n % 2l == 0l) return false;\n        long limit = (long) Math.sqrt(n);\n  \
    \      for (long i = 2l; i <= limit; i++) {\n            if (n % i == 0l) return\
    \ false;\n        }\n        return true;", "        if (n < 2l) return false;\
    \ // 0 and 1 are not primes\n        if (n == 2l) return true; // 2 is prime\n\
    \        if (n % 2l == 0l) return false; // even numbers aren't primes\n     \
    \   // Check odd-ness of number\n        long d = n - 1l;\n        while (d %\
    \ 2l != 0l) d /= 2l;\n        // Check odd-ness of divisors\n        for (long\
    \ d = 2l; d <= n; d += 2l) {\n            if (n % d == 0l) return false; // n\
    \ is not prime\n        }\n        return true;", "        if (n < 2l) return\
    \ false; // 0 and 1 are not primes\n        if (n == 2l) return true;\n      \
    \  if (n % 2l == 0l) return false; // even numbers are not primes\n        //\
    \ if n is odd, then n-1 must be even\n        if (n % 2l != 0l) return isPrime(n\
    \ - 1l);\n        // if n is odd, then n-1 must be even\n        if (n % 2l !=\
    \ 0l) return isPrime(n - 1l);\n        // if n is odd, then n-1 must be even\n\
    \        if (n % 2l != 0l) return isPrime(n - 1l);\n        // if n is odd, then\
    \ n-1 must be even\n        if (n % 2l != 0l) return isPrime(n - 1l);\n      \
    \  // if n is odd, then n-1 must be even\n        if (n % 2l != 0l) return isPrime(n\
    \ - 1l);\n        // if n is odd, then n-1 must be even\n        if (n % 2l !=\
    \ 0l) return isPrime(n - 1l);\n        // if n is odd, then n-1 must be even\n\
    \        if (n % 2l != 0l) return isPrime(n - 1l);\n        // if n is odd, then\
    \ n-1 must be even\n        if (n % 2l != 0l) return isPrime(n - 1l);\n      \
    \  // if n is odd, then n-1 must be even\n        if (n % 2l != 0l) return isPrime(n\
    \ - 1l);\n        // if n is odd, then n-1 must be even\n        if (n % 2l !=\
    \ 0l) return isPrime(n - 1l);\n        // if n is odd, then n-1 must be even\n\
    \        if (n % 2l != 0l) return isPrime(n - 1l);\n        // if n is odd, then\
    \ n-1 must be even\n        if (n % 2l != 0l) return isPrime(n - 1l);\n      \
    \  // if n is odd, then n-1 must be even\n        if (n % 2l != 0l) return isPrime(n\
    \ - 1l);\n        // if n is odd, then n-1 must be even\n        if (n % 2l !=\
    \ 0l) return isPrime(n - 1l);\n        // if n is odd, then n-1 must be even\n\
    \        if (n % 2l != 0l) return isPrime(n - 1l);\n        // if n is odd, then\
    \ n-1 must be even\n        if (n % 2l != 0l) return isPrime(n - 1l);\n      \
    \  // if n is odd, then n-1 must be even\n        if (n % 2l != 0l) return isPrime(n\
    \ - 1l);\n", "        if (n <= 1l) return false;\n        if (n <= 3l) return\
    \ true;\n        if (n % 2 == 0) return false;\n        if (n % 3 == 0) return\
    \ false;\n        if (n % 5 == 0) return false;\n        long limit = (long) Math.sqrt(n);\n\
    \        for (long i = 5l; i <= limit; i += 6l) if (n % i == 0) return false;\n\
    \        return true;", "        if (n < 2l) return false;\n        if (n == 2l)\
    \ return true;\n        if (n % 2l == 0l) return false;\n        long limit =\
    \ (long) Math.sqrt(n) + 2l;\n        for (long i = 2l; i <= limit; i++) {\n  \
    \          if (n % i == 0l) return false;\n        }\n        return true;", " \
    \       if (n < 2l) return false; // 0 and 1 are not primes\n        if (n ==\
    \ 2l) return true;\n        if (n % 2l == 0l) return false; // even numbers are\
    \ not primes\n        if (n % 3l == 0l) return false; // prime factors of 2 and\
    \ 3 are not primes\n        long limit = (long) Math.sqrt(n);\n        for (long\
    \ i = 2l; i <= limit; i++) {\n            if (n % i == 0l) return false; // prime\
    \ factors of n are not primes\n        }\n        return true;", "        if (n\
    \ < 2l) return false; // 0 and 1 are not primes\n        if (n == 2l) return true;\
    \ // 2 is prime\n        if (n % 2l == 0l) return false; // even numbers are not\
    \ primes\n        long limit = (long) Math.sqrt(n); // limit the search to sqrt(n)\n\
    \        for (long i = 2l; i <= limit; i++) {\n            if (n % i == 0l) return\
    \ false; // n is not prime\n        }\n        return true;", "        if (n <\
    \ 2l) return false; // 0 and 1 are not primes\n        if (n == 2l) return true;\n\
    \        if (n % 2l == 0l) return false; // even numbers are not primes\n    \
    \    long limit = (long) Math.sqrt(n); // only need to check up to sqrt(n)\n \
    \       long i = 3l; // start at 3\n        while (i <= limit) {\n           \
    \ if (n % i == 0l) return false; // odd numbers are not primes\n            i\
    \ += 2l; // only need to check odd numbers\n        }\n        return true;",
  "        if (n < 2l) return false; // 0 and 1 are not primes\n        if (n <= 3l)\
    \ return true; // 2 and 3 are primes\n        if (n % 2l == 0l) return false;\
    \ // even numbers are not primes\n        if (n % 3l == 0l) return false; // even\
    \ numbers are not primes\n        long limit = (long) Math.sqrt(n); // limit is\
    \ the square root of n\n        long i = 3l; // start at 3\n        while (i <=\
    \ limit) {\n            if (n % i == 0l) return false; // n is not prime\n   \
    \         i += 2l; // move to the next odd number\n        }\n        return true;\
    \ // n is prime", "        if (n < 2l) return false;\n        if (n == 2l) return\
    \ true;\n        if (n % 2l == 0l) return false;\n        if (n % 3l == 0l) return\
    \ false;\n        if (n % 5l == 0l) return false;\n        if (n % 7l == 0l) return\
    \ false;\n        if (n % 11l == 0l) return false;\n        if (n % 13l == 0l)\
    \ return false;\n        if (n % 17l == 0l) return false;\n        if (n % 19l\
    \ == 0l) return false;\n        if (n % 23l == 0l) return false;\n        if (n\
    \ % 29l == 0l) return false;\n        if (n % 31l == 0l) return false;\n     \
    \   if (n % 37l == 0l) return false;\n        if (n % 41l == 0l) return false;\n\
    \        if (n % 43l == 0l) return false;\n        if (n % 47l == 0l) return false;\n\
    \        if (n % 53l == 0l) return false;\n        if (n % 59l == 0l) return false;\n\
    \        if (n % 61l == 0l) return false;\n        if (n % 67l == 0l) return false;\n\
    \        if (n % 71l == 0l) return false;\n        if (n % 73l == 0l) return false;\n\
    \        if (n % 79l == 0l) return false;\n        if (n % 83l == 0l) return false;\n\
    \        if (n % 89l == 0l) return false;\n        if (n % 97l == 0l) return false;\n\
    \        if (n % 101l == 0l) return false;\n        if (n % 103l == 0l) return\
    \ false;\n        if (n % 107l == 0l) return false;\n        if (n % 109l == 0l)\
    \ return false;\n        if (n % 113l == 0l) return false;\n        if (n % 117l\
    \ == 0l) return false;\n        if (n % 121l == 0l) return false;\n        if\
    \ (n % 127l == 0l) return false;\n        if (n % 131l == 0l) return false;\n\
    \        if (n % 137l == 0l) return false;\n        if (n % 141l == 0l) return\
    \ false;\n        if (n % 147l == 0l) return false;\n        if (n % 151l == 0l)\
    \ return false;\n        if (n % 157l == 0l) return false;\n        if (n % 163l\
    \ == 0l) return false;\n        if (n % 167l == 0l) return false;\n        if\
    \ (n % 173l == 0l) return false;\n        if (n % 179l == 0l) return false;\n\
    \        if (n % 181l == 0l) return false;\n        if (n % 185l == 0l) return\
    \ false;\n        if (n % 189l == 0l) return false;\n        if (n % 193l == 0l)\
    \ return false;\n        if (n % 197l == 0l) return false;\n        if (n % 201l\
    \ == 0l) return false;\n        if (n % 207l == 0l) return false;\n        if\
    \ (n % 211l == 0l) return false;\n        if (n % 215l == 0l) return false;\n\
    \        if (n % 219l == 0l) return false;\n        if (n % 223l == 0l) return\
    \ false;\n        if (n % 227l ", "        if (n < 2l) return false; // 0 and\
    \ 1 are not primes\n        if (n <= 3l) return true; // 2 and 3 are primes\n\
    \        if (n % 2 == 0) return false; // even numbers are not primes\n      \
    \  if (n % 3 == 0) return false; // divisible by 3\n        long limit = (long)\
    \ Math.sqrt(n); // only need to check up to sqrt(n)\n        for (int i = 3l;\
    \ i <= limit; i += 2l) { // only need to check odd numbers\n            if (n\
    \ % i == 0) return false; // divisible by i\n        }\n        return true; //\
    \ n is prime", "        if (n < 2l) return false; // 0 or 1 are not primes\n \
    \       if (n == 2l) return true;\n        if (n % 2l == 0l) return false; //\
    \ even numbers are not primes\n        if (n % 3l == 0l) return false; // multiple\
    \ of 3 is not primes\n        if (n % 5l == 0l) return false; // multiple of 5\
    \ is not primes\n        if (n % 7l == 0l) return false; // multiple of 7 is not\
    \ primes\n        if (n % 11l == 0l) return false; // multiple of 11 is not primes\n\
    \        if (n % 13l == 0l) return false; // multiple of 13 is not primes\n  \
    \      if (n % 17l == 0l) return false; // multiple of 17 is not primes\n    \
    \    if (n % 19l == 0l) return false; // multiple of 19 is not primes\n      \
    \  if (n % 23l == 0l) return false; // multiple of 23 is not primes\n        if\
    \ (n % 29l == 0l) return false; // multiple of 29 is not primes\n        if (n\
    \ % 31l == 0l) return false; // multiple of 31 is not primes\n        if (n %\
    \ 37l == 0l) return false; // multiple of 37 is not primes\n        if (n % 41l\
    \ == 0l) return false; // multiple of 41 is not primes\n        if (n % 43l ==\
    \ 0l) return false; // multiple of 43 is not primes\n        if (n % 47l == 0l)\
    \ return false; // multiple of 47 is not primes\n        if (n % 53l == 0l) return\
    \ false; // multiple of 53 is not primes\n        if (n % 59l == 0l) return false;\
    \ // multiple of 59 is not primes\n        if (n % 61l == 0l) return false; //\
    \ multiple of 61 is not primes\n        if (n % 67l == 0l) return false; // multiple\
    \ of 67 is not primes\n        if (n % 71l == 0l) return false; // multiple of\
    \ 71 is not primes\n        if (n % 73l == 0l) return false; // multiple of 73\
    \ is not primes\n        if (n % 79l == 0l) return false; // multiple of 79 is\
    \ not primes\n        if (n % 83l == 0l) return false; // multiple of 83 is not\
    \ primes\n        if (n % 89l == 0l) return false; // multiple of 89 is not primes\n\
    \        if (n % 97l == 0l) return false; // multiple of 97 is not primes\n  \
    \      if (n % 101l == 0l) return false; // multiple of 101 is not primes\n  \
    \      if (n % 103l == 0l) return false; // multiple of 103 is not primes\n  \
    \      if (n % 107l == 0l) return false; // multiple of 107 is not primes\n  \
    \      if (n % 109l == 0l) return false; // multiple of 109 is not primes\n  \
    \      if (n % 113l == 0l) return false; // multiple of 113 is not primes\n  \
    \      if (n % 127l == 0", "        if (n <= 1l) return false;\n        if (n\
    \ <= 3l) return true;\n        if (n % 2 == 0 || n % 3 == 0) return false;\n \
    \       long limit = (long) Math.sqrt(n);\n        for (long i = 3l; i * i <=\
    \ limit; i += 6l) if (n % i == 0 || n % (i + 2) == 0) return false;\n        return\
    \ true;", "        if (n < 2l) return false; // 0 or 1 are not primes\n      \
    \  if (n <= 3l) return true; // 2 and 3 are primes\n        if (n % 2l == 0l)\
    \ return false; // even numbers are not primes\n        if (n % 3l == 0l) return\
    \ false; // multiple of 3 are not primes\n        long limit = (long) Math.sqrt(n)\
    \ + 1l;\n        for (long i = 2l; i <= limit; i += 2l) {\n            if (n %\
    \ i == 0l) return false; // not a prime\n        }\n        return true;", " \
    \       if (n < 2l) return false;\n        if (n == 2l) return true;\n       \
    \ if (n % 2l == 0l) return false;\n        if (n % 3l == 0l) return false;\n \
    \       if (n % 5l == 0l) return false;\n        if (n % 7l == 0l) return false;\n\
    \        if (n % 11l == 0l) return false;\n        if (n % 13l == 0l) return false;\n\
    \        if (n % 17l == 0l) return false;\n        if (n % 19l == 0l) return false;\n\
    \        if (n % 23l == 0l) return false;\n        if (n % 29l == 0l) return false;\n\
    \        if (n % 31l == 0l) return false;\n        if (n % 37l == 0l) return false;\n\
    \        if (n % 41l == 0l) return false;\n        if (n % 43l == 0l) return false;\n\
    \        if (n % 47l == 0l) return false;\n        if (n % 53l == 0l) return false;\n\
    \        if (n % 59l == 0l) return false;\n        if (n % 61l == 0l) return false;\n\
    \        if (n % 67l == 0l) return false;\n        if (n % 71l == 0l) return false;\n\
    \        if (n % 73l == 0l) return false;\n        if (n % 79l == 0l) return false;\n\
    \        if (n % 83l == 0l) return false;\n        if (n % 89l == 0l) return false;\n\
    \        if (n % 97l == 0l) return false;\n        if (n % 101l == 0l) return\
    \ false;\n        if (n % 103l == 0l) return false;\n        if (n % 107l == 0l)\
    \ return false;\n        if (n % 113l == 0l) return false;\n        if (n % 121l\
    \ == 0l) return false;\n        if (n % 127l == 0l) return false;\n        if\
    \ (n % 131l == 0l) return false;\n        if (n % 137l == 0l) return false;\n\
    \        if (n % 141l == 0l) return false;\n        if (n % 147l == 0l) return\
    \ false;\n        if (n % 151l == 0l) return false;\n        if (n % 157l == 0l)\
    \ return false;\n        if (n % 161l == 0l) return false;\n        if (n % 163l\
    \ == 0l) return false;\n        if (n % 167l == 0l) return false;\n        if\
    \ (n % 173l == 0l) return false;\n        if (n % 179l == 0l) return false;\n\
    \        if (n % 181l == 0l) return false;\n        if (n % 191l == 0l) return\
    \ false;\n        if (n % 197l == 0l) return false;\n        if (n % 201l == 0l)\
    \ return false;\n        if (n % 207l == 0l) return false;\n        if (n % 211l\
    \ == 0l) return false;\n        if (n % 215l == 0l) return false;\n        if\
    \ (n % 221l == 0l) return false;\n        if (n % 227l == 0l) return false;\n\
    \        if (n % 231l == 0l) return false;\n        if (n % 237l == 0l) return\
    \ false;\n        if (n % 241l == 0l) return false;\n        if (", "        if\
    \ (n < 2l) return false; // 0 and 1 are not primes\n        if (n <= 3l) return\
    \ true;\n        if (n % 2l == 0l) return false; // even numbers are not primes\n\
    \        if (n % 3l == 0l) return false; // even numbers are not primes\n    \
    \    long limit = (long) Math.sqrt(n); // limit is the square root of n\n    \
    \    for (long i = 2l; i <= limit; i++) {\n            if (n % i == 0l) return\
    \ false; // n is not prime\n        }\n        return true;", "        if (n <\
    \ 2l) return false; // 0 or 1 are not primes\n        if (n == 2l) return true;\n\
    \        if (n % 2l == 0l) return false; // even numbers are not primes\n    \
    \    if (n % 3l == 0l) return false; // prime factors of 3 are not primes\n  \
    \      if (n % 5l == 0l) return false; // prime factors of 5 are not primes\n\
    \        if (n % 7l == 0l) return false; // prime factors of 7 are not primes\n\
    \        if (n % 11l == 0l) return false; // prime factors of 11 are not primes\n\
    \        if (n % 13l == 0l) return false; // prime factors of 13 are not primes\n\
    \        if (n % 17l == 0l) return false; // prime factors of 17 are not primes\n\
    \        if (n % 19l == 0l) return false; // prime factors of 19 are not primes\n\
    \        if (n % 23l == 0l) return false; // prime factors of 23 are not primes\n\
    \        if (n % 29l == 0l) return false; // prime factors of 29 are not primes\n\
    \        if (n % 31l == 0l) return false; // prime factors of 31 are not primes\n\
    \        if (n % 37l == 0l) return false; // prime factors of 37 are not primes\n\
    \        if (n % 41l == 0l) return false; // prime factors of 41 are not primes\n\
    \        if (n % 43l == 0l) return false; // prime factors of 43 are not primes\n\
    \        if (n % 47l == 0l) return false; // prime factors of 47 are not primes\n\
    \        if (n % 53l == 0l) return false; // prime factors of 53 are not primes\n\
    \        if (n % 59l == 0l) return false; // prime factors of 59 are not primes\n\
    \        if (n % 61l == 0l) return false; // prime factors of 61 are not primes\n\
    \        if (n % 67l == 0l) return false; // prime factors of 67 are not primes\n\
    \        if (n % 71l == 0l) return false; // prime factors of 71 are not primes\n\
    \        if (n % 73l == 0l) return false; // prime factors of 73 are not primes\n\
    \        if (n % 79l == 0l) return false; // prime factors of 79 are not primes\n\
    \        if (n % 83l == 0l) return false; // prime factors of 83 are not primes\n\
    \        if (n % 89l == 0l) return false; // prime factors of 89 are not primes\n\
    \        if (n % 97l == 0l) return false; // prime factors of 97 are not primes\n\
    \        if (n % 101l == 0l) return false; // prime factors of 101 are not primes\n\
    \        if (n % 103l == 0l) return false; // prime factor", "        if (n <\
    \ 2l) return false; // 0 or 1 are not primes\n        if (n == 2l) return true;\n\
    \        if (n % 2l == 0l) return false; // even numbers are not primes\n    \
    \    if (n % 3l == 0l) return false; // multiple of 3 is not primes\n        if\
    \ (n % 5l == 0l) return false; // multiple of 5 is not primes\n        if (n %\
    \ 7l == 0l) return false; // multiple of 7 is not primes\n        long max = (long)\
    \ Math.sqrt(n); // only need to check up to sqrt(n)\n        for (int i = 3l;\
    \ i <= max; i += 2l) { // only need to check odd numbers\n            if (n %\
    \ i == 0l) return false; // not prime\n        }\n        return true;", "   \
    \     if (n < 2l) return false; // 0 or 1 are not primes\n        if (n == 2l)\
    \ return true;\n        if (n % 2l == 0l) return false; // even numbers are not\
    \ primes\n        if (n % 3l == 0l) return false; // prime factors of 3 are not\
    \ primes\n        if (n % 5l == 0l) return false; // prime factors of 5 are not\
    \ primes\n        if (n % 7l == 0l) return false; // prime factors of 7 are not\
    \ primes\n        if (n % 11l == 0l) return false; // prime factors of 11 are\
    \ not primes\n        if (n % 13l == 0l) return false; // prime factors of 13\
    \ are not primes\n        if (n % 17l == 0l) return false; // prime factors of\
    \ 17 are not primes\n        if (n % 19l == 0l) return false; // prime factors\
    \ of 19 are not primes\n        if (n % 23l == 0l) return false; // prime factors\
    \ of 23 are not primes\n        if (n % 29l == 0l) return false; // prime factors\
    \ of 29 are not primes\n        if (n % 31l == 0l) return false; // prime factors\
    \ of 31 are not primes\n        if (n % 37l == 0l) return false; // prime factors\
    \ of 37 are not primes\n        if (n % 41l == 0l) return false; // prime factors\
    \ of 41 are not primes\n        if (n % 43l == 0l) return false; // prime factors\
    \ of 43 are not primes\n        if (n % 47l == 0l) return false; // prime factors\
    \ of 47 are not primes\n        if (n % 53l == 0l) return false; // prime factors\
    \ of 53 are not primes\n        if (n % 59l == 0l) return false; // prime factors\
    \ of 59 are not primes\n        if (n % 61l == 0l) return false; // prime factors\
    \ of 61 are not primes\n        if (n % 67l == 0l) return false; // prime factors\
    \ of 67 are not primes\n        if (n % 71l == 0l) return false; // prime factors\
    \ of 71 are not primes\n        if (n % 73l == 0l) return false; // prime factors\
    \ of 73 are not primes\n        if (n % 79l == 0l) return false; // prime factors\
    \ of 79 are not primes\n        if (n % 83l == 0l) return false; // prime factors\
    \ of 83 are not primes\n        if (n % 89l == 0l) return false; // prime factors\
    \ of 89 are not primes\n        if (n % 97l == 0l) return false; // prime factors\
    \ of 97 are not primes\n        if (n % 101l == 0l) return false; // prime factors\
    \ of 101 are not primes\n        if (n % 103l == 0l) return false; // prime factor",
  "        if (n <= 1l) return false;\n        if (n == 2l) return true;\n       \
    \ if (n % 2 == 0) return false;\n        if (n % 3 == 0) return false;\n     \
    \   if (n % 5 == 0) return false;\n        long limit = (long) Math.sqrt(n);\n\
    \        for (int i = 3l; i <= limit; i += 6l) if (n % i == 0l) return false;\n\
    \        return true;", "        if (n < 2l) return false; // 0 and 1 are not\
    \ primes\n        if (n == 2l) return true; // 2 is prime\n        if (n % 2l\
    \ == 0l) return false; // even numbers are not primes\n        if (n % 3l == 0l)\
    \ return false; // prime factors of 3 are not primes\n        long limit = (long)\
    \ Math.sqrt(n); // n is prime if sqrt(n) is a whole number\n        for (long\
    \ i = 2l; i <= limit; i++) {\n            if (n % i == 0l) return false; // n\
    \ is not prime if any factor of n is even\n        }\n        return true;", " \
    \       if (n < 2l) return false;\n        if (n == 2l) return true;\n       \
    \ if (n % 2l == 0l) return false;\n        if (n % 3l == 0l) return false;\n \
    \       if (n % 5l == 0l) return false;\n        if (n % 7l == 0l) return false;\n\
    \        if (n % 11l == 0l) return false;\n        if (n % 13l == 0l) return false;\n\
    \        if (n % 17l == 0l) return false;\n        if (n % 19l == 0l) return false;\n\
    \        if (n % 23l == 0l) return false;\n        if (n % 29l == 0l) return false;\n\
    \        if (n % 31l == 0l) return false;\n        if (n % 37l == 0l) return false;\n\
    \        if (n % 41l == 0l) return false;\n        if (n % 43l == 0l) return false;\n\
    \        if (n % 47l == 0l) return false;\n        if (n % 53l == 0l) return false;\n\
    \        if (n % 59l == 0l) return false;\n        if (n % 61l == 0l) return false;\n\
    \        if (n % 67l == 0l) return false;\n        if (n % 71l == 0l) return false;\n\
    \        if (n % 73l == 0l) return false;\n        if (n % 79l == 0l) return false;\n\
    \        if (n % 83l == 0l) return false;\n        if (n % 89l == 0l) return false;\n\
    \        if (n % 97l == 0l) return false;\n        if (n % 101l == 0l) return\
    \ false;\n        if (n % 103l == 0l) return false;\n        if (n % 107l == 0l)\
    \ return false;\n        if (n % 109l == 0l) return false;\n        if (n % 113l\
    \ == 0l) return false;\n        if (n % 117l == 0l) return false;\n        if\
    \ (n % 121l == 0l) return false;\n        if (n % 123l == 0l) return false;\n\
    \        if (n % 127l == 0l) return false;\n        if (n % 131l == 0l) return\
    \ false;\n        if (n % 137l == 0l) return false;\n        if (n % 139l == 0l)\
    \ return false;\n        if (n % 141l == 0l) return false;\n        if (n % 147l\
    \ == 0l) return false;\n        if (n % 151l == 0l) return false;\n        if\
    \ (n % 157l == 0l) return false;\n        if (n % 163l == 0l) return false;\n\
    \        if (n % 167l == 0l) return false;\n        if (n % 173l == 0l) return\
    \ false;\n        if (n % 179l == 0l) return false;\n        if (n % 181l == 0l)\
    \ return false;\n        if (n % 191l == 0l) return false;\n        if (n % 197l\
    \ == 0l) return false;\n        if (n % 199l == 0l) return false;\n        if\
    \ (n % 201l == 0l) return false;\n        if (n % 207l == 0l) return false;\n\
    \        if (n % 211l == 0l) return false;\n        if (n % 215l == 0l) return\
    \ false;\n        if (n % 217l == 0l) return false;\n        if (n % 223l ", " \
    \       if (n < 2l) return false; // 0 or 1 are not primes\n        if (n == 2l)\
    \ return true;\n        if (n % 2l == 0l) return false; // even numbers are not\
    \ primes\n        long limit = (long) (Math.sqrt(n));\n        long limit2 = (long)\
    \ (Math.sqrt(n + 1l));\n        long limit3 = (long) (Math.sqrt(n + 2l));\n  \
    \      long limit4 = (long) (Math.sqrt(n + 3l));\n        long limit5 = (long)\
    \ (Math.sqrt(n + 4l));\n        long limit6 = (long) (Math.sqrt(n + 5l));\n  \
    \      long limit7 = (long) (Math.sqrt(n + 6l));\n        long limit8 = (long)\
    \ (Math.sqrt(n + 7l));\n        long limit9 = (long) (Math.sqrt(n + 8l));\n  \
    \      long limit10 = (long) (Math.sqrt(n + 9l));\n        long limit11 = (long)\
    \ (Math.sqrt(n + 10l));\n        long limit12 = (long) (Math.sqrt(n + 11l));\n\
    \        long limit13 = (long) (Math.sqrt(n + 12l));\n        long limit14 = (long)\
    \ (Math.sqrt(n + 13l));\n        long limit15 = (long) (Math.sqrt(n + 14l));\n\
    \        long limit16 = (long) (Math.sqrt(n + 15l));\n        long limit17 = (long)\
    \ (Math.sqrt(n + 16l));\n        long limit18 = (long) (Math.sqrt(n + 17l));\n\
    \        long limit19 = (long) (Math.sqrt(n + 18l));\n        long limit20 = (long)\
    \ (Math.sqrt(n + 19l));\n        long limit21 = (long) (Math.sqrt(n + 20l));\n\
    \        long limit22 = (long) (Math.sqrt(n + 21l));\n        long limit23 = (long)\
    \ (Math.sqrt(n + 22l));\n        long limit24 = (long) (Math.sqrt(n + 23l));\n\
    \        long limit25 = (long) (Math.sqrt(n + 24l));\n        long limit26 = (long)\
    \ (Math.sqrt(n + 25l));\n        long limit27 = (long) (Math.sqrt(n + 26l));\n\
    \        long limit28 = (long) (Math.sqrt(n + 27l));\n        long limit29 = (long)\
    \ (Math.sqrt(n + 28l));\n        long limit30 = (long) (Math.sqrt(n + 29l));\n\
    \        long limit31 = (long) (Math.sqrt(n + 30l));\n        long limit32 = (long)\
    \ (Math.sqrt(n + 31l));\n        long limit33 = (long) (Math.sqrt(n + 32l));\n\
    \        long limit34 = (long) (Math.sqrt(n + 33l));\n        long limit35", " \
    \       if (n < 2l) return false; // 0 and 1 are not primes\n        if (n < 3l)\
    \ return true;\n        if (n % 2l == 0l) return false; // even numbers are not\
    \ primes\n        if (n % 3l == 0l) return false; // prime factors of 2 and 3\
    \ are not primes\n        long limit = (long) Math.sqrt(n); // limit is the square\
    \ root of n\n        for (long i = 2l; i <= limit; i++) {\n            if (n %\
    \ i == 0l) return false; // n is not prime\n        }\n        return true;",
  "        if (n < 2l) return false; // 0 or 1 are not primes.\n        if (n == 2l)\
    \ return true;\n        if (n % 2l == 0l) return false; // even numbers are not\
    \ primes.\n        if (n % 3l == 0l) return false; // prime factors of 3 are not\
    \ primes.\n        long limit = (long) Math.sqrt(n); // limit the search to sqrt(n).\n\
    \        long i = 3l; // start at 3\n        while (i <= limit) {\n          \
    \  if (n % i == 0l) return false; // n is not prime.\n            if (i == 3l)\
    \ return true; // if we get to 3, n is prime.\n            i += 2l; // increment\
    \ by 2\n        }\n        return true; // if we get to sqrt(n), n is prime.",
  "        if (n < 2l) return false; // 0 and 1 are not primes\n        if (n == 2l)\
    \ return true;\n        if (n % 2l == 0l) return false; // even numbers are not\
    \ primes\n        if (n % 3l == 0l) return false; // prime factors of 3 are not\
    \ primes\n        long limit = (long) Math.sqrt(n);\n        for (long i = 2l;\
    \ i <= limit; i++) {\n            if (n % i == 0l) return false; // prime factors\
    \ of i are not primes\n        }\n        return true;", "        if (n < 2l)\
    \ return false; // 0 and 1 are not primes\n        if (n < 3l) return true;\n\
    \        if (n % 2l == 0l) return false; // even numbers are not primes\n    \
    \    if (n % 3l == 0l) return false; // even numbers are not primes\n        long\
    \ limit = (long) Math.sqrt(n); // limit is the square root of n\n        long\
    \ i = 3l;\n        while (i <= limit) {\n            if (n % i == 0l) return false;\
    \ // n is not prime\n            if (i == 3l) return true; // n is prime\n   \
    \         i += 2l;\n        }\n        return true;", "        if (n < 2l) return\
    \ false; // 0 and 1 are not primes\n        if (n == 2l) return true;\n      \
    \  if (n % 2l == 0l) return false; // even numbers are not primes\n        if\
    \ (n % 3l == 0l) return false; // prime factors of 3 are not primes\n        long\
    \ limit = (long) Math.sqrt(n); // limit is the largest prime factor of n\n   \
    \     for (long i = 2l; i <= limit; i++) {\n            if (n % i == 0l) return\
    \ false; // n is not prime\n        }\n        return true;", "        if (n <\
    \ 2l) return false; // 0 and 1 are not primes\n        if (n == 2l) return true;\n\
    \        if (n % 2l == 0l) return false; // even numbers are not primes\n    \
    \    if (n % 3l == 0l) return false; // prime factors of 3 are not primes\n  \
    \      if (n % 5l == 0l) return false; // prime factors of 5 are not primes\n\
    \        long sqrtN = Math.sqrt(n); // only need to check up to sqrt(n)\n    \
    \    for (long i = 6l; i <= sqrtN; i += 6l) { // only need to check odd numbers\n\
    \            if (n % i == 0l) return false; // n is not prime\n        }\n   \
    \     return true;", "        if (n < 2l) return false; // 0 and 1 are not primes\n\
    \        if (n == 2l) return true;\n        if (n % 2l == 0l) return false; //\
    \ even numbers are not primes\n        if (n % 3l == 0l) return false; // prime\
    \ factors other than 2 and 3 are not primes\n        long limit = (long) Math.sqrt(n);\
    \ // limit is the square root of n\n        long i = 3l;\n        while (i <=\
    \ limit) {\n            if (n % i == 0l) return false; // n is not prime\n   \
    \         if (i == 3l) return true; // n is prime\n            i += 2l;\n    \
    \    }\n        return true; // n is prime", "        if (n <= 1l) return false;\n\
    \        if (n <= 3l) return true;\n        if (n % 2 == 0 || n % 3 == 0) return\
    \ false;\n        long limit = (long) Math.sqrt(n);\n        long i = 3l;\n  \
    \      while (i <= limit) {\n            if (n % i == 0 || n % (i + 2) == 0) return\
    \ false;\n            i += 6l;\n        }\n        return true;", "        if\
    \ (n < 2l) return false; // 0 and 1 are not primes\n        if (n == 2l) return\
    \ true; // 2 is prime\n        if (n % 2l == 0l) return false; // even numbers\
    \ are not primes\n        if (n % 3l == 0l) return false; // divisible by 3\n\
    \        long limit = (long) Math.sqrt(n); // limit is the square root of n\n\
    \        for (int i = 3l; i * i <= limit; i += 2l) { // i is prime\n         \
    \   if (n % i == 0l) return false; // n is not prime\n        }\n        return\
    \ true;", "        if (n <= 1l) return false;\n        if (n == 2l) return true;\n\
    \        if (n % 2l == 0l) return false;\n        if (n % 3l == 0l) return false;\n\
    \        if (n % 5l == 0l) return false;\n        if (n % 7l == 0l) return false;\n\
    \        if (n % 11l == 0l) return false;\n        if (n % 13l == 0l) return false;\n\
    \        if (n % 17l == 0l) return false;\n        if (n % 19l == 0l) return false;\n\
    \        if (n % 23l == 0l) return false;\n        if (n % 29l == 0l) return false;\n\
    \        if (n % 31l == 0l) return false;\n        if (n % 37l == 0l) return false;\n\
    \        if (n % 41l == 0l) return false;\n        if (n % 43l == 0l) return false;\n\
    \        if (n % 47l == 0l) return false;\n        if (n % 53l == 0l) return false;\n\
    \        if (n % 59l == 0l) return false;\n        if (n % 61l == 0l) return false;\n\
    \        if (n % 67l == 0l) return false;\n        if (n % 71l == 0l) return false;\n\
    \        if (n % 73l == 0l) return false;\n        if (n % 79l == 0l) return false;\n\
    \        if (n % 83l == 0l) return false;\n        if (n % 89l == 0l) return false;\n\
    \        if (n % 97l == 0l) return false;\n        if (n % 101l == 0l) return\
    \ false;\n        if (n % 103l == 0l) return false;\n        if (n % 107l == 0l)\
    \ return false;\n        if (n % 109l == 0l) return false;\n        if (n % 113l\
    \ == 0l) return false;\n        if (n % 127l == 0l) return false;\n        if\
    \ (n % 131l == 0l) return false;\n        if (n % 137l == 0l) return false;\n\
    \        if (n % 139l == 0l) return false;\n        if (n % 141l == 0l) return\
    \ false;\n        if (n % 147l == 0l) return false;\n        if (n % 149l == 0l)\
    \ return false;\n        if (n % 151l == 0l) return false;\n        if (n % 157l\
    \ == 0l) return false;\n        if (n % 163l == 0l) return false;\n        if\
    \ (n % 167l == 0l) return false;\n        if (n % 173l == 0l) return false;\n\
    \        if (n % 179l == 0l) return false;\n        if (n % 181l == 0l) return\
    \ false;\n        if (n % 191l == 0l) return false;\n        if (n % 197l == 0l)\
    \ return false;\n        if (n % 199l == 0l) return false;\n        if (n % 201l\
    \ == 0l) return false;\n        if (n % 207l == 0l) return false;\n        if\
    \ (n % 211l == 0l) return false;\n        if (n % 215l == 0l) return false;\n\
    \        if (n % 217l == 0l) return false;\n        if (n % 223l == 0l) return\
    \ false;\n        if (n % 227l == 0l) return false;\n        if (n % 229l ", " \
    \       if (n < 2l) return false;\n        if (n == 2l) return true;\n       \
    \ if (n % 2l == 0l) return false;\n        if (n % 3l == 0l) return false;\n \
    \       if (n % 5l == 0l) return false;\n        if (n % 7l == 0l) return false;\n\
    \        if (n % 11l == 0l) return false;\n        if (n % 13l == 0l) return false;\n\
    \        if (n % 17l == 0l) return false;\n        if (n % 19l == 0l) return false;\n\
    \        if (n % 23l == 0l) return false;\n        if (n % 29l == 0l) return false;\n\
    \        if (n % 31l == 0l) return false;\n        if (n % 37l == 0l) return false;\n\
    \        if (n % 41l == 0l) return false;\n        if (n % 43l == 0l) return false;\n\
    \        if (n % 47l == 0l) return false;\n        if (n % 53l == 0l) return false;\n\
    \        if (n % 59l == 0l) return false;\n        if (n % 61l == 0l) return false;\n\
    \        if (n % 67l == 0l) return false;\n        if (n % 71l == 0l) return false;\n\
    \        if (n % 73l == 0l) return false;\n        if (n % 79l == 0l) return false;\n\
    \        if (n % 83l == 0l) return false;\n        if (n % 89l == 0l) return false;\n\
    \        if (n % 97l == 0l) return false;\n        if (n % 101l == 0l) return\
    \ false;\n        if (n % 103l == 0l) return false;\n        if (n % 107l == 0l)\
    \ return false;\n        if (n % 109l == 0l) return false;\n        if (n % 113l\
    \ == 0l) return false;\n        if (n % 127l == 0l) return false;\n        if\
    \ (n % 131l == 0l) return false;\n        if (n % 137l == 0l) return false;\n\
    \        if (n % 139l == 0l) return false;\n        if (n % 141l == 0l) return\
    \ false;\n        if (n % 147l == 0l) return false;\n        if (n % 149l == 0l)\
    \ return false;\n        if (n % 151l == 0l) return false;\n        if (n % 157l\
    \ == 0l) return false;\n        if (n % 163l == 0l) return false;\n        if\
    \ (n % 167l == 0l) return false;\n        if (n % 171l == 0l) return false;\n\
    \        if (n % 177l == 0l) return false;\n        if (n % 181l == 0l) return\
    \ false;\n        if (n % 191l == 0l) return false;\n        if (n % 197l == 0l)\
    \ return false;\n        if (n % 199l == 0l) return false;\n        if (n % 201l\
    \ == 0l) return false;\n        if (n % 207l == 0l) return false;\n        if\
    \ (n % 211l == 0l) return false;\n        if (n % 215l == 0l) return false;\n\
    \        if (n % 221l == 0l) return false;\n        if (n % 227l == 0l) return\
    \ false;\n        if (n % 229l == 0l) return false;\n        if (n % 233l == ",
  "        if (n < 2l) return false; // 0 and 1 are not primes.\n        if (n ==\
    \ 2l) return true;\n        if (n % 2l == 0l) return false; // even numbers are\
    \ not primes.\n        if (n % 3l == 0l) return false; // prime factors of 3 are\
    \ 2 and 1.\n        long limit = (long) Math.sqrt(n); // limit is the largest\
    \ integer less than or equal to n.\n        long limit2 = limit + 1l; // limit2\
    \ is the smallest integer greater than or equal to limit.\n        for (long i\
    \ = 2l; i <= limit2l; i++) {\n            if (n % i == 0l) return false; // n\
    \ is not prime.\n        }\n        return true;", "        if (n <= 1l) return\
    \ false;\n        if (n == 2l) return true;\n        if (n % 2l == 0l) return\
    \ false;\n        if (n % 3l == 0l) return false;\n        if (n % 5l == 0l) return\
    \ false;\n        if (n % 7l == 0l) return false;\n        if (n % 11l == 0l)\
    \ return false;\n        if (n % 13l == 0l) return false;\n        if (n % 17l\
    \ == 0l) return false;\n        if (n % 19l == 0l) return false;\n        if (n\
    \ % 23l == 0l) return false;\n        if (n % 29l == 0l) return false;\n     \
    \   if (n % 31l == 0l) return false;\n        if (n % 37l == 0l) return false;\n\
    \        if (n % 41l == 0l) return false;\n        if (n % 43l == 0l) return false;\n\
    \        if (n % 47l == 0l) return false;\n        if (n % 53l == 0l) return false;\n\
    \        if (n % 59l == 0l) return false;\n        if (n % 61l == 0l) return false;\n\
    \        if (n % 67l == 0l) return false;\n        if (n % 71l == 0l) return false;\n\
    \        if (n % 73l == 0l) return false;\n        if (n % 79l == 0l) return false;\n\
    \        if (n % 83l == 0l) return false;\n        if (n % 89l == 0l) return false;\n\
    \        if (n % 97l == 0l) return false;\n        if (n % 101l == 0l) return\
    \ false;\n        if (n % 103l == 0l) return false;\n        if (n % 107l == 0l)\
    \ return false;\n        if (n % 109l == 0l) return false;\n        if (n % 113l\
    \ == 0l) return false;\n        if (n % 117l == 0l) return false;\n        if\
    \ (n % 121l == 0l) return false;\n        if (n % 127l == 0l) return false;\n\
    \        if (n % 131l == 0l) return false;\n        if (n % 137l == 0l) return\
    \ false;\n        if (n % 141l == 0l) return false;\n        if (n % 147l == 0l)\
    \ return false;\n        if (n % 151l == 0l) return false;\n        if (n % 157l\
    \ == 0l) return false;\n        if (n % 161l == 0l) return false;\n        if\
    \ (n % 163l == 0l) return false;\n        if (n % 167l == 0l) return false;\n\
    \        if (n % 173l == 0l) return false;\n        if (n % 177l == 0l) return\
    \ false;\n        if (n % 181l == 0l) return false;\n        if (n % 191l == 0l)\
    \ return false;\n        if (n % 197l == 0l) return false;\n        if (n % 201l\
    \ == 0l) return false;\n        if (n % 207l == 0l) return false;\n        if\
    \ (n % 211l == 0l) return false;\n        if (n % 215l == 0l) return false;\n\
    \        if (n % 221l == 0l) return false;\n        if (n % 227l == 0l) return\
    \ false;\n        if (n % 231l == 0l) return false;\n        if (", "        if\
    \ (n <= 1l) return false;\n        if (n == 2l) return true;\n        if (n %\
    \ 2l == 0l) return false;\n        if (n % 3l == 0l) return false;\n        if\
    \ (n % 5l == 0l) return false;\n        if (n % 7l == 0l) return false;\n    \
    \    if (n % 11l == 0l) return false;\n        if (n % 13l == 0l) return false;\n\
    \        if (n % 17l == 0l) return false;\n        if (n % 19l == 0l) return false;\n\
    \        if (n % 23l == 0l) return false;\n        if (n % 29l == 0l) return false;\n\
    \        if (n % 31l == 0l) return false;\n        if (n % 37l == 0l) return false;\n\
    \        if (n % 41l == 0l) return false;\n        if (n % 43l == 0l) return false;\n\
    \        if (n % 47l == 0l) return false;\n        if (n % 53l == 0l) return false;\n\
    \        if (n % 59l == 0l) return false;\n        if (n % 61l == 0l) return false;\n\
    \        if (n % 67l == 0l) return false;\n        if (n % 71l == 0l) return false;\n\
    \        if (n % 73l == 0l) return false;\n        if (n % 79l == 0l) return false;\n\
    \        if (n % 83l == 0l) return false;\n        if (n % 89l == 0l) return false;\n\
    \        if (n % 97l == 0l) return false;\n        if (n % 101l == 0l) return\
    \ false;\n        if (n % 103l == 0l) return false;\n        if (n % 107l == 0l)\
    \ return false;\n        if (n % 109l == 0l) return false;\n        if (n % 113l\
    \ == 0l) return false;\n        if (n % 117l == 0l) return false;\n        if\
    \ (n % 121l == 0l) return false;\n        if (n % 123l == 0l) return false;\n\
    \        if (n % 127l == 0l) return false;\n        if (n % 131l == 0l) return\
    \ false;\n        if (n % 137l == 0l) return false;\n        if (n % 139l == 0l)\
    \ return false;\n        if (n % 141l == 0l) return false;\n        if (n % 147l\
    \ == 0l) return false;\n        if (n % 151l == 0l) return false;\n        if\
    \ (n % 157l == 0l) return false;\n        if (n % 163l == 0l) return false;\n\
    \        if (n % 167l == 0l) return false;\n        if (n % 173l == 0l) return\
    \ false;\n        if (n % 179l == 0l) return false;\n        if (n % 181l == 0l)\
    \ return false;\n        if (n % 191l == 0l) return false;\n        if (n % 197l\
    \ == 0l) return false;\n        if (n % 199l == 0l) return false;\n        if\
    \ (n % 211l == 0l) return false;\n        if (n % 223l == 0l) return false;\n\
    \        if (n % 227l == 0l) return false;\n        if (n % 229l == 0l) return\
    \ false;\n        if (n % 233l == 0l) return false;\n        if (n % 239", " \
    \       if (n < 2l) return false;\n        if (n == 2l) return true;\n       \
    \ if (n % 2l == 0l) return false;\n        if (n % 3l == 0l) return false;\n \
    \       if (n % 5l == 0l) return false;\n        if (n % 7l == 0l) return false;\n\
    \        if (n % 11l == 0l) return false;\n        if (n % 13l == 0l) return false;\n\
    \        if (n % 17l == 0l) return false;\n        if (n % 19l == 0l) return false;\n\
    \        if (n % 23l == 0l) return false;\n        if (n % 29l == 0l) return false;\n\
    \        if (n % 31l == 0l) return false;\n        if (n % 37l == 0l) return false;\n\
    \        if (n % 41l == 0l) return false;\n        if (n % 43l == 0l) return false;\n\
    \        if (n % 47l == 0l) return false;\n        if (n % 53l == 0l) return false;\n\
    \        if (n % 59l == 0l) return false;\n        if (n % 61l == 0l) return false;\n\
    \        if (n % 67l == 0l) return false;\n        if (n % 71l == 0l) return false;\n\
    \        if (n % 73l == 0l) return false;\n        if (n % 79l == 0l) return false;\n\
    \        if (n % 83l == 0l) return false;\n        if (n % 89l == 0l) return false;\n\
    \        if (n % 97l == 0l) return false;\n        if (n % 101l == 0l) return\
    \ false;\n        if (n % 103l == 0l) return false;\n        if (n % 107l == 0l)\
    \ return false;\n        if (n % 109l == 0l) return false;\n        if (n % 113l\
    \ == 0l) return false;\n        if (n % 127l == 0l) return false;\n        if\
    \ (n % 131l == 0l) return false;\n        if (n % 137l == 0l) return false;\n\
    \        if (n % 139l == 0l) return false;\n        if (n % 147l == 0l) return\
    \ false;\n        if (n % 151l == 0l) return false;\n        if (n % 157l == 0l)\
    \ return false;\n        if (n % 163l == 0l) return false;\n        if (n % 167l\
    \ == 0l) return false;\n        if (n % 173l == 0l) return false;\n        if\
    \ (n % 179l == 0l) return false;\n        if (n % 181l == 0l) return false;\n\
    \        if (n % 191l == 0l) return false;\n        if (n % 197l == 0l) return\
    \ false;\n        if (n % 199l == 0l) return false;\n        if (n % 201l == 0l)\
    \ return false;\n        if (n % 207l == 0l) return false;\n        if (n % 211l\
    \ == 0l) return false;\n        if (n % 215l == 0l) return false;\n        if\
    \ (n % 223l == 0l) return false;\n        if (n % 229l == 0l) return false;\n\
    \        if (n % 233l == 0l) return false;\n        if (n % 239l == 0l) return\
    \ false;\n        if (n % 241l == 0l) return false;\n        if (n % 247l == ",
  "        if (n < 2l) return false; // 0 and 1 are not primes.\n        if (n <=\
    \ 3l) return true;\n        if (n % 2 == 0 || n % 3 == 0) return false;\n    \
    \    long limit = (long) Math.sqrt(n);\n        for (long i = 5l; i <= limit;\
    \ i += 6l) if (n % i == 0 || n % (i + 2) == 0) return false;\n        return true;",
  "        if (n < 2l) return false; // 0 or 1 are not primes\n        if (n == 2l)\
    \ return true;\n        if (n % 2l == 0l) return false; // even numbers are not\
    \ primes\n        if (n % 3l == 0l) return false; // prime factors of 3 are not\
    \ primes\n        if (n % 5l == 0l) return false; // prime factors of 5 are not\
    \ primes\n        if (n % 7l == 0l) return false; // prime factors of 7 are not\
    \ primes\n        if (n % 11l == 0l) return false; // prime factors of 11 are\
    \ not primes\n        if (n % 13l == 0l) return false; // prime factors of 13\
    \ are not primes\n        if (n % 17l == 0l) return false; // prime factors of\
    \ 17 are not primes\n        if (n % 19l == 0l) return false; // prime factors\
    \ of 19 are not primes\n        if (n % 23l == 0l) return false; // prime factors\
    \ of 23 are not primes\n        if (n % 29l == 0l) return false; // prime factors\
    \ of 29 are not primes\n        if (n % 31l == 0l) return false; // prime factors\
    \ of 31 are not primes\n        if (n % 37l == 0l) return false; // prime factors\
    \ of 37 are not primes\n        if (n % 41l == 0l) return false; // prime factors\
    \ of 41 are not primes\n        if (n % 43l == 0l) return false; // prime factors\
    \ of 43 are not primes\n        if (n % 47l == 0l) return false; // prime factors\
    \ of 47 are not primes\n        if (n % 53l == 0l) return false; // prime factors\
    \ of 53 are not primes\n        if (n % 59l == 0l) return false; // prime factors\
    \ of 59 are not primes\n        if (n % 61l == 0l) return false; // prime factors\
    \ of 61 are not primes\n        if (n % 67l == 0l) return false; // prime factors\
    \ of 67 are not primes\n        if (n % 71l == 0l) return false; // prime factors\
    \ of 71 are not primes\n        if (n % 73l == 0l) return false; // prime factors\
    \ of 73 are not primes\n        if (n % 79l == 0l) return false; // prime factors\
    \ of 79 are not primes\n        if (n % 83l == 0l) return false; // prime factors\
    \ of 83 are not primes\n        if (n % 89l == 0l) return false; // prime factors\
    \ of 89 are not primes\n        if (n % 97l == 0l) return false; // prime factors\
    \ of 97 are not primes\n        if (n % 101l == 0l) return false; // prime factors\
    \ of 101 are not primes\n        if (n % 103l == 0l) return false; // prime factor",
  "        if (n <= 1l) return false;\n        if (n <= 3l) return true;\n       \
    \ if (n % 2 == 0) return false;\n        if (n % 3 == 0) return false;\n     \
    \   if (n % 5 == 0) return false;\n        long limit = (long) Math.sqrt(n);\n\
    \        for (long i = 3l; i * i <= limit; i += 6l) if (n % i == 0) return false;\n\
    \        return true;", "        if (n < 2l) return false; // 0 and 1 are not\
    \ primes\n        if (n <= 3l) return true;\n        if (n % 2 == 0) return false;\n\
    \        if (n % 3 == 0) return false;\n        long limit = (long) Math.sqrt(n);\n\
    \        for (int i = 3l; i <= limit; i += 6l) { // 3 to sqrt(n)\n           \
    \ if (n % i == 0) return false;\n        }\n        return true;", "        if\
    \ (n <= 1l) return false;\n        if (n <= 3l) return true;\n        if (n %\
    \ 2 == 0) return false;\n        if (n % 3 == 0) return false;\n        if (n\
    \ % 5 == 0) return false;\n        long limit = (long) Math.sqrt(n);\n       \
    \ long limit2 = limit * limit;\n        for (long i = 3l; i * i <= n; i += 2l)\
    \ {\n            if (n % i == 0) return false;\n            if (n % (i + 2l) ==\
    \ 0) return false;\n        }\n        return true;", "        if (n <= 1l) return\
    \ false;\n        if (n <= 3l) return true;\n        if (n % 2 == 0 || n % 3 ==\
    \ 0) return false;\n        long limit = (long) Math.sqrt(n);\n        for (long\
    \ i = 5l; i <= limit; i += 6l) if (n % i == 0 || n % (i + 2) == 0) return false;\n\
    \        return true;", "        if (n < 2l) return false; // 0 and 1 are not\
    \ primes\n        if (n == 2l) return true;\n        if (n % 2l == 0l) return\
    \ false; // even numbers are not primes\n        long limit = (long) Math.sqrt(n);\
    \ // limit is the square root of n\n        for (long i = 2l; i <= limit; i++)\
    \ {\n            if (n % i == 0l) return false; // n is not prime\n        }\n\
    \        return true;", "        if (n < 2l) return false;\n        if (n == 2l)\
    \ return true;\n        if (n % 2l == 0l) return false;\n        long limit =\
    \ (long) Math.sqrt(n);\n        long limit2 = limit / 2l;\n        for (long i\
    \ = 3l; i * i <= limit; i += 2l) {\n            if (n % i == 0l) return false;\n\
    \        }\n        return true;", "        if (n <= 1l) return false;\n     \
    \   if (n <= 3l) return true;\n        if (n % 2 == 0 || n % 3 == 0) return false;\n\
    \        long limit = (long) Math.sqrt(n);\n        long limit2 = limit * limit;\n\
    \        for (long i = 3l; i * i <= n; i += 2l) {\n            if (n % i == 0\
    \ || n % (i + 2l) == 0) return false;\n        }\n        return true;", "   \
    \     if (n <= 1l) return false;\n        if (n <= 3l) return true;\n        if\
    \ (n % 2 == 0 || n % 3 == 0) return false;\n        long limit = (long) Math.sqrt(n);\n\
    \        long limit2 = limit * limit;\n        for (long i = 5l; i <= limit2;\
    \ i += 6l) if (n % i == 0 || n % (i + 2) == 0) return false;\n        return true;",
  "        if (n < 2l) return false; // 0 and 1 are not primes\n        if (n == 2l)\
    \ return true;\n        if (n % 2l == 0l) return false; // even numbers are not\
    \ primes\n        long limit = (long) Math.sqrt(n); // limit is the largest integer\
    \ less than or equal to n\n        for (long i = 2l; i <= limit; i++) {\n    \
    \        if (n % i == 0l) return false; // n is not prime\n        }\n       \
    \ return true;", "        if (n <= 1l) return false;\n        if (n <= 3l) return\
    \ true;\n        if (n % 2 == 0 || n % 3 == 0) return false;\n        long limit\
    \ = (long) Math.sqrt(n);\n        long limit2 = limit * limit;\n        for (long\
    \ i = 5l; i <= limit2; i += 6l) if (n % i == 0 || n % (i + 2) == 0) return false;\n\
    \        return true;", "        if (n <= 1l) return false;\n        if (n ==\
    \ 2l) return true;\n        if (n % 2l == 0l) return false;\n        if (n % 3l\
    \ == 0l) return false;\n        if (n % 5l == 0l) return false;\n        if (n\
    \ % 7l == 0l) return false;\n        if (n % 11l == 0l) return false;\n      \
    \  if (n % 13l == 0l) return false;\n        if (n % 17l == 0l) return false;\n\
    \        if (n % 19l == 0l) return false;\n        if (n % 23l == 0l) return false;\n\
    \        if (n % 29l == 0l) return false;\n        if (n % 31l == 0l) return false;\n\
    \        if (n % 37l == 0l) return false;\n        if (n % 41l == 0l) return false;\n\
    \        if (n % 43l == 0l) return false;\n        if (n % 47l == 0l) return false;\n\
    \        if (n % 53l == 0l) return false;\n        if (n % 59l == 0l) return false;\n\
    \        if (n % 61l == 0l) return false;\n        if (n % 67l == 0l) return false;\n\
    \        if (n % 71l == 0l) return false;\n        if (n % 73l == 0l) return false;\n\
    \        if (n % 79l == 0l) return false;\n        if (n % 83l == 0l) return false;\n\
    \        if (n % 89l == 0l) return false;\n        if (n % 97l == 0l) return false;\n\
    \        if (n % 101l == 0l) return false;\n        if (n % 103l == 0l) return\
    \ false;\n        if (n % 107l == 0l) return false;\n        if (n % 113l == 0l)\
    \ return false;\n        if (n % 121l == 0l) return false;\n        if (n % 127l\
    \ == 0l) return false;\n        if (n % 131l == 0l) return false;\n        if\
    \ (n % 137l == 0l) return false;\n        if (n % 141l == 0l) return false;\n\
    \        if (n % 147l == 0l) return false;\n        if (n % 151l == 0l) return\
    \ false;\n        if (n % 157l == 0l) return false;\n        if (n % 161l == 0l)\
    \ return false;\n        if (n % 163l == 0l) return false;\n        if (n % 167l\
    \ == 0l) return false;\n        if (n % 173l == 0l) return false;\n        if\
    \ (n % 179l == 0l) return false;\n        if (n % 181l == 0l) return false;\n\
    \        if (n % 191l == 0l) return false;\n        if (n % 197l == 0l) return\
    \ false;\n        if (n % 201l == 0l) return false;\n        if (n % 207l == 0l)\
    \ return false;\n        if (n % 211l == 0l) return false;\n        if (n % 215l\
    \ == 0l) return false;\n        if (n % 221l == 0l) return false;\n        if\
    \ (n % 227l == 0l) return false;\n        if (n % 231l == 0l) return false;\n\
    \        if (n % 237l == 0l) return false;\n        if (n % 241l == 0l) return\
    \ false;\n", "        if (n < 2l) return false; // 0 and 1 are not primes\n  \
    \      if (n < 4l) return true; // 2 and 3 are primes\n        if (n % 2l == 0l)\
    \ return false; // even numbers are not primes\n        if (n % 3l == 0l) return\
    \ false; // prime factors of 2 and 3 are not primes\n        long limit = (long)\
    \ Math.sqrt(n) + 1l;\n        for (long i = 2l; i <= limit; i++) {\n         \
    \   if (n % i == 0l) return false; // prime factors of n are not primes\n    \
    \    }\n        return true;", "        if (n < 2l) return false; // 0 and 1 are\
    \ not primes.\n        if (n == 2l) return true;\n        if (n % 2l == 0l) return\
    \ false; // even numbers aren't primes.\n        if (n % 3l == 0l) return false;\
    \ // prime numbers aren't primes.\n        if (n % 5l == 0l) return false; //\
    \ prime numbers aren't primes.\n        if (n % 7l == 0l) return false; // prime\
    \ numbers aren't primes.\n        if (n % 11l == 0l) return false; // prime numbers\
    \ aren't primes.\n        if (n % 13l == 0l) return false; // prime numbers aren't\
    \ primes.\n        if (n % 17l == 0l) return false; // prime numbers aren't primes.\n\
    \        if (n % 19l == 0l) return false; // prime numbers aren't primes.\n  \
    \      if (n % 23l == 0l) return false; // prime numbers aren't primes.\n    \
    \    if (n % 29l == 0l) return false; // prime numbers aren't primes.\n      \
    \  if (n % 31l == 0l) return false; // prime numbers aren't primes.\n        if\
    \ (n % 37l == 0l) return false; // prime numbers aren't primes.\n        if (n\
    \ % 41l == 0l) return false; // prime numbers aren't primes.\n        if (n %\
    \ 43l == 0l) return false; // prime numbers aren't primes.\n        if (n % 47l\
    \ == 0l) return false; // prime numbers aren't primes.\n        if (n % 53l ==\
    \ 0l) return false; // prime numbers aren't primes.\n        if (n % 59l == 0l)\
    \ return false; // prime numbers aren't primes.\n        if (n % 61l == 0l) return\
    \ false; // prime numbers aren't primes.\n        if (n % 67l == 0l) return false;\
    \ // prime numbers aren't primes.\n        if (n % 71l == 0l) return false; //\
    \ prime numbers aren't primes.\n        if (n % 73l == 0l) return false; // prime\
    \ numbers aren't primes.\n        if (n % 79l == 0l) return false; // prime numbers\
    \ aren't primes.\n        if (n % 83l == 0l) return false; // prime numbers aren't\
    \ primes.\n        if (n % 89l == 0l) return false; // prime numbers aren't primes.\n\
    \        if (n % 97l == 0l) return false; // prime numbers aren't primes.\n  \
    \      if (n % 101l == 0l) return false; // prime numbers aren't primes.\n   \
    \     if (n % 103l == 0l) return false; // prime numbers aren't primes.\n    \
    \    if (n % 107l == 0l) return false; // prime numbers aren't primes.\n     \
    \   if (n % 109l == 0l) return false; // prime numbers aren't primes.\n      \
    \  if (n % 113l == 0l) return false; // prime numbers aren't primes.\n       \
    \ if (n % 127l == 0l) return false; // prime ", "        if (n < 2l) return false;\
    \ // 0 and 1 are not primes\n        if (n == 2l) return true;\n        if (n\
    \ % 2l == 0l) return false; // even numbers are not primes\n        if (n % 3l\
    \ == 0l) return false; // prime factors of 3 are not primes\n        if (n % 5l\
    \ == 0l) return false; // prime factors of 5 are not primes\n        long sqrtN\
    \ = Math.sqrt(n);\n        for (long i = 5l; i <= sqrtN; i += 6l) if (n % i ==\
    \ 0l) return false; // prime factors of 6 and greater are not primes\n       \
    \ return true;", "        if (n < 2l) return false; // 0 and 1 are not primes\n\
    \        if (n == 2l) return true;\n        if (n % 2l == 0l) return false; //\
    \ even numbers are not primes\n        if (n % 3l == 0l) return false; // prime\
    \ factors of 3 are not primes\n        long limit = (long) Math.sqrt(n); // limit\
    \ is the largest integer less than or equal to n\n        for (long i = 2l; i\
    \ <= limit; i++) {\n            if (n % i == 0l) return false; // n is not prime\n\
    \        }\n        return true;", "        if (n <= 1l) return false;\n     \
    \   if (n == 2l) return true;\n        if (n % 2 == 0l) return false;\n      \
    \  if (n % 3 == 0l) return false;\n        if (n % 5 == 0l) return false;\n  \
    \      long limit = (long) Math.sqrt(n);\n        for (long i = 3l; i <= limit;\
    \ i += 2l) {\n            if (n % i == 0l) return false;\n        }\n        return\
    \ true;", "        if (n < 2l) return false; // 0 and 1 are not primes\n     \
    \   if (n == 2l) return true;\n        if (n % 2l == 0l) return false; // even\
    \ numbers are not primes\n        long limit = (long) Math.sqrt(n); // limit is\
    \ the square root of n\n        for (long i = 2l; i <= limit; i++) {\n       \
    \     if (n % i == 0l) return false; // n is not prime\n        }\n        return\
    \ true;", "        if (n < 2l) return false; // 0 and 1 are not primes\n     \
    \   if (n == 2l) return true;\n        if (n % 2l == 0l) return false; // even\
    \ numbers aren't primes\n        if (n % 3l == 0l) return false; // prime numbers\
    \ aren't primes\n        long limit = (long) Math.sqrt(n); // limit is the square\
    \ root of n\n        long i = 3l; // start at 3\n        while (i <= limit) {\n\
    \            if (n % i == 0l) return false; // n is not prime\n            i +=\
    \ 2l; // move to the next odd number\n        }\n        return true;", "    \
    \    if (n < 2l) return false; // 0 and 1 are not primes\n        if (n == 2l)\
    \ return true;\n        if (n % 2l == 0l) return false; // 0 and 1 are not primes\n\
    \        if (n % 3l == 0l) return false; // 0 and 1 are not primes\n        if\
    \ (n % 5l == 0l) return false; // 0 and 1 are not primes\n        if (n % 7l ==\
    \ 0l) return false; // 0 and 1 are not primes\n        if (n % 11l == 0l) return\
    \ false; // 0 and 1 are not primes\n        if (n % 13l == 0l) return false; //\
    \ 0 and 1 are not primes\n        if (n % 17l == 0l) return false; // 0 and 1\
    \ are not primes\n        if (n % 19l == 0l) return false; // 0 and 1 are not\
    \ primes\n        if (n % 23l == 0l) return false; // 0 and 1 are not primes\n\
    \        if (n % 29l == 0l) return false; // 0 and 1 are not primes\n        if\
    \ (n % 31l == 0l) return false; // 0 and 1 are not primes\n        if (n % 37l\
    \ == 0l) return false; // 0 and 1 are not primes\n        if (n % 41l == 0l) return\
    \ false; // 0 and 1 are not primes\n        if (n % 43l == 0l) return false; //\
    \ 0 and 1 are not primes\n        if (n % 47l == 0l) return false; // 0 and 1\
    \ are not primes\n        if (n % 53l == 0l) return false; // 0 and 1 are not\
    \ primes\n        if (n % 59l == 0l) return false; // 0 and 1 are not primes\n\
    \        if (n % 61l == 0l) return false; // 0 and 1 are not primes\n        if\
    \ (n % 67l == 0l) return false; // 0 and 1 are not primes\n        if (n % 71l\
    \ == 0l) return false; // 0 and 1 are not primes\n        if (n % 73l == 0l) return\
    \ false; // 0 and 1 are not primes\n        if (n % 79l == 0l) return false; //\
    \ 0 and 1 are not primes\n        if (n % 83l == 0l) return false; // 0 and 1\
    \ are not primes\n        if (n % 89l == 0l) return false; // 0 and 1 are not\
    \ primes\n        if (n % 97l == 0l) return false; // 0 and 1 are not primes\n\
    \        if (n % 101l == 0l) return false; // 0 and 1 are not primes\n       \
    \ if (n % 103l == 0l) return false; // 0 and 1 are not primes\n        if (n %\
    \ 107l == 0l) return false; // 0 and 1 are not primes\n        if (n % 113l ==\
    \ 0l) return false; // 0 and 1 are not primes\n        if (n % 121l == 0l) return\
    \ false; // 0 and 1 are not primes\n        if (n % 127l == 0l) return false;\
    \ // ", "        if (n < 2l) return false; // 0 and 1 are not primes\n       \
    \ if (n == 2l) return true;\n        if (n % 2l == 0l) return false; // even numbers\
    \ are not primes\n        if (n % 3l == 0l) return false; // prime factors of\
    \ 3 are not primes\n        long sqrtN = Math.sqrt(n);\n        long sqrtN2 =\
    \ sqrtN * sqrtN;\n        long sqrtN3 = sqrtN2 * sqrtN;\n        long sqrtN5 =\
    \ sqrtN3 * sqrtN;\n        long sqrtN7 = sqrtN5 * sqrtN;\n        long sqrtN11\
    \ = sqrtN7 * sqrtN;\n        long sqrtN13 = sqrtN11 * sqrtN;\n        long sqrtN17\
    \ = sqrtN13 * sqrtN;\n        long sqrtN19 = sqrtN17 * sqrtN;\n        long sqrtN23\
    \ = sqrtN19 * sqrtN;\n        long sqrtN29 = sqrtN23 * sqrtN;\n        long sqrtN31\
    \ = sqrtN29 * sqrtN;\n        long sqrtN37 = sqrtN31 * sqrtN;\n        long sqrtN41\
    \ = sqrtN37 * sqrtN;\n        long sqrtN43 = sqrtN41 * sqrtN;\n        long sqrtN47\
    \ = sqrtN43 * sqrtN;\n        long sqrtN51 = sqrtN47 * sqrtN;\n        long sqrtN53\
    \ = sqrtN51 * sqrtN;\n        long sqrtN57 = sqrtN53 * sqrtN;\n        long sqrtN61\
    \ = sqrtN57 * sqrtN;\n        long sqrtN63 = sqrtN61 * sqrtN;\n        long sqrtN67\
    \ = sqrtN63 * sqrtN;\n        long sqrtN71 = sqrtN67 * sqrtN;\n        long sqrtN73\
    \ = sqrtN71 * sqrtN;\n        long sqrtN77 = sqrtN73 * sqrtN;\n        long sqrtN81\
    \ = sqrtN77 * sqrtN;\n        long sqrtN83 = sqrtN81 * sqrtN;\n        long sqrtN87\
    \ = sqrtN83 * sqrtN;\n        long sqrtN91 = sqrtN87 * sqrtN;\n        long sqrtN93\
    \ = sqrtN91 * sqrtN;\n        long sqrtN97 = sqrtN93 * sqrtN;\n        long sqrtN101\
    \ = sqrtN97 * sqrtN;\n        long sqrtN103 = sqrtN101 * sqrtN;\n        long\
    \ sqrtN107 = sqrtN103 * sqrt", "        if (n <= 1l) return false;\n        if\
    \ (n == 2l) return true;\n        if (n % 2 == 0l) return false;\n        if (n\
    \ % 3 == 0l) return false;\n        if (n % 5 == 0l) return false;\n        if\
    \ (n % 7 == 0l) return false;\n        long limit = (long) Math.sqrt(n);\n   \
    \     for (long i = 3l; i * i <= limit; i += 6l) if (n % i == 0l) return false;\n\
    \        return true;", "        if (n < 2l) return false; // 0 and 1 are not\
    \ primes\n        if (n <= 3l) return true;\n        if (n % 2 == 0) return false;\n\
    \        if (n % 3 == 0) return false;\n        if (n % 5 == 0) return false;\n\
    \        long max = (long) Math.sqrt(n);\n        for (long i = 3l; i <= max;\
    \ i += 6l) { // 3 to sqrt(n)\n            if (n % i == 0) return false;\n    \
    \    }\n        return true;", "        if (n < 2l) return false;\n        if\
    \ (n == 2l) return true;\n        if (n % 2l == 0l) return false;\n        if\
    \ (n % 3l == 0l) return false;\n        if (n % 5l == 0l) return false;\n    \
    \    if (n % 7l == 0l) return false;\n        if (n % 11l == 0l) return false;\n\
    \        if (n % 13l == 0l) return false;\n        if (n % 17l == 0l) return false;\n\
    \        if (n % 19l == 0l) return false;\n        if (n % 23l == 0l) return false;\n\
    \        if (n % 29l == 0l) return false;\n        if (n % 31l == 0l) return false;\n\
    \        if (n % 37l == 0l) return false;\n        if (n % 41l == 0l) return false;\n\
    \        if (n % 43l == 0l) return false;\n        if (n % 47l == 0l) return false;\n\
    \        if (n % 53l == 0l) return false;\n        if (n % 59l == 0l) return false;\n\
    \        if (n % 61l == 0l) return false;\n        if (n % 67l == 0l) return false;\n\
    \        if (n % 71l == 0l) return false;\n        if (n % 73l == 0l) return false;\n\
    \        if (n % 79l == 0l) return false;\n        if (n % 83l == 0l) return false;\n\
    \        if (n % 89l == 0l) return false;\n        if (n % 97l == 0l) return false;\n\
    \        if (n % 101l == 0l) return false;\n        if (n % 103l == 0l) return\
    \ false;\n        if (n % 107l == 0l) return false;\n        if (n % 109l == 0l)\
    \ return false;\n        if (n % 113l == 0l) return false;\n        if (n % 127l\
    \ == 0l) return false;\n        if (n % 131l == 0l) return false;\n        if\
    \ (n % 137l == 0l) return false;\n        if (n % 139l == 0l) return false;\n\
    \        if (n % 141l == 0l) return false;\n        if (n % 147l == 0l) return\
    \ false;\n        if (n % 149l == 0l) return false;\n        if (n % 151l == 0l)\
    \ return false;\n        if (n % 157l == 0l) return false;\n        if (n % 163l\
    \ == 0l) return false;\n        if (n % 167l == 0l) return false;\n        if\
    \ (n % 173l == 0l) return false;\n        if (n % 179l == 0l) return false;\n\
    \        if (n % 181l == 0l) return false;\n        if (n % 191l == 0l) return\
    \ false;\n        if (n % 197l == 0l) return false;\n        if (n % 199l == 0l)\
    \ return false;\n        if (n % 201l == 0l) return false;\n        if (n % 207l\
    \ == 0l) return false;\n        if (n % 211l == 0l) return false;\n        if\
    \ (n % 215l == 0l) return false;\n        if (n % 217l == 0l) return false;\n\
    \        if (n % 223l == 0l) return false;\n        if (n % 229l == 0l) return\
    \ false;\n        if (n % 233l == ", "        if (n < 2l) return false; // 0 and\
    \ 1 are not primes\n        if (n == 2l) return true;\n        if (n % 2l == 0l)\
    \ return false; // even numbers are not primes\n        long limit = (long) Math.sqrt(n);\
    \ // limit is the square root of n\n        for (long i = 2l; i <= limit; i++)\
    \ {\n            if (n % i == 0l) return false; // n is not prime\n        }\n\
    \        return true;", "        if (n < 2l) return false;\n        if (n == 2l)\
    \ return true;\n        if (n % 2l == 0l) return false;\n        if (n % 3l ==\
    \ 0l) return false;\n        if (n % 5l == 0l) return false;\n        if (n %\
    \ 7l == 0l) return false;\n        if (n % 11l == 0l) return false;\n        if\
    \ (n % 13l == 0l) return false;\n        if (n % 17l == 0l) return false;\n  \
    \      if (n % 19l == 0l) return false;\n        if (n % 23l == 0l) return false;\n\
    \        if (n % 29l == 0l) return false;\n        if (n % 31l == 0l) return false;\n\
    \        if (n % 37l == 0l) return false;\n        if (n % 41l == 0l) return false;\n\
    \        if (n % 43l == 0l) return false;\n        if (n % 47l == 0l) return false;\n\
    \        if (n % 53l == 0l) return false;\n        if (n % 59l == 0l) return false;\n\
    \        if (n % 61l == 0l) return false;\n        if (n % 67l == 0l) return false;\n\
    \        if (n % 71l == 0l) return false;\n        if (n % 73l == 0l) return false;\n\
    \        if (n % 79l == 0l) return false;\n        if (n % 83l == 0l) return false;\n\
    \        if (n % 89l == 0l) return false;\n        if (n % 97l == 0l) return false;\n\
    \        if (n % 101l == 0l) return false;\n        if (n % 103l == 0l) return\
    \ false;\n        if (n % 107l == 0l) return false;\n        if (n % 109l == 0l)\
    \ return false;\n        if (n % 113l == 0l) return false;\n        if (n % 127l\
    \ == 0l) return false;\n        if (n % 131l == 0l) return false;\n        if\
    \ (n % 137l == 0l) return false;\n        if (n % 139l == 0l) return false;\n\
    \        if (n % 141l == 0l) return false;\n        if (n % 147l == 0l) return\
    \ false;\n        if (n % 149l == 0l) return false;\n        if (n % 151l == 0l)\
    \ return false;\n        if (n % 157l == 0l) return false;\n        if (n % 163l\
    \ == 0l) return false;\n        if (n % 167l == 0l) return false;\n        if\
    \ (n % 171l == 0l) return false;\n        if (n % 177l == 0l) return false;\n\
    \        if (n % 181l == 0l) return false;\n        if (n % 193l == 0l) return\
    \ false;\n        if (n % 197l == 0l) return false;\n        if (n % 199l == 0l)\
    \ return false;\n        if (n % 211l == 0l) return false;\n        if (n % 223l\
    \ == 0l) return false;\n        if (n % 227l == 0l) return false;\n        if\
    \ (n % 229l == 0l) return false;\n        if (n % 233l == 0l) return false;\n\
    \        if (n % 239l == 0l) return false;\n        if (n % 241l == 0l) return\
    \ false;\n        if (n % 247l ", "        if (n < 2l) return false; // 0 and\
    \ 1 are not primes\n        if (n == 2l) return true;\n        if (n % 2l == 0l)\
    \ return false; // even numbers aren't primes\n        long limit = (long) (Math.sqrt(n));\n\
    \        for (long i = 2l; i <= limit; i++) {\n            if (n % i == 0l) return\
    \ false; // odd numbers aren't primes\n        }\n        return true;", "   \
    \     if (n < 2l) return false;\n        if (n == 2l) return true;\n        if\
    \ (n % 2l == 0l) return false;\n        if (n % 3l == 0l) return false;\n    \
    \    if (n % 5l == 0l) return false;\n        if (n % 7l == 0l) return false;\n\
    \        if (n % 11l == 0l) return false;\n        if (n % 13l == 0l) return false;\n\
    \        if (n % 17l == 0l) return false;\n        if (n % 19l == 0l) return false;\n\
    \        if (n % 23l == 0l) return false;\n        if (n % 29l == 0l) return false;\n\
    \        if (n % 31l == 0l) return false;\n        if (n % 37l == 0l) return false;\n\
    \        if (n % 41l == 0l) return false;\n        if (n % 43l == 0l) return false;\n\
    \        if (n % 47l == 0l) return false;\n        if (n % 53l == 0l) return false;\n\
    \        if (n % 59l == 0l) return false;\n        if (n % 61l == 0l) return false;\n\
    \        if (n % 67l == 0l) return false;\n        if (n % 71l == 0l) return false;\n\
    \        if (n % 73l == 0l) return false;\n        if (n % 79l == 0l) return false;\n\
    \        if (n % 83l == 0l) return false;\n        if (n % 89l == 0l) return false;\n\
    \        if (n % 97l == 0l) return false;\n        if (n % 101l == 0l) return\
    \ false;\n        if (n % 103l == 0l) return false;\n        if (n % 107l == 0l)\
    \ return false;\n        if (n % 109l == 0l) return false;\n        if (n % 113l\
    \ == 0l) return false;\n        if (n % 117l == 0l) return false;\n        if\
    \ (n % 121l == 0l) return false;\n        if (n % 123l == 0l) return false;\n\
    \        if (n % 127l == 0l) return false;\n        if (n % 131l == 0l) return\
    \ false;\n        if (n % 137l == 0l) return false;\n        if (n % 139l == 0l)\
    \ return false;\n        if (n % 141l == 0l) return false;\n        if (n % 147l\
    \ == 0l) return false;\n        if (n % 149l == 0l) return false;\n        if\
    \ (n % 151l == 0l) return false;\n        if (n % 157l == 0l) return false;\n\
    \        if (n % 163l == 0l) return false;\n        if (n % 167l == 0l) return\
    \ false;\n        if (n % 171l == 0l) return false;\n        if (n % 177l == 0l)\
    \ return false;\n        if (n % 181l == 0l) return false;\n        if (n % 193l\
    \ == 0l) return false;\n        if (n % 197l == 0l) return false;\n        if\
    \ (n % 199l == 0l) return false;\n        if (n % 211l == 0l) return false;\n\
    \        if (n % 223l == 0l) return false;\n        if (n % 227l == 0l) return\
    \ false;\n        if (n % 229l == 0l) return false;\n        if (n % 233l ", " \
    \       if (n < 2l) return false; // 0 and 1 are not primes\n        if (n ==\
    \ 2l) return true;\n        if (n % 2l == 0l) return false; // even numbers are\
    \ not primes\n        if (n % 3l == 0l) return false; // prime factors of 2 and\
    \ 3 are not primes\n        long limit = (long) Math.sqrt(n);\n        for (long\
    \ i = 3l; i * i <= limit; i += 2l) {\n            if (n % i == 0l) return false;\
    \ // prime factors of i are not primes\n        }\n        return true;", "  \
    \      if (n < 2l) return false; // 0 and 1 are not primes\n        if (n == 2l)\
    \ return true;\n        if (n % 2l == 0l) return false; // 0 and 1 are not primes\n\
    \        if (n % 3l == 0l) return false; // 2 and 3 are not primes\n        if\
    \ (n % 5l == 0l) return false; // 2 and 3 are not primes\n        if (n % 7l ==\
    \ 0l) return false; // 2 and 3 are not primes\n        if (n % 11l == 0l) return\
    \ false; // 2 and 3 are not primes\n        if (n % 13l == 0l) return false; //\
    \ 2 and 3 are not primes\n        if (n % 17l == 0l) return false; // 2 and 3\
    \ are not primes\n        if (n % 19l == 0l) return false; // 2 and 3 are not\
    \ primes\n        if (n % 23l == 0l) return false; // 2 and 3 are not primes\n\
    \        if (n % 29l == 0l) return false; // 2 and 3 are not primes\n        if\
    \ (n % 31l == 0l) return false; // 2 and 3 are not primes\n        if (n % 37l\
    \ == 0l) return false; // 2 and 3 are not primes\n        if (n % 41l == 0l) return\
    \ false; // 2 and 3 are not primes\n        if (n % 43l == 0l) return false; //\
    \ 2 and 3 are not primes\n        if (n % 47l == 0l) return false; // 2 and 3\
    \ are not primes\n        if (n % 53l == 0l) return false; // 2 and 3 are not\
    \ primes\n        if (n % 59l == 0l) return false; // 2 and 3 are not primes\n\
    \        if (n % 61l == 0l) return false; // 2 and 3 are not primes\n        if\
    \ (n % 67l == 0l) return false; // 2 and 3 are not primes\n        if (n % 71l\
    \ == 0l) return false; // 2 and 3 are not primes\n        if (n % 73l == 0l) return\
    \ false; // 2 and 3 are not primes\n        if (n % 79l == 0l) return false; //\
    \ 2 and 3 are not primes\n        if (n % 83l == 0l) return false; // 2 and 3\
    \ are not primes\n        if (n % 89l == 0l) return false; // 2 and 3 are not\
    \ primes\n        if (n % 97l == 0l) return false; // 2 and 3 are not primes\n\
    \        if (n % 101l == 0l) return false; // 2 and 3 are not primes\n       \
    \ if (n % 103l == 0l) return false; // 2 and 3 are not primes\n        if (n %\
    \ 107l == 0l) return false; // 2 and 3 are not primes\n        if (n % 109l ==\
    \ 0l) return false; // 2 and 3 are not primes\n        if (n % 113l == 0l) return\
    \ false; // 2 and 3 are not primes\n        if (n % 127l == 0l) return false;\
    \ // 2 and ", "        if (n < 2l) return false; // 0 and 1 are not primes\n \
    \       if (n == 2l) return true;\n        if (n % 2l == 0l) return false; //\
    \ even numbers are not primes\n        if (n % 3l == 0l) return false; // prime\
    \ factors of 3 are not primes\n        long limit = (long) Math.sqrt(n); // limit\
    \ the search to sqrt(n)\n        for (long i = 2l; i <= limit; i++) {\n      \
    \      if (n % i == 0l) return false; // n is not prime\n        }\n        return\
    \ true;", "        if (n < 2l) return false; // 0 and 1 are not primes\n     \
    \   if (n <= 3l) return true; // 2 and 3 are primes\n        if (n % 2 == 0 ||\
    \ n % 3 == 0) return false; // 0 and 1 are not primes\n        long limit = (long)\
    \ Math.sqrt(n); // limit is the square root of n\n        for (int i = 3l; i <=\
    \ limit; i += 2l) { // i goes from 3 to sqrt(n)\n            if (n % i == 0 ||\
    \ n % (i + 2l) == 0) return false; // n is not prime\n        }\n        return\
    \ true;", "        if (n < 2l) return false; // 0 or 1 are not primes\n      \
    \  if (n <= 3l) return true;\n        if (n % 2l == 0l) return false; // even\
    \ numbers are not primes\n        if (n % 3l == 0l) return false; // multiple\
    \ of 3 are not primes\n        long limit = (long) Math.sqrt(n); // limit is the\
    \ square root of n\n        long i = 3l; // start at 3\n        while (i <= limit)\
    \ {\n            if (n % i == 0l) return false; // not prime\n            i +=\
    \ 2l; // move to next odd number\n        }\n        return true;", "        if\
    \ (n < 2l) return false;\n        if (n == 2l) return true;\n        if (n % 2l\
    \ == 0l) return false;\n        long limit = (long) Math.sqrt(n) + 1l;\n     \
    \   for (long i = 2l; i <= limit; i += 2l) {\n            if (n % i == 0l) return\
    \ false;\n        }\n        return true;", "        if (n < 2l) return false;\
    \ // 0 or 1 are not primes\n        if (n == 2l) return true; // 2 is prime\n\
    \        if (n % 2l == 0l) return false; // even numbers aren't primes\n     \
    \   long max = (long) (Math.sqrt(n));\n        for (long i = 2l; i <= max; i +=\
    \ 2l) {\n            if (n % i == 0l) return false; // odd numbers aren't primes\n\
    \        }\n        return true;", "        if (n < 2l) return false; // 0 and\
    \ 1 are not primes\n        if (n == 2l) return true;\n        if (n % 2l == 0l)\
    \ return false; // even numbers are not primes\n        if (n % 3l == 0l) return\
    \ false; // prime factors of 3 are not primes\n        long limit = (long) Math.sqrt(n);\n\
    \        for (long i = 2l; i <= limit; i++) {\n            if (n % i == 0l) return\
    \ false; // prime factors of i are not primes\n        }\n        return true;",
  "        if (n <= 1l) return false;\n        if (n == 2l) return true;\n       \
    \ if (n % 2l == 0l) return false;\n        if (n % 3l == 0l) return false;\n \
    \       if (n % 5l == 0l) return false;\n        if (n % 7l == 0l) return false;\n\
    \        if (n % 11l == 0l) return false;\n        if (n % 13l == 0l) return false;\n\
    \        if (n % 17l == 0l) return false;\n        if (n % 19l == 0l) return false;\n\
    \        if (n % 23l == 0l) return false;\n        if (n % 29l == 0l) return false;\n\
    \        if (n % 31l == 0l) return false;\n        if (n % 37l == 0l) return false;\n\
    \        if (n % 41l == 0l) return false;\n        if (n % 43l == 0l) return false;\n\
    \        if (n % 47l == 0l) return false;\n        if (n % 53l == 0l) return false;\n\
    \        if (n % 59l == 0l) return false;\n        if (n % 61l == 0l) return false;\n\
    \        if (n % 67l == 0l) return false;\n        if (n % 71l == 0l) return false;\n\
    \        if (n % 73l == 0l) return false;\n        if (n % 79l == 0l) return false;\n\
    \        if (n % 83l == 0l) return false;\n        if (n % 89l == 0l) return false;\n\
    \        if (n % 97l == 0l) return false;\n        if (n % 101l == 0l) return\
    \ false;\n        if (n % 103l == 0l) return false;\n        if (n % 107l == 0l)\
    \ return false;\n        if (n % 109l == 0l) return false;\n        if (n % 113l\
    \ == 0l) return false;\n        if (n % 117l == 0l) return false;\n        if\
    \ (n % 121l == 0l) return false;\n        if (n % 123l == 0l) return false;\n\
    \        if (n % 127l == 0l) return false;\n        if (n % 131l == 0l) return\
    \ false;\n        if (n % 137l == 0l) return false;\n        if (n % 139l == 0l)\
    \ return false;\n        if (n % 141l == 0l) return false;\n        if (n % 147l\
    \ == 0l) return false;\n        if (n % 149l == 0l) return false;\n        if\
    \ (n % 151l == 0l) return false;\n        if (n % 157l == 0l) return false;\n\
    \        if (n % 163l == 0l) return false;\n        if (n % 167l == 0l) return\
    \ false;\n        if (n % 171l == 0l) return false;\n        if (n % 177l == 0l)\
    \ return false;\n        if (n % 181l == 0l) return false;\n        if (n % 193l\
    \ == 0l) return false;\n        if (n % 197l == 0l) return false;\n        if\
    \ (n % 199l == 0l) return false;\n        if (n % 201l == 0l) return false;\n\
    \        if (n % 207l == 0l) return false;\n        if (n % 211l == 0l) return\
    \ false;\n        if (n % 215l == 0l) return false;\n        if (n % 217l ", " \
    \       if (n < 2l) return false; // 0 and 1 are not primes.\n        if (n ==\
    \ 2l) return true;\n        if (n % 2l == 0l) return false; // 0 and 1 are not\
    \ primes.\n        if (n % 3l == 0l) return false; // 2 and 3 are not primes.\n\
    \        if (n % 5l == 0l) return false; // 2 and 3 are not primes.\n        if\
    \ (n % 7l == 0l) return false; // 2 and 3 are not primes.\n        long limit\
    \ = (long) Math.sqrt(n);\n        for (long i = 5l; i <= limit; i += 6l) { //\
    \ 5 and 7 are not primes.\n            if (n % i == 0l) return false; // n is\
    \ not prime\n        }\n        return true;", "        if (n <= 1l) return false;\n\
    \        if (n == 2l) return true;\n        if (n % 2l == 0l) return false;\n\
    \        if (n % 3l == 0l) return false;\n        if (n % 5l == 0l) return false;\n\
    \        if (n % 7l == 0l) return false;\n        if (n % 11l == 0l) return false;\n\
    \        if (n % 13l == 0l) return false;\n        if (n % 17l == 0l) return false;\n\
    \        if (n % 19l == 0l) return false;\n        if (n % 23l == 0l) return false;\n\
    \        if (n % 29l == 0l) return false;\n        if (n % 31l == 0l) return false;\n\
    \        if (n % 37l == 0l) return false;\n        if (n % 41l == 0l) return false;\n\
    \        if (n % 43l == 0l) return false;\n        if (n % 47l == 0l) return false;\n\
    \        if (n % 53l == 0l) return false;\n        if (n % 59l == 0l) return false;\n\
    \        if (n % 61l == 0l) return false;\n        if (n % 67l == 0l) return false;\n\
    \        if (n % 71l == 0l) return false;\n        if (n % 73l == 0l) return false;\n\
    \        if (n % 79l == 0l) return false;\n        if (n % 83l == 0l) return false;\n\
    \        if (n % 89l == 0l) return false;\n        if (n % 97l == 0l) return false;\n\
    \        if (n % 101l == 0l) return false;\n        if (n % 103l == 0l) return\
    \ false;\n        if (n % 107l == 0l) return false;\n        if (n % 109l == 0l)\
    \ return false;\n        if (n % 113l == 0l) return false;\n        if (n % 117l\
    \ == 0l) return false;\n        if (n % 121l == 0l) return false;\n        if\
    \ (n % 123l == 0l) return false;\n        if (n % 127l == 0l) return false;\n\
    \        if (n % 131l == 0l) return false;\n        if (n % 137l == 0l) return\
    \ false;\n        if (n % 141l == 0l) return false;\n        if (n % 147l == 0l)\
    \ return false;\n        if (n % 151l == 0l) return false;\n        if (n % 157l\
    \ == 0l) return false;\n        if (n % 161l == 0l) return false;\n        if\
    \ (n % 163l == 0l) return false;\n        if (n % 167l == 0l) return false;\n\
    \        if (n % 173l == 0l) return false;\n        if (n % 177l == 0l) return\
    \ false;\n        if (n % 181l == 0l) return false;\n        if (n % 191l == 0l)\
    \ return false;\n        if (n % 197l == 0l) return false;\n        if (n % 201l\
    \ == 0l) return false;\n        if (n % 207l == 0l) return false;\n        if\
    \ (n % 211l == 0l) return false;\n        if (n % 215l == 0l) return false;\n\
    \        if (n % 223l == 0l) return false;\n        if (n % 227l == 0l) return\
    \ false;\n        if (n % ", "        if (n <= 1l) return false;\n        if (n\
    \ == 2l) return true;\n        if (n % 2l == 0l) return false;\n        if (n\
    \ % 3l == 0l) return false;\n        if (n % 5l == 0l) return false;\n       \
    \ if (n % 7l == 0l) return false;\n        if (n % 11l == 0l) return false;\n\
    \        if (n % 13l == 0l) return false;\n        if (n % 17l == 0l) return false;\n\
    \        if (n % 19l == 0l) return false;\n        if (n % 23l == 0l) return false;\n\
    \        if (n % 29l == 0l) return false;\n        if (n % 31l == 0l) return false;\n\
    \        if (n % 37l == 0l) return false;\n        if (n % 41l == 0l) return false;\n\
    \        if (n % 43l == 0l) return false;\n        if (n % 47l == 0l) return false;\n\
    \        if (n % 53l == 0l) return false;\n        if (n % 59l == 0l) return false;\n\
    \        if (n % 61l == 0l) return false;\n        if (n % 67l == 0l) return false;\n\
    \        if (n % 71l == 0l) return false;\n        if (n % 73l == 0l) return false;\n\
    \        if (n % 79l == 0l) return false;\n        if (n % 83l == 0l) return false;\n\
    \        if (n % 89l == 0l) return false;\n        if (n % 97l == 0l) return false;\n\
    \        if (n % 101l == 0l) return false;\n        if (n % 103l == 0l) return\
    \ false;\n        if (n % 107l == 0l) return false;\n        if (n % 109l == 0l)\
    \ return false;\n        if (n % 113l == 0l) return false;\n        if (n % 127l\
    \ == 0l) return false;\n        if (n % 131l == 0l) return false;\n        if\
    \ (n % 137l == 0l) return false;\n        if (n % 139l == 0l) return false;\n\
    \        if (n % 141l == 0l) return false;\n        if (n % 147l == 0l) return\
    \ false;\n        if (n % 149l == 0l) return false;\n        if (n % 151l == 0l)\
    \ return false;\n        if (n % 157l == 0l) return false;\n        if (n % 163l\
    \ == 0l) return false;\n        if (n % 167l == 0l) return false;\n        if\
    \ (n % 171l == 0l) return false;\n        if (n % 177l == 0l) return false;\n\
    \        if (n % 181l == 0l) return false;\n        if (n % 193l == 0l) return\
    \ false;\n        if (n % 197l == 0l) return false;\n        if (n % 199l == 0l)\
    \ return false;\n        if (n % 211l == 0l) return false;\n        if (n % 223l\
    \ == 0l) return false;\n        if (n % 227l == 0l) return false;\n        if\
    \ (n % 229l == 0l) return false;\n        if (n % 233l == 0l) return false;\n\
    \        if (n % 239l == 0l) return false;\n        if (n % 241l == 0l) return\
    \ false;\n        if (n % 247", "        if (n <= 1) return false;\n        if\
    \ (n == 2) return true;\n        if (n % 2 == 0) return false;\n        if (n\
    \ % 3 == 0) return false;\n        if (n % 5 == 0) return false;\n        long\
    \ limit = (long) Math.sqrt(n);\n        for (long i = 3; i <= limit; i += 6) {\n\
    \            if (n % i == 0) return false;\n        }\n        return true;",
  "        if (n <= 1) return false;\n        if (n == 2) return true;\n        if\
    \ (n % 2 == 0) return false;\n        if (n % 3 == 0) return false;\n        if\
    \ (n % 5 == 0) return false;\n        long limit = (long) Math.sqrt(n);\n    \
    \    for (long i = 5; i <= limit; i += 6) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;", "        if (n < 2l) return false;\n\
    \        if (n == 2l) return true;\n        if (n % 2l == 0l) return false;\n\
    \        if (n % 3l == 0l) return false;\n        if (n % 5l == 0l) return false;\n\
    \        if (n % 7l == 0l) return false;\n        if (n % 11l == 0l) return false;\n\
    \        if (n % 13l == 0l) return false;\n        if (n % 17l == 0l) return false;\n\
    \        if (n % 19l == 0l) return false;\n        if (n % 23l == 0l) return false;\n\
    \        if (n % 29l == 0l) return false;\n        if (n % 31l == 0l) return false;\n\
    \        if (n % 37l == 0l) return false;\n        if (n % 41l == 0l) return false;\n\
    \        if (n % 43l == 0l) return false;\n        if (n % 47l == 0l) return false;\n\
    \        if (n % 53l == 0l) return false;\n        if (n % 59l == 0l) return false;\n\
    \        if (n % 61l == 0l) return false;\n        if (n % 67l == 0l) return false;\n\
    \        if (n % 71l == 0l) return false;\n        if (n % 73l == 0l) return false;\n\
    \        if (n % 79l == 0l) return false;\n        if (n % 83l == 0l) return false;\n\
    \        if (n % 89l == 0l) return false;\n        if (n % 97l == 0l) return false;\n\
    \        if (n % 101l == 0l) return false;\n        if (n % 103l == 0l) return\
    \ false;\n        if (n % 107l == 0l) return false;\n        if (n % 109l == 0l)\
    \ return false;\n        if (n % 113l == 0l) return false;\n        if (n % 117l\
    \ == 0l) return false;\n        if (n % 121l == 0l) return false;\n        if\
    \ (n % 127l == 0l) return false;\n        if (n % 131l == 0l) return false;\n\
    \        if (n % 137l == 0l) return false;\n        if (n % 141l == 0l) return\
    \ false;\n        if (n % 147l == 0l) return false;\n        if (n % 151l == 0l)\
    \ return false;\n        if (n % 157l == 0l) return false;\n        if (n % 161l\
    \ == 0l) return false;\n        if (n % 163l == 0l) return false;\n        if\
    \ (n % 167l == 0l) return false;\n        if (n % 173l == 0l) return false;\n\
    \        if (n % 177l == 0l) return false;\n        if (n % 181l == 0l) return\
    \ false;\n        if (n % 191l == 0l) return false;\n        if (n % 197l == 0l)\
    \ return false;\n        if (n % 201l == 0l) return false;\n        if (n % 207l\
    \ == 0l) return false;\n        if (n % 211l == 0l) return false;\n        if\
    \ (n % 215l == 0l) return false;\n        if (n % 223l == 0l) return false;\n\
    \        if (n % 227l == 0l) return false;\n        if (n % 231l == 0l) return\
    \ false;\n        if (n % ", "        if (n < 2l) return false; // 0 and 1 are\
    \ not primes\n        if (n == 2l) return true;\n        if (n % 2l == 0l) return\
    \ false; // even numbers are not primes\n        long limit = (long) (Math.sqrt(n));\n\
    \        for (long i = 2l; i <= limit; i++) {\n            if (n % i == 0l) return\
    \ false; // odd numbers are not primes\n        }\n        return true;", "  \
    \      if (n < 2l) return false;\n        if (n == 2l) return true;\n        if\
    \ (n % 2l == 0l) return false;\n        long limit = (long) Math.sqrt(n) + 1;\n\
    \        for (long i = 2l; i <= limit; i++) {\n            if (n % i == 0l) return\
    \ false;\n        }\n        return true;", "        if (n <= 1l) return false;\n\
    \        if (n == 2l) return true;\n        if (n % 2 == 0l) return false;\n \
    \       if (n % 3 == 0l) return false;\n        if (n % 5 == 0l) return false;\n\
    \        long limit = (long) Math.sqrt(n);\n        for (long i = 5l; i <= limit;\
    \ i += 6l) if (n % i == 0l) return false;\n        return true;", "        if\
    \ (n < 2l) return false; // 0 and 1 are not primes\n        if (n < 4l) return\
    \ true; // 2 and 3 are primes\n        if (n % 2l == 0l) return false; // even\
    \ numbers aren't primes\n        if (n % 3l == 0l) return false; // prime numbers\
    \ aren't primes\n        long sqrtN = Math.sqrt(n);\n        for (long i = 5l;\
    \ i <= sqrtN; i += 6l) if (n % i == 0l) return false; // odd numbers aren't primes\n\
    \        return true;", "        if (n <= 1l) return false;\n        if (n <=\
    \ 3l) return true;\n        if (n % 2 == 0 || n % 3 == 0) return false;\n    \
    \    long limit = (long) Math.sqrt(n);\n        for (long i = 5l; i <= limit;\
    \ i += 6l) if (n % i == 0 || n % (i + 2) == 0) return false;\n        return true;",
  "        if (n < 2l) return false; // 0 and 1 are not primes.\n        if (n ==\
    \ 2l) return true;\n        if (n % 2l == 0l) return false; // even numbers are\
    \ not primes.\n        if (n % 3l == 0l) return false; // prime numbers cannot\
    \ be divided by 3.\n        if (n % 5l == 0l) return false; // prime numbers cannot\
    \ be divided by 5.\n        if (n % 7l == 0l) return false; // prime numbers cannot\
    \ be divided by 7.\n        if (n % 11l == 0l) return false; // prime numbers\
    \ cannot be divided by 11.\n        if (n % 13l == 0l) return false; // prime\
    \ numbers cannot be divided by 13.\n        if (n % 17l == 0l) return false; //\
    \ prime numbers cannot be divided by 17.\n        if (n % 19l == 0l) return false;\
    \ // prime numbers cannot be divided by 19.\n        if (n % 23l == 0l) return\
    \ false; // prime numbers cannot be divided by 23.\n        if (n % 29l == 0l)\
    \ return false; // prime numbers cannot be divided by 29.\n        if (n % 31l\
    \ == 0l) return false; // prime numbers cannot be divided by 31.\n        if (n\
    \ % 37l == 0l) return false; // prime numbers cannot be divided by 37.\n     \
    \   if (n % 41l == 0l) return false; // prime numbers cannot be divided by 41.\n\
    \        if (n % 43l == 0l) return false; // prime numbers cannot be divided by\
    \ 43.\n        if (n % 47l == 0l) return false; // prime numbers cannot be divided\
    \ by 47.\n        if (n % 53l == 0l) return false; // prime numbers cannot be\
    \ divided by 53.\n        if (n % 59l == 0l) return false; // prime numbers cannot\
    \ be divided by 59.\n        if (n % 61l == 0l) return false; // prime numbers\
    \ cannot be divided by 61.\n        if (n % 67l == 0l) return false; // prime\
    \ numbers cannot be divided by 67.\n        if (n % 71l == 0l) return false; //\
    \ prime numbers cannot be divided by 71.\n        if (n % 73l == 0l) return false;\
    \ // prime numbers cannot be divided by 73.\n        if (n % 79l == 0l) return\
    \ false; // prime numbers cannot be divided by 79.\n        if (n % 83l == 0l)\
    \ return false; // prime numbers cannot be divided by 83.\n        if (n % 89l\
    \ == 0l) return false; // prime numbers cannot be divided by 89.\n        if (n\
    \ % 97l == 0l) return false; // prime numbers cannot be divided by 97.\n     \
    \   if (n % 101l == 0l) return false; // prime numbers cannot be divided by 101.\n\
    \        if (n % 103l == 0l) return false; // prime numbers cannot be divided\
    \ by 103.\n        if (n % 107l == 0l) return false; // prime numbers cannot be\
    \ divided by 107.\n        if (n % 11", "        if (n < 2l) return false; //\
    \ 0 and 1 are not primes.\n        if (n <= 3l) return true; // 2 and 3 are primes.\n\
    \        if (n % 2 == 0 || n % 3 == 0) return false; // 0 and 1 are not primes.\n\
    \        long limit = (long) Math.sqrt(n) + 1l;\n        for (long i = 2l; i <=\
    \ limit; i += 2l) {\n            if (n % i == 0 || n % (i + 2l) == 0) return false;\n\
    \        }\n        return true;", "        if (n <= 1l) return false;\n     \
    \   if (n == 2l) return true;\n        if (n % 2l == 0l) return false;\n     \
    \   if (n % 3l == 0l) return false;\n        if (n % 5l == 0l) return false;\n\
    \        if (n % 7l == 0l) return false;\n        if (n % 11l == 0l) return false;\n\
    \        if (n % 13l == 0l) return false;\n        if (n % 17l == 0l) return false;\n\
    \        if (n % 19l == 0l) return false;\n        if (n % 23l == 0l) return false;\n\
    \        if (n % 29l == 0l) return false;\n        if (n % 31l == 0l) return false;\n\
    \        if (n % 37l == 0l) return false;\n        if (n % 41l == 0l) return false;\n\
    \        if (n % 43l == 0l) return false;\n        if (n % 47l == 0l) return false;\n\
    \        if (n % 53l == 0l) return false;\n        if (n % 59l == 0l) return false;\n\
    \        if (n % 61l == 0l) return false;\n        if (n % 67l == 0l) return false;\n\
    \        if (n % 71l == 0l) return false;\n        if (n % 73l == 0l) return false;\n\
    \        if (n % 79l == 0l) return false;\n        if (n % 83l == 0l) return false;\n\
    \        if (n % 89l == 0l) return false;\n        if (n % 97l == 0l) return false;\n\
    \        if (n % 101l == 0l) return false;\n        if (n % 103l == 0l) return\
    \ false;\n        if (n % 107l == 0l) return false;\n        if (n % 109l == 0l)\
    \ return false;\n        if (n % 113l == 0l) return false;\n        if (n % 117l\
    \ == 0l) return false;\n        if (n % 121l == 0l) return false;\n        if\
    \ (n % 123l == 0l) return false;\n        if (n % 127l == 0l) return false;\n\
    \        if (n % 131l == 0l) return false;\n        if (n % 137l == 0l) return\
    \ false;\n        if (n % 139l == 0l) return false;\n        if (n % 141l == 0l)\
    \ return false;\n        if (n % 143l == 0l) return false;\n        if (n % 147l\
    \ == 0l) return false;\n        if (n % 151l == 0l) return false;\n        if\
    \ (n % 157l == 0l) return false;\n        if (n % 159l == 0l) return false;\n\
    \        if (n % 161l == 0l) return false;\n        if (n % 163l == 0l) return\
    \ false;\n        if (n % 167l == 0l) return false;\n        if (n % 171l == 0l)\
    \ return false;\n        if (n % 177l == 0l) return false;\n        if (n % 181l\
    \ == 0l) return false;\n        if (n % 193l == 0l) return false;\n        if\
    \ (n % 197l == 0l) return false;\n        if (n % 199l == 0l) return false;\n\
    \        if (n % 211l == 0l) return false;\n        if (n % 223l == 0l) return\
    \ false;\n        if (n % ", "        if (n < 2l) return false; // 0 and 1 are\
    \ not primes\n        if (n == 2l) return true;\n        if (n % 2l == 0l) return\
    \ false; // even numbers are not primes\n        // Check odd-even numbers\n \
    \       for (long i = 3l; i * i <= n; i += 2l) {\n            if (n % i == 0l)\
    \ return false; // odd numbers are not primes\n        }\n        return true;",
  "        if (n < 2l) return false; // 0 or 1 are not primes\n        if (n <= 3l)\
    \ return true; // 2 and 3 are primes\n        if (n % 2 == 0) return false; //\
    \ even numbers are not primes\n        if (n % 3 == 0) return false; // divisible\
    \ by 3\n        long limit = (long) Math.sqrt(n); // limit is the largest integer\
    \ less than or equal to n\n        for (long i = 5l; i <= limit; i += 6l) { //\
    \ test odd numbers\n            if (n % i == 0) return false; // divisible by\
    \ i\n        }\n        return true;", "        if (n < 2l) return false; // 0\
    \ and 1 are not primes\n        if (n == 2l) return true;\n        if (n % 2l\
    \ == 0l) return false; // even numbers are not primes\n        long limit = (long)\
    \ Math.sqrt(n); // limit is the square root of n\n        long i = 3l; // start\
    \ at 3\n        while (i <= limit) {\n            if (n % i == 0l) return false;\
    \ // n is not prime\n            i += 2l; // move to the next potential prime\n\
    \        }\n        return true;", "        if (n <= 1l) return false;\n     \
    \   if (n <= 3l) return true;\n        if (n % 2 == 0 || n % 3 == 0) return false;\n\
    \        long limit = (long) Math.sqrt(n);\n        for (long i = 3l; i * i <=\
    \ limit; i += 6l) if (n % i == 0 || n % (i + 2) == 0) return false;\n        return\
    \ true;", "        if (n <= 1) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        if (n % 3 == 0) return false;\n\
    \        if (n % 5 == 0) return false;\n        if (n % 7 == 0) return false;\n\
    \        long limit = (long) Math.sqrt(n);\n        for (long i = 5; i <= limit;\
    \ i += 6) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;", "        if (n < 2l) return false; // 0 and 1 are not primes\n     \
    \   if (n == 2l) return true;\n        if (n % 2l == 0l) return false; // even\
    \ numbers are not primes\n        long limit = (long) Math.sqrt(n); // limit is\
    \ the square root of n\n        for (long i = 2l; i <= limit; i++) {\n       \
    \     if (n % i == 0l) return false; // n is not prime\n        }\n        return\
    \ true;", "        if (n < 2l) return false; // 0 and 1 are not primes\n     \
    \   if (n == 2l) return true; // 2 is prime\n        if (n % 2l == 0l) return\
    \ false; // even numbers are not primes\n        long limit = (long) Math.sqrt(n);\
    \ // limit the search to sqrt(n)\n        long i = 3l; // start at 3\n       \
    \ while (i <= limit) {\n            if (n % i == 0l) return false; // n is not\
    \ prime\n            i += 2l; // move to the next potential prime\n        }\n\
    \        return true; // n is prime", "        if (n < 2l) return false; // 0\
    \ and 1 are not primes\n        if (n == 2l) return true;\n        if (n % 2l\
    \ == 0l) return false; // even numbers are not primes\n        long limit = (long)\
    \ Math.sqrt(n); // limit is the largest n such that n + (n + 1) / 2l <= n\n  \
    \      long i = 3l; // i is 3 because 3 is the smallest factor of n\n        while\
    \ (i <= limit) {\n            if (n % i == 0l) return false; // n is not prime\n\
    \            if (i == 3l) return true; // i is 3\n            i += 2l; // i is\
    \ now 4 because 4 is the next smallest factor of n\n        }\n        return\
    \ true; // n is prime", "        if (n <= 1l) return false;\n        if (n <=\
    \ 3l) return true;\n        if (n % 2 == 0) return false;\n        if (n % 3 ==\
    \ 0) return false;\n        long limit = (long) Math.sqrt(n);\n        for (long\
    \ i = 3l; i * i <= limit; i += 6l) if (n % i == 0) return false;\n        return\
    \ true;", "        if (n < 2l) return false;\n        if (n == 2l) return true;\n\
    \        if (n % 2l == 0l) return false;\n        if (n % 3l == 0l) return false;\n\
    \        if (n % 5l == 0l) return false;\n        if (n % 7l == 0l) return false;\n\
    \        if (n % 11l == 0l) return false;\n        if (n % 13l == 0l) return false;\n\
    \        if (n % 17l == 0l) return false;\n        if (n % 19l == 0l) return false;\n\
    \        if (n % 23l == 0l) return false;\n        if (n % 29l == 0l) return false;\n\
    \        if (n % 31l == 0l) return false;\n        if (n % 37l == 0l) return false;\n\
    \        if (n % 41l == 0l) return false;\n        if (n % 43l == 0l) return false;\n\
    \        if (n % 47l == 0l) return false;\n        if (n % 53l == 0l) return false;\n\
    \        if (n % 59l == 0l) return false;\n        if (n % 61l == 0l) return false;\n\
    \        if (n % 67l == 0l) return false;\n        if (n % 71l == 0l) return false;\n\
    \        if (n % 73l == 0l) return false;\n        if (n % 79l == 0l) return false;\n\
    \        if (n % 83l == 0l) return false;\n        if (n % 89l == 0l) return false;\n\
    \        if (n % 97l == 0l) return false;\n        if (n % 101l == 0l) return\
    \ false;\n        if (n % 103l == 0l) return false;\n        if (n % 107l == 0l)\
    \ return false;\n        if (n % 109l == 0l) return false;\n        if (n % 113l\
    \ == 0l) return false;\n        if (n % 117l == 0l) return false;\n        if\
    \ (n % 121l == 0l) return false;\n        if (n % 127l == 0l) return false;\n\
    \        if (n % 131l == 0l) return false;\n        if (n % 137l == 0l) return\
    \ false;\n        if (n % 141l == 0l) return false;\n        if (n % 147l == 0l)\
    \ return false;\n        if (n % 151l == 0l) return false;\n        if (n % 157l\
    \ == 0l) return false;\n        if (n % 161l == 0l) return false;\n        if\
    \ (n % 163l == 0l) return false;\n        if (n % 167l == 0l) return false;\n\
    \        if (n % 173l == 0l) return false;\n        if (n % 177l == 0l) return\
    \ false;\n        if (n % 181l == 0l) return false;\n        if (n % 183l == 0l)\
    \ return false;\n        if (n % 189l == 0l) return false;\n        if (n % 193l\
    \ == 0l) return false;\n        if (n % 197l == 0l) return false;\n        if\
    \ (n % 201l == 0l) return false;\n        if (n % 207l == 0l) return false;\n\
    \        if (n % 211l == 0l) return false;\n        if (n % 215l == 0l) return\
    \ false;\n        if (n % 217l == 0l) return false;\n        if (n % 22", "  \
    \      if (n <= 1l) return false;\n        if (n == 2l) return true;\n       \
    \ if (n % 2l == 0l) return false;\n        if (n % 3l == 0l) return false;\n \
    \       if (n % 5l == 0l) return false;\n        if (n % 7l == 0l) return false;\n\
    \        if (n % 11l == 0l) return false;\n        if (n % 13l == 0l) return false;\n\
    \        if (n % 17l == 0l) return false;\n        if (n % 19l == 0l) return false;\n\
    \        if (n % 23l == 0l) return false;\n        if (n % 29l == 0l) return false;\n\
    \        if (n % 31l == 0l) return false;\n        if (n % 37l == 0l) return false;\n\
    \        if (n % 41l == 0l) return false;\n        if (n % 43l == 0l) return false;\n\
    \        if (n % 47l == 0l) return false;\n        if (n % 53l == 0l) return false;\n\
    \        if (n % 59l == 0l) return false;\n        if (n % 61l == 0l) return false;\n\
    \        if (n % 67l == 0l) return false;\n        if (n % 71l == 0l) return false;\n\
    \        if (n % 73l == 0l) return false;\n        if (n % 79l == 0l) return false;\n\
    \        if (n % 83l == 0l) return false;\n        if (n % 89l == 0l) return false;\n\
    \        if (n % 97l == 0l) return false;\n        if (n % 101l == 0l) return\
    \ false;\n        if (n % 103l == 0l) return false;\n        if (n % 107l == 0l)\
    \ return false;\n        if (n % 113l == 0l) return false;\n        if (n % 121l\
    \ == 0l) return false;\n        if (n % 127l == 0l) return false;\n        if\
    \ (n % 131l == 0l) return false;\n        if (n % 137l == 0l) return false;\n\
    \        if (n % 141l == 0l) return false;\n        if (n % 147l == 0l) return\
    \ false;\n        if (n % 151l == 0l) return false;\n        if (n % 157l == 0l)\
    \ return false;\n        if (n % 161l == 0l) return false;\n        if (n % 163l\
    \ == 0l) return false;\n        if (n % 167l == 0l) return false;\n        if\
    \ (n % 173l == 0l) return false;\n        if (n % 179l == 0l) return false;\n\
    \        if (n % 181l == 0l) return false;\n        if (n % 191l == 0l) return\
    \ false;\n        if (n % 197l == 0l) return false;\n        if (n % 201l == 0l)\
    \ return false;\n        if (n % 207l == 0l) return false;\n        if (n % 211l\
    \ == 0l) return false;\n        if (n % 215l == 0l) return false;\n        if\
    \ (n % 221l == 0l) return false;\n        if (n % 227l == 0l) return false;\n\
    \        if (n % 231l == 0l) return false;\n        if (n % 237l == 0l) return\
    \ false;\n        if (n % 241l == 0l) return false;\n", "        if (n < 2l) return\
    \ false; // 0 and 1 are not primes\n        if (n == 2l) return true;\n      \
    \  if (n % 2l == 0l) return false; // even numbers are not primes\n        //\
    \ test odd factors starting from 3\n        for (long i = 6l; i <= Math.sqrt(n);\
    \ i += 6l) if (n % i == 0l) return false;\n        return true;", "        if\
    \ (n < 2l) return false;\n        if (n == 2l) return true;\n        if (n % 2l\
    \ == 0l) return false;\n        if (n % 3l == 0l) return false;\n        if (n\
    \ % 5l == 0l) return false;\n        if (n % 7l == 0l) return false;\n       \
    \ if (n % 11l == 0l) return false;\n        if (n % 13l == 0l) return false;\n\
    \        if (n % 17l == 0l) return false;\n        if (n % 19l == 0l) return false;\n\
    \        if (n % 23l == 0l) return false;\n        if (n % 29l == 0l) return false;\n\
    \        if (n % 31l == 0l) return false;\n        if (n % 37l == 0l) return false;\n\
    \        if (n % 41l == 0l) return false;\n        if (n % 43l == 0l) return false;\n\
    \        if (n % 47l == 0l) return false;\n        if (n % 53l == 0l) return false;\n\
    \        if (n % 59l == 0l) return false;\n        if (n % 61l == 0l) return false;\n\
    \        if (n % 67l == 0l) return false;\n        if (n % 71l == 0l) return false;\n\
    \        if (n % 73l == 0l) return false;\n        if (n % 79l == 0l) return false;\n\
    \        if (n % 83l == 0l) return false;\n        if (n % 89l == 0l) return false;\n\
    \        if (n % 97l == 0l) return false;\n        if (n % 101l == 0l) return\
    \ false;\n        if (n % 103l == 0l) return false;\n        if (n % 107l == 0l)\
    \ return false;\n        if (n % 109l == 0l) return false;\n        if (n % 113l\
    \ == 0l) return false;\n        if (n % 117l == 0l) return false;\n        if\
    \ (n % 121l == 0l) return false;\n        if (n % 123l == 0l) return false;\n\
    \        if (n % 127l == 0l) return false;\n        if (n % 131l == 0l) return\
    \ false;\n        if (n % 137l == 0l) return false;\n        if (n % 139l == 0l)\
    \ return false;\n        if (n % 141l == 0l) return false;\n        if (n % 143l\
    \ == 0l) return false;\n        if (n % 147l == 0l) return false;\n        if\
    \ (n % 151l == 0l) return false;\n        if (n % 157l == 0l) return false;\n\
    \        if (n % 159l == 0l) return false;\n        if (n % 161l == 0l) return\
    \ false;\n        if (n % 163l == 0l) return false;\n        if (n % 167l == 0l)\
    \ return false;\n        if (n % 171l == 0l) return false;\n        if (n % 177l\
    \ == 0l) return false;\n        if (n % 181l == 0l) return false;\n        if\
    \ (n % 191l == 0l) return false;\n        if (n % 197l == 0l) return false;\n\
    \        if (n % 199l == 0l) return false;\n        if (n % 201l == 0l) return\
    \ false;\n        if (n % 207l == 0l) return false;\n        if (n % 211l ", " \
    \       if (n < 2l) return false; // 0 and 1 are not primes\n        if (n ==\
    \ 2l) return true;\n        if (n % 2l == 0l) return false; // even numbers are\
    \ not primes\n        long limit = (long) Math.sqrt(n); // limit is the square\
    \ root of n\n        long i = 3l; // start at 3\n        while (i <= limit) {\n\
    \            if (n % i == 0l) return false; // n is not prime\n            i +=\
    \ 2l; // move to next odd number\n        }\n        return true;", "        if\
    \ (n < 2l) return false;\n        if (n == 2l) return true;\n        if (n % 2l\
    \ == 0l) return false;\n        if (n % 3l == 0l) return false;\n        if (n\
    \ % 5l == 0l) return false;\n        if (n % 7l == 0l) return false;\n       \
    \ if (n % 11l == 0l) return false;\n        if (n % 13l == 0l) return false;\n\
    \        if (n % 17l == 0l) return false;\n        if (n % 19l == 0l) return false;\n\
    \        if (n % 23l == 0l) return false;\n        if (n % 29l == 0l) return false;\n\
    \        if (n % 31l == 0l) return false;\n        if (n % 37l == 0l) return false;\n\
    \        if (n % 41l == 0l) return false;\n        if (n % 43l == 0l) return false;\n\
    \        if (n % 47l == 0l) return false;\n        if (n % 53l == 0l) return false;\n\
    \        if (n % 59l == 0l) return false;\n        if (n % 61l == 0l) return false;\n\
    \        if (n % 67l == 0l) return false;\n        if (n % 71l == 0l) return false;\n\
    \        if (n % 73l == 0l) return false;\n        if (n % 79l == 0l) return false;\n\
    \        if (n % 83l == 0l) return false;\n        if (n % 89l == 0l) return false;\n\
    \        if (n % 97l == 0l) return false;\n        if (n % 101l == 0l) return\
    \ false;\n        if (n % 103l == 0l) return false;\n        if (n % 107l == 0l)\
    \ return false;\n        if (n % 109l == 0l) return false;\n        if (n % 113l\
    \ == 0l) return false;\n        if (n % 117l == 0l) return false;\n        if\
    \ (n % 121l == 0l) return false;\n        if (n % 127l == 0l) return false;\n\
    \        if (n % 131l == 0l) return false;\n        if (n % 137l == 0l) return\
    \ false;\n        if (n % 141l == 0l) return false;\n        if (n % 147l == 0l)\
    \ return false;\n        if (n % 151l == 0l) return false;\n        if (n % 157l\
    \ == 0l) return false;\n        if (n % 161l == 0l) return false;\n        if\
    \ (n % 163l == 0l) return false;\n        if (n % 167l == 0l) return false;\n\
    \        if (n % 173l == 0l) return false;\n        if (n % 177l == 0l) return\
    \ false;\n        if (n % 181l == 0l) return false;\n        if (n % 191l == 0l)\
    \ return false;\n        if (n % 197l == 0l) return false;\n        if (n % 201l\
    \ == 0l) return false;\n        if (n % 207l == 0l) return false;\n        if\
    \ (n % 211l == 0l) return false;\n        if (n % 215l == 0l) return false;\n\
    \        if (n % 221l == 0l) return false;\n        if (n % 227l == 0l) return\
    \ false;\n        if (n % 231l == 0l) return false;\n        if (n % ", "    \
    \    if (n <= 1l) return false;\n        if (n <= 3l) return true;\n        if\
    \ (n % 2 == 0) return false;\n        if (n % 3 == 0) return false;\n        if\
    \ (n % 5 == 0) return false;\n        long limit = (long) Math.sqrt(n);\n    \
    \    for (long i = 5l; i <= limit; i += 6l) if (n % i == 0) return false;\n  \
    \      return true;", "        if (n < 2l) return false; // 0 and 1 are not primes\n\
    \        if (n <= 3l) return true; // 2 and 3 are primes\n        if (n % 2l ==\
    \ 0l) return false; // even numbers aren't primes\n        if (n % 3l == 0l) return\
    \ false; // even numbers aren't primes\n        long limit = (long) Math.sqrt(n);\n\
    \        for (long i = 2l; i <= limit; i++) {\n            if (n % i == 0l) return\
    \ false; // odd numbers aren't primes\n        }\n        return true;", "   \
    \     if (n < 2l) return false; // 0 and 1 are not primes\n        if (n == 2l)\
    \ return true;\n        if (n % 2l == 0l) return false; // even numbers are not\
    \ primes\n        if (n % 3l == 0l) return false; // prime factors of 3 are not\
    \ primes\n        if (n % 5l == 0l) return false; // prime factors of 5 are not\
    \ primes\n        if (n % 7l == 0l) return false; // prime factors of 7 are not\
    \ primes\n        if (n % 11l == 0l) return false; // prime factors of 11 are\
    \ not primes\n        if (n % 13l == 0l) return false; // prime factors of 13\
    \ are not primes\n        if (n % 17l == 0l) return false; // prime factors of\
    \ 17 are not primes\n        if (n % 19l == 0l) return false; // prime factors\
    \ of 19 are not primes\n        if (n % 23l == 0l) return false; // prime factors\
    \ of 23 are not primes\n        if (n % 29l == 0l) return false; // prime factors\
    \ of 29 are not primes\n        if (n % 31l == 0l) return false; // prime factors\
    \ of 31 are not primes\n        if (n % 37l == 0l) return false; // prime factors\
    \ of 37 are not primes\n        if (n % 41l == 0l) return false; // prime factors\
    \ of 41 are not primes\n        if (n % 43l == 0l) return false; // prime factors\
    \ of 43 are not primes\n        if (n % 47l == 0l) return false; // prime factors\
    \ of 47 are not primes\n        if (n % 53l == 0l) return false; // prime factors\
    \ of 53 are not primes\n        if (n % 59l == 0l) return false; // prime factors\
    \ of 59 are not primes\n        if (n % 61l == 0l) return false; // prime factors\
    \ of 61 are not primes\n        if (n % 67l == 0l) return false; // prime factors\
    \ of 67 are not primes\n        if (n % 71l == 0l) return false; // prime factors\
    \ of 71 are not primes\n        if (n % 73l == 0l) return false; // prime factors\
    \ of 73 are not primes\n        if (n % 79l == 0l) return false; // prime factors\
    \ of 79 are not primes\n        if (n % 83l == 0l) return false; // prime factors\
    \ of 83 are not primes\n        if (n % 89l == 0l) return false; // prime factors\
    \ of 89 are not primes\n        if (n % 97l == 0l) return false; // prime factors\
    \ of 97 are not primes\n        if (n % 101l == 0l) return false; // prime factors\
    \ of 101 are not primes\n        if (n % 103l == 0l) return false; // prime factor",
  "        if (n < 2l) return false;\n        if (n == 2l) return true;\n        if\
    \ (n % 2l == 0l) return false;\n        long limit = (long) Math.sqrt(n);\n  \
    \      for (long i = 2l; i <= limit; i++) {\n            if (n % i == 0l) return\
    \ false;\n        }\n        return true;", "        if (n < 2l) return false;\n\
    \        if (n == 2l) return true;\n        if (n % 2l == 0l) return false;\n\
    \        long limit = (long) Math.sqrt(n) + 1;\n        for (long i = 2l; i <=\
    \ limit; i++) {\n            if (n % i == 0l) return false;\n        }\n     \
    \   return true;", "        if (n < 2l) return false; // 0 or 1 are not primes.\n\
    \        if (n == 2l) return true;\n        if (n % 2l == 0l) return false; //\
    \ even numbers are not primes.\n        if (n % 3l == 0l) return false; // prime\
    \ factors of 3 are not primes.\n        if (n % 5l == 0l) return false; // prime\
    \ factors of 5 are not primes.\n        if (n % 7l == 0l) return false; // prime\
    \ factors of 7 are not primes.\n        if (n % 11l == 0l) return false; // prime\
    \ factors of 11 are not primes.\n        if (n % 13l == 0l) return false; // prime\
    \ factors of 13 are not primes.\n        if (n % 17l == 0l) return false; // prime\
    \ factors of 17 are not primes.\n        if (n % 19l == 0l) return false; // prime\
    \ factors of 19 are not primes.\n        if (n % 23l == 0l) return false; // prime\
    \ factors of 23 are not primes.\n        if (n % 29l == 0l) return false; // prime\
    \ factors of 29 are not primes.\n        if (n % 31l == 0l) return false; // prime\
    \ factors of 31 are not primes.\n        if (n % 37l == 0l) return false; // prime\
    \ factors of 37 are not primes.\n        if (n % 41l == 0l) return false; // prime\
    \ factors of 41 are not primes.\n        if (n % 43l == 0l) return false; // prime\
    \ factors of 43 are not primes.\n        if (n % 47l == 0l) return false; // prime\
    \ factors of 47 are not primes.\n        if (n % 53l == 0l) return false; // prime\
    \ factors of 53 are not primes.\n        if (n % 59l == 0l) return false; // prime\
    \ factors of 59 are not primes.\n        if (n % 61l == 0l) return false; // prime\
    \ factors of 61 are not primes.\n        if (n % 67l == 0l) return false; // prime\
    \ factors of 67 are not primes.\n        if (n % 71l == 0l) return false; // prime\
    \ factors of 71 are not primes.\n        if (n % 73l == 0l) return false; // prime\
    \ factors of 73 are not primes.\n        if (n % 79l == 0l) return false; // prime\
    \ factors of 79 are not primes.\n        if (n % 83l == 0l) return false; // prime\
    \ factors of 83 are not primes.\n        if (n % 89l == 0l) return false; // prime\
    \ factors of 89 are not primes.\n        if (n % 97l == 0l) return false; // prime\
    \ factors of 97 are not primes.\n        if (n % 101l == 0l) return false; //\
    \ prime factors of 101 are not primes.\n        if (n % 103l == 0l) return false;\
    \ // prime factor", "        if (n <= 1l) return false;\n        if (n == 2l)\
    \ return true;\n        if (n % 2l == 0l) return false;\n        if (n % 3l ==\
    \ 0l) return false;\n        if (n % 5l == 0l) return false;\n        if (n %\
    \ 7l == 0l) return false;\n        if (n % 11l == 0l) return false;\n        if\
    \ (n % 13l == 0l) return false;\n        if (n % 17l == 0l) return false;\n  \
    \      if (n % 19l == 0l) return false;\n        if (n % 23l == 0l) return false;\n\
    \        if (n % 29l == 0l) return false;\n        if (n % 31l == 0l) return false;\n\
    \        if (n % 37l == 0l) return false;\n        if (n % 41l == 0l) return false;\n\
    \        if (n % 43l == 0l) return false;\n        if (n % 47l == 0l) return false;\n\
    \        if (n % 53l == 0l) return false;\n        if (n % 59l == 0l) return false;\n\
    \        if (n % 61l == 0l) return false;\n        if (n % 67l == 0l) return false;\n\
    \        if (n % 71l == 0l) return false;\n        if (n % 73l == 0l) return false;\n\
    \        if (n % 79l == 0l) return false;\n        if (n % 83l == 0l) return false;\n\
    \        if (n % 89l == 0l) return false;\n        if (n % 97l == 0l) return false;\n\
    \        if (n % 101l == 0l) return false;\n        if (n % 103l == 0l) return\
    \ false;\n        if (n % 107l == 0l) return false;\n        if (n % 113l == 0l)\
    \ return false;\n        if (n % 121l == 0l) return false;\n        if (n % 127l\
    \ == 0l) return false;\n        if (n % 131l == 0l) return false;\n        if\
    \ (n % 137l == 0l) return false;\n        if (n % 141l == 0l) return false;\n\
    \        if (n % 147l == 0l) return false;\n        if (n % 151l == 0l) return\
    \ false;\n        if (n % 157l == 0l) return false;\n        if (n % 161l == 0l)\
    \ return false;\n        if (n % 163l == 0l) return false;\n        if (n % 167l\
    \ == 0l) return false;\n        if (n % 173l == 0l) return false;\n        if\
    \ (n % 179l == 0l) return false;\n        if (n % 181l == 0l) return false;\n\
    \        if (n % 185l == 0l) return false;\n        if (n % 189l == 0l) return\
    \ false;\n        if (n % 193l == 0l) return false;\n        if (n % 197l == 0l)\
    \ return false;\n        if (n % 201l == 0l) return false;\n        if (n % 207l\
    \ == 0l) return false;\n        if (n % 211l == 0l) return false;\n        if\
    \ (n % 215l == 0l) return false;\n        if (n % 219l == 0l) return false;\n\
    \        if (n % 223l == 0l) return false;\n        if (n % 227l == 0l) return\
    \ false;\n        if (n % ", "        if (n < 2l) return false; // 0 and 1 are\
    \ not primes\n        if (n == 2l) return true;\n        if (n % 2l == 0l) return\
    \ false; // even numbers are not primes\n        // Check odd-even numbers for\
    \ primeness\n        long limit = (long) Math.sqrt(n); // limit is the square\
    \ root of n\n        for (long i = 3l; i <= limit; i += 2l) {\n            if\
    \ (n % i == 0l) return false; // n is not prime\n        }\n        return true;",
  "        if (n < 2l) return false;\n        if (n == 2l) return true;\n        if\
    \ (n % 2l == 0l) return false;\n        if (n % 3l == 0l) return false;\n    \
    \    if (n % 5l == 0l) return false;\n        if (n % 7l == 0l) return false;\n\
    \        if (n % 11l == 0l) return false;\n        if (n % 13l == 0l) return false;\n\
    \        if (n % 17l == 0l) return false;\n        if (n % 19l == 0l) return false;\n\
    \        if (n % 23l == 0l) return false;\n        if (n % 29l == 0l) return false;\n\
    \        if (n % 31l == 0l) return false;\n        if (n % 37l == 0l) return false;\n\
    \        if (n % 41l == 0l) return false;\n        if (n % 43l == 0l) return false;\n\
    \        if (n % 47l == 0l) return false;\n        if (n % 53l == 0l) return false;\n\
    \        if (n % 59l == 0l) return false;\n        if (n % 61l == 0l) return false;\n\
    \        if (n % 67l == 0l) return false;\n        if (n % 71l == 0l) return false;\n\
    \        if (n % 73l == 0l) return false;\n        if (n % 79l == 0l) return false;\n\
    \        if (n % 83l == 0l) return false;\n        if (n % 89l == 0l) return false;\n\
    \        if (n % 97l == 0l) return false;\n        if (n % 101l == 0l) return\
    \ false;\n        if (n % 103l == 0l) return false;\n        if (n % 107l == 0l)\
    \ return false;\n        if (n % 109l == 0l) return false;\n        if (n % 113l\
    \ == 0l) return false;\n        if (n % 117l == 0l) return false;\n        if\
    \ (n % 121l == 0l) return false;\n        if (n % 123l == 0l) return false;\n\
    \        if (n % 127l == 0l) return false;\n        if (n % 131l == 0l) return\
    \ false;\n        if (n % 137l == 0l) return false;\n        if (n % 139l == 0l)\
    \ return false;\n        if (n % 141l == 0l) return false;\n        if (n % 147l\
    \ == 0l) return false;\n        if (n % 149l == 0l) return false;\n        if\
    \ (n % 151l == 0l) return false;\n        if (n % 157l == 0l) return false;\n\
    \        if (n % 163l == 0l) return false;\n        if (n % 167l == 0l) return\
    \ false;\n        if (n % 171l == 0l) return false;\n        if (n % 177l == 0l)\
    \ return false;\n        if (n % 181l == 0l) return false;\n        if (n % 189l\
    \ == 0l) return false;\n        if (n % 193l == 0l) return false;\n        if\
    \ (n % 197l == 0l) return false;\n        if (n % 201l == 0l) return false;\n\
    \        if (n % 207l == 0l) return false;\n        if (n % 211l == 0l) return\
    \ false;\n        if (n % 215l == 0l) return false;\n        if (n % 217l == ",
  "        if (n < 2l) return false;\n        if (n == 2l) return true;\n        if\
    \ (n % 2l == 0l) return false;\n        long limit = (long) Math.sqrt(n);\n  \
    \      for (long i = 3l; i * i <= limit; i += 2l) {\n            if (n % i ==\
    \ 0l) return false;\n        }\n        return true;", "        if (n < 2l) return\
    \ false; // 0 and 1 are not primes\n        if (n == 2l) return true;\n      \
    \  if (n % 2l == 0l) return false; // 0 and 1 are not primes\n        if (n %\
    \ 3l == 0l) return false; // 2 and 3 are not primes\n        if (n % 5l == 0l)\
    \ return false; // 2 and 3 are not primes\n        if (n % 7l == 0l) return false;\
    \ // 2 and 3 are not primes\n        if (n % 11l == 0l) return false; // 2 and\
    \ 3 are not primes\n        if (n % 13l == 0l) return false; // 2 and 3 are not\
    \ primes\n        if (n % 17l == 0l) return false; // 2 and 3 are not primes\n\
    \        if (n % 19l == 0l) return false; // 2 and 3 are not primes\n        if\
    \ (n % 23l == 0l) return false; // 2 and 3 are not primes\n        if (n % 29l\
    \ == 0l) return false; // 2 and 3 are not primes\n        if (n % 31l == 0l) return\
    \ false; // 2 and 3 are not primes\n        if (n % 37l == 0l) return false; //\
    \ 2 and 3 are not primes\n        if (n % 41l == 0l) return false; // 2 and 3\
    \ are not primes\n        if (n % 43l == 0l) return false; // 2 and 3 are not\
    \ primes\n        if (n % 47l == 0l) return false; // 2 and 3 are not primes\n\
    \        if (n % 53l == 0l) return false; // 2 and 3 are not primes\n        if\
    \ (n % 59l == 0l) return false; // 2 and 3 are not primes\n        if (n % 61l\
    \ == 0l) return false; // 2 and 3 are not primes\n        if (n % 67l == 0l) return\
    \ false; // 2 and 3 are not primes\n        if (n % 71l == 0l) return false; //\
    \ 2 and 3 are not primes\n        if (n % 73l == 0l) return false; // 2 and 3\
    \ are not primes\n        if (n % 79l == 0l) return false; // 2 and 3 are not\
    \ primes\n        if (n % 83l == 0l) return false; // 2 and 3 are not primes\n\
    \        if (n % 89l == 0l) return false; // 2 and 3 are not primes\n        if\
    \ (n % 97l == 0l) return false; // 2 and 3 are not primes\n        if (n % 101l\
    \ == 0l) return false; // 2 and 3 are not primes\n        if (n % 103l == 0l)\
    \ return false; // 2 and 3 are not primes\n        if (n % 107l == 0l) return\
    \ false; // 2 and 3 are not primes\n        if (n % 109l == 0l) return false;\
    \ // 2 and 3 are not primes\n        if (n % 113l == 0l) return false; // 2 and\
    \ 3 are not primes\n        if (n % 127l == 0l) return false; // 2 and ", "  \
    \      if (n < 2l) return false; // 0 or 1 are not primes\n        if (n == 2l)\
    \ return true;\n        if (n % 2l == 0l) return false; // even numbers are not\
    \ primes\n        if (n % 3l == 0l) return false; // prime factors of 3 are not\
    \ primes\n        if (n % 5l == 0l) return false; // prime factors of 5 are not\
    \ primes\n        if (n % 7l == 0l) return false; // prime factors of 7 are not\
    \ primes\n        if (n % 11l == 0l) return false; // prime factors of 11 are\
    \ not primes\n        if (n % 13l == 0l) return false; // prime factors of 13\
    \ are not primes\n        if (n % 17l == 0l) return false; // prime factors of\
    \ 17 are not primes\n        if (n % 19l == 0l) return false; // prime factors\
    \ of 19 are not primes\n        if (n % 23l == 0l) return false; // prime factors\
    \ of 23 are not primes\n        if (n % 29l == 0l) return false; // prime factors\
    \ of 29 are not primes\n        if (n % 31l == 0l) return false; // prime factors\
    \ of 31 are not primes\n        if (n % 37l == 0l) return false; // prime factors\
    \ of 37 are not primes\n        if (n % 41l == 0l) return false; // prime factors\
    \ of 41 are not primes\n        if (n % 43l == 0l) return false; // prime factors\
    \ of 43 are not primes\n        if (n % 47l == 0l) return false; // prime factors\
    \ of 47 are not primes\n        if (n % 53l == 0l) return false; // prime factors\
    \ of 53 are not primes\n        if (n % 59l == 0l) return false; // prime factors\
    \ of 59 are not primes\n        if (n % 61l == 0l) return false; // prime factors\
    \ of 61 are not primes\n        if (n % 67l == 0l) return false; // prime factors\
    \ of 67 are not primes\n        if (n % 71l == 0l) return false; // prime factors\
    \ of 71 are not primes\n        if (n % 73l == 0l) return false; // prime factors\
    \ of 73 are not primes\n        if (n % 79l == 0l) return false; // prime factors\
    \ of 79 are not primes\n        if (n % 83l == 0l) return false; // prime factors\
    \ of 83 are not primes\n        if (n % 89l == 0l) return false; // prime factors\
    \ of 89 are not primes\n        if (n % 97l == 0l) return false; // prime factors\
    \ of 97 are not primes\n        if (n % 101l == 0l) return false; // prime factors\
    \ of 101 are not primes\n        if (n % 103l == 0l) return false; // prime factor",
  "        if (n < 2l) return false;\n        if (n == 2l) return true;\n        if\
    \ (n % 2l == 0l) return false;\n        if (n % 3l == 0l) return false;\n    \
    \    if (n % 5l == 0l) return false;\n        if (n % 7l == 0l) return false;\n\
    \        if (n % 11l == 0l) return false;\n        if (n % 13l == 0l) return false;\n\
    \        if (n % 17l == 0l) return false;\n        if (n % 19l == 0l) return false;\n\
    \        if (n % 23l == 0l) return false;\n        if (n % 29l == 0l) return false;\n\
    \        if (n % 31l == 0l) return false;\n        if (n % 37l == 0l) return false;\n\
    \        if (n % 41l == 0l) return false;\n        if (n % 43l == 0l) return false;\n\
    \        if (n % 47l == 0l) return false;\n        if (n % 53l == 0l) return false;\n\
    \        if (n % 59l == 0l) return false;\n        if (n % 61l == 0l) return false;\n\
    \        if (n % 67l == 0l) return false;\n        if (n % 71l == 0l) return false;\n\
    \        if (n % 73l == 0l) return false;\n        if (n % 79l == 0l) return false;\n\
    \        if (n % 83l == 0l) return false;\n        if (n % 89l == 0l) return false;\n\
    \        if (n % 97l == 0l) return false;\n        if (n % 101l == 0l) return\
    \ false;\n        if (n % 103l == 0l) return false;\n        if (n % 107l == 0l)\
    \ return false;\n        if (n % 109l == 0l) return false;\n        if (n % 113l\
    \ == 0l) return false;\n        if (n % 117l == 0l) return false;\n        if\
    \ (n % 121l == 0l) return false;\n        if (n % 123l == 0l) return false;\n\
    \        if (n % 127l == 0l) return false;\n        if (n % 131l == 0l) return\
    \ false;\n        if (n % 137l == 0l) return false;\n        if (n % 139l == 0l)\
    \ return false;\n        if (n % 141l == 0l) return false;\n        if (n % 147l\
    \ == 0l) return false;\n        if (n % 151l == 0l) return false;\n        if\
    \ (n % 157l == 0l) return false;\n        if (n % 163l == 0l) return false;\n\
    \        if (n % 167l == 0l) return false;\n        if (n % 173l == 0l) return\
    \ false;\n        if (n % 179l == 0l) return false;\n        if (n % 181l == 0l)\
    \ return false;\n        if (n % 191l == 0l) return false;\n        if (n % 197l\
    \ == 0l) return false;\n        if (n % 199l == 0l) return false;\n        if\
    \ (n % 201l == 0l) return false;\n        if (n % 207l == 0l) return false;\n\
    \        if (n % 211l == 0l) return false;\n        if (n % 215l == 0l) return\
    \ false;\n        if (n % 217l == 0l) return false;\n        if (n % 223l ", " \
    \       if (n < 2l) return false; // 0 and 1 are not primes\n        if (n ==\
    \ 2l) return true;\n        if (n % 2l == 0l) return false; // even numbers aren't\
    \ primes\n        long limit = (long) Math.sqrt(n); // limit the search to sqrt(n)\n\
    \        for (long i = 2l; i <= limit; i++) {\n            if (n % i == 0l) return\
    \ false; // n is not prime\n        }\n        return true;", "        if (n <\
    \ 2l) return false;\n        if (n == 2l) return true;\n        if (n % 2l ==\
    \ 0l) return false;\n        if (n % 3l == 0l) return false;\n        if (n %\
    \ 5l == 0l) return false;\n        if (n % 7l == 0l) return false;\n        if\
    \ (n % 11l == 0l) return false;\n        if (n % 13l == 0l) return false;\n  \
    \      if (n % 17l == 0l) return false;\n        if (n % 19l == 0l) return false;\n\
    \        if (n % 23l == 0l) return false;\n        if (n % 29l == 0l) return false;\n\
    \        if (n % 31l == 0l) return false;\n        if (n % 37l == 0l) return false;\n\
    \        if (n % 41l == 0l) return false;\n        if (n % 43l == 0l) return false;\n\
    \        if (n % 47l == 0l) return false;\n        if (n % 53l == 0l) return false;\n\
    \        if (n % 59l == 0l) return false;\n        if (n % 61l == 0l) return false;\n\
    \        if (n % 67l == 0l) return false;\n        if (n % 71l == 0l) return false;\n\
    \        if (n % 73l == 0l) return false;\n        if (n % 79l == 0l) return false;\n\
    \        if (n % 83l == 0l) return false;\n        if (n % 89l == 0l) return false;\n\
    \        if (n % 97l == 0l) return false;\n        if (n % 101l == 0l) return\
    \ false;\n        if (n % 103l == 0l) return false;\n        if (n % 107l == 0l)\
    \ return false;\n        if (n % 113l == 0l) return false;\n        if (n % 121l\
    \ == 0l) return false;\n        if (n % 127l == 0l) return false;\n        if\
    \ (n % 131l == 0l) return false;\n        if (n % 137l == 0l) return false;\n\
    \        if (n % 141l == 0l) return false;\n        if (n % 147l == 0l) return\
    \ false;\n        if (n % 151l == 0l) return false;\n        if (n % 157l == 0l)\
    \ return false;\n        if (n % 161l == 0l) return false;\n        if (n % 163l\
    \ == 0l) return false;\n        if (n % 167l == 0l) return false;\n        if\
    \ (n % 173l == 0l) return false;\n        if (n % 179l == 0l) return false;\n\
    \        if (n % 181l == 0l) return false;\n        if (n % 191l == 0l) return\
    \ false;\n        if (n % 197l == 0l) return false;\n        if (n % 201l == 0l)\
    \ return false;\n        if (n % 207l == 0l) return false;\n        if (n % 211l\
    \ == 0l) return false;\n        if (n % 215l == 0l) return false;\n        if\
    \ (n % 221l == 0l) return false;\n        if (n % 227l == 0l) return false;\n\
    \        if (n % 231l == 0l) return false;\n        if (n % 239l == 0l) return\
    \ false;\n        if (n % 241l == 0l) return false;\n        if (", "        if\
    \ (n < 2l) return false;\n        if (n == 2l) return true;\n        if (n % 2l\
    \ == 0l) return false;\n        if (n % 3l == 0l) return false;\n        if (n\
    \ % 5l == 0l) return false;\n        if (n % 7l == 0l) return false;\n       \
    \ if (n % 11l == 0l) return false;\n        if (n % 13l == 0l) return false;\n\
    \        if (n % 17l == 0l) return false;\n        if (n % 19l == 0l) return false;\n\
    \        if (n % 23l == 0l) return false;\n        if (n % 29l == 0l) return false;\n\
    \        if (n % 31l == 0l) return false;\n        if (n % 37l == 0l) return false;\n\
    \        if (n % 41l == 0l) return false;\n        if (n % 43l == 0l) return false;\n\
    \        if (n % 47l == 0l) return false;\n        if (n % 53l == 0l) return false;\n\
    \        if (n % 59l == 0l) return false;\n        if (n % 61l == 0l) return false;\n\
    \        if (n % 67l == 0l) return false;\n        if (n % 71l == 0l) return false;\n\
    \        if (n % 73l == 0l) return false;\n        if (n % 79l == 0l) return false;\n\
    \        if (n % 83l == 0l) return false;\n        if (n % 89l == 0l) return false;\n\
    \        if (n % 97l == 0l) return false;\n        if (n % 101l == 0l) return\
    \ false;\n        if (n % 103l == 0l) return false;\n        if (n % 107l == 0l)\
    \ return false;\n        if (n % 109l == 0l) return false;\n        if (n % 113l\
    \ == 0l) return false;\n        if (n % 117l == 0l) return false;\n        if\
    \ (n % 121l == 0l) return false;\n        if (n % 127l == 0l) return false;\n\
    \        if (n % 131l == 0l) return false;\n        if (n % 137l == 0l) return\
    \ false;\n        if (n % 141l == 0l) return false;\n        if (n % 147l == 0l)\
    \ return false;\n        if (n % 151l == 0l) return false;\n        if (n % 157l\
    \ == 0l) return false;\n        if (n % 161l == 0l) return false;\n        if\
    \ (n % 163l == 0l) return false;\n        if (n % 167l == 0l) return false;\n\
    \        if (n % 173l == 0l) return false;\n        if (n % 177l == 0l) return\
    \ false;\n        if (n % 181l == 0l) return false;\n        if (n % 191l == 0l)\
    \ return false;\n        if (n % 197l == 0l) return false;\n        if (n % 201l\
    \ == 0l) return false;\n        if (n % 207l == 0l) return false;\n        if\
    \ (n % 211l == 0l) return false;\n        if (n % 215l == 0l) return false;\n\
    \        if (n % 221l == 0l) return false;\n        if (n % 227l == 0l) return\
    \ false;\n        if (n % 231l == 0l) return false;\n        if (n % ", "    \
    \    if (n < 2l) return false; // 0 and 1 are not primes\n        if (n == 2l)\
    \ return true;\n        if (n % 2l == 0l) return false; // even numbers are not\
    \ primes\n        if (n % 3l == 0l) return false; // prime factors of 3 are not\
    \ primes\n        if (n % 5l == 0l) return false; // prime factors of 5 are not\
    \ primes\n        if (n % 7l == 0l) return false; // prime factors of 7 are not\
    \ primes\n        if (n % 11l == 0l) return false; // prime factors of 11 are\
    \ not primes\n        if (n % 13l == 0l) return false; // prime factors of 13\
    \ are not primes\n        if (n % 17l == 0l) return false; // prime factors of\
    \ 17 are not primes\n        if (n % 19l == 0l) return false; // prime factors\
    \ of 19 are not primes\n        if (n % 23l == 0l) return false; // prime factors\
    \ of 23 are not primes\n        if (n % 29l == 0l) return false; // prime factors\
    \ of 29 are not primes\n        if (n % 31l == 0l) return false; // prime factors\
    \ of 31 are not primes\n        if (n % 37l == 0l) return false; // prime factors\
    \ of 37 are not primes\n        if (n % 41l == 0l) return false; // prime factors\
    \ of 41 are not primes\n        if (n % 43l == 0l) return false; // prime factors\
    \ of 43 are not primes\n        if (n % 47l == 0l) return false; // prime factors\
    \ of 47 are not primes\n        if (n % 53l == 0l) return false; // prime factors\
    \ of 53 are not primes\n        if (n % 59l == 0l) return false; // prime factors\
    \ of 59 are not primes\n        if (n % 61l == 0l) return false; // prime factors\
    \ of 61 are not primes\n        if (n % 67l == 0l) return false; // prime factors\
    \ of 67 are not primes\n        if (n % 71l == 0l) return false; // prime factors\
    \ of 71 are not primes\n        if (n % 73l == 0l) return false; // prime factors\
    \ of 73 are not primes\n        if (n % 79l == 0l) return false; // prime factors\
    \ of 79 are not primes\n        if (n % 83l == 0l) return false; // prime factors\
    \ of 83 are not primes\n        if (n % 89l == 0l) return false; // prime factors\
    \ of 89 are not primes\n        if (n % 97l == 0l) return false; // prime factors\
    \ of 97 are not primes\n        if (n % 101l == 0l) return false; // prime factors\
    \ of 101 are not primes\n        if (n % 103l == 0l) return false; // prime factor",
  "        if (n < 2l) return false; // 0 or 1 are not primes\n        if (n == 2l)\
    \ return true; // 2 is prime\n        if (n % 2l == 0l) return false; // even\
    \ numbers aren't primes\n        long limit = (long) Math.sqrt(n); // limit is\
    \ the square root of n\n        long i = 3l; // start at 3\n        while (i <=\
    \ limit) {\n            if (n % i == 0l) return false; // i is composite\n   \
    \         i += 2l; // move to next odd number\n        }\n        return true;\
    \ // n is prime", "        if (n < 2l) return false; // 0 and 1 are not primes.\n\
    \        if (n == 2l) return true;\n        if (n % 2l == 0l) return false; //\
    \ even numbers are not primes.\n        long limit = (long) Math.sqrt(n); // limit\
    \ is the square root of n.\n        for (long i = 2l; i <= limit; i++) {\n   \
    \         if (n % i == 0l) return false; // n is not prime.\n        }\n     \
    \   return true;", "        if (n <= 1l) return false;\n        if (n == 2l) return\
    \ true;\n        if (n % 2l == 0l) return false;\n        if (n % 3l == 0l) return\
    \ false;\n        if (n % 5l == 0l) return false;\n        if (n % 7l == 0l) return\
    \ false;\n        if (n % 11l == 0l) return false;\n        if (n % 13l == 0l)\
    \ return false;\n        if (n % 17l == 0l) return false;\n        if (n % 19l\
    \ == 0l) return false;\n        if (n % 23l == 0l) return false;\n        if (n\
    \ % 29l == 0l) return false;\n        if (n % 31l == 0l) return false;\n     \
    \   if (n % 37l == 0l) return false;\n        if (n % 41l == 0l) return false;\n\
    \        if (n % 43l == 0l) return false;\n        if (n % 47l == 0l) return false;\n\
    \        if (n % 53l == 0l) return false;\n        if (n % 59l == 0l) return false;\n\
    \        if (n % 61l == 0l) return false;\n        if (n % 67l == 0l) return false;\n\
    \        if (n % 71l == 0l) return false;\n        if (n % 73l == 0l) return false;\n\
    \        if (n % 79l == 0l) return false;\n        if (n % 83l == 0l) return false;\n\
    \        if (n % 89l == 0l) return false;\n        if (n % 97l == 0l) return false;\n\
    \        if (n % 101l == 0l) return false;\n        if (n % 103l == 0l) return\
    \ false;\n        if (n % 107l == 0l) return false;\n        if (n % 113l == 0l)\
    \ return false;\n        if (n % 121l == 0l) return false;\n        if (n % 127l\
    \ == 0l) return false;\n        if (n % 131l == 0l) return false;\n        if\
    \ (n % 137l == 0l) return false;\n        if (n % 141l == 0l) return false;\n\
    \        if (n % 147l == 0l) return false;\n        if (n % 151l == 0l) return\
    \ false;\n        if (n % 157l == 0l) return false;\n        if (n % 161l == 0l)\
    \ return false;\n        if (n % 163l == 0l) return false;\n        if (n % 167l\
    \ == 0l) return false;\n        if (n % 173l == 0l) return false;\n        if\
    \ (n % 179l == 0l) return false;\n        if (n % 181l == 0l) return false;\n\
    \        if (n % 191l == 0l) return false;\n        if (n % 197l == 0l) return\
    \ false;\n        if (n % 199l == 0l) return false;\n        if (n % 201l == 0l)\
    \ return false;\n        if (n % 207l == 0l) return false;\n        if (n % 211l\
    \ == 0l) return false;\n        if (n % 215l == 0l) return false;\n        if\
    \ (n % 223l == 0l) return false;\n        if (n % 229l == 0l) return false;\n\
    \        if (n % 233l == 0l) return false;\n        if (n % 239l == 0l) return\
    \ false;\n        if (n % ", "        if (n < 2l) return false; // 0 and 1 are\
    \ not primes.\n        if (n == 2l) return true; // 2 is prime\n        if (n\
    \ % 2l == 0l) return false; // even numbers aren't primes\n        if (n % 3l\
    \ == 0l) return false; // multiple of 3 are not primes\n        if (n % 5l ==\
    \ 0l) return false; // multiple of 5 are not primes\n        if (n % 7l == 0l)\
    \ return false; // multiple of 7 are not primes\n        if (n % 11l == 0l) return\
    \ false; // multiple of 11 are not primes\n        if (n % 13l == 0l) return false;\
    \ // multiple of 13 are not primes\n        if (n % 17l == 0l) return false; //\
    \ multiple of 17 are not primes\n        if (n % 19l == 0l) return false; // multiple\
    \ of 19 are not primes\n        if (n % 23l == 0l) return false; // multiple of\
    \ 23 are not primes\n        if (n % 29l == 0l) return false; // multiple of 29\
    \ are not primes\n        if (n % 31l == 0l) return false; // multiple of 31 are\
    \ not primes\n        if (n % 37l == 0l) return false; // multiple of 37 are not\
    \ primes\n        if (n % 41l == 0l) return false; // multiple of 41 are not primes\n\
    \        if (n % 43l == 0l) return false; // multiple of 43 are not primes\n \
    \       if (n % 47l == 0l) return false; // multiple of 47 are not primes\n  \
    \      if (n % 53l == 0l) return false; // multiple of 53 are not primes\n   \
    \     if (n % 59l == 0l) return false; // multiple of 59 are not primes\n    \
    \    if (n % 61l == 0l) return false; // multiple of 61 are not primes\n     \
    \   if (n % 67l == 0l) return false; // multiple of 67 are not primes\n      \
    \  if (n % 71l == 0l) return false; // multiple of 71 are not primes\n       \
    \ if (n % 73l == 0l) return false; // multiple of 73 are not primes\n        if\
    \ (n % 79l == 0l) return false; // multiple of 79 are not primes\n        if (n\
    \ % 83l == 0l) return false; // multiple of 83 are not primes\n        if (n %\
    \ 89l == 0l) return false; // multiple of 89 are not primes\n        if (n % 97l\
    \ == 0l) return false; // multiple of 97 are not primes\n        if (n % 101l\
    \ == 0l) return false; // multiple of 101 are not primes\n        if (n % 103l\
    \ == 0l) return false; // multiple of 103 are not primes\n        if (n % 107l\
    \ == 0l) return false; // multiple of 107 are not primes\n        if (n % 113l\
    \ == 0l) return false; // multiple of 113 are not primes\n        if (n % 127l\
    \ == 0", "        if (n < 2l) return false;\n        if (n == 2l) return true;\n\
    \        if (n % 2l == 0l) return false;\n        long limit = (long) Math.sqrt(n);\n\
    \        for (long i = 2l; i <= limit; i++) {\n            if (n % i == 0l) return\
    \ false;\n        }\n        return true;", "        if (n <= 1l) return false;\n\
    \        if (n <= 3l) return true;\n        if (n % 2 == 0 || n % 3 == 0) return\
    \ false;\n        long limit = (long) Math.sqrt(n);\n        for (long i = 5l;\
    \ i <= limit; i += 6l) if (n % i == 0 || n % (i + 2) == 0) return false;\n   \
    \     return true;", "        if (n < 2l) return false; // 0 and 1 are not primes\n\
    \        if (n == 2l) return true;\n        if (n % 2l == 0l) return false; //\
    \ even numbers are not primes\n        long limit = (long) Math.sqrt(n); // limit\
    \ is the square root of n\n        for (long i = 2l; i <= limit; i++) {\n    \
    \        if (n % i == 0l) return false; // n is not prime\n        }\n       \
    \ return true;", "        if (n < 2l) return false; // 0 and 1 are not primes\n\
    \        if (n == 2l) return true;\n        if (n % 2l == 0l) return false; //\
    \ even numbers are not primes\n        if (n % 3l == 0l) return false; // prime\
    \ factors of 3 are not primes\n        long limit = (long) Math.sqrt(n);\n   \
    \     for (long i = 2l; i <= limit; i++) {\n            if (n % i == 0l) return\
    \ false; // prime factors of i are not primes\n        }\n        return true;",
  "        if (n < 2l) return false; // 0 and 1 are not primes\n        if (n == 2l)\
    \ return true;\n        if (n % 2l == 0l) return false; // even numbers are not\
    \ primes\n        if (n % 3l == 0l) return false; // prime factors of 3 are not\
    \ primes\n        long limit = (long) Math.sqrt(n); // only need to check odd\
    \ numbers\n        long i = 3l;\n        while (i <= limit) {\n            if\
    \ (n % i == 0l) return false; // found a factor of n\n            i += 2l;\n \
    \       }\n        return true;", "        if (n <= 1l) return false;\n      \
    \  if (n <= 3l) return true;\n        if (n % 2 == 0 || n % 3 == 0) return false;\n\
    \        long limit = (long) Math.sqrt(n);\n        long limit2 = limit * limit;\n\
    \        for (long i = 3l; i <= limit2; i += 2l) if (n % i == 0 || n % (i + 2l)\
    \ == 0) return false;\n        return true;", "        if (n < 2l) return false;\
    \ // 0 and 1 are not primes\n        if (n == 2l) return true;\n        if (n\
    \ % 2l == 0l) return false; // even numbers are not primes\n        long limit\
    \ = (long) Math.sqrt(n);\n        for (int i = 3l; i * i <= limit; i += 2l) {\n\
    \            if (n % i == 0l) return false;\n        }\n        return true;",
  "        if (n < 2l) return false; // 0 and 1 are not primes\n        if (n == 2l)\
    \ return true;\n        if (n % 2l == 0l) return false; // even numbers are not\
    \ primes\n        long limit = (long) (Math.sqrt(n));\n        long limit2 = (long)\
    \ (Math.sqrt(n) + 1);\n        for (long i = 2l; i <= limit2l; i++) {\n      \
    \      if (n % i == 0l) return false; // odd numbers are not primes\n        }\n\
    \        return true;", "        if (n < 2l) return false; // 0 and 1 are not\
    \ primes\n        if (n == 2l) return true;\n        if (n % 2l == 0l) return\
    \ false; // even numbers are not primes\n        if (n % 3l == 0l) return false;\
    \ // prime factors of 2 and 3 are not primes\n        long limit = (long) Math.sqrt(n);\
    \ // limit is the largest factor of the number\n        for (long i = 2l; i <=\
    \ limit; i++) {\n            if (n % i == 0l) return false; // n is not prime\n\
    \        }\n        return true;", "        if (n < 2l) return false; // 0 or\
    \ 1 are not primes\n        if (n <= 3l) return true;\n        if (n % 2l == 0l)\
    \ return false; // even numbers are not primes\n        if (n % 3l == 0l) return\
    \ false; // multiple of 3 are not primes\n        long limit = (long) Math.sqrt(n);\
    \ // limit is the square root of n\n        long i = 3l; // start at 3\n     \
    \   while (i <= limit) {\n            if (n % i == 0l) return false; // not prime\n\
    \            i += 2l; // move to next odd number\n        }\n        return true;",
  "        if (n <= 1l) return false;\n        if (n <= 3l) return true;\n       \
    \ if (n % 2 == 0 || n % 3 == 0) return false;\n        long limit = (long) Math.sqrt(n);\n\
    \        for (long i = 5l; i <= limit; i += 6l) if (n % i == 0 || n % (i + 2)\
    \ == 0) return false;\n        return true;", "        if (n <= 1l) return false;\n\
    \        if (n <= 3l) return true;\n        if (n % 2 == 0 || n % 3 == 0) return\
    \ false;\n        long limit = (long) Math.sqrt(n);\n        for (long i = 3l;\
    \ i * i <= limit; i += 6l) if (n % i == 0 || n % (i + 2) == 0) return false;\n\
    \        return true;", "        if (n <= 1l) return false;\n        if (n <=\
    \ 3l) return true;\n        if (n % 2 == 0 || n % 3 == 0) return false;\n    \
    \    long limit = (long) Math.sqrt(n);\n        for (long i = 5l; i <= limit;\
    \ i += 6l) if (n % i == 0 || n % (i + 2) == 0) return false;\n        return true;",
  "        if (n < 2l) return false; // 0 and 1 are not primes\n        if (n == 2l)\
    \ return true; // 2 is prime\n        if (n % 2l == 0l) return false; // even\
    \ numbers aren't primes\n        if (n % 3l == 0l) return false; // multiple of\
    \ 3 aren't primes\n        if (n % 5l == 0l) return false; // multiple of 5 aren't\
    \ primes\n        if (n % 7l == 0l) return false; // multiple of 7 aren't primes\n\
    \        if (n % 11l == 0l) return false; // multiple of 11 aren't primes\n  \
    \      if (n % 13l == 0l) return false; // multiple of 13 aren't primes\n    \
    \    if (n % 17l == 0l) return false; // multiple of 17 aren't primes\n      \
    \  if (n % 19l == 0l) return false; // multiple of 19 aren't primes\n        if\
    \ (n % 23l == 0l) return false; // multiple of 23 aren't primes\n        if (n\
    \ % 29l == 0l) return false; // multiple of 29 aren't primes\n        if (n %\
    \ 31l == 0l) return false; // multiple of 31 aren't primes\n        if (n % 37l\
    \ == 0l) return false; // multiple of 37 aren't primes\n        if (n % 41l ==\
    \ 0l) return false; // multiple of 41 aren't primes\n        if (n % 43l == 0l)\
    \ return false; // multiple of 43 aren't primes\n        if (n % 47l == 0l) return\
    \ false; // multiple of 47 aren't primes\n        if (n % 53l == 0l) return false;\
    \ // multiple of 53 aren't primes\n        if (n % 59l == 0l) return false; //\
    \ multiple of 59 aren't primes\n        if (n % 61l == 0l) return false; // multiple\
    \ of 61 aren't primes\n        if (n % 67l == 0l) return false; // multiple of\
    \ 67 aren't primes\n        if (n % 71l == 0l) return false; // multiple of 71\
    \ aren't primes\n        if (n % 73l == 0l) return false; // multiple of 73 aren't\
    \ primes\n        if (n % 79l == 0l) return false; // multiple of 79 aren't primes\n\
    \        if (n % 83l == 0l) return false; // multiple of 83 aren't primes\n  \
    \      if (n % 89l == 0l) return false; // multiple of 89 aren't primes\n    \
    \    if (n % 97l == 0l) return false; // multiple of 97 aren't primes\n      \
    \  if (n % 101l == 0l) return false; // multiple of 101 aren't primes\n      \
    \  if (n % 103l == 0l) return false; // multiple of 103 aren't primes\n      \
    \  if (n % 107l == 0l) return false; // multiple of 107 aren't primes\n      \
    \  if (n % 109l == 0l) return false; // multiple of 109 aren't primes\n      \
    \  if (n % 113l == 0", "        if (n < 2l) return false; // 0 and 1 are not primes\n\
    \        if (n == 2l) return true;\n        if (n % 2l == 0l) return false; //\
    \ even numbers aren't primes\n        if (n % 3l == 0l) return false; // prime\
    \ numbers aren't primes\n        long limit = (long) Math.sqrt(n); // limit the\
    \ search to sqrt(n)\n        for (long i = 2l; i <= limit; i++) {\n          \
    \  if (n % i == 0l) return false; // found a factor of n\n        }\n        return\
    \ true;", "        if (n < 2l) return false; // 0 and 1 are not primes\n     \
    \   if (n == 2l) return true;\n        if (n % 2l == 0l) return false; // even\
    \ numbers are not primes\n        long limit = (long) Math.sqrt(n); // limit is\
    \ the square root of n\n        for (long i = 2l; i <= limit; i++) {\n       \
    \     if (n % i == 0l) return false; // n is not prime\n        }\n        return\
    \ true;", "        if (n < 2l) return false; // 0 and 1 are not primes\n     \
    \   if (n == 2l) return true;\n        if (n % 2l == 0l) return false; // 0 and\
    \ 1 are not primes\n        if (n % 3l == 0l) return false; // 0 and 1 are not\
    \ primes\n        if (n % 5l == 0l) return false; // 0 and 1 are not primes\n\
    \        if (n % 7l == 0l) return false; // 0 and 1 are not primes\n        if\
    \ (n % 11l == 0l) return false; // 0 and 1 are not primes\n        if (n % 13l\
    \ == 0l) return false; // 0 and 1 are not primes\n        if (n % 17l == 0l) return\
    \ false; // 0 and 1 are not primes\n        if (n % 19l == 0l) return false; //\
    \ 0 and 1 are not primes\n        if (n % 23l == 0l) return false; // 0 and 1\
    \ are not primes\n        if (n % 29l == 0l) return false; // 0 and 1 are not\
    \ primes\n        if (n % 31l == 0l) return false; // 0 and 1 are not primes\n\
    \        if (n % 37l == 0l) return false; // 0 and 1 are not primes\n        if\
    \ (n % 41l == 0l) return false; // 0 and 1 are not primes\n        if (n % 43l\
    \ == 0l) return false; // 0 and 1 are not primes\n        if (n % 47l == 0l) return\
    \ false; // 0 and 1 are not primes\n        if (n % 53l == 0l) return false; //\
    \ 0 and 1 are not primes\n        if (n % 59l == 0l) return false; // 0 and 1\
    \ are not primes\n        if (n % 61l == 0l) return false; // 0 and 1 are not\
    \ primes\n        if (n % 67l == 0l) return false; // 0 and 1 are not primes\n\
    \        if (n % 71l == 0l) return false; // 0 and 1 are not primes\n        if\
    \ (n % 73l == 0l) return false; // 0 and 1 are not primes\n        if (n % 79l\
    \ == 0l) return false; // 0 and 1 are not primes\n        if (n % 83l == 0l) return\
    \ false; // 0 and 1 are not primes\n        if (n % 89l == 0l) return false; //\
    \ 0 and 1 are not primes\n        if (n % 97l == 0l) return false; // 0 and 1\
    \ are not primes\n        if (n % 101l == 0l) return false; // 0 and 1 are not\
    \ primes\n        if (n % 103l == 0l) return false; // 0 and 1 are not primes\n\
    \        if (n % 107l == 0l) return false; // 0 and 1 are not primes\n       \
    \ if (n % 109l == 0l) return false; // 0 and 1 are not primes\n        if (n %\
    \ 113l == 0l) return false; // 0 and 1 are not primes\n        if (n % 127l ==\
    \ 0l) return false; // 0 and ", "        if (n <= 1) return false;\n        if\
    \ (n <= 3) return true;\n        if (n % 2 == 0 || n % 3 == 0) return false;\n\
    \        long limit = (long) Math.sqrt(n);\n        for (int i = 3; i <= limit;\
    \ i += 2) {\n            if (n % i == 0 || n % (i + 2) == 0) return false;\n \
    \       }\n        return true;", "        if (n <= 1l) return false;\n      \
    \  if (n <= 3l) return true;\n        if (n % 2 == 0 || n % 3 == 0) return false;\n\
    \        long limit = (long) Math.sqrt(n);\n        for (long i = 3l; i * i <=\
    \ limit; i += 6l) if (n % i == 0 || n % (i + 2) == 0) return false;\n        return\
    \ true;", "        if (n < 2l) return false; // 0 and 1 are not primes\n     \
    \   if (n == 2l) return true;\n        if (n % 2l == 0l) return false; // even\
    \ numbers are not primes\n        // If n is odd, then it can only be prime if\
    \ its square root is also odd.\n        // If n is even, then it can only be prime\
    \ if its square root is even.\n        // Therefore, we can just check whether\
    \ n's square root is odd or even.\n        // If n's square root is odd, then\
    \ n is prime.\n        // If n's square root is even, then n is not prime.\n \
    \       long sqrtN = Math.sqrt(n);\n        if (sqrtN & 1l == 0l) return false;\
    \ // n's square root is even\n        if (sqrtN % 2l == 0l) return false; // n's\
    \ square root is odd\n        return true; // n's square root is prime", "   \
    \     if (n < 2l) return false; // 0 and 1 are not primes\n        if (n == 2l)\
    \ return true;\n        if (n % 2l == 0l) return false; // even numbers are not\
    \ primes\n        if (n % 3l == 0l) return false; // prime factors of 2 and 3\
    \ are not primes\n        long limit = (long) Math.sqrt(n); // limit the search\
    \ to sqrt(n)\n        for (long i = 2l; i <= limit; i++) {\n            if (n\
    \ % i == 0l) return false; // n is not prime\n        }\n        return true;",
  "        if (n < 2l) return false; // 0 and 1 are not primes.\n        if (n ==\
    \ 2l) return true;\n        if (n % 2l == 0l) return false; // 0 and 1 are not\
    \ primes.\n        if (n % 3l == 0l) return false; // 0 and 1 are not primes.\n\
    \        if (n % 5l == 0l) return false; // 0 and 1 are not primes.\n        if\
    \ (n % 7l == 0l) return false; // 0 and 1 are not primes.\n        if (n % 11l\
    \ == 0l) return false; // 0 and 1 are not primes.\n        if (n % 13l == 0l)\
    \ return false; // 0 and 1 are not primes.\n        if (n % 17l == 0l) return\
    \ false; // 0 and 1 are not primes.\n        if (n % 19l == 0l) return false;\
    \ // 0 and 1 are not primes.\n        if (n % 23l == 0l) return false; // 0 and\
    \ 1 are not primes.\n        if (n % 29l == 0l) return false; // 0 and 1 are not\
    \ primes.\n        if (n % 31l == 0l) return false; // 0 and 1 are not primes.\n\
    \        if (n % 37l == 0l) return false; // 0 and 1 are not primes.\n       \
    \ if (n % 41l == 0l) return false; // 0 and 1 are not primes.\n        if (n %\
    \ 43l == 0l) return false; // 0 and 1 are not primes.\n        if (n % 47l ==\
    \ 0l) return false; // 0 and 1 are not primes.\n        if (n % 53l == 0l) return\
    \ false; // 0 and 1 are not primes.\n        if (n % 59l == 0l) return false;\
    \ // 0 and 1 are not primes.\n        if (n % 61l == 0l) return false; // 0 and\
    \ 1 are not primes.\n        if (n % 67l == 0l) return false; // 0 and 1 are not\
    \ primes.\n        if (n % 71l == 0l) return false; // 0 and 1 are not primes.\n\
    \        if (n % 73l == 0l) return false; // 0 and 1 are not primes.\n       \
    \ if (n % 79l == 0l) return false; // 0 and 1 are not primes.\n        if (n %\
    \ 83l == 0l) return false; // 0 and 1 are not primes.\n        if (n % 89l ==\
    \ 0l) return false; // 0 and 1 are not primes.\n        if (n % 97l == 0l) return\
    \ false; // 0 and 1 are not primes.\n        if (n % 101l == 0l) return false;\
    \ // 0 and 1 are not primes.\n        if (n % 103l == 0l) return false; // 0 and\
    \ 1 are not primes.\n        if (n % 107l == 0l) return false; // 0 and 1 are\
    \ not primes.\n        if (n % 113l == 0l) return false; // 0 and 1 are not primes.\n\
    \        if (n % 121l == 0l) return false; // 0 and 1 are not primes.\n      \
    \  if (n % 127l == 0l) return false; // ", "        if (n < 2l) return false;\
    \ // 0 and 1 are not primes\n        if (n == 2l) return true;\n        if (n\
    \ % 2l == 0l) return false; // even numbers are not primes\n        if (n % 3l\
    \ == 0l) return false; // prime factors of 3 are not primes\n        if (n % 5l\
    \ == 0l) return false; // prime factors of 5 are not primes\n        if (n % 7l\
    \ == 0l) return false; // prime factors of 7 are not primes\n        long sqrtN\
    \ = Math.sqrt(n);\n        for (long i = 3l; i * i <= sqrtN; i += 2l) {\n    \
    \        if (n % i == 0l) return false; // prime factors of i are not primes\n\
    \        }\n        return true;", "        if (n < 2l) return false; // 0 and\
    \ 1 are not primes\n        if (n == 2l) return true;\n        if (n % 2l == 0l)\
    \ return false; // even numbers are not primes\n        if (n % 3l == 0l) return\
    \ false; // prime factors of 3 are not primes\n        if (n % 5l == 0l) return\
    \ false; // prime factors of 5 are not primes\n        if (n % 7l == 0l) return\
    \ false; // prime factors of 7 are not primes\n        if (n % 11l == 0l) return\
    \ false; // prime factors of 11 are not primes\n        if (n % 13l == 0l) return\
    \ false; // prime factors of 13 are not primes\n        if (n % 17l == 0l) return\
    \ false; // prime factors of 17 are not primes\n        if (n % 19l == 0l) return\
    \ false; // prime factors of 19 are not primes\n        if (n % 23l == 0l) return\
    \ false; // prime factors of 23 are not primes\n        if (n % 29l == 0l) return\
    \ false; // prime factors of 29 are not primes\n        if (n % 31l == 0l) return\
    \ false; // prime factors of 31 are not primes\n        if (n % 37l == 0l) return\
    \ false; // prime factors of 37 are not primes\n        if (n % 41l == 0l) return\
    \ false; // prime factors of 41 are not primes\n        if (n % 43l == 0l) return\
    \ false; // prime factors of 43 are not primes\n        if (n % 47l == 0l) return\
    \ false; // prime factors of 47 are not primes\n        if (n % 53l == 0l) return\
    \ false; // prime factors of 53 are not primes\n        if (n % 59l == 0l) return\
    \ false; // prime factors of 59 are not primes\n        if (n % 61l == 0l) return\
    \ false; // prime factors of 61 are not primes\n        if (n % 67l == 0l) return\
    \ false; // prime factors of 67 are not primes\n        if (n % 71l == 0l) return\
    \ false; // prime factors of 71 are not primes\n        if (n % 73l == 0l) return\
    \ false; // prime factors of 73 are not primes\n        if (n % 79l == 0l) return\
    \ false; // prime factors of 79 are not primes\n        if (n % 83l == 0l) return\
    \ false; // prime factors of 83 are not primes\n        if (n % 89l == 0l) return\
    \ false; // prime factors of 89 are not primes\n        if (n % 97l == 0l) return\
    \ false; // prime factors of 97 are not primes\n        if (n % 101l == 0l) return\
    \ false; // prime factors of 101 are not primes\n        if (n % 103l == 0l) return\
    \ false; // prime factor", "        if (n < 2l) return false; // 0 and 1 are not\
    \ primes\n        if (n == 2l) return true;\n        if (n % 2l == 0l) return\
    \ false; // even numbers are not primes\n        long limit = (long) Math.sqrt(n);\
    \ // limit is the square root of n\n        long limit2 = limit + 1l; // limit\
    \ is the square root of n + 1\n        for (long i = 2l; i <= limit2; i++) {\n\
    \            if (n % i == 0l) return false; // n is not prime\n        }\n   \
    \     return true;", "        if (n < 2l) return false;\n        if (n == 2l)\
    \ return true;\n        if (n % 2l == 0l) return false;\n        if (n % 3l ==\
    \ 0l) return false;\n        if (n % 5l == 0l) return false;\n        if (n %\
    \ 7l == 0l) return false;\n        if (n % 11l == 0l) return false;\n        if\
    \ (n % 13l == 0l) return false;\n        if (n % 17l == 0l) return false;\n  \
    \      if (n % 19l == 0l) return false;\n        if (n % 23l == 0l) return false;\n\
    \        if (n % 29l == 0l) return false;\n        if (n % 31l == 0l) return false;\n\
    \        if (n % 37l == 0l) return false;\n        if (n % 41l == 0l) return false;\n\
    \        if (n % 43l == 0l) return false;\n        if (n % 47l == 0l) return false;\n\
    \        if (n % 53l == 0l) return false;\n        if (n % 59l == 0l) return false;\n\
    \        if (n % 61l == 0l) return false;\n        if (n % 67l == 0l) return false;\n\
    \        if (n % 71l == 0l) return false;\n        if (n % 73l == 0l) return false;\n\
    \        if (n % 79l == 0l) return false;\n        if (n % 83l == 0l) return false;\n\
    \        if (n % 89l == 0l) return false;\n        if (n % 97l == 0l) return false;\n\
    \        if (n % 101l == 0l) return false;\n        if (n % 103l == 0l) return\
    \ false;\n        if (n % 107l == 0l) return false;\n        if (n % 113l == 0l)\
    \ return false;\n        if (n % 121l == 0l) return false;\n        if (n % 127l\
    \ == 0l) return false;\n        if (n % 131l == 0l) return false;\n        if\
    \ (n % 137l == 0l) return false;\n        if (n % 141l == 0l) return false;\n\
    \        if (n % 147l == 0l) return false;\n        if (n % 151l == 0l) return\
    \ false;\n        if (n % 157l == 0l) return false;\n        if (n % 161l == 0l)\
    \ return false;\n        if (n % 163l == 0l) return false;\n        if (n % 167l\
    \ == 0l) return false;\n        if (n % 173l == 0l) return false;\n        if\
    \ (n % 179l == 0l) return false;\n        if (n % 181l == 0l) return false;\n\
    \        if (n % 191l == 0l) return false;\n        if (n % 197l == 0l) return\
    \ false;\n        if (n % 199l == 0l) return false;\n        if (n % 201l == 0l)\
    \ return false;\n        if (n % 207l == 0l) return false;\n        if (n % 211l\
    \ == 0l) return false;\n        if (n % 215l == 0l) return false;\n        if\
    \ (n % 223l == 0l) return false;\n        if (n % 229l == 0l) return false;\n\
    \        if (n % 233l == 0l) return false;\n        if (n % 239l == 0l) return\
    \ false;\n        if (n % 24", "        if (n <= 1l) return false;\n        if\
    \ (n == 2l) return true;\n        if (n % 2l == 0l) return false;\n        if\
    \ (n % 3l == 0l) return false;\n        if (n % 5l == 0l) return false;\n    \
    \    if (n % 7l == 0l) return false;\n        if (n % 11l == 0l) return false;\n\
    \        if (n % 13l == 0l) return false;\n        if (n % 17l == 0l) return false;\n\
    \        if (n % 19l == 0l) return false;\n        if (n % 23l == 0l) return false;\n\
    \        if (n % 29l == 0l) return false;\n        if (n % 31l == 0l) return false;\n\
    \        if (n % 37l == 0l) return false;\n        if (n % 41l == 0l) return false;\n\
    \        if (n % 43l == 0l) return false;\n        if (n % 47l == 0l) return false;\n\
    \        if (n % 53l == 0l) return false;\n        if (n % 59l == 0l) return false;\n\
    \        if (n % 61l == 0l) return false;\n        if (n % 67l == 0l) return false;\n\
    \        if (n % 71l == 0l) return false;\n        if (n % 73l == 0l) return false;\n\
    \        if (n % 79l == 0l) return false;\n        if (n % 83l == 0l) return false;\n\
    \        if (n % 89l == 0l) return false;\n        if (n % 97l == 0l) return false;\n\
    \        if (n % 101l == 0l) return false;\n        if (n % 103l == 0l) return\
    \ false;\n        if (n % 107l == 0l) return false;\n        if (n % 109l == 0l)\
    \ return false;\n        if (n % 113l == 0l) return false;\n        if (n % 127l\
    \ == 0l) return false;\n        if (n % 131l == 0l) return false;\n        if\
    \ (n % 137l == 0l) return false;\n        if (n % 139l == 0l) return false;\n\
    \        if (n % 141l == 0l) return false;\n        if (n % 147l == 0l) return\
    \ false;\n        if (n % 149l == 0l) return false;\n        if (n % 151l == 0l)\
    \ return false;\n        if (n % 157l == 0l) return false;\n        if (n % 163l\
    \ == 0l) return false;\n        if (n % 167l == 0l) return false;\n        if\
    \ (n % 173l == 0l) return false;\n        if (n % 179l == 0l) return false;\n\
    \        if (n % 181l == 0l) return false;\n        if (n % 191l == 0l) return\
    \ false;\n        if (n % 197l == 0l) return false;\n        if (n % 199l == 0l)\
    \ return false;\n        if (n % 201l == 0l) return false;\n        if (n % 207l\
    \ == 0l) return false;\n        if (n % 211l == 0l) return false;\n        if\
    \ (n % 215l == 0l) return false;\n        if (n % 217l == 0l) return false;\n\
    \        if (n % 223l == 0l) return false;\n        if (n % 229l == 0l) return\
    \ false;\n        if (n % 233l ", "        if (n < 2l) return false; // 0 and\
    \ 1 are not primes\n        if (n <= 3l) return true; // 2 and 3 are primes\n\
    \        if (n % 2l == 0l) return false; // even numbers are not primes\n    \
    \    if (n % 3l == 0l) return false; // even numbers are not primes\n        if\
    \ (n % 5l == 0l) return false; // even numbers are not primes\n        if (n %\
    \ 7l == 0l) return false; // even numbers are not primes\n        if (n % 11l\
    \ == 0l) return false; // even numbers are not primes\n        if (n % 13l ==\
    \ 0l) return false; // even numbers are not primes\n        if (n % 17l == 0l)\
    \ return false; // even numbers are not primes\n        if (n % 19l == 0l) return\
    \ false; // even numbers are not primes\n        if (n % 23l == 0l) return false;\
    \ // even numbers are not primes\n        if (n % 29l == 0l) return false; //\
    \ even numbers are not primes\n        if (n % 31l == 0l) return false; // even\
    \ numbers are not primes\n        if (n % 37l == 0l) return false; // even numbers\
    \ are not primes\n        if (n % 41l == 0l) return false; // even numbers are\
    \ not primes\n        if (n % 43l == 0l) return false; // even numbers are not\
    \ primes\n        if (n % 47l == 0l) return false; // even numbers are not primes\n\
    \        if (n % 53l == 0l) return false; // even numbers are not primes\n   \
    \     if (n % 59l == 0l) return false; // even numbers are not primes\n      \
    \  if (n % 61l == 0l) return false; // even numbers are not primes\n        if\
    \ (n % 67l == 0l) return false; // even numbers are not primes\n        if (n\
    \ % 71l == 0l) return false; // even numbers are not primes\n        if (n % 73l\
    \ == 0l) return false; // even numbers are not primes\n        if (n % 79l ==\
    \ 0l) return false; // even numbers are not primes\n        if (n % 83l == 0l)\
    \ return false; // even numbers are not primes\n        if (n % 89l == 0l) return\
    \ false; // even numbers are not primes\n        if (n % 97l == 0l) return false;\
    \ // even numbers are not primes\n        if (n % 101l == 0l) return false; //\
    \ even numbers are not primes\n        if (n % 103l == 0l) return false; // even\
    \ numbers are not primes\n        if (n % 107l == 0l) return false; // even numbers\
    \ are not primes\n        if (n % 109l == 0l) return false; // even numbers are\
    \ not primes\n        if (n % 113l == 0l) return false; // even numbers are not\
    \ primes\n        if (n % 127l ", "        if (n < 2l) return false; // 0 and\
    \ 1 are not primes\n        if (n == 2l) return true;\n        if (n % 2l == 0l)\
    \ return false; // even numbers are not primes\n        if (n % 3l == 0l) return\
    \ false; // prime factors of 3 are not primes\n        if (n % 5l == 0l) return\
    \ false; // prime factors of 5 are not primes\n        if (n % 7l == 0l) return\
    \ false; // prime factors of 7 are not primes\n        long sqrtN = Math.sqrt(n);\n\
    \        for (long i = 3l; i * i <= n; i += 2l) {\n            if (n % i == 0l)\
    \ return false; // prime factors of i are not primes\n        }\n        return\
    \ true;", "        if (n < 2l) return false;\n        if (n == 2l) return true;\n\
    \        if (n % 2l == 0l) return false;\n        if (n % 3l == 0l) return false;\n\
    \        if (n % 5l == 0l) return false;\n        if (n % 7l == 0l) return false;\n\
    \        if (n % 11l == 0l) return false;\n        if (n % 13l == 0l) return false;\n\
    \        if (n % 17l == 0l) return false;\n        if (n % 19l == 0l) return false;\n\
    \        if (n % 23l == 0l) return false;\n        if (n % 29l == 0l) return false;\n\
    \        if (n % 31l == 0l) return false;\n        if (n % 37l == 0l) return false;\n\
    \        if (n % 41l == 0l) return false;\n        if (n % 43l == 0l) return false;\n\
    \        if (n % 47l == 0l) return false;\n        if (n % 53l == 0l) return false;\n\
    \        if (n % 59l == 0l) return false;\n        if (n % 61l == 0l) return false;\n\
    \        if (n % 67l == 0l) return false;\n        if (n % 71l == 0l) return false;\n\
    \        if (n % 73l == 0l) return false;\n        if (n % 79l == 0l) return false;\n\
    \        if (n % 83l == 0l) return false;\n        if (n % 89l == 0l) return false;\n\
    \        if (n % 97l == 0l) return false;\n        if (n % 101l == 0l) return\
    \ false;\n        if (n % 103l == 0l) return false;\n        if (n % 107l == 0l)\
    \ return false;\n        if (n % 109l == 0l) return false;\n        if (n % 113l\
    \ == 0l) return false;\n        if (n % 117l == 0l) return false;\n        if\
    \ (n % 121l == 0l) return false;\n        if (n % 127l == 0l) return false;\n\
    \        if (n % 131l == 0l) return false;\n        if (n % 137l == 0l) return\
    \ false;\n        if (n % 141l == 0l) return false;\n        if (n % 147l == 0l)\
    \ return false;\n        if (n % 151l == 0l) return false;\n        if (n % 157l\
    \ == 0l) return false;\n        if (n % 163l == 0l) return false;\n        if\
    \ (n % 167l == 0l) return false;\n        if (n % 173l == 0l) return false;\n\
    \        if (n % 177l == 0l) return false;\n        if (n % 181l == 0l) return\
    \ false;\n        if (n % 187l == 0l) return false;\n        if (n % 191l == 0l)\
    \ return false;\n        if (n % 197l == 0l) return false;\n        if (n % 201l\
    \ == 0l) return false;\n        if (n % 207l == 0l) return false;\n        if\
    \ (n % 211l == 0l) return false;\n        if (n % 215l == 0l) return false;\n\
    \        if (n % 223l == 0l) return false;\n        if (n % 227l == 0l) return\
    \ false;\n        if (n % 231l == 0l) return false;\n        if (n % 237", " \
    \       if (n < 2l) return false;\n        if (n == 2l) return true;\n       \
    \ if (n % 2l == 0l) return false;\n        if (n % 3l == 0l) return false;\n \
    \       if (n % 5l == 0l) return false;\n        if (n % 7l == 0l) return false;\n\
    \        if (n % 11l == 0l) return false;\n        if (n % 13l == 0l) return false;\n\
    \        if (n % 17l == 0l) return false;\n        if (n % 19l == 0l) return false;\n\
    \        if (n % 23l == 0l) return false;\n        if (n % 29l == 0l) return false;\n\
    \        if (n % 31l == 0l) return false;\n        if (n % 37l == 0l) return false;\n\
    \        if (n % 41l == 0l) return false;\n        if (n % 43l == 0l) return false;\n\
    \        if (n % 47l == 0l) return false;\n        if (n % 53l == 0l) return false;\n\
    \        if (n % 59l == 0l) return false;\n        if (n % 61l == 0l) return false;\n\
    \        if (n % 67l == 0l) return false;\n        if (n % 71l == 0l) return false;\n\
    \        if (n % 73l == 0l) return false;\n        if (n % 79l == 0l) return false;\n\
    \        if (n % 83l == 0l) return false;\n        if (n % 89l == 0l) return false;\n\
    \        if (n % 97l == 0l) return false;\n        if (n % 101l == 0l) return\
    \ false;\n        if (n % 103l == 0l) return false;\n        if (n % 107l == 0l)\
    \ return false;\n        if (n % 109l == 0l) return false;\n        if (n % 113l\
    \ == 0l) return false;\n        if (n % 127l == 0l) return false;\n        if\
    \ (n % 131l == 0l) return false;\n        if (n % 137l == 0l) return false;\n\
    \        if (n % 139l == 0l) return false;\n        if (n % 141l == 0l) return\
    \ false;\n        if (n % 147l == 0l) return false;\n        if (n % 149l == 0l)\
    \ return false;\n        if (n % 151l == 0l) return false;\n        if (n % 157l\
    \ == 0l) return false;\n        if (n % 163l == 0l) return false;\n        if\
    \ (n % 167l == 0l) return false;\n        if (n % 171l == 0l) return false;\n\
    \        if (n % 177l == 0l) return false;\n        if (n % 181l == 0l) return\
    \ false;\n        if (n % 187l == 0l) return false;\n        if (n % 191l == 0l)\
    \ return false;\n        if (n % 197l == 0l) return false;\n        if (n % 203l\
    \ == 0l) return false;\n        if (n % 209l == 0l) return false;\n        if\
    \ (n % 215l == 0l) return false;\n        if (n % 223l == 0l) return false;\n\
    \        if (n % 229l == 0l) return false;\n        if (n % 233l == 0l) return\
    \ false;\n        if (n % 239l == 0l) return false;\n        if (n % 241", " \
    \       if (n < 2l) return false; // 0 or 1 are not primes\n        if (n == 2l)\
    \ return true; // 2 is prime\n        if (n % 2l == 0l) return false; // even\
    \ numbers aren't primes\n        long limit = (long) Math.sqrt(n); // limit is\
    \ the square root of n\n        for (long i = 3l; i * i <= limit; i += 2l) { //\
    \ start at 3 and increment by 2\n            if (n % i == 0l) return false; //\
    \ if i is a factor of n, n is not prime\n        }\n        return true; // n\
    \ is prime", "        if (n < 2l) return false;\n        if (n == 2l) return true;\n\
    \        if (n % 2l == 0l) return false;\n        if (n % 3l == 0l) return false;\n\
    \        if (n % 5l == 0l) return false;\n        if (n % 7l == 0l) return false;\n\
    \        if (n % 11l == 0l) return false;\n        if (n % 13l == 0l) return false;\n\
    \        if (n % 17l == 0l) return false;\n        if (n % 19l == 0l) return false;\n\
    \        if (n % 23l == 0l) return false;\n        if (n % 29l == 0l) return false;\n\
    \        if (n % 31l == 0l) return false;\n        if (n % 37l == 0l) return false;\n\
    \        if (n % 41l == 0l) return false;\n        if (n % 43l == 0l) return false;\n\
    \        if (n % 47l == 0l) return false;\n        if (n % 53l == 0l) return false;\n\
    \        if (n % 59l == 0l) return false;\n        if (n % 61l == 0l) return false;\n\
    \        if (n % 67l == 0l) return false;\n        if (n % 71l == 0l) return false;\n\
    \        if (n % 73l == 0l) return false;\n        if (n % 79l == 0l) return false;\n\
    \        if (n % 83l == 0l) return false;\n        if (n % 89l == 0l) return false;\n\
    \        if (n % 97l == 0l) return false;\n        if (n % 101l == 0l) return\
    \ false;\n        if (n % 103l == 0l) return false;\n        if (n % 107l == 0l)\
    \ return false;\n        if (n % 109l == 0l) return false;\n        if (n % 113l\
    \ == 0l) return false;\n        if (n % 127l == 0l) return false;\n        if\
    \ (n % 131l == 0l) return false;\n        if (n % 137l == 0l) return false;\n\
    \        if (n % 139l == 0l) return false;\n        if (n % 141l == 0l) return\
    \ false;\n        if (n % 147l == 0l) return false;\n        if (n % 149l == 0l)\
    \ return false;\n        if (n % 151l == 0l) return false;\n        if (n % 157l\
    \ == 0l) return false;\n        if (n % 163l == 0l) return false;\n        if\
    \ (n % 167l == 0l) return false;\n        if (n % 171l == 0l) return false;\n\
    \        if (n % 177l == 0l) return false;\n        if (n % 181l == 0l) return\
    \ false;\n        if (n % 189l == 0l) return false;\n        if (n % 193l == 0l)\
    \ return false;\n        if (n % 197l == 0l) return false;\n        if (n % 201l\
    \ == 0l) return false;\n        if (n % 207l == 0l) return false;\n        if\
    \ (n % 211l == 0l) return false;\n        if (n % 215l == 0l) return false;\n\
    \        if (n % 219l == 0l) return false;\n        if (n % 223l == 0l) return\
    \ false;\n        if (n % 227l == 0l) return false;\n        if (n % 231l ", " \
    \       if (n < 2l) return false;\n        if (n == 2l) return true;\n       \
    \ if (n % 2l == 0l) return false;\n        long limit = (long) Math.sqrt(n);\n\
    \        for (long i = 2l; i <= limit; i++) {\n            if (n % i == 0l) return\
    \ false;\n        }\n        return true;", "        if (n < 2l) return false;\n\
    \        if (n == 2l) return true;\n        if (n % 2l == 0l) return false;\n\
    \        if (n % 3l == 0l) return false;\n        if (n % 5l == 0l) return false;\n\
    \        if (n % 7l == 0l) return false;\n        if (n % 11l == 0l) return false;\n\
    \        if (n % 13l == 0l) return false;\n        if (n % 17l == 0l) return false;\n\
    \        if (n % 19l == 0l) return false;\n        if (n % 23l == 0l) return false;\n\
    \        if (n % 29l == 0l) return false;\n        if (n % 31l == 0l) return false;\n\
    \        if (n % 37l == 0l) return false;\n        if (n % 41l == 0l) return false;\n\
    \        if (n % 43l == 0l) return false;\n        if (n % 47l == 0l) return false;\n\
    \        if (n % 53l == 0l) return false;\n        if (n % 59l == 0l) return false;\n\
    \        if (n % 61l == 0l) return false;\n        if (n % 67l == 0l) return false;\n\
    \        if (n % 71l == 0l) return false;\n        if (n % 73l == 0l) return false;\n\
    \        if (n % 79l == 0l) return false;\n        if (n % 83l == 0l) return false;\n\
    \        if (n % 89l == 0l) return false;\n        if (n % 97l == 0l) return false;\n\
    \        if (n % 101l == 0l) return false;\n        if (n % 103l == 0l) return\
    \ false;\n        if (n % 107l == 0l) return false;\n        if (n % 113l == 0l)\
    \ return false;\n        if (n % 121l == 0l) return false;\n        if (n % 127l\
    \ == 0l) return false;\n        if (n % 131l == 0l) return false;\n        if\
    \ (n % 137l == 0l) return false;\n        if (n % 141l == 0l) return false;\n\
    \        if (n % 147l == 0l) return false;\n        if (n % 151l == 0l) return\
    \ false;\n        if (n % 157l == 0l) return false;\n        if (n % 161l == 0l)\
    \ return false;\n        if (n % 163l == 0l) return false;\n        if (n % 167l\
    \ == 0l) return false;\n        if (n % 173l == 0l) return false;\n        if\
    \ (n % 179l == 0l) return false;\n        if (n % 181l == 0l) return false;\n\
    \        if (n % 191l == 0l) return false;\n        if (n % 197l == 0l) return\
    \ false;\n        if (n % 199l == 0l) return false;\n        if (n % 201l == 0l)\
    \ return false;\n        if (n % 207l == 0l) return false;\n        if (n % 211l\
    \ == 0l) return false;\n        if (n % 215l == 0l) return false;\n        if\
    \ (n % 223l == 0l) return false;\n        if (n % 229l == 0l) return false;\n\
    \        if (n % 233l == 0l) return false;\n        if (n % 239l == 0l) return\
    \ false;\n        if (n % 24", "        if (n < 2l) return false; // 0 and 1 are\
    \ not primes\n        if (n == 2l) return true;\n        if (n % 2l == 0l) return\
    \ false; // even numbers are not primes\n        long limit = (long) Math.sqrt(n);\
    \ // limit is the square root of n\n        long limit2 = limit + 1l; // limit\
    \ is the square root of n + 1\n        for (long i = 2l; i <= limit2l; i++) {\n\
    \            if (n % i == 0l) return false; // n is not prime\n        }\n   \
    \     return true;", "        if (n < 2l) return false; // 0 or 1 are not primes\n\
    \        if (n == 2l) return true;\n        if (n % 2l == 0l) return false; //\
    \ even numbers are not primes\n        if (n % 3l == 0l) return false; // prime\
    \ factors of 3 are not primes\n        long limit = (long) Math.sqrt(n); // limit\
    \ of numbers to test\n        long limit2 = (long) Math.sqrt(n + 1l); // limit\
    \ of numbers to test\n        long limit3 = (long) Math.sqrt(n + 2l); // limit\
    \ of numbers to test\n        long limit4 = (long) Math.sqrt(n + 3l); // limit\
    \ of numbers to test\n        long limit5 = (long) Math.sqrt(n + 4l); // limit\
    \ of numbers to test\n        long limit6 = (long) Math.sqrt(n + 5l); // limit\
    \ of numbers to test\n        long limit7 = (long) Math.sqrt(n + 6l); // limit\
    \ of numbers to test\n        long limit8 = (long) Math.sqrt(n + 7l); // limit\
    \ of numbers to test\n        long limit9 = (long) Math.sqrt(n + 8l); // limit\
    \ of numbers to test\n        long limit10 = (long) Math.sqrt(n + 9l); // limit\
    \ of numbers to test\n        long limit11 = (long) Math.sqrt(n + 10l); // limit\
    \ of numbers to test\n        long limit12 = (long) Math.sqrt(n + 11l); // limit\
    \ of numbers to test\n        long limit13 = (long) Math.sqrt(n + 12l); // limit\
    \ of numbers to test\n        long limit14 = (long) Math.sqrt(n + 13l); // limit\
    \ of numbers to test\n        long limit15 = (long) Math.sqrt(n + 14l); // limit\
    \ of numbers to test\n        long limit16 = (long) Math.sqrt(n + 15l); // limit\
    \ of numbers to test\n        long limit17 = (long) Math.sqrt(n + 16l); // limit\
    \ of numbers to test\n        long limit18 = (long) Math.sqrt(n + 17l); // limit\
    \ of numbers to test\n        long limit19 = (long) Math.sqrt(n + 18l); // limit\
    \ of numbers to test\n        long limit20 = (long) Math.sqrt(n + 19l); // limit\
    \ of numbers to test\n        long limit21 = (long) Math.sqrt(n + 20l); // limit\
    \ of numbers to test\n        long limit22 = (long) Math.sqrt(n + 21l); // limit\
    \ of numbers to test\n        long limit23 = (long) Math.sqrt(n + 22l); // limit\
    \ of numbers to test\n        long limit24 = (long) Math.sqrt(n + 23l); // limit\
    \ of numbers to test\n        long limit25 = (long", "        if (n < 2l) return\
    \ false; // 0 and 1 are not primes\n        if (n == 2l) return true;\n      \
    \  if (n % 2l == 0l) return false; // even numbers are not primes\n        if\
    \ (n % 3l == 0l) return false; // prime factors of 3 are not primes\n        if\
    \ (n % 5l == 0l) return false; // prime factors of 5 are not primes\n        if\
    \ (n % 7l == 0l) return false; // prime factors of 7 are not primes\n        long\
    \ limit = (long) Math.sqrt(n); // limit is the square root of n\n        long\
    \ limit2 = (long) Math.sqrt(n + 1l); // limit2 is the square root of n + 1\n \
    \       for (long i = 2l; i <= limit2; i++) {\n            if (n % i == 0l) return\
    \ false; // n is not prime because i is a factor of n\n        }\n        return\
    \ true;", "        if (n < 2l) return false;\n        if (n == 2l) return true;\n\
    \        if (n % 2l == 0l) return false;\n        if (n % 3l == 0l) return false;\n\
    \        if (n % 5l == 0l) return false;\n        if (n % 7l == 0l) return false;\n\
    \        if (n % 11l == 0l) return false;\n        if (n % 13l == 0l) return false;\n\
    \        if (n % 17l == 0l) return false;\n        if (n % 19l == 0l) return false;\n\
    \        if (n % 23l == 0l) return false;\n        if (n % 29l == 0l) return false;\n\
    \        if (n % 31l == 0l) return false;\n        if (n % 37l == 0l) return false;\n\
    \        if (n % 41l == 0l) return false;\n        if (n % 43l == 0l) return false;\n\
    \        if (n % 47l == 0l) return false;\n        if (n % 53l == 0l) return false;\n\
    \        if (n % 59l == 0l) return false;\n        if (n % 61l == 0l) return false;\n\
    \        if (n % 67l == 0l) return false;\n        if (n % 71l == 0l) return false;\n\
    \        if (n % 73l == 0l) return false;\n        if (n % 79l == 0l) return false;\n\
    \        if (n % 83l == 0l) return false;\n        if (n % 89l == 0l) return false;\n\
    \        if (n % 97l == 0l) return false;\n        if (n % 101l == 0l) return\
    \ false;\n        if (n % 103l == 0l) return false;\n        if (n % 107l == 0l)\
    \ return false;\n        if (n % 109l == 0l) return false;\n        if (n % 113l\
    \ == 0l) return false;\n        if (n % 117l == 0l) return false;\n        if\
    \ (n % 121l == 0l) return false;\n        if (n % 123l == 0l) return false;\n\
    \        if (n % 127l == 0l) return false;\n        if (n % 131l == 0l) return\
    \ false;\n        if (n % 137l == 0l) return false;\n        if (n % 139l == 0l)\
    \ return false;\n        if (n % 141l == 0l) return false;\n        if (n % 147l\
    \ == 0l) return false;\n        if (n % 151l == 0l) return false;\n        if\
    \ (n % 157l == 0l) return false;\n        if (n % 163l == 0l) return false;\n\
    \        if (n % 167l == 0l) return false;\n        if (n % 173l == 0l) return\
    \ false;\n        if (n % 179l == 0l) return false;\n        if (n % 181l == 0l)\
    \ return false;\n        if (n % 191l == 0l) return false;\n        if (n % 197l\
    \ == 0l) return false;\n        if (n % 199l == 0l) return false;\n        if\
    \ (n % 211l == 0l) return false;\n        if (n % 223l == 0l) return false;\n\
    \        if (n % 227l == 0l) return false;\n        if (n % 229l == 0l) return\
    \ false;\n        if (n % 233l == 0l) return false;\n        if (n % 239l ", " \
    \       if (n <= 1l) return false;\n        if (n == 2l) return true;\n      \
    \  if (n % 2l == 0l) return false;\n        long limit = (long) Math.sqrt(n);\n\
    \        long limit2 = (long) Math.sqrt(n + 1l);\n        for (long i = 2l; i\
    \ <= limit2; i++) {\n            if (n % i == 0l) return false;\n        }\n \
    \       return true;", "        if (n <= 1l) return false;\n        if (n <= 3l)\
    \ return true;\n        if (n % 2 == 0 || n % 3 == 0) return false;\n        long\
    \ limit = (long) Math.sqrt(n);\n        for (long i = 5l; i <= limit; i += 6l)\
    \ if (n % i == 0 || n % (i + 2) == 0) return false;\n        return true;", " \
    \       if (n < 2l) return false;\n        if (n == 2l) return true;\n       \
    \ if (n % 2l == 0l) return false;\n        if (n % 3l == 0l) return false;\n \
    \       if (n % 5l == 0l) return false;\n        if (n % 7l == 0l) return false;\n\
    \        if (n % 11l == 0l) return false;\n        if (n % 13l == 0l) return false;\n\
    \        if (n % 17l == 0l) return false;\n        if (n % 19l == 0l) return false;\n\
    \        if (n % 23l == 0l) return false;\n        if (n % 29l == 0l) return false;\n\
    \        if (n % 31l == 0l) return false;\n        if (n % 37l == 0l) return false;\n\
    \        if (n % 41l == 0l) return false;\n        if (n % 43l == 0l) return false;\n\
    \        if (n % 47l == 0l) return false;\n        if (n % 53l == 0l) return false;\n\
    \        if (n % 59l == 0l) return false;\n        if (n % 61l == 0l) return false;\n\
    \        if (n % 67l == 0l) return false;\n        if (n % 71l == 0l) return false;\n\
    \        if (n % 73l == 0l) return false;\n        if (n % 79l == 0l) return false;\n\
    \        if (n % 83l == 0l) return false;\n        if (n % 89l == 0l) return false;\n\
    \        if (n % 97l == 0l) return false;\n        if (n % 101l == 0l) return\
    \ false;\n        if (n % 103l == 0l) return false;\n        if (n % 107l == 0l)\
    \ return false;\n        if (n % 109l == 0l) return false;\n        if (n % 113l\
    \ == 0l) return false;\n        if (n % 117l == 0l) return false;\n        if\
    \ (n % 121l == 0l) return false;\n        if (n % 127l == 0l) return false;\n\
    \        if (n % 131l == 0l) return false;\n        if (n % 137l == 0l) return\
    \ false;\n        if (n % 141l == 0l) return false;\n        if (n % 147l == 0l)\
    \ return false;\n        if (n % 151l == 0l) return false;\n        if (n % 157l\
    \ == 0l) return false;\n        if (n % 161l == 0l) return false;\n        if\
    \ (n % 163l == 0l) return false;\n        if (n % 167l == 0l) return false;\n\
    \        if (n % 173l == 0l) return false;\n        if (n % 177l == 0l) return\
    \ false;\n        if (n % 181l == 0l) return false;\n        if (n % 191l == 0l)\
    \ return false;\n        if (n % 197l == 0l) return false;\n        if (n % 201l\
    \ == 0l) return false;\n        if (n % 207l == 0l) return false;\n        if\
    \ (n % 211l == 0l) return false;\n        if (n % 215l == 0l) return false;\n\
    \        if (n % 221l == 0l) return false;\n        if (n % 227l == 0l) return\
    \ false;\n        if (n % 231l == 0l) return false;\n        if (n % ", "    \
    \    if (n < 2l) return false;\n        if (n == 2l) return true;\n        if\
    \ (n % 2l == 0l) return false;\n        long limit = (long) Math.sqrt(n);\n  \
    \      for (long i = 2l; i <= limit; i++) {\n            if (n % i == 0l) return\
    \ false;\n        }\n        return true;", "        if (n < 2l) return false;\n\
    \        if (n == 2l) return true;\n        if (n % 2l == 0l) return false;\n\
    \        long limit = (long) Math.sqrt(n) + 1l;\n        for (long i = 2l; i <=\
    \ limit; i++) {\n            if (n % i == 0l) return false;\n        }\n     \
    \   return true;", "        if (n < 2l) return false; // 0 and 1 are not primes\n\
    \        if (n <= 3l) return true; // 2 and 3 are primes\n        if (n % 2l ==\
    \ 0l) return false; // even numbers are not primes\n        if (n % 3l == 0l)\
    \ return false; // multiple of 3 are not primes\n        if (n % 5l == 0l) return\
    \ false; // multiple of 5 are not primes\n        if (n % 7l == 0l) return false;\
    \ // multiple of 7 are not primes\n        if (n % 11l == 0l) return false; //\
    \ multiple of 11 are not primes\n        if (n % 13l == 0l) return false; // multiple\
    \ of 13 are not primes\n        if (n % 17l == 0l) return false; // multiple of\
    \ 17 are not primes\n        if (n % 19l == 0l) return false; // multiple of 19\
    \ are not primes\n        if (n % 23l == 0l) return false; // multiple of 23 are\
    \ not primes\n        if (n % 29l == 0l) return false; // multiple of 29 are not\
    \ primes\n        if (n % 31l == 0l) return false; // multiple of 31 are not primes\n\
    \        if (n % 37l == 0l) return false; // multiple of 37 are not primes\n \
    \       if (n % 41l == 0l) return false; // multiple of 41 are not primes\n  \
    \      if (n % 43l == 0l) return false; // multiple of 43 are not primes\n   \
    \     if (n % 47l == 0l) return false; // multiple of 47 are not primes\n    \
    \    if (n % 53l == 0l) return false; // multiple of 53 are not primes\n     \
    \   if (n % 59l == 0l) return false; // multiple of 59 are not primes\n      \
    \  if (n % 61l == 0l) return false; // multiple of 61 are not primes\n       \
    \ if (n % 67l == 0l) return false; // multiple of 67 are not primes\n        if\
    \ (n % 71l == 0l) return false; // multiple of 71 are not primes\n        if (n\
    \ % 73l == 0l) return false; // multiple of 73 are not primes\n        if (n %\
    \ 79l == 0l) return false; // multiple of 79 are not primes\n        if (n % 83l\
    \ == 0l) return false; // multiple of 83 are not primes\n        if (n % 89l ==\
    \ 0l) return false; // multiple of 89 are not primes\n        if (n % 97l == 0l)\
    \ return false; // multiple of 97 are not primes\n        if (n % 101l == 0l)\
    \ return false; // multiple of 101 are not primes\n        if (n % 103l == 0l)\
    \ return false; // multiple of 103 are not primes\n        if (n % 107l == 0l)\
    \ return false; // multiple of 107 are not primes\n        if (n % 109l == 0l)\
    \ return false; // multiple of 109 are not primes\n        if (n % 113", "   \
    \     if (n < 2l) return false; // 0 and 1 are not primes\n        if (n == 2l)\
    \ return true; // 2 is prime\n        if (n % 2l == 0l) return false; // even\
    \ numbers aren't primes\n        long limit = (long) Math.sqrt(n); // limit the\
    \ search to sqrt(n)\n        for (long i = 2l; i <= limit; i++) {\n          \
    \  if (n % i == 0l) return false; // n is not prime\n        }\n        return\
    \ true;", "        if (n <= 1) return false;\n        if (n == 2) return true;\n\
    \        if (n % 2 == 0) return false;\n        if (n % 3 == 0) return false;\n\
    \        if (n % 5 == 0) return false;\n        long limit = (long) Math.sqrt(n);\n\
    \        for (long i = 5; i <= limit; i += 6) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;", "        if (n < 2l) return false;\
    \ // 0 and 1 are not primes\n        if (n == 2l) return true;\n        if (n\
    \ % 2l == 0l) return false; // 0 and 1 are not primes\n        if (n % 3l == 0l)\
    \ return false; // 0 and 1 are not primes\n        if (n % 5l == 0l) return false;\
    \ // 0 and 1 are not primes\n        if (n % 7l == 0l) return false; // 0 and\
    \ 1 are not primes\n        if (n % 11l == 0l) return false; // 0 and 1 are not\
    \ primes\n        if (n % 13l == 0l) return false; // 0 and 1 are not primes\n\
    \        if (n % 17l == 0l) return false; // 0 and 1 are not primes\n        if\
    \ (n % 19l == 0l) return false; // 0 and 1 are not primes\n        if (n % 23l\
    \ == 0l) return false; // 0 and 1 are not primes\n        if (n % 29l == 0l) return\
    \ false; // 0 and 1 are not primes\n        if (n % 31l == 0l) return false; //\
    \ 0 and 1 are not primes\n        if (n % 37l == 0l) return false; // 0 and 1\
    \ are not primes\n        if (n % 41l == 0l) return false; // 0 and 1 are not\
    \ primes\n        if (n % 43l == 0l) return false; // 0 and 1 are not primes\n\
    \        if (n % 47l == 0l) return false; // 0 and 1 are not primes\n        if\
    \ (n % 53l == 0l) return false; // 0 and 1 are not primes\n        if (n % 59l\
    \ == 0l) return false; // 0 and 1 are not primes\n        if (n % 61l == 0l) return\
    \ false; // 0 and 1 are not primes\n        if (n % 67l == 0l) return false; //\
    \ 0 and 1 are not primes\n        if (n % 71l == 0l) return false; // 0 and 1\
    \ are not primes\n        if (n % 73l == 0l) return false; // 0 and 1 are not\
    \ primes\n        if (n % 79l == 0l) return false; // 0 and 1 are not primes\n\
    \        if (n % 83l == 0l) return false; // 0 and 1 are not primes\n        if\
    \ (n % 89l == 0l) return false; // 0 and 1 are not primes\n        if (n % 97l\
    \ == 0l) return false; // 0 and 1 are not primes\n        if (n % 101l == 0l)\
    \ return false; // 0 and 1 are not primes\n        if (n % 103l == 0l) return\
    \ false; // 0 and 1 are not primes\n        if (n % 107l == 0l) return false;\
    \ // 0 and 1 are not primes\n        if (n % 113l == 0l) return false; // 0 and\
    \ 1 are not primes\n        if (n % 121l == 0l) return false; // 0 and 1 are not\
    \ primes\n        if (n % 127l == 0l) return false; // ", "        if (n < 2l)\
    \ return false; // 0 and 1 are not primes\n        if (n == 2l) return true;\n\
    \        if (n % 2l == 0l) return false; // even numbers are not primes\n    \
    \    if (n % 3l == 0l) return false; // prime factors of 3 are not primes\n  \
    \      if (n % 5l == 0l) return false; // prime factors of 5 are not primes\n\
    \        long max = (long) Math.sqrt(n);\n        for (long i = 3l; i * i <= max;\
    \ i += 2l) {\n            if (n % i == 0l) return false; // prime factors of i\
    \ are not primes\n        }\n        return true;", "        if (n < 2l) return\
    \ false; // 0 and 1 are not primes\n        if (n == 2l) return true;\n      \
    \  if (n % 2l == 0l) return false; // even numbers are not primes\n        if\
    \ (n % 3l == 0l) return false; // prime factors of 3 are 2 and 3\n        long\
    \ limit = (long) Math.sqrt(n); // limit is the square root of n\n        long\
    \ i = 3l; // start at 3\n        while (i <= limit) {\n            if (n % i ==\
    \ 0l) return false; // n is not prime\n            if (i == 3l) return true; //\
    \ if we get to 3, n is prime\n            i += 2l; // move to the next odd number\n\
    \        }\n        return true;", "        if (n < 2l) return false; // 0 and\
    \ 1 are not primes\n        if (n == 2l) return true;\n        if (n % 2l == 0l)\
    \ return false; // even numbers are not primes\n        long limit = (long) Math.sqrt(n);\
    \ // limit is the square root of n\n        long i = 3l; // start at 3\n     \
    \   while (i <= limit) {\n            if (n % i == 0l) return false; // n is not\
    \ prime\n            i += 2l; // move to next odd number\n        }\n        return\
    \ true;", "        if (n <= 1l) return false;\n        if (n == 2l) return true;\n\
    \        if (n % 2l == 0l) return false;\n        if (n % 3l == 0l) return false;\n\
    \        if (n % 5l == 0l) return false;\n        if (n % 7l == 0l) return false;\n\
    \        if (n % 11l == 0l) return false;\n        if (n % 13l == 0l) return false;\n\
    \        if (n % 17l == 0l) return false;\n        if (n % 19l == 0l) return false;\n\
    \        if (n % 23l == 0l) return false;\n        if (n % 29l == 0l) return false;\n\
    \        if (n % 31l == 0l) return false;\n        if (n % 37l == 0l) return false;\n\
    \        if (n % 41l == 0l) return false;\n        if (n % 43l == 0l) return false;\n\
    \        if (n % 47l == 0l) return false;\n        if (n % 53l == 0l) return false;\n\
    \        if (n % 59l == 0l) return false;\n        if (n % 61l == 0l) return false;\n\
    \        if (n % 67l == 0l) return false;\n        if (n % 71l == 0l) return false;\n\
    \        if (n % 73l == 0l) return false;\n        if (n % 79l == 0l) return false;\n\
    \        if (n % 83l == 0l) return false;\n        if (n % 89l == 0l) return false;\n\
    \        if (n % 97l == 0l) return false;\n        if (n % 101l == 0l) return\
    \ false;\n        if (n % 103l == 0l) return false;\n        if (n % 107l == 0l)\
    \ return false;\n        if (n % 113l == 0l) return false;\n        if (n % 121l\
    \ == 0l) return false;\n        if (n % 127l == 0l) return false;\n        if\
    \ (n % 131l == 0l) return false;\n        if (n % 137l == 0l) return false;\n\
    \        if (n % 141l == 0l) return false;\n        if (n % 147l == 0l) return\
    \ false;\n        if (n % 151l == 0l) return false;\n        if (n % 157l == 0l)\
    \ return false;\n        if (n % 161l == 0l) return false;\n        if (n % 163l\
    \ == 0l) return false;\n        if (n % 167l == 0l) return false;\n        if\
    \ (n % 173l == 0l) return false;\n        if (n % 179l == 0l) return false;\n\
    \        if (n % 181l == 0l) return false;\n        if (n % 191l == 0l) return\
    \ false;\n        if (n % 197l == 0l) return false;\n        if (n % 201l == 0l)\
    \ return false;\n        if (n % 207l == 0l) return false;\n        if (n % 211l\
    \ == 0l) return false;\n        if (n % 215l == 0l) return false;\n        if\
    \ (n % 223l == 0l) return false;\n        if (n % 229l == 0l) return false;\n\
    \        if (n % 233l == 0l) return false;\n        if (n % 239l == 0l) return\
    \ false;\n        if (n % 241l == 0l) return false;\n        if (", "        if\
    \ (n <= 1) return false;\n        if (n == 2) return true;\n        if (n % 2\
    \ == 0) return false;\n        if (n % 3 == 0) return false;\n        if (n %\
    \ 5 == 0) return false;\n        if (n % 7 == 0) return false;\n        long limit\
    \ = (long) Math.sqrt(n);\n        for (int i = 3; i <= limit; i += 6) {\n    \
    \        if (n % i == 0) return false;\n        }\n        return true;", "  \
    \      if (n <= 1l) return false;\n        if (n <= 3l) return true;\n       \
    \ if (n % 2 == 0 || n % 3 == 0) return false;\n        long limit = (long) Math.sqrt(n);\n\
    \        for (long i = 3l; i <= limit; i += 2l) if (n % i == 0 || n % (i + 2l)\
    \ == 0) return false;\n        return true;", "        if (n < 2l) return false;\n\
    \        if (n == 2l) return true;\n        if (n % 2l == 0l) return false;\n\
    \        if (n % 3l == 0l) return false;\n        if (n % 5l == 0l) return false;\n\
    \        if (n % 7l == 0l) return false;\n        if (n % 11l == 0l) return false;\n\
    \        if (n % 13l == 0l) return false;\n        if (n % 17l == 0l) return false;\n\
    \        if (n % 19l == 0l) return false;\n        if (n % 23l == 0l) return false;\n\
    \        if (n % 29l == 0l) return false;\n        if (n % 31l == 0l) return false;\n\
    \        if (n % 37l == 0l) return false;\n        if (n % 41l == 0l) return false;\n\
    \        if (n % 43l == 0l) return false;\n        if (n % 47l == 0l) return false;\n\
    \        if (n % 53l == 0l) return false;\n        if (n % 59l == 0l) return false;\n\
    \        if (n % 61l == 0l) return false;\n        if (n % 67l == 0l) return false;\n\
    \        if (n % 71l == 0l) return false;\n        if (n % 73l == 0l) return false;\n\
    \        if (n % 79l == 0l) return false;\n        if (n % 83l == 0l) return false;\n\
    \        if (n % 89l == 0l) return false;\n        if (n % 97l == 0l) return false;\n\
    \        if (n % 101l == 0l) return false;\n        if (n % 103l == 0l) return\
    \ false;\n        if (n % 107l == 0l) return false;\n        if (n % 109l == 0l)\
    \ return false;\n        if (n % 113l == 0l) return false;\n        if (n % 117l\
    \ == 0l) return false;\n        if (n % 121l == 0l) return false;\n        if\
    \ (n % 123l == 0l) return false;\n        if (n % 127l == 0l) return false;\n\
    \        if (n % 131l == 0l) return false;\n        if (n % 137l == 0l) return\
    \ false;\n        if (n % 139l == 0l) return false;\n        if (n % 141l == 0l)\
    \ return false;\n        if (n % 143l == 0l) return false;\n        if (n % 147l\
    \ == 0l) return false;\n        if (n % 151l == 0l) return false;\n        if\
    \ (n % 157l == 0l) return false;\n        if (n % 159l == 0l) return false;\n\
    \        if (n % 161l == 0l) return false;\n        if (n % 163l == 0l) return\
    \ false;\n        if (n % 167l == 0l) return false;\n        if (n % 171l == 0l)\
    \ return false;\n        if (n % 177l == 0l) return false;\n        if (n % 181l\
    \ == 0l) return false;\n        if (n % 191l == 0l) return false;\n        if\
    \ (n % 197l == 0l) return false;\n        if (n % 199l == 0l) return false;\n\
    \        if (n % 211l == 0l) return false;\n        if (n % 223l == 0l) return\
    \ false;\n        if (n % 227", "        if (n < 2l) return false; // 0 and 1\
    \ are not primes\n        if (n == 2l) return true;\n        if (n % 2l == 0l)\
    \ return false; // even numbers are not primes\n        if (n % 3l == 0l) return\
    \ false; // prime factors of 3 are not primes\n        if (n % 5l == 0l) return\
    \ false; // prime factors of 5 are not primes\n        if (n % 7l == 0l) return\
    \ false; // prime factors of 7 are not primes\n        long max = (long) (Math.sqrt(n));\n\
    \        long maxI = max;\n        while (maxI > 1l) {\n            if (n % maxIl\
    \ == 0l) return false; // prime factors of maxI are not primes\n            maxI\
    \ = maxI / 2l;\n        }\n        return true;", "        if (n < 2l) return\
    \ false; // 0 and 1 are not primes.\n        if (n == 2l) return true;\n     \
    \   if (n % 2l == 0l) return false; // even numbers are not primes.\n        if\
    \ (n % 3l == 0l) return false; // prime factors of 3 are not primes.\n       \
    \ if (n % 5l == 0l) return false; // prime factors of 5 are not primes.\n    \
    \    if (n % 7l == 0l) return false; // prime factors of 7 are not primes.\n \
    \       long limit = (long) Math.sqrt(n);\n        long limit2 = (long) Math.sqrt(n\
    \ + 1l);\n        long limit3 = (long) Math.sqrt(n + 2l);\n        long limit5\
    \ = (long) Math.sqrt(n + 3l);\n        long limit7 = (long) Math.sqrt(n + 4l);\n\
    \        long limit11 = (long) Math.sqrt(n + 5l);\n        long limit13 = (long)\
    \ Math.sqrt(n + 6l);\n        long limit17 = (long) Math.sqrt(n + 7l);\n     \
    \   long limit19 = (long) Math.sqrt(n + 8l);\n        long limit23 = (long) Math.sqrt(n\
    \ + 9l);\n        long limit29 = (long) Math.sqrt(n + 10l);\n        long limit31\
    \ = (long) Math.sqrt(n + 11l);\n        long limit37 = (long) Math.sqrt(n + 12l);\n\
    \        long limit41 = (long) Math.sqrt(n + 13l);\n        long limit43 = (long)\
    \ Math.sqrt(n + 14l);\n        long limit47 = (long) Math.sqrt(n + 15l);\n   \
    \     long limit51 = (long) Math.sqrt(n + 16l);\n        long limit53 = (long)\
    \ Math.sqrt(n + 17l);\n        long limit57 = (long) Math.sqrt(n + 18l);\n   \
    \     long limit61 = (long) Math.sqrt(n + 19l);\n        long limit67 = (long)\
    \ Math.sqrt(n + 20l);\n        long limit71 = (long) Math.sqrt(n + 21l);\n   \
    \     long limit73 = (long) Math.sqrt(n + 22l);\n        long limit79 = (long)\
    \ Math.sqrt(n + 23l);\n        long limit81 = (long) Math.sqrt(n + 24l);\n   \
    \     long limit83 = (long) Math.sqrt(n + 25l);\n        long limit87 = (long)\
    \ Math.sqrt(n + 26l);\n        long limit91 = (long) Math.sqrt(n + 27l);\n   \
    \     long limit97 = (long) Math.sqrt(n + 28l);\n        long limit101 = (long)\
    \ Math.sqrt(n + 29l);\n        long limit103 = (long) Math.sqrt(n + 30l);\n  \
    \      long limit107 = (long) Math.sqrt(n + 31l);\n        long limit111 = (long)\
    \ Math.sqrt(n + ", "        if (n < 2l) return false; // 0 and 1 are not primes\n\
    \        if (n == 2l) return true;\n        if (n % 2l == 0l) return false; //\
    \ 0 and 1 are not primes\n        if (n % 3l == 0l) return false; // 2 and 3 are\
    \ not primes\n        if (n % 5l == 0l) return false; // 2 and 3 are not primes\n\
    \        if (n % 7l == 0l) return false; // 2 and 3 are not primes\n        if\
    \ (n % 11l == 0l) return false; // 2 and 3 are not primes\n        if (n % 13l\
    \ == 0l) return false; // 2 and 3 are not primes\n        if (n % 17l == 0l) return\
    \ false; // 2 and 3 are not primes\n        if (n % 19l == 0l) return false; //\
    \ 2 and 3 are not primes\n        if (n % 23l == 0l) return false; // 2 and 3\
    \ are not primes\n        if (n % 29l == 0l) return false; // 2 and 3 are not\
    \ primes\n        if (n % 31l == 0l) return false; // 2 and 3 are not primes\n\
    \        if (n % 37l == 0l) return false; // 2 and 3 are not primes\n        if\
    \ (n % 41l == 0l) return false; // 2 and 3 are not primes\n        if (n % 43l\
    \ == 0l) return false; // 2 and 3 are not primes\n        if (n % 47l == 0l) return\
    \ false; // 2 and 3 are not primes\n        if (n % 53l == 0l) return false; //\
    \ 2 and 3 are not primes\n        if (n % 59l == 0l) return false; // 2 and 3\
    \ are not primes\n        if (n % 61l == 0l) return false; // 2 and 3 are not\
    \ primes\n        if (n % 67l == 0l) return false; // 2 and 3 are not primes\n\
    \        if (n % 71l == 0l) return false; // 2 and 3 are not primes\n        if\
    \ (n % 73l == 0l) return false; // 2 and 3 are not primes\n        if (n % 79l\
    \ == 0l) return false; // 2 and 3 are not primes\n        if (n % 83l == 0l) return\
    \ false; // 2 and 3 are not primes\n        if (n % 89l == 0l) return false; //\
    \ 2 and 3 are not primes\n        if (n % 97l == 0l) return false; // 2 and 3\
    \ are not primes\n        if (n % 101l == 0l) return false; // 2 and 3 are not\
    \ primes\n        if (n % 103l == 0l) return false; // 2 and 3 are not primes\n\
    \        if (n % 107l == 0l) return false; // 2 and 3 are not primes\n       \
    \ if (n % 109l == 0l) return false; // 2 and 3 are not primes\n        if (n %\
    \ 113l == 0l) return false; // 2 and 3 are not primes\n        if (n % 127l ==\
    \ 0l) return false; // 2 and ", "        if (n <= 1l) return false;\n        if\
    \ (n == 2l) return true;\n        if (n % 2l == 0l) return false;\n        if\
    \ (n % 3l == 0l) return false;\n        if (n % 5l == 0l) return false;\n    \
    \    if (n % 7l == 0l) return false;\n        if (n % 11l == 0l) return false;\n\
    \        if (n % 13l == 0l) return false;\n        if (n % 17l == 0l) return false;\n\
    \        if (n % 19l == 0l) return false;\n        if (n % 23l == 0l) return false;\n\
    \        if (n % 29l == 0l) return false;\n        if (n % 31l == 0l) return false;\n\
    \        if (n % 37l == 0l) return false;\n        if (n % 41l == 0l) return false;\n\
    \        if (n % 43l == 0l) return false;\n        if (n % 47l == 0l) return false;\n\
    \        if (n % 53l == 0l) return false;\n        if (n % 59l == 0l) return false;\n\
    \        if (n % 61l == 0l) return false;\n        if (n % 67l == 0l) return false;\n\
    \        if (n % 71l == 0l) return false;\n        if (n % 73l == 0l) return false;\n\
    \        if (n % 79l == 0l) return false;\n        if (n % 83l == 0l) return false;\n\
    \        if (n % 89l == 0l) return false;\n        if (n % 97l == 0l) return false;\n\
    \        if (n % 101l == 0l) return false;\n        if (n % 103l == 0l) return\
    \ false;\n        if (n % 107l == 0l) return false;\n        if (n % 109l == 0l)\
    \ return false;\n        if (n % 113l == 0l) return false;\n        if (n % 117l\
    \ == 0l) return false;\n        if (n % 121l == 0l) return false;\n        if\
    \ (n % 127l == 0l) return false;\n        if (n % 131l == 0l) return false;\n\
    \        if (n % 137l == 0l) return false;\n        if (n % 139l == 0l) return\
    \ false;\n        if (n % 141l == 0l) return false;\n        if (n % 147l == 0l)\
    \ return false;\n        if (n % 151l == 0l) return false;\n        if (n % 157l\
    \ == 0l) return false;\n        if (n % 163l == 0l) return false;\n        if\
    \ (n % 167l == 0l) return false;\n        if (n % 173l == 0l) return false;\n\
    \        if (n % 179l == 0l) return false;\n        if (n % 181l == 0l) return\
    \ false;\n        if (n % 191l == 0l) return false;\n        if (n % 197l == 0l)\
    \ return false;\n        if (n % 199l == 0l) return false;\n        if (n % 211l\
    \ == 0l) return false;\n        if (n % 223l == 0l) return false;\n        if\
    \ (n % 227l == 0l) return false;\n        if (n % 229l == 0l) return false;\n\
    \        if (n % 233l == 0l) return false;\n        if (n % 239l == 0l) return\
    \ false;\n        if (n % 24", "        if (n < 2l) return false;\n        if\
    \ (n == 2l) return true;\n        if (n % 2l == 0l) return false;\n        long\
    \ limit = (long) Math.sqrt(n);\n        for (long i = 3l; i * i <= limit; i +=\
    \ 2l) {\n            if (n % i == 0l) return false;\n        }\n        return\
    \ true;", "        if (n <= 1l) return false;\n        if (n <= 3l) return true;\n\
    \        if (n % 2 == 0 || n % 3 == 0) return false;\n        long limit = (long)\
    \ Math.sqrt(n);\n        for (long i = 3l; i * i <= limit; i += 6l) if (n % i\
    \ == 0 || n % (i + 2) == 0) return false;\n        return true;", "        if\
    \ (n < 2l) return false; // 0 and 1 are not primes\n        if (n <= 3l) return\
    \ true;\n        if (n % 2l == 0l) return false; // even numbers are not primes\n\
    \        if (n % 3l == 0l) return false; // prime factors of even numbers are\
    \ not primes\n        long limit = (long) Math.sqrt(n); // limit is the largest\
    \ integer less than or equal to n\n        long i = 3l; // start at 3\n      \
    \  while (i <= limit) {\n            if (n % i == 0l) return false; // n is not\
    \ prime\n            if (i == 3l) return true; // if we get to 3, n is prime\n\
    \            i += 2l; // increment by 2\n        }\n        return true; // if\
    \ we get to limit, n is not prime", "        if (n < 2l) return false;\n     \
    \   if (n == 2l) return true;\n        if (n % 2l == 0l) return false;\n     \
    \   if (n % 3l == 0l) return false;\n        if (n % 5l == 0l) return false;\n\
    \        if (n % 7l == 0l) return false;\n        if (n % 11l == 0l) return false;\n\
    \        if (n % 13l == 0l) return false;\n        if (n % 17l == 0l) return false;\n\
    \        if (n % 19l == 0l) return false;\n        if (n % 23l == 0l) return false;\n\
    \        if (n % 29l == 0l) return false;\n        if (n % 31l == 0l) return false;\n\
    \        if (n % 37l == 0l) return false;\n        if (n % 41l == 0l) return false;\n\
    \        if (n % 43l == 0l) return false;\n        if (n % 47l == 0l) return false;\n\
    \        if (n % 53l == 0l) return false;\n        if (n % 59l == 0l) return false;\n\
    \        if (n % 61l == 0l) return false;\n        if (n % 67l == 0l) return false;\n\
    \        if (n % 71l == 0l) return false;\n        if (n % 73l == 0l) return false;\n\
    \        if (n % 79l == 0l) return false;\n        if (n % 83l == 0l) return false;\n\
    \        if (n % 89l == 0l) return false;\n        if (n % 97l == 0l) return false;\n\
    \        if (n % 101l == 0l) return false;\n        if (n % 103l == 0l) return\
    \ false;\n        if (n % 107l == 0l) return false;\n        if (n % 109l == 0l)\
    \ return false;\n        if (n % 113l == 0l) return false;\n        if (n % 117l\
    \ == 0l) return false;\n        if (n % 121l == 0l) return false;\n        if\
    \ (n % 127l == 0l) return false;\n        if (n % 131l == 0l) return false;\n\
    \        if (n % 137l == 0l) return false;\n        if (n % 141l == 0l) return\
    \ false;\n        if (n % 147l == 0l) return false;\n        if (n % 151l == 0l)\
    \ return false;\n        if (n % 157l == 0l) return false;\n        if (n % 161l\
    \ == 0l) return false;\n        if (n % 163l == 0l) return false;\n        if\
    \ (n % 167l == 0l) return false;\n        if (n % 173l == 0l) return false;\n\
    \        if (n % 177l == 0l) return false;\n        if (n % 181l == 0l) return\
    \ false;\n        if (n % 187l == 0l) return false;\n        if (n % 191l == 0l)\
    \ return false;\n        if (n % 197l == 0l) return false;\n        if (n % 201l\
    \ == 0l) return false;\n        if (n % 207l == 0l) return false;\n        if\
    \ (n % 211l == 0l) return false;\n        if (n % 215l == 0l) return false;\n\
    \        if (n % 221l == 0l) return false;\n        if (n % 227l == 0l) return\
    \ false;\n        if (n % 23", "        if (n < 2l) return false; // 0 and 1 are\
    \ not primes\n        if (n == 2l) return true; // 2 is prime\n        if (n %\
    \ 2l == 0l) return false; // even numbers aren't primes\n        long limit =\
    \ (long) Math.sqrt(n); // limit the search to sqrt(n)\n        long i = 3l; //\
    \ start at 3\n        while (i <= limit) {\n            if (n % i == 0l) return\
    \ false; // n is not prime\n            i += 2l; // next odd number\n        }\n\
    \        return true; // n is prime", "        if (n < 2l) return false;\n   \
    \     if (n == 2l) return true;\n        if (n % 2l == 0l) return false;\n   \
    \     if (n % 3l == 0l) return false;\n        if (n % 5l == 0l) return false;\n\
    \        if (n % 7l == 0l) return false;\n        if (n % 11l == 0l) return false;\n\
    \        if (n % 13l == 0l) return false;\n        if (n % 17l == 0l) return false;\n\
    \        if (n % 19l == 0l) return false;\n        if (n % 23l == 0l) return false;\n\
    \        if (n % 29l == 0l) return false;\n        if (n % 31l == 0l) return false;\n\
    \        if (n % 37l == 0l) return false;\n        if (n % 41l == 0l) return false;\n\
    \        if (n % 43l == 0l) return false;\n        if (n % 47l == 0l) return false;\n\
    \        if (n % 53l == 0l) return false;\n        if (n % 59l == 0l) return false;\n\
    \        if (n % 61l == 0l) return false;\n        if (n % 67l == 0l) return false;\n\
    \        if (n % 71l == 0l) return false;\n        if (n % 73l == 0l) return false;\n\
    \        if (n % 79l == 0l) return false;\n        if (n % 83l == 0l) return false;\n\
    \        if (n % 89l == 0l) return false;\n        if (n % 97l == 0l) return false;\n\
    \        if (n % 101l == 0l) return false;\n        if (n % 103l == 0l) return\
    \ false;\n        if (n % 107l == 0l) return false;\n        if (n % 109l == 0l)\
    \ return false;\n        if (n % 113l == 0l) return false;\n        if (n % 117l\
    \ == 0l) return false;\n        if (n % 121l == 0l) return false;\n        if\
    \ (n % 127l == 0l) return false;\n        if (n % 131l == 0l) return false;\n\
    \        if (n % 137l == 0l) return false;\n        if (n % 141l == 0l) return\
    \ false;\n        if (n % 147l == 0l) return false;\n        if (n % 151l == 0l)\
    \ return false;\n        if (n % 157l == 0l) return false;\n        if (n % 161l\
    \ == 0l) return false;\n        if (n % 163l == 0l) return false;\n        if\
    \ (n % 167l == 0l) return false;\n        if (n % 173l == 0l) return false;\n\
    \        if (n % 179l == 0l) return false;\n        if (n % 181l == 0l) return\
    \ false;\n        if (n % 185l == 0l) return false;\n        if (n % 189l == 0l)\
    \ return false;\n        if (n % 193l == 0l) return false;\n        if (n % 197l\
    \ == 0l) return false;\n        if (n % 201l == 0l) return false;\n        if\
    \ (n % 207l == 0l) return false;\n        if (n % 211l == 0l) return false;\n\
    \        if (n % 215l == 0l) return false;\n        if (n % 219l == 0l) return\
    \ false;\n        if (n % 223"]
stop_tokens:
- "\n    }\n"

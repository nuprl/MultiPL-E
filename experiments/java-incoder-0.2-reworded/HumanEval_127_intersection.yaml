name: HumanEval_127_intersection
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // You are given two intervals,\n    // where each interval\
  \ is a pair of integers. For example, interval = (start, end) = (1, 2).\n    //\
  \ The given intervals are closed which means that the interval (start, end)\n  \
  \  // includes both start and end.\n    // For each given interval, it is assumed\
  \ that its start is less or equal its end.\n    // Your task is to determine whether\
  \ the length of intersection of these two \n    // intervals is a prime number.\n\
  \    // Example, the intersection of the intervals (1, 3), (2, 4) is (2, 3)\n  \
  \  // which its length is 1, which not a prime number.\n    // If the length of\
  \ the intersection is a prime number, return \"YES\",\n    // otherwise, return\
  \ \"NO\".\n    // If the two intervals don't intersect, return \"NO\".\n    // [input/output]\
  \ samples:\n    // >>> intersection((Pair.with(1l, 2l)), (Pair.with(2l, 3l)))\n\
  \    // (\"NO\")\n    // >>> intersection((Pair.with(-1l, 1l)), (Pair.with(0l, 4l)))\n\
  \    // (\"NO\")\n    // >>> intersection((Pair.with(-3l, -1l)), (Pair.with(-5l,\
  \ 5l)))\n    // (\"YES\")\n    public static String intersection(Pair<Long, Long>\
  \ interval1, Pair<Long, Long> interval2) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(intersection((Pair.with(1l,\
  \ 2l)), (Pair.with(2l, 3l))).equals((\"NO\")));\n    assert(intersection((Pair.with(-1l,\
  \ 1l)), (Pair.with(0l, 4l))).equals((\"NO\")));\n    assert(intersection((Pair.with(-3l,\
  \ -1l)), (Pair.with(-5l, 5l))).equals((\"YES\")));\n    assert(intersection((Pair.with(-2l,\
  \ 2l)), (Pair.with(-4l, 0l))).equals((\"YES\")));\n    assert(intersection((Pair.with(-11l,\
  \ 2l)), (Pair.with(-1l, -1l))).equals((\"NO\")));\n    assert(intersection((Pair.with(1l,\
  \ 2l)), (Pair.with(3l, 5l))).equals((\"NO\")));\n    assert(intersection((Pair.with(1l,\
  \ 2l)), (Pair.with(1l, 2l))).equals((\"NO\")));\n    assert(intersection((Pair.with(-2l,\
  \ -2l)), (Pair.with(-3l, -2l))).equals((\"NO\")));\n    }\n\n}\n"
completions: ["        long start = interval1.getLeft();\n        long end = interval1.getRight();\n\
    \        long start2 = interval2.getLeft();\n        long end2 = interval2.getRight();\n\
    \        long length = end - start;\n        long length2 = end2 - start2;\n \
    \       if (length2 == 0) {\n            return \"NO\";\n        }\n        if\
    \ (length2 == 1) {\n            return \"YES\";\n        }\n        long length3\
    \ = length / length2;\n        if (length3 == 1) {\n            return \"YES\"\
    ;\n        }\n        if (length3 == 2) {\n            return \"NO\";\n      \
    \  }\n        long length4 = length3 / 2;\n        if (length4 == 1) {\n     \
    \       return \"YES\";\n        }\n        if (length4 == 2) {\n            return\
    \ \"NO\";\n        }\n        long length5 = length4 / 2;\n        if (length5\
    \ == 1) {\n            return \"YES\";\n        }\n        if (length5 == 2) {\n\
    \            return \"NO\";\n        }\n        long length6 = length5 / 2;\n\
    \        if (length6 == 1) {\n            return \"YES\";\n        }\n       \
    \ if (length6 == 2) {\n            return \"NO\";\n        }\n        long length7\
    \ = length6 / 2;\n        if (length7 == 1) {\n            return \"YES\";\n \
    \       }\n        if (length7 == 2) {\n            return \"NO\";\n        }\n\
    \        long length8 = length7 / 2;\n        if (length8 == 1) {\n          \
    \  return \"YES\";\n        }\n        if (length8 == 2) {\n            return\
    \ \"NO\";\n        }\n        long length9 = length8 / 2;\n        if (length9\
    \ == 1) {\n            return \"YES\";\n        }\n        if (length9 == 2) {\n\
    \            return \"NO\";\n        }\n        long length10 = length9 / 2;\n\
    \        if (length10 == 1) {\n            return \"YES\";\n        }\n      \
    \  if (length10 == 2) {\n            return \"NO\";\n        }\n        long length11\
    \ = length10 / 2;\n        if (length11 == 1) {\n            return \"YES\";\n\
    \        }\n        if (length11 == 2) {\n            return \"NO\";\n       \
    \ }\n        long length12 = length11 / 2;\n        if (length12 == 1) {\n   \
    \         return \"YES\";\n        }\n        if (length12 == 2) {\n         \
    \   return \"NO\";\n        }\n        long length13 = length12 / 2;\n       \
    \ if (length13 == 1) {\n            return \"YES\";\n        }\n        if (length13\
    \ == 2) {\n            return \"NO\";\n        }\n        long length14 = length13\
    \ / 2;\n        if (length14 == 1) {\n            return \"YES\";\n        }\n\
    \        if (length14 == 2) {\n            return \"NO\";\n        }\n       \
    \ long length15 = length14 / 2;\n        if (length15 == 1) {\n            return\
    \ \"YES\";\n        }\n        if (length15 == 2) {\n            return \"NO\"\
    ;\n        }\n        long length16 = length15", "        long start = interval1.getFirst();\n\
    \        long end = interval1.getSecond();\n        long start2 = interval2.getFirst();\n\
    \        long end2 = interval2.getSecond();\n        long length = end - start;\n\
    \        long length2 = end2 - start2;\n        if (length2 == 0) {\n        \
    \    return \"NO\";\n        }\n        if (length == length2) {\n           \
    \ return \"YES\";\n        }\n        if (length < length2) {\n            long\
    \ temp = start;\n            start = end2;\n            end2 = temp;\n       \
    \ }\n        long length3 = end - start2;\n        if (length3 == 0) {\n     \
    \       return \"NO\";\n        }\n        if (length == length3) {\n        \
    \    return \"YES\";\n        }\n        if (length < length3) {\n           \
    \ long temp = start2;\n            start2 = end3;\n            end3 = temp;\n\
    \        }\n        long length4 = end2 - end3;\n        if (length4 == 0) {\n\
    \            return \"NO\";\n        }\n        if (length == length4) {\n   \
    \         return \"YES\";\n        }\n        if (length < length4) {\n      \
    \      long temp = start2;\n            start2 = end3;\n            end3 = temp;\n\
    \        }\n        long length5 = end3 - end2;\n        if (length5 == 0) {\n\
    \            return \"NO\";\n        }\n        if (length == length5) {\n   \
    \         return \"YES\";\n        }\n        if (length < length5) {\n      \
    \      long temp = start3;\n            start3 = end4;\n            end4 = temp;\n\
    \        }\n        long length6 = end3 - end4;\n        if (length6 == 0) {\n\
    \            return \"NO\";\n        }\n        if (length == length6) {\n   \
    \         return \"YES\";\n        }\n        if (length < length6) {\n      \
    \      long temp = start3;\n            start3 = end4;\n            end4 = temp;\n\
    \        }\n        long length7 = end4 - end3;\n        if (length7 == 0) {\n\
    \            return \"NO\";\n        }\n        if (length == length7) {\n   \
    \         return \"YES\";\n        }\n        if (length < length7) {\n      \
    \      long temp = start4;\n            start4 = end5;\n            end5 = temp;\n\
    \        }\n        long length8 = end4 - end5;\n        if (length8 == 0) {\n\
    \            return \"NO\";\n        }\n        if (length == length8) {\n   \
    \         return \"YES\";\n        }\n        if (length < length8) {\n      \
    \      long temp = start4;\n            start4 = end5;\n            end5 = temp;\n\
    \        }\n        long length9 = end5 - end4;\n        if (length9 == 0) {\n\
    \            return \"NO\";\n        }\n        if (length == length9) {\n   \
    \         return \"YES\";\n        }\n        if (length < length9) {\n      \
    \      long temp = start5;\n            start5 = end6;\n            end6 = temp;\n\
    \        }\n        ", "        long start = Math.min(interval1.getFirst(), interval2.getFirst());\n\
    \        long end = Math.max(interval1.getSecond(), interval2.getSecond());\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        long prime = length / 2;\n        if (length == prime) return \"YES\"\
    ;\n        if (length < prime) return \"NO\";\n        long start2 = Math.max(interval1.getFirst(),\
    \ interval2.getFirst());\n        long end2 = Math.min(interval1.getSecond(),\
    \ interval2.getSecond());\n        long length2 = end2 - start2;\n        if (length2\
    \ == 0) return \"NO\";\n        long prime2 = length2 / 2;\n        if (length2\
    \ == prime2) return \"YES\";\n        if (length2 < prime2) return \"NO\";\n \
    \       long start3 = Math.min(interval1.getFirst(), interval2.getFirst());\n\
    \        long end3 = Math.max(interval1.getSecond(), interval2.getSecond());\n\
    \        long length3 = end3 - start3;\n        if (length3 == 0) return \"NO\"\
    ;\n        long prime3 = length3 / 2;\n        if (length3 == prime3) return \"\
    YES\";\n        if (length3 < prime3) return \"NO\";\n        long start4 = Math.min(interval1.getFirst(),\
    \ interval2.getFirst());\n        long end4 = Math.max(interval1.getSecond(),\
    \ interval2.getSecond());\n        long length4 = end4 - start4;\n        if (length4\
    \ == 0) return \"NO\";\n        long prime4 = length4 / 2;\n        if (length4\
    \ == prime4) return \"YES\";\n        if (length4 < prime4) return \"NO\";\n \
    \       long start5 = Math.min(interval1.getFirst(), interval2.getFirst());\n\
    \        long end5 = Math.max(interval1.getSecond(), interval2.getSecond());\n\
    \        long length5 = end5 - start5;\n        if (length5 == 0) return \"NO\"\
    ;\n        long prime5 = length5 / 2;\n        if (length5 == prime5) return \"\
    YES\";\n        if (length5 < prime5) return \"NO\";\n        long start6 = Math.min(interval1.getFirst(),\
    \ interval2.getFirst());\n        long end6 = Math.max(interval1.getSecond(),\
    \ interval2.getSecond());\n        long length6 = end6 - start6;\n        if (length6\
    \ == 0) return \"NO\";\n        long prime6 = length6 / 2;\n        if (length6\
    \ == prime6) return \"YES\";\n        if (length6 < prime6) return \"NO\";\n \
    \       long start7 = Math.min(interval1.getFirst(), interval2.getFirst());\n\
    \        long end7 = Math.max(interval1.getSecond(), interval2.get", "       \
    \ long start = interval1.getFirst();\n        long end = interval1.getSecond();\n\
    \        long start2 = interval2.getFirst();\n        long end2 = interval2.getSecond();\n\
    \        long length = end - start;\n        long length2 = end2 - start2;\n \
    \       if (length2 == 0) {\n            return \"NO\";\n        }\n        if\
    \ (length2 > length) {\n            return \"NO\";\n        }\n        if (length2\
    \ == length) {\n            if (length2 % 2 == 0) {\n                return \"\
    YES\";\n            } else {\n                return \"NO\";\n            }\n\
    \        }\n        long length3 = length / 2;\n        long length4 = length3\
    \ / 2;\n        if (length3 == length4) {\n            return \"YES\";\n     \
    \   }\n        if (length3 < length4) {\n            return \"NO\";\n        }\n\
    \        long length5 = length3 / 2;\n        long length6 = length5 / 2;\n  \
    \      if (length5 == length6) {\n            return \"YES\";\n        }\n   \
    \     if (length3 < length6) {\n            return \"NO\";\n        }\n      \
    \  long length7 = length5 / 2;\n        long length8 = length7 / 2;\n        if\
    \ (length7 == length8) {\n            return \"YES\";\n        }\n        if (length3\
    \ < length8) {\n            return \"NO\";\n        }\n        long length9 =\
    \ length7 / 2;\n        long length10 = length9 / 2;\n        if (length7 == length10)\
    \ {\n            return \"YES\";\n        }\n        if (length3 < length10) {\n\
    \            return \"NO\";\n        }\n        long length11 = length9 / 2;\n\
    \        long length12 = length11 / 2;\n        if (length9 == length12) {\n \
    \           return \"YES\";\n        }\n        if (length3 < length12) {\n  \
    \          return \"NO\";\n        }\n        long length13 = length11 / 2;\n\
    \        long length14 = length13 / 2;\n        if (length11 == length14) {\n\
    \            return \"YES\";\n        }\n        if (length3 < length14) {\n \
    \           return \"NO\";\n        }\n        long length15 = length13 / 2;\n\
    \        long length16 = length15 / 2;\n        if (length13 == length16) {\n\
    \            return \"YES\";\n        }\n        if (length3 < length16) {\n \
    \           return \"NO\";\n        }\n        long length17 = length15 / 2;\n\
    \        long length18 = length17 / 2;\n        if (length15 == length18) {\n\
    \            return \"YES\";\n        }\n        if (length3 < length18) {\n \
    \           return \"NO\";\n        }\n        long length19 = length17 / 2;\n\
    \        long length20 = length19 / 2;\n        if (length17 == length20) {\n\
    \            return \"YES\";\n        }\n        if (length3 < length20) {\n \
    \           return \"NO\";\n        }\n        ", "        long start = Math.min(interval1.getLeft(),\
    \ interval2.getLeft());\n        long end = Math.max(interval1.getRight(), interval2.getRight());\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        long inter = start + (end - start) / 2;\n        long prime = 1;\n  \
    \      while (inter < end) {\n            if (interval1.getLeft() == inter) prime\
    \ = prime * interval1.getRight();\n            if (interval2.getLeft() == inter)\
    \ prime = prime * interval2.getRight();\n            inter += (end - start) /\
    \ 2;\n        }\n        if (prime == 1) return \"YES\";\n        return \"NO\"\
    ;", "        long start = interval1.getLeft();\n        long end = interval1.getRight();\n\
    \        long start2 = interval2.getLeft();\n        long end2 = interval2.getRight();\n\
    \        if (start > end) {\n            Pair<Long, Long> temp = interval1;\n\
    \            interval1 = interval2;\n            interval2 = temp;\n        }\n\
    \        if (start2 > end2) {\n            Pair<Long, Long> temp = interval2;\n\
    \            interval2 = interval1;\n            interval1 = temp;\n        }\n\
    \        long length1 = interval1.getRight() - interval1.getLeft();\n        long\
    \ length2 = interval2.getRight() - interval2.getLeft();\n        if (length1 ==\
    \ length2) {\n            long lengthIntersection = length1;\n            if (lengthIntersection\
    \ % 2 == 0) {\n                lengthIntersection = lengthIntersection / 2;\n\
    \            }\n            long lengthIntersection2 = lengthIntersection * lengthIntersection;\n\
    \            if (lengthIntersection2 % 2 == 0) {\n                lengthIntersection2\
    \ = lengthIntersection2 / 2;\n            }\n            if (lengthIntersection\
    \ == lengthIntersection2) {\n                return \"YES\";\n            }\n\
    \        }\n        return \"NO\";", "        long start = interval1.getLeft();\n\
    \        long end = interval1.getRight();\n        long start = interval2.getLeft();\n\
    \        long end = interval2.getRight();\n        if (start > end) {\n      \
    \      Pair<Long, Long> temp = interval1;\n            interval1 = interval2;\n\
    \            interval2 = temp;\n        }\n        long length = end - start;\n\
    \        if (length == 1) {\n            return \"NO\";\n        }\n        long\
    \ prime = length / 2;\n        long count = 0;\n        long start2 = start;\n\
    \        long end2 = end;\n        while (start2 <= end2) {\n            if (start2\
    \ % 2 == 0 && end2 % 2 == 0) {\n                count++;\n            }\n    \
    \        start2++;\n            end2++;\n        }\n        if (count == prime)\
    \ {\n            return \"YES\";\n        }\n        return \"NO\";", "      \
    \  long start = Math.min(interval1.getLeft(), interval2.getLeft());\n        long\
    \ end = Math.max(interval1.getRight(), interval2.getRight());\n        long length\
    \ = end - start;\n        if (length == 0) return \"NO\";\n        long prime\
    \ = length / 2;\n        if (length == prime) return \"YES\";\n        long num1\
    \ = (start + end) / 2;\n        long num2 = prime * (prime + 1);\n        long\
    \ num3 = num1 + num2;\n        long num4 = num1 - num2;\n        long num5 = num1\
    \ * num2;\n        long num6 = num1 / num2;\n        long num7 = num1 * num3;\n\
    \        long num8 = num1 * num4;\n        long num9 = num1 * num5;\n        long\
    \ num10 = num1 * num6;\n        long num11 = num1 * num7;\n        long num12\
    \ = num1 * num8;\n        long num13 = num1 * num9;\n        long num14 = num1\
    \ * num10;\n        long num15 = num1 * num11;\n        long num16 = num1 * num12;\n\
    \        long num17 = num1 * num13;\n        long num18 = num1 * num14;\n    \
    \    long num19 = num1 * num15;\n        long num20 = num1 * num16;\n        long\
    \ num21 = num1 * num17;\n        long num22 = num1 * num18;\n        long num23\
    \ = num1 * num19;\n        long num24 = num1 * num20;\n        long num25 = num1\
    \ * num21;\n        long num26 = num1 * num22;\n        long num27 = num1 * num23;\n\
    \        long num28 = num1 * num24;\n        long num29 = num1 * num25;\n    \
    \    long num30 = num1 * num26;\n        long num31 = num1 * num27;\n        long\
    \ num32 = num1 * num28;\n        long num33 = num1 * num29;\n        long num34\
    \ = num1 * num30;\n        long num35 = num1 * num31;\n        long num36 = num1\
    \ * num32;\n        long num37 = num1 * num33;\n        long num38 = num1 * num34;\n\
    \        long num39 = num1 * num35;\n        long num40 = num1 * num36;\n    \
    \    long num41 = num1 * num37;\n        long num42 = num1 * num38;\n        long\
    \ num43 = num1 * num39;\n        long num44 = num1 * num40", "        long start\
    \ = interval1.getLeft();\n        long end = interval1.getRight();\n        long\
    \ start2 = interval2.getLeft();\n        long end2 = interval2.getRight();\n \
    \       long length = end - start;\n        long length2 = end2 - start2;\n  \
    \      if (length2 == 0) {\n            return \"NO\";\n        }\n        long\
    \ intersection = length * length2;\n        if (length2 > length) {\n        \
    \    intersection = intersection + length2 - length;\n        }\n        if (intersection\
    \ == 1) {\n            return \"YES\";\n        }\n        if (intersection ==\
    \ 2) {\n            return \"YES\";\n        }\n        if (intersection % 2 ==\
    \ 0) {\n            return \"NO\";\n        }\n        long prime = Long.parseLong(String.valueOf(Math.sqrt(intersection)));\n\
    \        if (prime == 1) {\n            return \"YES\";\n        }\n        return\
    \ \"NO\";", "        long start = interval1.getLeft();\n        long end = interval1.getRight();\n\
    \        long start2 = interval2.getLeft();\n        long end2 = interval2.getRight();\n\
    \        long length = end - start;\n        long length2 = end2 - start2;\n \
    \       if (length2 == 0) {\n            return length == 0 ? \"NO\" : \"YES\"\
    ;\n        }\n        long length3 = length / length2;\n        if (length3 ==\
    \ 0) {\n            return \"NO\";\n        }\n        long length4 = length %\
    \ length2;\n        if (length4 != 0) {\n            return \"NO\";\n        }\n\
    \        long length5 = length3 / length2;\n        if (length5 == 1) {\n    \
    \        return \"YES\";\n        }\n        long length6 = length5 % length2;\n\
    \        if (length6 != 0) {\n            return \"NO\";\n        }\n        long\
    \ length7 = length6 / length2;\n        if (length7 == 1) {\n            return\
    \ \"YES\";\n        }\n        long length8 = length7 % length2;\n        if (length8\
    \ != 0) {\n            return \"NO\";\n        }\n        long length9 = length8\
    \ / length2;\n        if (length9 == 1) {\n            return \"YES\";\n     \
    \   }\n        long length10 = length9 % length2;\n        if (length10 != 0)\
    \ {\n            return \"NO\";\n        }\n        long length11 = length10 /\
    \ length2;\n        if (length11 == 1) {\n            return \"YES\";\n      \
    \  }\n        long length12 = length11 % length2;\n        if (length12 != 0)\
    \ {\n            return \"NO\";\n        }\n        long length13 = length12 /\
    \ length2;\n        if (length13 == 1) {\n            return \"YES\";\n      \
    \  }\n        long length14 = length13 % length2;\n        if (length14 != 0)\
    \ {\n            return \"NO\";\n        }\n        long length15 = length14 /\
    \ length2;\n        if (length15 == 1) {\n            return \"YES\";\n      \
    \  }\n        long length16 = length15 % length2;\n        if (length16 != 0)\
    \ {\n            return \"NO\";\n        }\n        long length17 = length16 /\
    \ length2;\n        if (length17 == 1) {\n            return \"YES\";\n      \
    \  }\n        long length18 = length17 % length2;\n        if (length18 != 0)\
    \ {\n            return \"NO\";\n        }\n        long length19 = length18 /\
    \ length2;\n        if (length19 == 1) {\n            return \"YES\";\n      \
    \  }\n        long length20 = length19 % length2;\n        if (length20 != 0)\
    \ {\n            return \"NO\";\n        }\n        long length21 = length20 /\
    \ length2;\n        if (length21 == 1) {\n            return \"YES\";\n      \
    \  }\n        long length22 = length21 % length2;\n        if (length22 != 0)\
    \ {\n            return \"", "        long start = interval1.getFirst();\n   \
    \     long end = interval1.getSecond();\n        long start2 = interval2.getFirst();\n\
    \        long end2 = interval2.getSecond();\n        long length = end - start;\n\
    \        long length2 = end2 - start2;\n        if (length == 0 || length2 ==\
    \ 0) {\n            return \"NO\";\n        }\n        if (length == length2)\
    \ {\n            return \"YES\";\n        }\n        long length3 = length / length2;\n\
    \        if (length3 == 1) {\n            return \"YES\";\n        }\n       \
    \ if (length3 > 1) {\n            return \"NO\";\n        }\n        return \"\
    NO\";", "        long start = Math.min(interval1.getFirst(), interval2.getFirst());\n\
    \        long end = Math.max(interval1.getSecond(), interval2.getSecond());\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        long prime = length / 2;\n        long prime2 = prime * prime;\n    \
    \    long prime3 = prime2 * prime;\n        long prime4 = prime3 * prime;\n  \
    \      long prime5 = prime4 * prime;\n        long prime6 = prime5 * prime;\n\
    \        long prime7 = prime6 * prime;\n        long prime8 = prime7 * prime;\n\
    \        long prime9 = prime8 * prime;\n        long prime10 = prime9 * prime;\n\
    \        long prime11 = prime10 * prime;\n        long prime12 = prime11 * prime;\n\
    \        long prime13 = prime12 * prime;\n        long prime14 = prime13 * prime;\n\
    \        long prime15 = prime14 * prime;\n        long prime16 = prime15 * prime;\n\
    \        long prime17 = prime16 * prime;\n        long prime18 = prime17 * prime;\n\
    \        long prime19 = prime18 * prime;\n        long prime20 = prime19 * prime;\n\
    \        long prime21 = prime20 * prime;\n        long prime22 = prime21 * prime;\n\
    \        long prime23 = prime22 * prime;\n        long prime24 = prime23 * prime;\n\
    \        long prime25 = prime24 * prime;\n        long prime26 = prime25 * prime;\n\
    \        long prime27 = prime26 * prime;\n        long prime28 = prime27 * prime;\n\
    \        long prime29 = prime28 * prime;\n        long prime30 = prime29 * prime;\n\
    \        long prime31 = prime30 * prime;\n        long prime32 = prime31 * prime;\n\
    \        long prime33 = prime32 * prime;\n        long prime34 = prime33 * prime;\n\
    \        long prime35 = prime34 * prime;\n        long prime36 = prime35 * prime;\n\
    \        long prime37 = prime36 * prime;\n        long prime38 = prime37 * prime;\n\
    \        long prime39 = prime38 * prime;\n        long prime40 = prime39 * prime;\n\
    \        long prime41 = prime40 * prime;\n        long prime42 = prime41 * prime;\n\
    \        long prime43 = prime42 * prime;\n        long prime44 = prime43 * prime;\n\
    \        long prime", "        long start = interval1.getFirst();\n        long\
    \ end = interval1.getSecond();\n        long start2 = interval2.getFirst();\n\
    \        long end2 = interval2.getSecond();\n        long length = end - start;\n\
    \        long length2 = end2 - start2;\n        if (length == length2) {\n   \
    \         if (length == 2) {\n                return \"YES\";\n            }\n\
    \            long mid = (start + end) / 2;\n            long mid2 = (start2 +\
    \ end2) / 2;\n            if (mid == mid2) {\n                return \"YES\";\n\
    \            }\n            long mid3 = (start + end3) / 2;\n            long\
    \ mid4 = (start2 + end4) / 2;\n            if (mid == mid3 && mid2 == mid4) {\n\
    \                return \"YES\";\n            }\n            return \"NO\";\n\
    \        }\n        return \"NO\";", "        long start = Math.min(interval1.getFirst(),\
    \ interval2.getFirst());\n        long end = Math.max(interval1.getSecond(), interval2.getSecond());\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        if (length == 1) return \"YES\";\n        long max = (long) Math.sqrt(length);\n\
    \        long max2 = (long) Math.sqrt(length);\n        long max3 = max * max;\n\
    \        long max4 = max2 * max;\n        long max5 = max3 * max;\n        long\
    \ max6 = max4 * max;\n        long max7 = max5 * max;\n        long max8 = max6\
    \ * max;\n        long max9 = max7 * max;\n        long max10 = max8 * max;\n\
    \        long max11 = max9 * max;\n        long max12 = max10 * max;\n       \
    \ long max13 = max11 * max;\n        long max14 = max12 * max;\n        long max15\
    \ = max13 * max;\n        long max16 = max14 * max;\n        long max17 = max15\
    \ * max;\n        long max18 = max16 * max;\n        long max19 = max17 * max;\n\
    \        long max20 = max18 * max;\n        long max21 = max19 * max;\n      \
    \  long max22 = max20 * max;\n        long max23 = max21 * max;\n        long\
    \ max24 = max22 * max;\n        long max25 = max23 * max;\n        long max26\
    \ = max24 * max;\n        long max27 = max25 * max;\n        long max28 = max26\
    \ * max;\n        long max29 = max27 * max;\n        long max30 = max28 * max;\n\
    \        long max31 = max29 * max;\n        long max32 = max30 * max;\n      \
    \  long max33 = max31 * max;\n        long max34 = max32 * max;\n        long\
    \ max35 = max33 * max;\n        long max36 = max34 * max;\n        long max37\
    \ = max35 * max;\n        long max38 = max36 * max;\n        long max39 = max37\
    \ * max;\n        long max40 = max38 * max;\n        long max41 = max39 * max;\n\
    \        long max42 = max40 * max;\n        long max43 = max41 * max;\n      \
    \  long max", "        long start = interval1.getFirst();\n        long end =\
    \ interval1.getSecond();\n        long start2 = interval2.getFirst();\n      \
    \  long end2 = interval2.getSecond();\n        long length = end - start;\n  \
    \      long length2 = end2 - start2;\n        if (length2 == 0) {\n          \
    \  return \"NO\";\n        }\n        if (length2 == 1) {\n            return\
    \ \"YES\";\n        }\n        if (length == 1) {\n            return \"NO\";\n\
    \        }\n        long length3 = length / length2;\n        if (length3 == 1)\
    \ {\n            return \"YES\";\n        }\n        if (length3 == 2) {\n   \
    \         return \"NO\";\n        }\n        if (length3 == 3) {\n           \
    \ return \"YES\";\n        }\n        if (length3 == 4) {\n            return\
    \ \"NO\";\n        }\n        if (length3 == 5) {\n            return \"YES\"\
    ;\n        }\n        if (length3 == 6) {\n            return \"NO\";\n      \
    \  }\n        if (length3 == 7) {\n            return \"YES\";\n        }\n  \
    \      if (length3 == 8) {\n            return \"NO\";\n        }\n        if\
    \ (length3 == 9) {\n            return \"YES\";\n        }\n        if (length3\
    \ == 10) {\n            return \"NO\";\n        }\n        if (length3 == 11)\
    \ {\n            return \"YES\";\n        }\n        if (length3 == 12) {\n  \
    \          return \"NO\";\n        }\n        if (length3 == 13) {\n         \
    \   return \"YES\";\n        }\n        if (length3 == 14) {\n            return\
    \ \"NO\";\n        }\n        if (length3 == 15) {\n            return \"YES\"\
    ;\n        }\n        if (length3 == 16) {\n            return \"NO\";\n     \
    \   }\n        if (length3 == 17) {\n            return \"YES\";\n        }\n\
    \        if (length3 == 18) {\n            return \"NO\";\n        }\n       \
    \ if (length3 == 19) {\n            return \"YES\";\n        }\n        if (length3\
    \ == 20) {\n            return \"NO\";\n        }\n        if (length3 == 21)\
    \ {\n            return \"YES\";\n        }\n        if (length3 == 22) {\n  \
    \          return \"NO\";\n        }\n        if (length3 == 23) {\n         \
    \   return \"YES\";\n        }\n        if (length3 == 24) {\n            return\
    \ \"NO\";\n        }\n        if (length3 == 25) {\n            return \"YES\"\
    ;\n        }\n        if (length3 == 26) {\n            return \"NO\";\n     \
    \   }\n        if (length3 == 27) {\n            return \"YES\";\n        }\n\
    \        if (length3 == 28) {\n            return \"NO\";\n        }\n       \
    \ if (length3 == 29) {\n            return \"YES\";\n        }\n        if (length3\
    \ == 30) {\n            return \"NO\";\n        }\n        if (length3 == 31)\
    \ {\n            return \"YES\";\n        }\n        if (length3 == 32) {\n  \
    \          return \"NO\";\n        }\n        if (length3 == 33) {\n         \
    \   return \"YES\";\n        }\n        if (length3 == 34) {\n            return\
    \ \"NO\";\n        }\n        if (length3 == 35) {\n            return \"YES\"\
    ;\n        }\n        if (", "        long start = Math.min(interval1.getLeft(),\
    \ interval2.getLeft());\n        long end = Math.max(interval1.getRight(), interval2.getRight());\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        long prime = length / 2;\n        if (length == prime)\n  \
    \          return \"YES\";\n        if (length < prime)\n            return \"\
    NO\";\n        long start2 = Math.min(interval1.getLeft(), interval2.getLeft());\n\
    \        long end2 = Math.max(interval1.getRight(), interval2.getRight());\n \
    \       long length2 = end2 - start2;\n        if (length2 == 0)\n           \
    \ return \"NO\";\n        long prime2 = length2 / 2;\n        if (length2 == prime2)\n\
    \            return \"YES\";\n        if (length2 < prime2)\n            return\
    \ \"NO\";\n        long start3 = Math.min(interval1.getLeft(), interval2.getLeft());\n\
    \        long end3 = Math.max(interval1.getRight(), interval2.getRight());\n \
    \       long length3 = end3 - start3;\n        if (length3 == 0)\n           \
    \ return \"NO\";\n        long prime3 = length3 / 2;\n        if (length3 == prime3)\n\
    \            return \"YES\";\n        if (length3 < prime3)\n            return\
    \ \"NO\";\n        long start4 = Math.min(interval1.getLeft(), interval2.getLeft());\n\
    \        long end4 = Math.max(interval1.getRight(), interval2.getRight());\n \
    \       long length4 = end4 - start4;\n        if (length4 == 0)\n           \
    \ return \"NO\";\n        long prime4 = length4 / 2;\n        if (length4 == prime4)\n\
    \            return \"YES\";\n        if (length4 < prime4)\n            return\
    \ \"NO\";\n        long start5 = Math.min(interval1.getLeft(), interval2.getLeft());\n\
    \        long end5 = Math.max(interval1.getRight(), interval2.getRight());\n \
    \       long length5 = end5 - start5;\n        if (length5 == 0)\n           \
    \ return \"NO\";\n        long prime5 = length5 / 2;\n        if (length5 == prime5)\n\
    \            return \"YES\";\n        if (length5 < prime5)\n            return\
    \ \"NO\";\n        long start6 = Math.min(interval1.getLeft(), interval2.getLeft());\n\
    \        long end6 = Math.max(interval1.getRight(), interval2.getRight());\n \
    \       long length6 = end6 - start6;\n        if (length6 == 0)\n           \
    \ return \"NO\";\n        long prime6 = length6 / 2;\n        if (length6 == prime6)\n\
    \            return \"YES\";\n        if (length6 < prime6)\n            return\
    \ \"NO\";\n        long start7 = Math.min(interval1.getLeft(), interval2.getLeft());\n\
    \        long end7 = Math.max(interval1.getRight(), interval", "        long start\
    \ = interval1.getLeft();\n        long end = interval1.getRight();\n        long\
    \ start2 = interval2.getLeft();\n        long end2 = interval2.getRight();\n \
    \       long length1 = end - start;\n        long length2 = end2 - start2;\n \
    \       if (length1 == 0 || length2 == 0) {\n            return \"NO\";\n    \
    \    }\n        long lengthIntersection = length1 + length2;\n        if (lengthIntersection\
    \ == 1) {\n            return \"YES\";\n        }\n        long lengthIntersectionPrime\
    \ = lengthIntersection / 2;\n        if (lengthIntersectionPrime == 1) {\n   \
    \         return \"YES\";\n        }\n        long lengthIntersectionPrime2 =\
    \ lengthIntersectionPrime / 2;\n        if (lengthIntersectionPrime2 == 1) {\n\
    \            return \"YES\";\n        }\n        long lengthIntersectionPrime3\
    \ = lengthIntersectionPrime2 / 2;\n        if (lengthIntersectionPrime3 == 1)\
    \ {\n            return \"YES\";\n        }\n        long lengthIntersectionPrime4\
    \ = lengthIntersectionPrime3 / 2;\n        if (lengthIntersectionPrime4 == 1)\
    \ {\n            return \"YES\";\n        }\n        long lengthIntersectionPrime5\
    \ = lengthIntersectionPrime4 / 2;\n        if (lengthIntersectionPrime5 == 1)\
    \ {\n            return \"YES\";\n        }\n        long lengthIntersectionPrime6\
    \ = lengthIntersectionPrime5 / 2;\n        if (lengthIntersectionPrime6 == 1)\
    \ {\n            return \"YES\";\n        }\n        long lengthIntersectionPrime7\
    \ = lengthIntersectionPrime6 / 2;\n        if (lengthIntersectionPrime7 == 1)\
    \ {\n            return \"YES\";\n        }\n        long lengthIntersectionPrime8\
    \ = lengthIntersectionPrime7 / 2;\n        if (lengthIntersectionPrime8 == 1)\
    \ {\n            return \"YES\";\n        }\n        long lengthIntersectionPrime9\
    \ = lengthIntersectionPrime8 / 2;\n        if (lengthIntersectionPrime9 == 1)\
    \ {\n            return \"YES\";\n        }\n        long lengthIntersectionPrime10\
    \ = lengthIntersectionPrime9 / 2;\n        if (lengthIntersectionPrime10 == 1)\
    \ {\n            return \"YES\";\n        }\n        long lengthIntersectionPrime11\
    \ = lengthIntersectionPrime10 / 2;\n        if (lengthIntersectionPrime11 == 1)\
    \ {\n            return \"YES\";\n        }\n        long lengthIntersectionPrime12\
    \ = lengthIntersectionPrime11 / 2;\n        if (lengthIntersectionPrime12 == 1)\
    \ {\n            return \"YES\";\n        }\n        long lengthIntersectionPrime13\
    \ = lengthIntersectionPrime12 / 2;\n        if (lengthIntersectionPrime13 == 1)\
    \ {\n            return \"YES\";\n", "        long start = interval1.getLeft();\n\
    \        long end = interval1.getRight();\n        long start2 = interval2.getLeft();\n\
    \        long end2 = interval2.getRight();\n        long length = end - start;\n\
    \        long length2 = end2 - start2;\n        if (length2 == 0) {\n        \
    \    return \"NO\";\n        }\n        if (length == length2) {\n           \
    \ return \"YES\";\n        }\n        if (length < length2) {\n            start\
    \ = start + length2;\n            end = end - length2;\n        } else {\n   \
    \         start2 = start2 + length2;\n            end2 = end2 - length2;\n   \
    \     }\n        long start3 = start;\n        long end3 = end;\n        long\
    \ start4 = start2;\n        long end4 = end2;\n        long start5 = start3;\n\
    \        long end5 = end3;\n        long start6 = start4;\n        long end6 =\
    \ end4;\n        long start7 = start5;\n        long end7 = end5;\n        long\
    \ start8 = start6;\n        long end8 = end6;\n        long start9 = start7;\n\
    \        long end9 = end7;\n        long start10 = start8;\n        long end10\
    \ = end8;\n        long start11 = start9;\n        long end11 = end9;\n      \
    \  long start12 = start10;\n        long end12 = end10;\n        long start13\
    \ = start11;\n        long end13 = end11;\n        long start14 = start12;\n \
    \       long end14 = end12;\n        long start15 = start13;\n        long end15\
    \ = end13;\n        long start16 = start14;\n        long end16 = end14;\n   \
    \     long start17 = start15;\n        long end17 = end15;\n        long start18\
    \ = start16;\n        long end18 = end16;\n        long start19 = start17;\n \
    \       long end19 = end17;\n        long start20 = start18;\n        long end20\
    \ = end18;\n        long start21 = start19;\n        long end21 = end19;\n   \
    \     long start22 = start20;\n        long end22 = end20;\n        long start23\
    \ = start21;\n        long end23 = end21;\n        long start24 = start22;\n \
    \       long end24 = end22;\n        long start25 = start23;\n        long end25\
    \ = end23;\n        long start26 = start24;\n        long end26 = end24;\n   \
    \     long start27 = start25;\n        long end27 = end25;\n        long start28\
    \ = ", "        long start = Math.min(interval1.getLeft(), interval2.getLeft());\n\
    \        long end = Math.max(interval1.getRight(), interval2.getRight());\n  \
    \      long length = end - start;\n        if (length == 0) return \"NO\";\n \
    \       if (length == 1) return \"YES\";\n        long max = (long) Math.sqrt(length);\n\
    \        long max2 = (long) Math.sqrt(length);\n        long max3 = max * max;\n\
    \        long max4 = max2 * max;\n        long max5 = max3 * max;\n        long\
    \ max6 = max4 * max;\n        long max7 = max5 * max;\n        long max8 = max6\
    \ * max;\n        long max9 = max7 * max;\n        long max10 = max8 * max;\n\
    \        long max11 = max9 * max;\n        long max12 = max10 * max;\n       \
    \ long max13 = max11 * max;\n        long max14 = max12 * max;\n        long max15\
    \ = max13 * max;\n        long max16 = max14 * max;\n        long max17 = max15\
    \ * max;\n        long max18 = max16 * max;\n        long max19 = max17 * max;\n\
    \        long max20 = max18 * max;\n        long max21 = max19 * max;\n      \
    \  long max22 = max20 * max;\n        long max23 = max21 * max;\n        long\
    \ max24 = max22 * max;\n        long max25 = max23 * max;\n        long max26\
    \ = max24 * max;\n        long max27 = max25 * max;\n        long max28 = max26\
    \ * max;\n        long max29 = max27 * max;\n        long max30 = max28 * max;\n\
    \        long max31 = max29 * max;\n        long max32 = max30 * max;\n      \
    \  long max33 = max31 * max;\n        long max34 = max32 * max;\n        long\
    \ max35 = max33 * max;\n        long max36 = max34 * max;\n        long max37\
    \ = max35 * max;\n        long max38 = max36 * max;\n        long max39 = max37\
    \ * max;\n        long max40 = max38 * max;\n        long max41 = max39 * max;\n\
    \        long max42 = max40 * max;\n        long max43 = max41 * max;\n      \
    \  long max", "        long start = interval1.getLeft();\n        long end = interval1.getRight();\n\
    \        long start2 = interval2.getLeft();\n        long end2 = interval2.getRight();\n\
    \        long length = end - start;\n        long length2 = end2 - start2;\n \
    \       if (length == 0 || length2 == 0) {\n            return \"NO\";\n     \
    \   }\n        if (length == length2) {\n            return \"YES\";\n       \
    \ }\n        long length3 = length / length2;\n        if (length3 == 1) {\n \
    \           return \"YES\";\n        }\n        return \"NO\";"]
stop_tokens:
- "\n    }\n"

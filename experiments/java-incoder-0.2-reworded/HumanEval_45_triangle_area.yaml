name: HumanEval_45_triangle_area
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given length of a side and high return area for a triangle.\n\
  \    // >>> triangleArea((5l), (3l))\n    // (7.5f)\n    public static float triangleArea(long\
  \ a, long h) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(triangleArea((5l),\
  \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
  \ (8l)) == (40.0f));\n    }\n\n}\n"
completions: ['        return (a * h) / 2;', "        float s = (float) Math.sqrt(a\
    \ * a + h * h);\n        return s / 2;", "        float area = Math.sqrt(a * a\
    \ + h * h);\n        return area;", "        float area = (a * h) / 2;\n     \
    \   return area;", "        float area = 0.0f;\n        long side1 = (long) Math.sqrt(a\
    \ * a + h * h);\n        long side2 = (long) Math.sqrt(a * a - h * h);\n     \
    \   long side3 = (long) Math.sqrt(a * a + h * h);\n        float side1Area = side1\
    \ * side1;\n        float side2Area = side2 * side2;\n        float side3Area\
    \ = side3 * side3;\n        float side1Area1 = side1Area * side1;\n        float\
    \ side2Area1 = side2Area * side2;\n        float side3Area1 = side3Area * side3;\n\
    \        float side1Area2 = side1Area * side2;\n        float side2Area2 = side2Area\
    \ * side2;\n        float side3Area2 = side3Area * side3;\n        float side1Area3\
    \ = side1Area * side3;\n        float side2Area3 = side2Area * side3;\n      \
    \  float side3Area3 = side3Area * side3;\n        float side1Area4 = side1Area\
    \ * side1;\n        float side2Area4 = side2Area * side2;\n        float side3Area4\
    \ = side3Area * side3;\n        float side1Area5 = side1Area * side1;\n      \
    \  float side2Area5 = side2Area * side2;\n        float side3Area5 = side3Area\
    \ * side3;\n        float side1Area6 = side1Area * side1;\n        float side2Area6\
    \ = side2Area * side2;\n        float side3Area6 = side3Area * side3;\n      \
    \  float side1Area7 = side1Area * side1;\n        float side2Area7 = side2Area\
    \ * side2;\n        float side3Area7 = side3Area * side3;\n        float side1Area8\
    \ = side1Area * side1;\n        float side2Area8 = side2Area * side2;\n      \
    \  float side3Area8 = side3Area * side3;\n        float side1Area9 = side1Area\
    \ * side1;\n        float side2Area9 = side2Area * side2;\n        float side3Area9\
    \ = side3Area * side3;\n        float side1Area10 = side1Area * side1;\n     \
    \   float side2Area10 = side2Area * side2;\n        float side3Area10 = side3Area\
    \ * side3;\n        float side1Area11 = side1Area * side1;\n        float side2Area11\
    \ = side2Area * side2;\n        float side3Area11 = side3Area * side", '        return
    (a * h) / 2;', "        float s = (float) Math.sqrt(a * a + h * h);\n        return\
    \ s / 2;", '        return (a * h) / 2;', "        float area = 0.0f;\n      \
    \  long side = a < h ? a : h;\n        long s = side * side;\n        long area\
    \ = s * s;\n        float perimeter = side * 2;\n        float perArea = perimeter\
    \ * perimeter;\n        float perArea = perimeter * perimeter;\n        float\
    \ perArea = perimeter * perimeter;\n        float perArea = perimeter * perimeter;\n\
    \        float perArea = perimeter * perimeter;\n        float perArea = perimeter\
    \ * perimeter;\n        float perArea = perimeter * perimeter;\n        float\
    \ perArea = perimeter * perimeter;\n        float perArea = perimeter * perimeter;\n\
    \        float perArea = perimeter * perimeter;\n        float perArea = perimeter\
    \ * perimeter;\n        float perArea = perimeter * perimeter;\n        float\
    \ perArea = perimeter * perimeter;\n        float perArea = perimeter * perimeter;\n\
    \        float perArea = perimeter * perimeter;\n        float perArea = perimeter\
    \ * perimeter;\n        float perArea = perimeter * perimeter;\n        float\
    \ perArea = perimeter * perimeter;\n        float perArea = perimeter * perimeter;\n\
    \        float perArea = perimeter * perimeter;\n        float perArea = perimeter\
    \ * perimeter;\n        float perArea = perimeter * perimeter;\n        float\
    \ perArea = perimeter * perimeter;\n        float perArea = perimeter * perimeter;\n\
    \        float perArea = perimeter * perimeter;\n        float perArea = perimeter\
    \ * perimeter;\n        float perArea = perimeter * perimeter;\n        float\
    \ perArea = perimeter * perimeter;\n        float perArea = perimeter * perimeter;\n\
    \        float perArea = perimeter * perimeter;\n        float perArea = perimeter\
    \ * perimeter;\n        float perArea = perimeter * perimeter;\n        float\
    \ perArea = perimeter * perimeter;\n        float perArea = perimeter * perimeter;\n\
    \        float perArea = perimeter * perimeter;\n        float perArea = perimeter\
    \ * perimeter;\n        float perArea = perimeter * perimeter;\n        float\
    \ perArea = perimeter * perimeter;\n        float perArea = perimeter * perimeter;\n\
    \        float ", "        float area = 0.5f * Math.sqrt(3) * Math.pow(a, 2);\n\
    \        float height = Math.sqrt(3) * h;\n        float area = 0.5f * Math.sqrt(3)\
    \ * Math.pow(a, 2);\n        float height = Math.sqrt(3) * h;\n        float area\
    \ = 0.5f * Math.sqrt(3) * Math.pow(a, 2);\n        float height = Math.sqrt(3)\
    \ * h;\n        return area;", "        float area = 0.0f;\n        long side1\
    \ = (long) Math.sqrt(a * a + h * h);\n        long side2 = (long) Math.sqrt(a\
    \ * a - h * h);\n        long side3 = (long) Math.sqrt(a * a);\n        long side4\
    \ = (long) Math.sqrt(a * a + h);\n        long side5 = (long) Math.sqrt(a * a\
    \ - h);\n        long side6 = (long) Math.sqrt(a * a);\n        long side7 = (long)\
    \ Math.sqrt(a * a + h * h);\n        long side8 = (long) Math.sqrt(a * a - h *\
    \ h);\n        long side9 = (long) Math.sqrt(a * a);\n        long side10 = (long)\
    \ Math.sqrt(a * a + h);\n        long side11 = (long) Math.sqrt(a * a - h);\n\
    \        long side12 = (long) Math.sqrt(a * a);\n        long side13 = (long)\
    \ Math.sqrt(a * a + h * h);\n        long side14 = (long) Math.sqrt(a * a - h\
    \ * h);\n        long side15 = (long) Math.sqrt(a * a);\n        long side16 =\
    \ (long) Math.sqrt(a * a + h);\n        long side17 = (long) Math.sqrt(a * a -\
    \ h);\n        long side18 = (long) Math.sqrt(a * a);\n        long side19 = (long)\
    \ Math.sqrt(a * a + h * h);\n        long side20 = (long) Math.sqrt(a * a - h\
    \ * h);\n        long side21 = (long) Math.sqrt(a * a);\n        long side22 =\
    \ (long) Math.sqrt(a * a + h);\n        long side23 = (long) Math.sqrt(a * a -\
    \ h);\n        long side24 = (long) Math.sqrt(a * a);\n        long side25 = (long)\
    \ Math.sqrt(a * a + h * h);\n        long side26 = (long) Math.sqrt(a * a - h\
    \ * h);\n        long side27 = (long) Math.sqrt(a * a);\n        long side28 =\
    \ (long) Math.sqrt(a * a + h);\n        long side29 = (long) Math.sqrt(a * a -\
    \ h);\n        long side30 = (long) Math.sqrt(a * a);\n        long side31 = (long)\
    \ Math.sqrt(a * a + h * h);\n        long side32 = (long) Math.sqrt(a * a - h\
    \ * h);\n        long side33 = (long) Math.sqrt(a * a);\n        long side34 =\
    \ (long) Math.sqrt(a * a + h);\n        long side35 = (long) Math.", "       \
    \ float area = 0.0f;\n        long b = (a * h) / 2;\n        long c = (b * h)\
    \ / 2;\n        long d = (b * h) / 2;\n        long e = (a * h) / 2;\n       \
    \ long f = (e * h) / 2;\n        long g = (f * h) / 2;\n        long h = (g *\
    \ h) / 2;\n        long i = (h * h) / 2;\n        long j = (i * h) / 2;\n    \
    \    long k = (j * h) / 2;\n        long l = (k * h) / 2;\n        long m = (l\
    \ * h) / 2;\n        long n = (m * h) / 2;\n        long o = (n * h) / 2;\n  \
    \      long p = (o * h) / 2;\n        long q = (p * h) / 2;\n        long r =\
    \ (q * h) / 2;\n        long s = (l * h) / 2;\n        long t = (s * h) / 2;\n\
    \        long u = (t * h) / 2;\n        long v = (u * h) / 2;\n        long w\
    \ = (v * h) / 2;\n        long x = (w * h) / 2;\n        long y = (x * h) / 2;\n\
    \        long z = (y * h) / 2;\n        long a = (z * h) / 2;\n        long b\
    \ = (a * h) / 2;\n        long c = (b * h) / 2;\n        long d = (b * h) / 2;\n\
    \        long e = (a * h) / 2;\n        long f = (e * h) / 2;\n        long g\
    \ = (f * h) / 2;\n        long h = (g * h) / 2;\n        long i = (h * h) / 2;\n\
    \        long j = (i * h) / 2;\n        long k = (j * h) / 2;\n        long l\
    \ = (k * h) / 2;\n        long m = (l * h) / 2;\n        long n = (m * h) / 2;\n\
    \        long o = (n * h) / 2;\n        long p = (o * h) / 2;\n        long q\
    \ = (p * h) / 2;\n        long r = (q * h) / 2;\n        long s = (l * h) / 2;\n\
    \        long t = (s * h) / 2;\n        long u = (t * h) / 2;\n        long v\
    \ = (u * h) / 2;\n        long w = (v * h) / 2;\n        long x = (w * h) / 2;\n\
    \        long y = (x * h) / 2;\n        long z = (y * h) / 2;\n        long a\
    \ = (z * h) / 2;\n        long b = (a * h) / 2;\n        long c = (b * h) / 2;\n",
  '        return a * h / 2;', '        return a * h / 2;', "        float area =\
    \ 0.0f;\n        long b = (long) Math.sqrt(a * a + h * h);\n        long c = (long)\
    \ Math.sqrt(a * a + b * b);\n        long d = (long) Math.sqrt(b * b + c * c);\n\
    \        long e = (long) Math.sqrt(a * a + b * b);\n        long f = (long) Math.sqrt(c\
    \ * c + d * d);\n        long g = (long) Math.sqrt(c * c + e * e);\n        long\
    \ h = (long) Math.sqrt(d * d + f * f);\n        long i = (long) Math.sqrt(e *\
    \ e + g * g);\n        long j = (long) Math.sqrt(e * e + h * h);\n        long\
    \ k = (long) Math.sqrt(g * g + i * i);\n        long l = (long) Math.sqrt(g *\
    \ g + j * j);\n        long m = (long) Math.sqrt(h * h + l * l);\n        long\
    \ n = (long) Math.sqrt(h * h + m * m);\n        long o = (long) Math.sqrt(i *\
    \ i + j * j);\n        long p = (long) Math.sqrt(i * i + k * k);\n        long\
    \ q = (long) Math.sqrt(j * j + l * l);\n        long r = (long) Math.sqrt(j *\
    \ j + m * m);\n        long s = (long) Math.sqrt(k * k + o * o);\n        long\
    \ t = (long) Math.sqrt(k * k + p * p);\n        long u = (long) Math.sqrt(l *\
    \ l + m * m);\n        long v = (long) Math.sqrt(l * l + n * n);\n        long\
    \ w = (long) Math.sqrt(m * m + n * n);\n        long x = (long) Math.sqrt(o *\
    \ o + p * p);\n        long y = (long) Math.sqrt(o * o + q * q);\n        long\
    \ z = (long) Math.sqrt(p * p + r * r);\n        long aa = (long) Math.sqrt(a *\
    \ a + b * b);\n        long ab = (long) Math.sqrt(a * a + c * c);\n        long\
    \ ac = (long) Math.sqrt(a * a + d * d);\n        long ad = (long) Math.sqrt(a\
    \ * a + e * e);\n        long ae = (long) Math.sqrt(a * a + f * f);\n        long\
    \ af = (long) Math.sqrt(a * a + g * g);\n        long ag = (long) Math.sqrt(a\
    \ * a + h * h);\n        long ah = (long) Math.sqrt(a * a + i * i);\n        long\
    \ ai = (long) Math.sqrt(a * a + j * j);", '        return (a * h) / 2;', "   \
    \     float area = 0.5f * Math.sqrt(3) * Math.pow(a, 2);\n        float h = h\
    \ / 2;\n        float area = area + (h / 3) * (Math.pow(a, 2) - Math.pow(h / 3,\
    \ 2));\n        return area;", "        float area = 0.5f * Math.sqrt(3) * Math.pow(a,\
    \ 2);\n        area += 0.5f * Math.sqrt(3) * Math.pow(a, 2) * h;\n        area\
    \ += 0.5f * Math.sqrt(3) * Math.pow(a, 2) * h;\n        area += 0.5f * Math.sqrt(3)\
    \ * Math.pow(a, 2) * h;\n        return area;", '        return (a * h) / 2;',
  "        float area = 0.5f * Math.sqrt(3) * Math.pow(a, 2);\n        float h = h\
    \ / 2;\n        float area = area * h;\n        return area;"]
stop_tokens:
- "\n    }\n"

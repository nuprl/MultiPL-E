name: HumanEval_120_maximum
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given an array array list arr of integers and a positive\
  \ integer k, return a sorted array list \n    // of length k with the maximum k\
  \ numbers in arr.\n    // Example 1:\n    // >>> maximum((new ArrayList<Long>(Arrays.asList((long)-3l,\
  \ (long)-4l, (long)5l))), (3l))\n    // (new ArrayList<Long>(Arrays.asList((long)-4l,\
  \ (long)-3l, (long)5l)))\n    // Example 2:\n    // >>> maximum((new ArrayList<Long>(Arrays.asList((long)4l,\
  \ (long)-4l, (long)4l))), (2l))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
  \ (long)4l)))\n    // Example 3:\n    // >>> maximum((new ArrayList<Long>(Arrays.asList((long)-3l,\
  \ (long)2l, (long)1l, (long)2l, (long)-1l, (long)-2l, (long)1l))), (1l))\n    //\
  \ (new ArrayList<Long>(Arrays.asList((long)2l)))\n    // Note:\n    // 1. The length\
  \ of the array array list will be in the range of [1, 1000].\n    // 2. The elements\
  \ in the array array list will be in the range of [-1000, 1000].\n    // 3. 0 <=\
  \ k <= len(arr)\n    public static ArrayList<Long> maximum(ArrayList<Long> arr,\
  \ long k) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(maximum((new\
  \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-4l, (long)5l))), (3l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)-4l, (long)-3l, (long)5l)))));\n    assert(maximum((new\
  \ ArrayList<Long>(Arrays.asList((long)4l, (long)-4l, (long)4l))), (2l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)4l, (long)4l)))));\n    assert(maximum((new\
  \ ArrayList<Long>(Arrays.asList((long)-3l, (long)2l, (long)1l, (long)2l, (long)-1l,\
  \ (long)-2l, (long)1l))), (1l)).equals((new ArrayList<Long>(Arrays.asList((long)2l)))));\n\
  \    assert(maximum((new ArrayList<Long>(Arrays.asList((long)123l, (long)-123l,\
  \ (long)20l, (long)0l, (long)1l, (long)2l, (long)-3l))), (3l)).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
  \ (long)20l, (long)123l)))));\n    assert(maximum((new ArrayList<Long>(Arrays.asList((long)-123l,\
  \ (long)20l, (long)0l, (long)1l, (long)2l, (long)-3l))), (4l)).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)1l, (long)2l, (long)20l)))));\n    assert(maximum((new ArrayList<Long>(Arrays.asList((long)5l,\
  \ (long)15l, (long)0l, (long)3l, (long)-13l, (long)-8l, (long)0l))), (7l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)-13l, (long)-8l, (long)0l, (long)0l, (long)3l,\
  \ (long)5l, (long)15l)))));\n    assert(maximum((new ArrayList<Long>(Arrays.asList((long)-1l,\
  \ (long)0l, (long)2l, (long)5l, (long)3l, (long)-10l))), (2l)).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
  \ (long)5l)))));\n    assert(maximum((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)0l, (long)5l, (long)-7l))), (1l)).equals((new ArrayList<Long>(Arrays.asList((long)5l)))));\n\
  \    assert(maximum((new ArrayList<Long>(Arrays.asList((long)4l, (long)-4l))), (2l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)-4l, (long)4l)))));\n    assert(maximum((new\
  \ ArrayList<Long>(Arrays.asList((long)-10l, (long)10l))), (2l)).equals((new ArrayList<Long>(Arrays.asList((long)-10l,\
  \ (long)10l)))));\n    assert(maximum((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l, (long)-23l, (long)243l, (long)-400l, (long)0l))), (0l)).equals((new\
  \ ArrayList<Long>(Arrays.asList()))));\n    }\n\n}\n"
completions: ["        ArrayList<Long> result = new ArrayList<>();\n        long max\
    \ = 0;\n        long min = 0;\n        long sum = 0;\n        long count = 0;\n\
    \        for (long i : arr) {\n            sum += i;\n            if (sum > max)\
    \ {\n                max = sum;\n            }\n            if (sum < min) {\n\
    \                min = sum;\n            }\n            count++;\n        }\n\
    \        if (count > k) {\n            k = count;\n        }\n        long mid\
    \ = max / 2;\n        long mid2 = min / 2;\n        long mid3 = sum / 2;\n   \
    \     long mid4 = max / 3;\n        long mid5 = min / 3;\n        long mid6 =\
    \ sum / 3;\n        long mid7 = max / 4;\n        long mid8 = min / 4;\n     \
    \   long mid9 = sum / 4;\n        long mid10 = max / 5;\n        long mid11 =\
    \ min / 5;\n        long mid12 = sum / 5;\n        long mid13 = max / 6;\n   \
    \     long mid14 = min / 6;\n        long mid15 = sum / 6;\n        long mid16\
    \ = max / 7;\n        long mid17 = min / 7;\n        long mid18 = sum / 7;\n \
    \       long mid19 = max / 8;\n        long mid20 = min / 8;\n        long mid21\
    \ = sum / 8;\n        long mid22 = max / 9;\n        long mid23 = min / 9;\n \
    \       long mid24 = sum / 9;\n        long mid25 = max / 10;\n        long mid26\
    \ = min / 10;\n        long mid27 = sum / 10;\n        long mid28 = max / 11;\n\
    \        long mid29 = min / 11;\n        long mid30 = sum / 11;\n        long\
    \ mid31 = max / 12;\n        long mid32 = min / 12;\n        long mid33 = sum\
    \ / 12;\n        long mid34 = max / 13;\n        long mid35 = min / 13;\n    \
    \    long mid36 = sum / 13;\n        long mid37 = max / 14;\n        long mid38\
    \ = min / 14;\n        long mid39 = sum / 14;\n        long mid40 = max / 15;\n\
    \        long mid41 = min / 15;\n        long mid42 = sum / 15;\n        long\
    \ mid43 = max / 16;\n        long mid44 = min / 16;\n        long mid45 = sum\
    \ / 16;\n        long mid46 = max / 17;\n        long mid47 = min / 17;\n    \
    \    long mid48 = sum / 17;\n        long mid49 = max / 18;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long max = 0;\n        long min = 0;\n\
    \        long sum = 0;\n        for (long i : arr) {\n            sum += i;\n\
    \            if (sum > max) {\n                max = sum;\n            }\n   \
    \         if (sum < min) {\n                min = sum;\n            }\n      \
    \  }\n        long count = 0;\n        for (long i : arr) {\n            if (i\
    \ == max) {\n                result.add(max);\n                count++;\n    \
    \        }\n            if (i == min) {\n                result.add(min);\n  \
    \              count++;\n            }\n        }\n        if (count > k) {\n\
    \            ArrayList<Long> temp = new ArrayList<>();\n            for (long\
    \ i : arr) {\n                if (result.size() < k) {\n                    temp.add(i);\n\
    \                }\n            }\n            result = temp;\n        }\n   \
    \     return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = 0;\n        for (long i : arr) {\n            if (max < i)\
    \ {\n                max = i;\n            }\n        }\n        long start =\
    \ max;\n        long end = max;\n        while (end < arr.size()) {\n        \
    \    end = end + k;\n            if (end > arr.size()) {\n                end\
    \ = arr.size();\n            }\n            if (arr.contains(start) && arr.contains(end))\
    \ {\n                result.add(start);\n                result.add(end);\n  \
    \              start = end;\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        long maxIndex = 0;\n        for(int i = 0; i <\
    \ arr.size(); i++) {\n            max = Math.max(max, arr.get(i));\n         \
    \   if(max > k) {\n                result.add(arr.get(i));\n                maxIndex\
    \ = i;\n            }\n        }\n        ArrayList<Long> newArr = new ArrayList<>(result);\n\
    \        newArr.add(arr.get(maxIndex));\n        return newArr;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long max = 0;\n        for (long i\
    \ : arr) {\n            if (max < i) {\n                max = i;\n           \
    \ }\n        }\n        if (max > k) {\n            max = k;\n        }\n    \
    \    for (long i : arr) {\n            if (max < i) {\n                result.add(i);\n\
    \                max = i;\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long max = 0;\n  \
    \      for (long num : arr) {\n            if (num > max) {\n                max\
    \ = num;\n            }\n        }\n        if (max <= k) {\n            return\
    \ arr;\n        }\n        long mid = max / 2;\n        ArrayList<Long> left =\
    \ new ArrayList<>();\n        ArrayList<Long> right = new ArrayList<>();\n   \
    \     for (long num : arr) {\n            if (num < mid) {\n                left.add(num);\n\
    \            } else {\n                right.add(num);\n            }\n      \
    \  }\n        left = maximum(left, k);\n        right = maximum(right, k);\n \
    \       ArrayList<Long> leftMax = maximum(left, k - mid);\n        ArrayList<Long>\
    \ rightMax = maximum(right, k - mid);\n        ArrayList<Long> result = new ArrayList<>();\n\
    \        result.addAll(leftMax);\n        result.addAll(rightMax);\n        result.addAll(left);\n\
    \        result.addAll(right);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long max = 0;\n        long min = Long.MAX_VALUE;\n\
    \        for (long num : arr) {\n            if (num > max) {\n              \
    \  max = num;\n            }\n            if (num < min) {\n                min\
    \ = num;\n            }\n        }\n        long mid = min + (max - min) / 2;\n\
    \        long mid2 = mid / 2;\n        long mid3 = mid2 / 2;\n        long mid4\
    \ = mid3 / 2;\n        long mid5 = mid4 / 2;\n        long mid6 = mid5 / 2;\n\
    \        long mid7 = mid6 / 2;\n        long mid8 = mid7 / 2;\n        long mid9\
    \ = mid8 / 2;\n        long mid10 = mid9 / 2;\n        long mid11 = mid10 / 2;\n\
    \        long mid12 = mid11 / 2;\n        long mid13 = mid12 / 2;\n        long\
    \ mid14 = mid13 / 2;\n        long mid15 = mid14 / 2;\n        long mid16 = mid15\
    \ / 2;\n        long mid17 = mid16 / 2;\n        long mid18 = mid17 / 2;\n   \
    \     long mid19 = mid18 / 2;\n        long mid20 = mid19 / 2;\n        long mid21\
    \ = mid20 / 2;\n        long mid22 = mid21 / 2;\n        long mid23 = mid22 /\
    \ 2;\n        long mid24 = mid23 / 2;\n        long mid25 = mid24 / 2;\n     \
    \   long mid26 = mid25 / 2;\n        long mid27 = mid26 / 2;\n        long mid28\
    \ = mid27 / 2;\n        long mid29 = mid28 / 2;\n        long mid30 = mid29 /\
    \ 2;\n        long mid31 = mid30 / 2;\n        long mid32 = mid31 / 2;\n     \
    \   long mid33 = mid32 / 2;\n        long mid34 = mid33 / 2;\n        long mid35\
    \ = mid34 / 2;\n        long mid36 = mid35 / 2;\n        long mid37 = mid36 /\
    \ 2;\n        long mid38 = mid37 / 2;\n        long mid39 = mid38 / 2;\n     \
    \   long mid40 = mid39 / 2;\n        long mid41 = mid40 / 2;\n        long mid42\
    \ = mid41 / 2;\n        long mid43 = mid42 / 2;\n        long mid44 = mid43 /\
    \ 2;\n        long mid45 = mid44 / 2;\n        long mid46 = mid45 / 2;\n     \
    \   long mid47", "        ArrayList<Long> result = new ArrayList<>();\n      \
    \  Arrays.sort(arr);\n        long max = 0;\n        for (long i : arr) {\n  \
    \          if (max < i) {\n                max = i;\n            }\n        }\n\
    \        if (max < k) {\n            k = max;\n        }\n        long count =\
    \ 0;\n        for (long i : arr) {\n            if (count < k) {\n           \
    \     result.add(i);\n                count++;\n            }\n        }\n   \
    \     return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = 0;\n        for (long i : arr) {\n            if (max < i)\
    \ {\n                max = i;\n            }\n        }\n        if (max < k)\
    \ {\n            k = max;\n        }\n        long start = 0;\n        long end\
    \ = arr.size() - 1;\n        while (start < end) {\n            long mid = (start\
    \ + end) / 2;\n            if (arr[mid] > k) {\n                end = mid - 1;\n\
    \            } else {\n                start = mid + 1;\n            }\n     \
    \   }\n        while (start < arr.size()) {\n            if (arr[start] > k) {\n\
    \                result.add(arr[start]);\n                start++;\n         \
    \   } else {\n                break;\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> res = new ArrayList<Long>();\n        long\
    \ max = 0;\n        long maxIndex = 0;\n        long min = 0;\n        long minIndex\
    \ = 0;\n        long sum = 0;\n        long sumIndex = 0;\n        long count\
    \ = 0;\n        long countIndex = 0;\n        long sumOfSquare = 0;\n        long\
    \ sumOfSquareIndex = 0;\n        long sumOfSquareOfSum = 0;\n        long sumOfSquareOfSumIndex\
    \ = 0;\n        long sumOfSquareOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSumIndex\
    \ = 0;\n        long sumOfSquareOfSumOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSumOfSumIndex\
    \ = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumIndex\
    \ = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSumIndex\
    \ = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSumOfSum = 0;\n        long\
    \ sumOfSquareOfSumOfSumOfSumOfSumOfSumOfSumIndex = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSumOfSumOfSum\
    \ = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSumOfSumOfSumIndex = 0;\n\
    \        long sumOfSquareOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfSum = 0;\n     \
    \   long sumOfSquareOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfSumIndex = 0;\n     \
    \   long sumOfSquareOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfSum = 0;\n     \
    \   long sumOfSquareOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfSumIndex = 0;\n\
    \        long sumOfSquareOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfSum =\
    \ 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfSumIndex\
    \ = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfSum\
    \ = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfSumIndex\
    \ = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSum", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        Arrays.sort(arr);\n        long max\
    \ = 0;\n        long maxIndex = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n \
    \               maxIndex = i;\n            }\n        }\n        for(int i = maxIndex;\
    \ i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n               \
    \ max = arr.get(i);\n            }\n        }\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            if(arr.get(i) == max) {\n                result.add(arr.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long max = 0;\n        long min = 0;\n       \
    \ long maxIndex = 0;\n        long minIndex = 0;\n        long maxVal = 0;\n \
    \       long minVal = 0;\n        long maxIndex2 = 0;\n        long minIndex2\
    \ = 0;\n        long maxVal2 = 0;\n        long minVal2 = 0;\n        long maxIndex3\
    \ = 0;\n        long minIndex3 = 0;\n        long maxVal3 = 0;\n        long minVal3\
    \ = 0;\n        long maxIndex4 = 0;\n        long minIndex4 = 0;\n        long\
    \ maxVal4 = 0;\n        long minVal4 = 0;\n        long maxIndex5 = 0;\n     \
    \   long minIndex5 = 0;\n        long maxVal5 = 0;\n        long minVal5 = 0;\n\
    \        long maxIndex6 = 0;\n        long minIndex6 = 0;\n        long maxVal6\
    \ = 0;\n        long minVal6 = 0;\n        long maxIndex7 = 0;\n        long minIndex7\
    \ = 0;\n        long maxVal7 = 0;\n        long minVal7 = 0;\n        long maxIndex8\
    \ = 0;\n        long minIndex8 = 0;\n        long maxVal8 = 0;\n        long minVal8\
    \ = 0;\n        long maxIndex9 = 0;\n        long minIndex9 = 0;\n        long\
    \ maxVal9 = 0;\n        long minVal9 = 0;\n        long maxIndex10 = 0;\n    \
    \    long minIndex10 = 0;\n        long maxVal10 = 0;\n        long minVal10 =\
    \ 0;\n        long maxIndex11 = 0;\n        long minIndex11 = 0;\n        long\
    \ maxVal11 = 0;\n        long minVal11 = 0;\n        long maxIndex12 = 0;\n  \
    \      long minIndex12 = 0;\n        long maxVal12 = 0;\n        long minVal12\
    \ = 0;\n        long maxIndex13 = 0;\n        long minIndex13 = 0;\n        long\
    \ maxVal13 = 0;\n        long minVal13 = 0;\n        long maxIndex14 = 0;\n  \
    \      long minIndex14 = 0;\n        long maxVal14 = 0;\n        long minVal14\
    \ = 0;\n        long maxIndex15 = 0;\n        long minIndex15 = 0;\n        long\
    \ maxVal15 = 0;\n        long minVal15 = 0;\n        long maxIndex16 = 0;\n  \
    \      long minIndex16 = 0;\n        long maxVal16 = 0;\n        long minVal16\
    \ = 0;\n        long maxIndex17 = 0;\n        long minIndex17 = 0;\n        long\
    \ maxVal17 = 0;\n        long minVal17 = 0;\n        long maxIndex18 = 0;\n  \
    \      long minIndex18 = 0;\n        long maxVal18 = 0;\n        long minVal18\
    \ = 0;\n        long maxIndex19 = 0;\n        long ", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n\
    \        long maxIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n \
    \           if(arr.get(i) > max) {\n                max = arr.get(i);\n      \
    \          maxIndex = i;\n            }\n        }\n        result.add(max);\n\
    \        for(int i = maxIndex; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ > max) {\n                max = arr.get(i);\n                maxIndex = i;\n\
    \            }\n        }\n        result.add(max);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        long cur = 0;\n        for(long i : arr) {\n \
    \           cur = i;\n            if(cur > max) {\n                max = cur;\n\
    \            }\n        }\n        while(max != 0) {\n            result.add(max);\n\
    \            max -= 1;\n        }\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long max = 0;\n        long min = Long.MAX_VALUE;\n\
    \        for (long i : arr) {\n            if (i < min) {\n                min\
    \ = i;\n            }\n            if (i > max) {\n                max = i;\n\
    \            }\n        }\n        if (max > k) {\n            max = k;\n    \
    \    }\n        if (min < -k) {\n            min = -k;\n        }\n        if\
    \ (max < min) {\n            max = min;\n        }\n        if (max > k) {\n \
    \           max = k;\n        }\n        if (min < -k) {\n            min = -k;\n\
    \        }\n        if (max < min) {\n            max = min;\n        }\n    \
    \    if (max > k) {\n            max = k;\n        }\n        if (min < -k) {\n\
    \            min = -k;\n        }\n        if (max < min) {\n            max =\
    \ min;\n        }\n        if (max > k) {\n            max = k;\n        }\n \
    \       if (min < -k) {\n            min = -k;\n        }\n        if (max < min)\
    \ {\n            max = min;\n        }\n        if (max > k) {\n            max\
    \ = k;\n        }\n        if (min < -k) {\n            min = -k;\n        }\n\
    \        if (max < min) {\n            max = min;\n        }\n        if (max\
    \ > k) {\n            max = k;\n        }\n        if (min < -k) {\n         \
    \   min = -k;\n        }\n        if (max < min) {\n            max = min;\n \
    \       }\n        if (max > k) {\n            max = k;\n        }\n        if\
    \ (min < -k) {\n            min = -k;\n        }\n        if (max < min) {\n \
    \           max = min;\n        }\n        if (max > k) {\n            max = k;\n\
    \        }\n        if (min < -k) {\n            min = -k;\n        }\n      \
    \  if (max < min) {\n            max = min;\n        }\n        if (max > k) {\n\
    \            max = k;\n        }\n        if (min < -k) {\n            min = -k;\n\
    \        }\n        if (max < min) {\n            max = min;\n        }\n    \
    \    if (max > k) {\n            max = k;\n        }\n        if (min < -k) {\n\
    \            min = -k;\n        }\n        if (max < min) {\n            max =\
    \ min;\n        }\n        if (max > k) {\n            max = k;\n        }\n \
    \       if (min < -k) {\n            min = -k;\n        }\n        if (max < min)\
    \ {\n            max = min;\n        }\n        if (max > k) {\n            max\
    \ = k;\n        }\n        if (min < -k) {\n            min = -k;\n        }\n\
    \        if (max < ", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       Arrays.sort(arr);\n        long max = arr.get(arr.size() - 1);\n     \
    \   long maxIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n     \
    \       if (arr.get(i) == max) {\n                maxIndex = i;\n            }\n\
    \        }\n        if (maxIndex - k >= 0) {\n            for (int i = maxIndex\
    \ - k; i < maxIndex; i++) {\n                result.add(arr.get(i));\n       \
    \     }\n        }\n        return result;", "        ArrayList<Long> result =\
    \ new ArrayList<Long>();\n        Arrays.sort(arr);\n        long max = 0;\n \
    \       long maxIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n  \
    \          if(arr.get(i) > max) {\n                max = arr.get(i);\n       \
    \         maxIndex = i;\n            }\n        }\n        for(int i = 0; i <\
    \ arr.size(); i++) {\n            if(arr.get(i) == max) {\n                result.add(arr.get(maxIndex));\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long max = 0;\n        for (long i : arr) {\n\
    \            if (max < i) {\n                max = i;\n            }\n       \
    \ }\n        if (max > 0) {\n            while (max >= k) {\n                result.add(max--);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> res\
    \ = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n   \
    \     long maxIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n   \
    \         if (arr.get(i) > max) {\n                max = arr.get(i);\n       \
    \         maxIndex = i;\n            }\n        }\n        if (maxIndex == arr.size()\
    \ - 1) {\n            while (maxIndex >= 0) {\n                res.add(arr.get(maxIndex--));\n\
    \            }\n        } else {\n            while (maxIndex < arr.size() - 1)\
    \ {\n                res.add(arr.get(maxIndex++));\n            }\n        }\n\
    \        if (k == res.size()) {\n            return res;\n        } else {\n \
    \           return res.subList(0, k);\n        }", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        Arrays.sort(arr);\n        long max = 0;\n\
    \        long maxIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n \
    \           if(arr.get(i) > max) {\n                max = arr.get(i);\n      \
    \          maxIndex = i;\n            }\n        }\n        for(int i = 0; i <\
    \ arr.size(); i++) {\n            if(arr.get(i) == max) {\n                result.add(arr.get(maxIndex));\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        Arrays.sort(arr);\n        long maxValue = arr.get(arr.size()\
    \ - 1);\n        long maxIndex = arr.size() - 1;\n        long currentMaxValue\
    \ = 0;\n        long currentMaxIndex = 0;\n        long currentIndex = 0;\n  \
    \      while (currentIndex < arr.size()) {\n            if (currentMaxValue <\
    \ arr.get(currentIndex)) {\n                currentMaxValue = arr.get(currentIndex);\n\
    \                currentMaxIndex = currentIndex;\n            }\n            currentIndex++;\n\
    \        }\n        while (currentMaxIndex >= 0) {\n            if (currentMaxValue\
    \ < arr.get(currentMaxIndex)) {\n                result.add(arr.get(currentMaxIndex));\n\
    \                currentMaxIndex--;\n            }\n            currentMaxIndex--;\n\
    \        }\n        if (result.size() > k) {\n            return result.subList(0,\
    \ k);\n        } else {\n            return result;\n        }", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long max = 0;\n        for (long i : arr)\
    \ {\n            if (max < i) {\n                max = i;\n            }\n   \
    \     }\n        long maxIndex = 0;\n        for (long i : arr) {\n          \
    \  if (i == max) {\n                result.add(max);\n                maxIndex++;\n\
    \            }\n        }\n        if (maxIndex < k) {\n            ArrayList<Long>\
    \ temp = new ArrayList<>();\n            for (long i : arr) {\n              \
    \  if (i != max) {\n                    temp.add(i);\n                }\n    \
    \        }\n            result = maximum(temp, k);\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<Long>();\n       \
    \ Arrays.sort(arr);\n        long max = 0;\n        long maxIndex = 0;\n     \
    \   for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > max)\
    \ {\n                max = arr.get(i);\n                maxIndex = i;\n      \
    \      }\n        }\n        result.add(max, maxIndex);\n        if (arr.size()\
    \ > k) {\n            ArrayList<Long> subResult = maximum(arr, k);\n         \
    \   for (int i = 0; i < subResult.size(); i++) {\n                result.add(subResult.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        long max = 0;\n        long maxIndex = 0;\n\
    \        long currentMax = 0;\n        long currentMaxIndex = 0;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            currentMax = arr.get(i);\n      \
    \      currentMaxIndex = i;\n            for(int j = i; j < arr.size(); j++) {\n\
    \                if(arr.get(j) > currentMax) {\n                    currentMax\
    \ = arr.get(j);\n                    currentMaxIndex = j;\n                }\n\
    \            }\n            if(currentMaxIndex != i) {\n                result.add(currentMax);\n\
    \                max = Math.max(max, currentMax);\n                maxIndex =\
    \ currentMaxIndex;\n            }\n        }\n        if(maxIndex != arr.size())\
    \ {\n            result.add(max);\n        }\n        return result;", "     \
    \   ArrayList<Long> result = new ArrayList<>();\n        long max = 0;\n     \
    \   long min = 0;\n        long sum = 0;\n        long count = 0;\n        for\
    \ (long i : arr) {\n            sum += i;\n            if (sum > max) {\n    \
    \            max = sum;\n            }\n            if (sum < min) {\n       \
    \         min = sum;\n            }\n            if (sum == max) {\n         \
    \       result.add(i);\n                count++;\n            }\n        }\n \
    \       if (count > k) {\n            k = count;\n        }\n        if (k ==\
    \ 1) {\n            result.add(max);\n            return result;\n        }\n\
    \        ArrayList<Long> maxList = new ArrayList<>();\n        ArrayList<Long>\
    \ minList = new ArrayList<>();\n        ArrayList<Long> sumList = new ArrayList<>();\n\
    \        ArrayList<Long> countList = new ArrayList<>();\n        long maxSum =\
    \ 0;\n        long minSum = 0;\n        long sumSum = 0;\n        long countSum\
    \ = 0;\n        for (long i : arr) {\n            sumSum += i;\n            if\
    \ (sumSum > maxSum) {\n                maxSum = sumSum;\n            }\n     \
    \       if (sumSum < minSum) {\n                minSum = sumSum;\n           \
    \ }\n            if (sumSum == maxSum) {\n                maxList.add(max);\n\
    \                countList.add(count);\n                sumList.add(sum);\n  \
    \              minList.add(min);\n                countList.add(count);\n    \
    \            maxList.add(max);\n                countList.add(count);\n      \
    \          sumList.add(sum);\n                minList.add(min);\n            \
    \    countList.add(count);\n                maxList.add(max);\n              \
    \  countList.add(count);\n                sumList.add(sum);\n                minList.add(min);\n\
    \                countList.add(count);\n                maxList.add(max);\n  \
    \              countList.add(count);\n                sumList.add(sum);\n    \
    \            minList.add(min);\n                countList.add(count);\n      \
    \          maxList.add(max);\n                countList.add(count);\n        \
    \        sumList.add(sum);\n                minList.add(min);\n              \
    \  countList.add(count);\n                maxList.add(max);\n                countList.add(count);\n\
    \                sumList.add(sum);\n                minList.add(min);\n      \
    \          countList.add(count);\n                maxList.add(max);\n        \
    \        countList.add(count);\n                sumList.add(sum);\n          \
    \      minList.add(min);\n                countList.add(count);\n            \
    \    maxList.add(max);\n                countList.add(count);\n              \
    \  sumList.add(sum);\n                minList.add(min);\n                countList.add(count);\n\
    \                maxList.add(max);\n                countList.add(count);\n  \
    \              sum", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        Arrays.sort(arr);\n        long maxValue = arr.get(arr.size() - 1);\n\
    \        long maxIndex = arr.size() - 1;\n        long currentMaxValue = 0;\n\
    \        long currentMaxIndex = 0;\n        long currentIndex = 0;\n        while\
    \ (currentIndex < arr.size()) {\n            if (currentMaxValue < arr.get(currentIndex))\
    \ {\n                currentMaxValue = arr.get(currentIndex);\n              \
    \  currentMaxIndex = currentIndex;\n            }\n            currentIndex++;\n\
    \        }\n        long currentMaxValue2 = 0;\n        long currentMaxIndex2\
    \ = 0;\n        long currentIndex2 = 0;\n        while (currentIndex2 < arr.size())\
    \ {\n            if (currentMaxValue2 < arr.get(currentIndex2)) {\n          \
    \      currentMaxValue2 = arr.get(currentIndex2);\n                currentMaxIndex2\
    \ = currentIndex2;\n            }\n            currentIndex2++;\n        }\n \
    \       if (currentMaxValue == currentMaxValue2) {\n            result.add(arr.get(currentMaxIndex));\n\
    \        }\n        if (currentMaxValue > currentMaxValue2) {\n            result.add(arr.get(currentMaxIndex2));\n\
    \        }\n        if (result.size() > k) {\n            result.remove(k);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        if (arr.size() <= k) {\n            result.addAll(arr);\n\
    \            return result;\n        }\n        long maxValue = arr.get(arr.size()\
    \ - 1);\n        long maxIndex = arr.size() - 1;\n        long maxIndexValue =\
    \ arr.get(maxIndex);\n        while (maxIndex >= 0) {\n            if (maxIndexValue\
    \ < arr.get(maxIndex)) {\n                maxValue = arr.get(maxIndex);\n    \
    \            maxIndex = maxIndex - 1;\n                maxIndexValue = arr.get(maxIndex);\n\
    \            } else {\n                maxIndex = maxIndex - 1;\n            \
    \    maxIndexValue = arr.get(maxIndex);\n            }\n        }\n        result.add(maxValue);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = 0;\n        long min = 0;\n        long maxIndex = 0;\n  \
    \      long minIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n   \
    \         max = Math.max(max, arr.get(i));\n            min = Math.min(min, arr.get(i));\n\
    \            if(i == arr.size() - 1) {\n                maxIndex = i;\n      \
    \      }\n            if(i == 0) {\n                minIndex = i;\n          \
    \  }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n            if(maxIndex\
    \ == i) {\n                result.add(max);\n            }\n            if(minIndex\
    \ == i) {\n                result.add(min);\n            }\n            if(maxIndex\
    \ != i && minIndex != i) {\n                result.add(arr.get(i));\n        \
    \    }\n        }\n        return result;", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        Arrays.sort(arr);\n        long maxValue = arr.get(arr.size()\
    \ - 1);\n        long maxIndex = arr.size() - 1;\n        long currentMax = maxValue;\n\
    \        long currentIndex = maxIndex;\n        boolean isMax = true;\n      \
    \  while (currentIndex >= 0) {\n            if (currentMax > arr.get(currentIndex))\
    \ {\n                currentMax = arr.get(currentIndex);\n                currentIndex\
    \ = currentIndex - 1;\n            } else {\n                isMax = false;\n\
    \                break;\n            }\n        }\n        if (isMax) {\n    \
    \        result.add(maxValue);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n\
    \        long maxIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) > max) {\n                max = arr.get(i);\n    \
    \            maxIndex = i;\n            }\n        }\n        if (maxIndex ==\
    \ arr.size() - 1) {\n            result.add(max);\n        } else {\n        \
    \    result.add(max, maxIndex);\n        }\n        return result;", "       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long max = 0;\n       \
    \ long min = Long.MAX_VALUE;\n        for (long num : arr) {\n            if (num\
    \ > max) {\n                max = num;\n            }\n            if (num < min)\
    \ {\n                min = num;\n            }\n        }\n        long mid =\
    \ min + (max - min) / 2;\n        for (long num : arr) {\n            if (num\
    \ > mid) {\n                result.add(num);\n            }\n        }\n     \
    \   return result;", "        ArrayList<Long> result = new ArrayList<>();\n  \
    \      Arrays.sort(arr);\n        long maxValue = arr.get(arr.size() - 1);\n \
    \       long maxIndex = arr.size() - 1;\n        long currentValue = arr.get(0);\n\
    \        long currentIndex = 0;\n        while (currentIndex < arr.size()) {\n\
    \            if (currentValue > maxValue) {\n                result.add(maxValue);\n\
    \                maxIndex = maxIndex - 1;\n                maxValue = arr.get(maxIndex);\n\
    \            } else if (currentValue == maxValue) {\n                result.add(currentValue);\n\
    \                currentIndex = currentIndex + 1;\n                currentValue\
    \ = arr.get(currentIndex);\n            } else {\n                result.add(currentValue);\n\
    \                currentIndex = currentIndex + 1;\n                currentValue\
    \ = arr.get(currentIndex);\n            }\n        }\n        if (result.size()\
    \ > k) {\n            result.remove(k);\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        long cur = 0;\n        for (long i : arr) {\n\
    \            if (max < i) {\n                max = i;\n                cur = i;\n\
    \            }\n        }\n        if (max > k) {\n            max = k;\n    \
    \    }\n        while (max > 0) {\n            result.add(cur);\n            max--;\n\
    \            cur++;\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n\
    \        long maxIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n \
    \           if(arr.get(i) > max) {\n                max = arr.get(i);\n      \
    \          maxIndex = i;\n            }\n        }\n        for(int i = 0; i <\
    \ arr.size(); i++) {\n            if(arr.get(i) == max) {\n                result.add(arr.get(maxIndex));\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long max = Long.MIN_VALUE;\n        long curMax\
    \ = Long.MIN_VALUE;\n        for (long i : arr) {\n            if (max < i) {\n\
    \                max = i;\n                curMax = i;\n            }\n      \
    \      if (curMax < i) {\n                curMax = i;\n            }\n       \
    \ }\n        if (max < k) {\n            max = k;\n        }\n        ArrayList<Long>\
    \ list = new ArrayList<>();\n        for (long i = 0; i < max; i++) {\n      \
    \      list.add(curMax);\n        }\n        result.addAll(list);\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        long maxIndex = 0;\n        for(int i = 0; i <\
    \ arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max\
    \ = arr.get(i);\n                maxIndex = i;\n            }\n        }\n   \
    \     for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) == max)\
    \ {\n                result.add(arr.get(maxIndex));\n            }\n        }\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long max = 0;\n        for (long i : arr) {\n            if (max < i)\
    \ {\n                max = i;\n            }\n        }\n        for (long i :\
    \ arr) {\n            if (max < i) {\n                result.add(i);\n       \
    \     }\n        }\n        return result;", "        ArrayList<Long> result =\
    \ new ArrayList<Long>();\n        long max = 0;\n        long min = 0;\n     \
    \   long sum = 0;\n        long count = 0;\n        long sum2 = 0;\n        long\
    \ sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6\
    \ = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n\
    \        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n \
    \       long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n  \
    \      long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n   \
    \     long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n    \
    \    long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n     \
    \   long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n      \
    \  long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n       \
    \ long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long\
    \ sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long sum37\
    \ = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40 =\
    \ 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n\
    \        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n \
    \       long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n  \
    \      long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n   \
    \     long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n    \
    \    long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n     \
    \   long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n      \
    \  long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n       \
    \ long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long\
    \ sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71\
    \ = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 =\
    \ 0;\n        long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n\
    \        long sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n \
    \       long sum81 = 0;\n        long sum82 = 0;\n        ", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long maxValue\
    \ = arr.get(arr.size() - 1);\n        long maxIndex = arr.size() - 1;\n      \
    \  long maxCount = 0;\n        long currentCount = 0;\n        long currentValue\
    \ = 0;\n        long currentIndex = 0;\n        while (maxCount < k) {\n     \
    \       currentCount = 1;\n            currentValue = maxValue;\n            currentIndex\
    \ = maxIndex;\n            while (currentCount < k) {\n                if (currentValue\
    \ > arr.get(currentIndex)) {\n                    currentCount++;\n          \
    \          currentValue = arr.get(currentIndex);\n                } else {\n \
    \                   currentCount--;\n                    currentValue = arr.get(currentIndex);\n\
    \                }\n                currentIndex++;\n            }\n         \
    \   result.add(currentValue);\n            maxCount++;\n            maxValue =\
    \ arr.get(maxIndex);\n            maxIndex = maxIndex - 1;\n        }\n      \
    \  return result;", "        ArrayList<Long> result = new ArrayList<>();\n   \
    \     Arrays.sort(arr);\n        long max = 0;\n        for (long i : arr) {\n\
    \            if (max < i) {\n                max = i;\n            }\n       \
    \ }\n        if (max > k) {\n            max = k;\n        }\n        for (long\
    \ i : arr) {\n            if (max < i) {\n                result.add(i);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> res\
    \ = new ArrayList<Long>();\n        Arrays.sort(arr);\n        long max = 0;\n\
    \        long maxIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n \
    \           if(arr.get(i) > max) {\n                max = arr.get(i);\n      \
    \          maxIndex = i;\n            }\n        }\n        for(int i = 0; i <\
    \ arr.size(); i++) {\n            if(arr.get(i) == max) {\n                res.add(arr.get(maxIndex));\n\
    \            }\n        }\n        return res;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long max = 0;\n        for (long i : arr) {\n\
    \            if (max < i) {\n                max = i;\n            }\n       \
    \ }\n        if (max > k) {\n            max = k;\n        }\n        for (long\
    \ i : arr) {\n            if (max < i) {\n                result.add(i);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long max = 0;\n        long min = Long.MAX_VALUE;\n\
    \        for (long i : arr) {\n            if (i < min) {\n                min\
    \ = i;\n            }\n            if (i > max) {\n                max = i;\n\
    \            }\n        }\n        if (max > k) {\n            max = k;\n    \
    \    }\n        if (min < -max) {\n            min = -max;\n        }\n      \
    \  long mid = min + (max - min) / 2;\n        for (long i : arr) {\n         \
    \   if (i < mid) {\n                result.add(i);\n            } else if (i >\
    \ mid) {\n                result.add(max - i);\n            } else {\n       \
    \         result.add(max - i);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        if (arr.size() <= k) {\n            result.addAll(arr);\n           \
    \ return result;\n        }\n        long maxValue = arr.get(arr.size() - 1);\n\
    \        long maxIndex = arr.size() - 1;\n        long currentValue = arr.get(0);\n\
    \        long currentIndex = -1;\n        while (currentIndex < arr.size() - 1)\
    \ {\n            if (currentValue > maxValue) {\n                maxValue = currentValue;\n\
    \                maxIndex = currentIndex;\n            }\n            currentValue\
    \ = arr.get(currentIndex + 1);\n            currentIndex++;\n        }\n     \
    \   result.add(maxValue);\n        result.add(arr.get(maxIndex));\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        long maxIndex = 0;\n        for(int i = 0; i <\
    \ arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max\
    \ = arr.get(i);\n                maxIndex = i;\n            }\n        }\n   \
    \     while(maxIndex < arr.size() && arr.size() > k) {\n            result.add(arr.remove(maxIndex));\n\
    \            maxIndex++;\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n\
    \        long maxIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n \
    \           if(arr.get(i) > max) {\n                max = arr.get(i);\n      \
    \          maxIndex = i;\n            }\n        }\n        for(int i = 0; i <\
    \ arr.size(); i++) {\n            if(arr.get(i) == max) {\n                result.add(arr.get(maxIndex));\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long max = 0;\n        long cur = 0;\n       \
    \ long curMax = 0;\n        for(int i = 0; i < arr.size(); i++) {\n          \
    \  cur = arr.get(i);\n            if(cur > max) {\n                max = cur;\n\
    \                curMax = max;\n            }\n            else if(cur == max)\
    \ {\n                curMax = cur;\n            }\n        }\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            cur = arr.get(i);\n            if(cur\
    \ > curMax) {\n                result.add(cur);\n            }\n        }\n  \
    \      return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = 0;\n        long min = 0;\n        for (long i : arr) {\n\
    \            if (max < i) {\n                max = i;\n            }\n       \
    \     if (min > i) {\n                min = i;\n            }\n        }\n   \
    \     if (max > k) {\n            max = k;\n        }\n        if (min < -k) {\n\
    \            min = - k;\n        }\n        if (max > min) {\n            long\
    \ mid = max + (max - min) / 2;\n            while (max < mid) {\n            \
    \    result.add(mid);\n                max += mid;\n            }\n          \
    \  while (min > mid) {\n                result.add(mid);\n                min\
    \ -= mid;\n            }\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        Arrays.sort(arr);\n        long max\
    \ = arr.get(arr.size() - 1);\n        long maxIndex = 0;\n        long maxIndex2\
    \ = 0;\n        long maxIndex3 = 0;\n        long maxIndex4 = 0;\n        long\
    \ maxIndex5 = 0;\n        long maxIndex6 = 0;\n        long maxIndex7 = 0;\n \
    \       long maxIndex8 = 0;\n        long maxIndex9 = 0;\n        long maxIndex10\
    \ = 0;\n        long maxIndex11 = 0;\n        long maxIndex12 = 0;\n        long\
    \ maxIndex13 = 0;\n        long maxIndex14 = 0;\n        long maxIndex15 = 0;\n\
    \        long maxIndex16 = 0;\n        long maxIndex17 = 0;\n        long maxIndex18\
    \ = 0;\n        long maxIndex19 = 0;\n        long maxIndex20 = 0;\n        long\
    \ maxIndex21 = 0;\n        long maxIndex22 = 0;\n        long maxIndex23 = 0;\n\
    \        long maxIndex24 = 0;\n        long maxIndex25 = 0;\n        long maxIndex26\
    \ = 0;\n        long maxIndex27 = 0;\n        long maxIndex28 = 0;\n        long\
    \ maxIndex29 = 0;\n        long maxIndex30 = 0;\n        long maxIndex31 = 0;\n\
    \        long maxIndex32 = 0;\n        long maxIndex33 = 0;\n        long maxIndex34\
    \ = 0;\n        long maxIndex35 = 0;\n        long maxIndex36 = 0;\n        long\
    \ maxIndex37 = 0;\n        long maxIndex38 = 0;\n        long maxIndex39 = 0;\n\
    \        long maxIndex40 = 0;\n        long maxIndex41 = 0;\n        long maxIndex42\
    \ = 0;\n        long maxIndex43 = 0;\n        long maxIndex44 = 0;\n        long\
    \ maxIndex45 = 0;\n        long maxIndex46 = 0;\n        long maxIndex47 = 0;\n\
    \        long maxIndex48 = 0;\n        long maxIndex49 = 0;\n        long maxIndex50\
    \ = 0;\n        long maxIndex51 = 0;\n        long maxIndex52 = 0;\n        long\
    \ maxIndex53 = 0;\n        long maxIndex54 = 0;\n        long maxIndex55 = 0;\n\
    \        long maxIndex56 = 0;\n        long maxIndex57 = 0;\n        long maxIndex58\
    \ = 0;\n        long maxIndex59 = 0;\n        long maxIndex60 = 0;\n        long\
    \ maxIndex61 = 0;\n        long maxIndex62 = 0;\n        long maxIndex63 = 0;\n\
    \        long maxIndex64 = 0;\n        long maxIndex65 = 0;\n        long maxIndex66\
    \ = 0;\n        long maxIndex67 = 0;\n        long maxIndex68 = 0;\n        long\
    \ maxIndex69 = 0;\n        long maxIndex70 = 0;\n        ", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n\
    \        long maxIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n \
    \           long current = arr.get(i);\n            if(current > max) {\n    \
    \            max = current;\n                maxIndex = i;\n            }\n  \
    \      }\n        while(maxIndex < arr.size() && arr.size() - maxIndex < k) {\n\
    \            long current = arr.get(maxIndex);\n            long nextMax = arr.get(maxIndex\
    \ + 1);\n            if(current > nextMax) {\n                result.add(current);\n\
    \                maxIndex++;\n            } else {\n                result.add(nextMax);\n\
    \                maxIndex++;\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long max = arr.get(0);\n\
    \        long maxIndex = 0;\n        for (int i = 1; i < arr.size(); i++) {\n\
    \            if (arr.get(i) > max) {\n                max = arr.get(i);\n    \
    \            maxIndex = i;\n            }\n        }\n        if (maxIndex - k\
    \ >= 0) {\n            Collections.rotate(arr.subList(maxIndex - k, maxIndex),\
    \ -1);\n        }\n        result.add(max);\n        return result;", "      \
    \  ArrayList<Long> result = new ArrayList<>();\n        long max = arr.get(0);\n\
    \        long curMax = max;\n        for(int i = 1; i < arr.size(); i++) {\n \
    \           long cur = arr.get(i);\n            if(cur > curMax) {\n         \
    \       curMax = cur;\n            }\n        }\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            long cur = arr.get(i);\n            if(cur == curMax) {\n\
    \                result.add(cur);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result.subList(0, k);", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        long max = Long.MIN_VALUE;\n        long maxIndex =\
    \ 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long value =\
    \ arr.get(i);\n            if(value > max) {\n                max = value;\n \
    \               maxIndex = i;\n            }\n        }\n        for(int i = 0;\
    \ i < arr.size(); i++) {\n            long value = arr.get(maxIndex);\n      \
    \      if(value > arr.get(i)) {\n                result.add(value);\n        \
    \    }\n        }\n        return result;", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        long max = 0;\n        long min = 0;\n        for(long\
    \ i : arr) {\n            max = Math.max(max, i);\n            min = Math.min(min,\
    \ i);\n        }\n        long mid = min + (max - min) / 2;\n        for(long\
    \ i : arr) {\n            if(i == mid) {\n                result.add(i);\n   \
    \         }\n            else if(i < mid) {\n                result.add(i);\n\
    \            }\n            else if(i > mid) {\n                result.add(mid);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long max = 0;\n        long min = 0;\n       \
    \ long sum = 0;\n        long count = 0;\n        long sum2 = 0;\n        long\
    \ sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6\
    \ = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n\
    \        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n \
    \       long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n  \
    \      long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n   \
    \     long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n    \
    \    long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n     \
    \   long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n      \
    \  long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n       \
    \ long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long\
    \ sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long sum37\
    \ = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40 =\
    \ 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n\
    \        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n \
    \       long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n  \
    \      long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n   \
    \     long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n    \
    \    long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n     \
    \   long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n      \
    \  long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n       \
    \ long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long\
    \ sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71\
    \ = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 =\
    \ 0;\n        long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n\
    \        long sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n \
    \       long sum81 = 0;\n        long sum82 = 0;\n        long ", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long max = 0;\n        long min = 0;\n\
    \        long sum = 0;\n        long count = 0;\n        long sumOfSquares = 0;\n\
    \        long squareOfSum = 0;\n        long sumOfSquareOfSum = 0;\n        long\
    \ squareOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSum = 0;\n        long\
    \ squareOfSumOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSumOfSum = 0;\n \
    \       long squareOfSumOfSumOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSum\
    \ = 0;\n        long squareOfSumOfSumOfSumOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSum\
    \ = 0;\n        long squareOfSumOfSumOfSumOfSumOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSum\
    \ = 0;\n        long squareOfSumOfSumOfSumOfSumOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSum\
    \ = 0;\n        long squareOfSumOfSumOfSumOfSumOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSum\
    \ = 0;\n        long squareOfSumOfSumOfSumOfSumOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSum\
    \ = 0;\n        long squareOfSumOfSumOfSumOfSumOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSum\
    \ = 0;\n        long squareOfSumOfSumOfSumOfSumOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSum\
    \ = 0;\n        long squareOfSumOfSumOfSumOfSumOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSum\
    \ = 0;\n        long squareOfSumOfSumOfSumOfSumOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSum\
    \ = 0;\n        long squareOfSumOfSumOfSumOfSumOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSum\
    \ = 0;\n        long squareOfSumOfSumOfSumOfSumOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSumOfSum\
    \ = 0;\n        long squareOfSumOfSumOfSumOfSumOfSumOfSum = 0;\n", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        Arrays.sort(arr);\n        long max\
    \ = 0;\n        for (long i : arr) {\n            if (max < i) {\n           \
    \     max = i;\n            }\n        }\n        for (long i : arr) {\n     \
    \       if (max < i) {\n                result.add(i);\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long max = arr.get(arr.size() - 1);\n    \
    \    long maxIndex = arr.size() - 1;\n        long currentMax = max;\n       \
    \ long currentMaxIndex = maxIndex;\n        long currentMaxValue = max;\n    \
    \    long currentMaxValueIndex = maxIndex;\n        long currentMaxValueValue\
    \ = max;\n        long currentMaxValueValueIndex = maxIndex;\n        long currentMaxValueValueValue\
    \ = max;\n        long currentMaxValueValueValueIndex = maxIndex;\n        long\
    \ currentMaxValueValueValueValue = max;\n        long currentMaxValueValueValueIndex\
    \ = maxIndex;\n        long currentMaxValueValueValueValue = max;\n        long\
    \ currentMaxValueValueValueIndex = maxIndex;\n        long currentMaxValueValueValueValue\
    \ = max;\n        long currentMaxValueValueValueIndex = maxIndex;\n        long\
    \ currentMaxValueValueValueValue = max;\n        long currentMaxValueValueValueIndex\
    \ = maxIndex;\n        long currentMaxValueValueValueValue = max;\n        long\
    \ currentMaxValueValueValueIndex = maxIndex;\n        long currentMaxValueValueValueValue\
    \ = max;\n        long currentMaxValueValueValueIndex = maxIndex;\n        long\
    \ currentMaxValueValueValueValue = max;\n        long currentMaxValueValueValueIndex\
    \ = maxIndex;\n        long currentMaxValueValueValueValue = max;\n        long\
    \ currentMaxValueValueValueIndex = maxIndex;\n        long currentMaxValueValueValueValue\
    \ = max;\n        long currentMaxValueValueValueIndex = maxIndex;\n        long\
    \ currentMaxValueValueValueValue = max;\n        long currentMaxValueValueValueIndex\
    \ = maxIndex;\n        long currentMaxValueValueValueValue = max;\n        long\
    \ currentMaxValueValueValueIndex = maxIndex;\n        long currentMaxValueValueValueValue\
    \ = max;\n        long currentMaxValueValueValueIndex = maxIndex;\n        long\
    \ currentMaxValueValueValueValue = max;\n        long currentMaxValueValueValueIndex\
    \ = maxIndex;\n        long currentMaxValueValueValueValue = max;\n        long\
    \ currentMaxValueValueValueIndex = maxIndex;\n        long currentMaxValueValueValueValue\
    \ = max;\n        long currentMaxValueValueValueIndex = maxIndex;\n        long\
    \ currentMaxValueValueValueValue = max;\n        long currentMaxValueValueValueIndex\
    \ = maxIndex;\n        long currentMaxValueValueValueValue = max;\n        long\
    \ currentMaxValueValueValueIndex = maxIndex;\n        long currentMaxValueValueValueValue\
    \ = max;\n        long currentMaxValueValueValueIndex = maxIndex;\n        long\
    \ currentMaxValueValueValueValue = max", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n        long\
    \ maxIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ > max) {\n                max = arr.get(i);\n                maxIndex = i;\n\
    \            }\n        }\n        while(maxIndex != 0) {\n            result.add(arr.get(maxIndex--));\n\
    \        }\n        Arrays.sort(result);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long maxValue\
    \ = arr.get(arr.size() - 1);\n        long maxIndex = arr.size() - 1;\n      \
    \  long currentValue = arr.get(0);\n        long currentIndex = 0;\n        while\
    \ (currentIndex < arr.size() - 1) {\n            if (currentValue < maxValue)\
    \ {\n                result.add(currentValue);\n                currentValue =\
    \ arr.get(currentIndex + 1);\n                currentIndex++;\n            } else\
    \ if (currentValue == maxValue) {\n                result.add(currentValue);\n\
    \                currentIndex++;\n            } else if (currentValue > maxValue)\
    \ {\n                maxValue = currentValue;\n                maxIndex = currentIndex;\n\
    \                currentValue = arr.get(currentIndex + 1);\n                currentIndex++;\n\
    \            }\n        }\n        if (currentIndex < arr.size() - 1) {\n    \
    \        result.add(currentValue);\n        }\n        if (result.size() > k)\
    \ {\n            return result.subList(0, k);\n        } else {\n            return\
    \ result;\n        }", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        ArrayList<Long> temp = new ArrayList<>();\n        long max = 0;\n  \
    \      long tempMax = 0;\n        int count = 0;\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            max = Math.max(max, arr.get(i));\n            count++;\n\
    \        }\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ == max) {\n                temp.add(arr.get(i));\n                tempMax =\
    \ max;\n            }\n        }\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            if(arr.get(i) == tempMax) {\n                result.add(temp.get(i));\n\
    \            }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n   \
    \         if(arr.get(i) == tempMax) {\n                result.add(temp.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        Arrays.sort(arr);\n        long max = 0;\n\
    \        long cur = 0;\n        long max2 = 0;\n        long cur2 = 0;\n     \
    \   long max3 = 0;\n        long cur3 = 0;\n        long max4 = 0;\n        long\
    \ cur4 = 0;\n        long max5 = 0;\n        long cur5 = 0;\n        long max6\
    \ = 0;\n        long cur6 = 0;\n        long max7 = 0;\n        long cur7 = 0;\n\
    \        long max8 = 0;\n        long cur8 = 0;\n        long max9 = 0;\n    \
    \    long cur9 = 0;\n        long max10 = 0;\n        long cur10 = 0;\n      \
    \  long max11 = 0;\n        long cur11 = 0;\n        long max12 = 0;\n       \
    \ long cur12 = 0;\n        long max13 = 0;\n        long cur13 = 0;\n        long\
    \ max14 = 0;\n        long cur14 = 0;\n        long max15 = 0;\n        long cur15\
    \ = 0;\n        long max16 = 0;\n        long cur16 = 0;\n        long max17 =\
    \ 0;\n        long cur17 = 0;\n        long max18 = 0;\n        long cur18 = 0;\n\
    \        long max19 = 0;\n        long cur19 = 0;\n        long max20 = 0;\n \
    \       long cur20 = 0;\n        long max21 = 0;\n        long cur21 = 0;\n  \
    \      long max22 = 0;\n        long cur22 = 0;\n        long max23 = 0;\n   \
    \     long cur23 = 0;\n        long max24 = 0;\n        long cur24 = 0;\n    \
    \    long max25 = 0;\n        long cur25 = 0;\n        long max26 = 0;\n     \
    \   long cur26 = 0;\n        long max27 = 0;\n        long cur27 = 0;\n      \
    \  long max28 = 0;\n        long cur28 = 0;\n        long max29 = 0;\n       \
    \ long cur29 = 0;\n        long max30 = 0;\n        long cur30 = 0;\n        long\
    \ max31 = 0;\n        long cur31 = 0;\n        long max32 = 0;\n        long cur32\
    \ = 0;\n        long max33 = 0;\n        long cur33 = 0;\n        long max34 =\
    \ 0;\n        long cur34 = 0;\n        long max35 = 0;\n        long cur35 = 0;\n\
    \        long max36 = 0;\n        long cur36 = 0;\n        long max37 = 0;\n \
    \       long cur37 = 0;\n        long max38 = 0;\n        long cur38 = 0;\n  \
    \      long max39 = 0;\n        long cur39 = 0;\n        long max40 = 0;\n   \
    \     long cur40 = 0;\n        long max41 = 0;\n        long cur41 = 0;\n    \
    \    long max42 = 0;\n        long cur42 = 0;\n        long ", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long max = 0;\n        long min = Long.MAX_VALUE;\n\
    \        for (long i : arr) {\n            max = Math.max(max, i);\n         \
    \   min = Math.min(min, i);\n        }\n        long range = (max - min) / k;\n\
    \        long step = (max - min) / arr.size();\n        long cur = min;\n    \
    \    for (long i = 0; i < arr.size(); i++) {\n            result.add(cur);\n \
    \           cur += step;\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long max = 0;\n        long min = Long.MAX_VALUE;\n\
    \        for (long i : arr) {\n            max = Math.max(max, i);\n         \
    \   min = Math.min(min, i);\n        }\n        long mid = min + (max - min) /\
    \ 2;\n        long mid2 = mid / 2;\n        long mid3 = mid2 / 2;\n        long\
    \ mid4 = mid3 / 2;\n        long mid5 = mid4 / 2;\n        long mid6 = mid5 /\
    \ 2;\n        long mid7 = mid6 / 2;\n        long mid8 = mid7 / 2;\n        long\
    \ mid9 = mid8 / 2;\n        long mid10 = mid9 / 2;\n        long mid11 = mid10\
    \ / 2;\n        long mid12 = mid11 / 2;\n        long mid13 = mid12 / 2;\n   \
    \     long mid14 = mid13 / 2;\n        long mid15 = mid14 / 2;\n        long mid16\
    \ = mid15 / 2;\n        long mid17 = mid16 / 2;\n        long mid18 = mid17 /\
    \ 2;\n        long mid19 = mid18 / 2;\n        long mid20 = mid19 / 2;\n     \
    \   long mid21 = mid20 / 2;\n        long mid22 = mid21 / 2;\n        long mid23\
    \ = mid22 / 2;\n        long mid24 = mid23 / 2;\n        long mid25 = mid24 /\
    \ 2;\n        long mid26 = mid25 / 2;\n        long mid27 = mid26 / 2;\n     \
    \   long mid28 = mid27 / 2;\n        long mid29 = mid28 / 2;\n        long mid30\
    \ = mid29 / 2;\n        long mid31 = mid30 / 2;\n        long mid32 = mid31 /\
    \ 2;\n        long mid33 = mid32 / 2;\n        long mid34 = mid33 / 2;\n     \
    \   long mid35 = mid34 / 2;\n        long mid36 = mid35 / 2;\n        long mid37\
    \ = mid36 / 2;\n        long mid38 = mid37 / 2;\n        long mid39 = mid38 /\
    \ 2;\n        long mid40 = mid39 / 2;\n        long mid41 = mid40 / 2;\n     \
    \   long mid42 = mid41 / 2;\n        long mid43 = mid42 / 2;\n        long mid44\
    \ = mid43 / 2;\n        long mid45 = mid44 / 2;\n        long mid46 = mid45 /\
    \ 2;\n        long mid47 = mid46 / 2;\n        long mid48 = mid47", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long max = 0;\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long max = 0;\n        long min = Long.MAX_VALUE;\n\
    \        for (long num : arr) {\n            if (num > max) {\n              \
    \  max = num;\n            }\n            if (num < min) {\n                min\
    \ = num;\n            }\n        }\n        if (max > min) {\n            for\
    \ (long num : arr) {\n                if (num > max) {\n                    max\
    \ = num;\n                }\n            }\n            for (long num : arr) {\n\
    \                if (num < min) {\n                    min = num;\n          \
    \      }\n            }\n        }\n        long mid = min + (max - min) / 2;\n\
    \        long mid2 = mid / 2;\n        long mid3 = mid2 / 2;\n        long mid4\
    \ = mid3 / 2;\n        long mid5 = mid4 / 2;\n        long mid6 = mid5 / 2;\n\
    \        long mid7 = mid6 / 2;\n        long mid8 = mid7 / 2;\n        long mid9\
    \ = mid8 / 2;\n        long mid10 = mid9 / 2;\n        long mid11 = mid10 / 2;\n\
    \        long mid12 = mid11 / 2;\n        long mid13 = mid12 / 2;\n        long\
    \ mid14 = mid13 / 2;\n        long mid15 = mid14 / 2;\n        long mid16 = mid15\
    \ / 2;\n        long mid17 = mid16 / 2;\n        long mid18 = mid17 / 2;\n   \
    \     long mid19 = mid18 / 2;\n        long mid20 = mid19 / 2;\n        long mid21\
    \ = mid20 / 2;\n        long mid22 = mid21 / 2;\n        long mid23 = mid22 /\
    \ 2;\n        long mid24 = mid23 / 2;\n        long mid25 = mid24 / 2;\n     \
    \   long mid26 = mid25 / 2;\n        long mid27 = mid26 / 2;\n        long mid28\
    \ = mid27 / 2;\n        long mid29 = mid28 / 2;\n        long mid30 = mid29 /\
    \ 2;\n        long mid31 = mid30 / 2;\n        long mid32 = mid31 / 2;\n     \
    \   long mid33 = mid32 / 2;\n        long mid34 = mid33 / 2;\n        long mid35\
    \ = mid34 / 2;\n        long mid36 = mid35 / 2;\n        long mid37 = mid36 /\
    \ 2;\n        long mid38 = mid37 / 2;\n        long mid39 = mid38 / 2;\n     \
    \   long mid40 = mid39 / 2;\n        long mid41 = mid40 / 2;\n        ", "   \
    \     ArrayList<Long> result = new ArrayList<>();\n        long max = 0;\n   \
    \     for (long i : arr) {\n            if (max < i) {\n                max =\
    \ i;\n            }\n        }\n        long curMax = 0;\n        for (long i\
    \ : arr) {\n            if (max < i) {\n                result.add(curMax);\n\
    \                curMax = i;\n            } else if (max > i) {\n            \
    \    result.add(max);\n                max = i;\n            }\n        }\n  \
    \      result.add(curMax);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long max = 0;\n        for (long i : arr)\
    \ {\n            if (max < i) {\n                max = i;\n            }\n   \
    \     }\n        long start = 0;\n        long end = arr.size() - 1;\n       \
    \ while (start < end) {\n            long mid = (start + end) / 2;\n         \
    \   if (arr[mid] > max) {\n                end = mid - 1;\n            } else\
    \ {\n                start = mid + 1;\n            }\n        }\n        if (start\
    \ == end) {\n            ArrayList<Long> temp = new ArrayList<>();\n         \
    \   temp.add(max);\n            result.addAll(temp);\n        } else {\n     \
    \       ArrayList<Long> temp = new ArrayList<>();\n            while (start <\
    \ end) {\n                long mid = (start + end) / 2;\n                if (arr[mid]\
    \ > max) {\n                    end = mid - 1;\n                } else {\n   \
    \                 start = mid + 1;\n                }\n            }\n       \
    \     temp.add(max);\n            result.addAll(temp);\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<Long>();\n       \
    \ Arrays.sort(arr);\n        long max = 0;\n        long maxIndex = 0;\n     \
    \   long maxValue = 0;\n        for(int i = 0; i < arr.size(); i++) {\n      \
    \      if(arr.get(i) > maxValue) {\n                maxValue = arr.get(i);\n \
    \               maxIndex = i;\n            }\n        }\n        while(maxIndex\
    \ < arr.size() && maxIndex < k) {\n            max = Math.max(max, arr.get(maxIndex));\n\
    \            result.add(max);\n            maxIndex++;\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        long min = 0;\n        long maxIndex = 0;\n  \
    \      long minIndex = 0;\n        long maxVal = arr.get(0);\n        long minVal\
    \ = arr.get(0);\n        long maxIndexVal = arr.get(0);\n        long minIndexVal\
    \ = arr.get(0);\n        long maxValIndex = 0;\n        long minValIndex = 0;\n\
    \        long maxValIndexVal = 0;\n        long minValIndexVal = 0;\n        long\
    \ maxValIndexVal2 = 0;\n        long minValIndexVal2 = 0;\n        long maxValIndexVal3\
    \ = 0;\n        long minValIndexVal3 = 0;\n        long maxValIndexVal4 = 0;\n\
    \        long minValIndexVal4 = 0;\n        long maxValIndexVal5 = 0;\n      \
    \  long minValIndexVal5 = 0;\n        long maxValIndexVal6 = 0;\n        long\
    \ minValIndexVal6 = 0;\n        long maxValIndexVal7 = 0;\n        long minValIndexVal7\
    \ = 0;\n        long maxValIndexVal8 = 0;\n        long minValIndexVal8 = 0;\n\
    \        long maxValIndexVal9 = 0;\n        long minValIndexVal9 = 0;\n      \
    \  long maxValIndexVal10 = 0;\n        long minValIndexVal10 = 0;\n        long\
    \ maxValIndexVal11 = 0;\n        long minValIndexVal11 = 0;\n        long maxValIndexVal12\
    \ = 0;\n        long minValIndexVal12 = 0;\n        long maxValIndexVal13 = 0;\n\
    \        long minValIndexVal13 = 0;\n        long maxValIndexVal14 = 0;\n    \
    \    long minValIndexVal14 = 0;\n        long maxValIndexVal15 = 0;\n        long\
    \ minValIndexVal15 = 0;\n        long maxValIndexVal16 = 0;\n        long minValIndexVal16\
    \ = 0;\n        long maxValIndexVal17 = 0;\n        long minValIndexVal17 = 0;\n\
    \        long maxValIndexVal18 = 0;\n        long minValIndexVal18 = 0;\n    \
    \    long maxValIndexVal19 = 0;\n        long minValIndexVal19 = 0;\n        long\
    \ maxValIndexVal20 = 0;\n        long minValIndexVal20 = 0;\n        long maxValIndexVal21\
    \ = 0;\n        long minValIndexVal21 = 0;\n        long maxValIndexVal22 = 0;\n\
    \        long minValIndexVal22 = 0;\n        long maxValIndexVal23 = 0;\n    \
    \    long minValIndexVal23 = 0;\n        long maxValIndexVal24 = 0;\n        long\
    \ minValIndexVal24 = 0;\n        ", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long max = 0;\n        long cur = 0;\n   \
    \     for (long i : arr) {\n            if (max < i) {\n                max =\
    \ i;\n                cur = i;\n            }\n            if (cur == k) {\n \
    \               result.add(max);\n                cur = 0;\n                max\
    \ = 0;\n            }\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n\
    \        long min = Long.MAX_VALUE;\n        for (long i : arr) {\n          \
    \  if (max < i) {\n                max = i;\n            }\n            if (min\
    \ > i) {\n                min = i;\n            }\n        }\n        if (max\
    \ > k) {\n            max = k;\n        }\n        if (min < k) {\n          \
    \  min = k;\n        }\n        long mid = min + (max - min) / 2;\n        long\
    \ mid2 = mid / 2;\n        long mid3 = mid2 / 2;\n        long mid4 = mid3 / 2;\n\
    \        long mid5 = mid4 / 2;\n        long mid6 = mid5 / 2;\n        long mid7\
    \ = mid6 / 2;\n        long mid8 = mid7 / 2;\n        long mid9 = mid8 / 2;\n\
    \        long mid10 = mid9 / 2;\n        long mid11 = mid10 / 2;\n        long\
    \ mid12 = mid11 / 2;\n        long mid13 = mid12 / 2;\n        long mid14 = mid13\
    \ / 2;\n        long mid15 = mid14 / 2;\n        long mid16 = mid15 / 2;\n   \
    \     long mid17 = mid16 / 2;\n        long mid18 = mid17 / 2;\n        long mid19\
    \ = mid18 / 2;\n        long mid20 = mid19 / 2;\n        long mid21 = mid20 /\
    \ 2;\n        long mid22 = mid21 / 2;\n        long mid23 = mid22 / 2;\n     \
    \   long mid24 = mid23 / 2;\n        long mid25 = mid24 / 2;\n        long mid26\
    \ = mid25 / 2;\n        long mid27 = mid26 / 2;\n        long mid28 = mid27 /\
    \ 2;\n        long mid29 = mid28 / 2;\n        long mid30 = mid29 / 2;\n     \
    \   long mid31 = mid30 / 2;\n        long mid32 = mid31 / 2;\n        long mid33\
    \ = mid32 / 2;\n        long mid34 = mid33 / 2;\n        long mid35 = mid34 /\
    \ 2;\n        long mid36 = mid35 / 2;\n        long mid37 = mid36 / 2;\n     \
    \   long mid38 = mid37 / 2;\n        long mid39 = mid38 / 2;\n        long mid40\
    \ = mid39 / 2;\n        long mid41 = mid40 / 2;\n        long mid42 = mid41 /\
    \ 2;\n        long mid43 = mid42 / 2;\n        long mid44 = mid43 / ", "     \
    \   ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n \
    \       if (arr.size() > k) {\n            k = arr.size();\n        }\n      \
    \  long max = 0;\n        long cur = 0;\n        for (int i = 0; i < k; i++) {\n\
    \            if (arr.get(i) > max) {\n                max = arr.get(i);\n    \
    \            cur = i;\n            }\n        }\n        result.add(max, cur);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long maxValue = arr.get(arr.size() - 1);\n\
    \        long maxIndex = arr.size() - 1;\n        long currentMax = arr.get(arr.size()\
    \ - 1);\n        long currentMaxIndex = arr.size() - 1;\n        long currentMaxIndex2\
    \ = arr.size() - 1;\n        long currentMaxIndex3 = arr.size() - 1;\n       \
    \ long currentMaxIndex4 = arr.size() - 1;\n        long currentMaxIndex5 = arr.size()\
    \ - 1;\n        long currentMaxIndex6 = arr.size() - 1;\n        long currentMaxIndex7\
    \ = arr.size() - 1;\n        long currentMaxIndex8 = arr.size() - 1;\n       \
    \ long currentMaxIndex9 = arr.size() - 1;\n        long currentMaxIndex10 = arr.size()\
    \ - 1;\n        long currentMaxIndex11 = arr.size() - 1;\n        long currentMaxIndex12\
    \ = arr.size() - 1;\n        long currentMaxIndex13 = arr.size() - 1;\n      \
    \  long currentMaxIndex14 = arr.size() - 1;\n        long currentMaxIndex15 =\
    \ arr.size() - 1;\n        long currentMaxIndex16 = arr.size() - 1;\n        long\
    \ currentMaxIndex17 = arr.size() - 1;\n        long currentMaxIndex18 = arr.size()\
    \ - 1;\n        long currentMaxIndex19 = arr.size() - 1;\n        long currentMaxIndex20\
    \ = arr.size() - 1;\n        long currentMaxIndex21 = arr.size() - 1;\n      \
    \  long currentMaxIndex22 = arr.size() - 1;\n        long currentMaxIndex23 =\
    \ arr.size() - 1;\n        long currentMaxIndex24 = arr.size() - 1;\n        long\
    \ currentMaxIndex25 = arr.size() - 1;\n        long currentMaxIndex26 = arr.size()\
    \ - 1;\n        long currentMaxIndex27 = arr.size() - 1;\n        long currentMaxIndex28\
    \ = arr.size() - 1;\n        long currentMaxIndex29 = arr.size() - 1;\n      \
    \  long currentMaxIndex30 = arr.size() - 1;\n        long currentMaxIndex31 =\
    \ arr.size() - 1;\n        long currentMaxIndex32 = arr.size() - 1;\n        long\
    \ currentMaxIndex33 = arr.size() - 1;\n        long currentMaxIndex34 = arr.size()\
    \ - 1;\n        long currentMaxIndex35 = arr.size() - 1;\n        long currentMaxIndex36\
    \ = arr.size() - 1;\n        long currentMaxIndex37 = arr.size() - 1;\n      \
    \  long currentMaxIndex38 = arr.size() - 1;\n        long currentMaxIndex39 =\
    \ arr.size() - 1;\n        long currentMaxIndex40 = arr.size() - ", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = arr.get(arr.size()\
    \ - 1);\n        long maxIndex = 0;\n        long maxIndex2 = 0;\n        long\
    \ maxIndex3 = 0;\n        long maxIndex4 = 0;\n        long maxIndex5 = 0;\n \
    \       long maxIndex6 = 0;\n        long maxIndex7 = 0;\n        long maxIndex8\
    \ = 0;\n        long maxIndex9 = 0;\n        long maxIndex10 = 0;\n        long\
    \ maxIndex11 = 0;\n        long maxIndex12 = 0;\n        long maxIndex13 = 0;\n\
    \        long maxIndex14 = 0;\n        long maxIndex15 = 0;\n        long maxIndex16\
    \ = 0;\n        long maxIndex17 = 0;\n        long maxIndex18 = 0;\n        long\
    \ maxIndex19 = 0;\n        long maxIndex20 = 0;\n        long maxIndex21 = 0;\n\
    \        long maxIndex22 = 0;\n        long maxIndex23 = 0;\n        long maxIndex24\
    \ = 0;\n        long maxIndex25 = 0;\n        long maxIndex26 = 0;\n        long\
    \ maxIndex27 = 0;\n        long maxIndex28 = 0;\n        long maxIndex29 = 0;\n\
    \        long maxIndex30 = 0;\n        long maxIndex31 = 0;\n        long maxIndex32\
    \ = 0;\n        long maxIndex33 = 0;\n        long maxIndex34 = 0;\n        long\
    \ maxIndex35 = 0;\n        long maxIndex36 = 0;\n        long maxIndex37 = 0;\n\
    \        long maxIndex38 = 0;\n        long maxIndex39 = 0;\n        long maxIndex40\
    \ = 0;\n        long maxIndex41 = 0;\n        long maxIndex42 = 0;\n        long\
    \ maxIndex43 = 0;\n        long maxIndex44 = 0;\n        long maxIndex45 = 0;\n\
    \        long maxIndex46 = 0;\n        long maxIndex47 = 0;\n        long maxIndex48\
    \ = 0;\n        long maxIndex49 = 0;\n        long maxIndex50 = 0;\n        long\
    \ maxIndex51 = 0;\n        long maxIndex52 = 0;\n        long maxIndex53 = 0;\n\
    \        long maxIndex54 = 0;\n        long maxIndex55 = 0;\n        long maxIndex56\
    \ = 0;\n        long maxIndex57 = 0;\n        long maxIndex58 = 0;\n        long\
    \ maxIndex59 = 0;\n        long maxIndex60 = 0;\n        long maxIndex61 = 0;\n\
    \        long maxIndex62 = 0;\n        long maxIndex63 = 0;\n        long maxIndex64\
    \ = 0;\n        long maxIndex65 = 0;\n        long maxIndex66 = 0;\n        long\
    \ maxIndex67 = 0;\n        long maxIndex68 = 0;\n        long maxIndex69 = 0;\n\
    \        long maxIndex70 = 0;\n        long ", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long max = 0;\n        long min = Long.MAX_VALUE;\n\
    \        for (long i : arr) {\n            if (max < i) {\n                max\
    \ = i;\n            }\n            if (min > i) {\n                min = i;\n\
    \            }\n        }\n        if (max > min) {\n            long mid = (max\
    \ + min) / 2;\n            ArrayList<Long> left = new ArrayList<>();\n       \
    \     ArrayList<Long> right = new ArrayList<>();\n            for (long i : arr)\
    \ {\n                if (i < mid) {\n                    left.add(i);\n      \
    \          } else {\n                    right.add(i);\n                }\n  \
    \          }\n            left.addAll(maximum(new ArrayList<>(left), k - left.size()));\n\
    \            right.addAll(maximum(new ArrayList<>(right), k - right.size()));\n\
    \            left.addAll(maximum(new ArrayList<>(left), k - left.size()));\n \
    \           right.addAll(maximum(new ArrayList<>(right), k - right.size()));\n\
    \            left.addAll(maximum(new ArrayList<>(left), k - left.size()));\n \
    \           right.addAll(maximum(new ArrayList<>(right), k - right.size()));\n\
    \            left.addAll(maximum(new ArrayList<>(left), k - left.size()));\n \
    \           right.addAll(maximum(new ArrayList<>(right), k - right.size()));\n\
    \            left.addAll(maximum(new ArrayList<>(left), k - left.size()));\n \
    \           right.addAll(maximum(new ArrayList<>(right), k - right.size()));\n\
    \            left.addAll(maximum(new ArrayList<>(left), k - left.size()));\n \
    \           right.addAll(maximum(new ArrayList<>(right), k - right.size()));\n\
    \            left.addAll(maximum(new ArrayList<>(left), k - left.size()));\n \
    \           right.addAll(maximum(new ArrayList<>(right), k - right.size()));\n\
    \            left.addAll(maximum(new ArrayList<>(left), k - left.size()));\n \
    \           right.addAll(maximum(new ArrayList<>(right), k - right.size()));\n\
    \            left.addAll(maximum(new ArrayList<>(left), k - left.size()));\n \
    \           right.addAll(maximum(new ArrayList<>(right), k - right.size()));\n\
    \            left.addAll(maximum(new ArrayList<>(left), k - left.size()));\n \
    \           right.addAll(maximum(new ArrayList<>(right), k - right.size()));\n\
    \            left.addAll(maximum(new ArrayList<>(left), k - left.size()));\n \
    \           right.addAll(maximum(new ArrayList<>(right), k - right.size()));\n\
    \            left.addAll(maximum(new ArrayList<>(left), k - left.size()));\n \
    \           right.addAll(maximum(new ArrayList<>(right), k - right.size()));\n\
    \            left.addAll(maximum(new ArrayList<>(left), k", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n\
    \        long maxIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) > max) {\n                max = arr.get(i);\n    \
    \            maxIndex = i;\n            }\n        }\n        if (maxIndex + k\
    \ > arr.size()) {\n            k = arr.size() - maxIndex;\n        }\n       \
    \ for (int i = 0; i < k; i++) {\n            result.add(arr.get(maxIndex));\n\
    \            maxIndex++;\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long max = 0;\n        for (long i : arr)\
    \ {\n            if (max < i) {\n                max = i;\n            }\n   \
    \     }\n        long maxIndex = arr.indexOf(max);\n        if (maxIndex - k >\
    \ 0) {\n            max = arr[maxIndex - k];\n        }\n        long minIndex\
    \ = arr.indexOf(Math.min.apply(Math.toRadix(arr)));\n        if (minIndex + k\
    \ < arr.size()) {\n            min = arr[minIndex + k];\n        }\n        for\
    \ (long i : arr) {\n            if (i < max) {\n                result.add(i);\n\
    \            } else if (i > max) {\n                result.add(max);\n       \
    \     } else if (i < min) {\n                result.add(min);\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        Arrays.sort(arr);\n        long max = 0;\n        long maxIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) >\
    \ max) {\n                max = arr.get(i);\n                maxIndex = i;\n \
    \           }\n        }\n        for (int i = 0; i < arr.size(); i++) {\n   \
    \         if (arr.get(i) == max) {\n                result.add(arr.get(maxIndex));\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        Arrays.sort(arr);\n        long maxValue =\
    \ arr.get(arr.size()-1);\n        long maxIndex = arr.size()-1;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            if(arr.get(i) == maxValue) {\n  \
    \              maxIndex = i;\n            }\n        }\n        for(int i = 0;\
    \ i < arr.size(); i++) {\n            if(arr.get(i) == maxValue) {\n         \
    \       result.add(arr.get(i));\n            }\n        }\n        for(int i =\
    \ maxIndex; i >= 0; i--) {\n            result.add(arr.get(i));\n        }\n \
    \       return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long maxValue = arr.get(arr.size() - 1);\n\
    \        long maxIndex = 0;\n        long maxIndex2 = 0;\n        long maxIndex3\
    \ = 0;\n        long maxIndex4 = 0;\n        long maxIndex5 = 0;\n        long\
    \ maxIndex6 = 0;\n        long maxIndex7 = 0;\n        long maxIndex8 = 0;\n \
    \       long maxIndex9 = 0;\n        long maxIndex10 = 0;\n        long maxIndex11\
    \ = 0;\n        long maxIndex12 = 0;\n        long maxIndex13 = 0;\n        long\
    \ maxIndex14 = 0;\n        long maxIndex15 = 0;\n        long maxIndex16 = 0;\n\
    \        long maxIndex17 = 0;\n        long maxIndex18 = 0;\n        long maxIndex19\
    \ = 0;\n        long maxIndex20 = 0;\n        long maxIndex21 = 0;\n        long\
    \ maxIndex22 = 0;\n        long maxIndex23 = 0;\n        long maxIndex24 = 0;\n\
    \        long maxIndex25 = 0;\n        long maxIndex26 = 0;\n        long maxIndex27\
    \ = 0;\n        long maxIndex28 = 0;\n        long maxIndex29 = 0;\n        long\
    \ maxIndex30 = 0;\n        long maxIndex31 = 0;\n        long maxIndex32 = 0;\n\
    \        long maxIndex33 = 0;\n        long maxIndex34 = 0;\n        long maxIndex35\
    \ = 0;\n        long maxIndex36 = 0;\n        long maxIndex37 = 0;\n        long\
    \ maxIndex38 = 0;\n        long maxIndex39 = 0;\n        long maxIndex40 = 0;\n\
    \        long maxIndex41 = 0;\n        long maxIndex42 = 0;\n        long maxIndex43\
    \ = 0;\n        long maxIndex44 = 0;\n        long maxIndex45 = 0;\n        long\
    \ maxIndex46 = 0;\n        long maxIndex47 = 0;\n        long maxIndex48 = 0;\n\
    \        long maxIndex49 = 0;\n        long maxIndex50 = 0;\n        long maxIndex51\
    \ = 0;\n        long maxIndex52 = 0;\n        long maxIndex53 = 0;\n        long\
    \ maxIndex54 = 0;\n        long maxIndex55 = 0;\n        long maxIndex56 = 0;\n\
    \        long maxIndex57 = 0;\n        long maxIndex58 = 0;\n        long maxIndex59\
    \ = 0;\n        long maxIndex60 = 0;\n        long maxIndex61 = 0;\n        long\
    \ maxIndex62 = 0;\n        long maxIndex63 = 0;\n        long maxIndex64 = 0;\n\
    \        long maxIndex65 = 0;\n        long maxIndex66 = 0;\n        long maxIndex67\
    \ = 0;\n        long maxIndex68 = 0;\n        long maxIndex69 = 0;\n        long\
    \ maxIndex70 = 0;\n        ", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long maxValue = arr.get(arr.size() - 1);\n\
    \        long maxIndex = arr.size() - 1;\n        long maxIndex2 = arr.size()\
    \ - 2;\n        long maxIndex3 = arr.size() - 3;\n        long maxIndex4 = arr.size()\
    \ - 4;\n        long maxIndex5 = arr.size() - 5;\n        long maxIndex6 = arr.size()\
    \ - 6;\n        long maxIndex7 = arr.size() - 7;\n        long maxIndex8 = arr.size()\
    \ - 8;\n        long maxIndex9 = arr.size() - 9;\n        long maxIndex10 = arr.size()\
    \ - 10;\n        long maxIndex11 = arr.size() - 11;\n        long maxIndex12 =\
    \ arr.size() - 12;\n        long maxIndex13 = arr.size() - 13;\n        long maxIndex14\
    \ = arr.size() - 14;\n        long maxIndex15 = arr.size() - 15;\n        long\
    \ maxIndex16 = arr.size() - 16;\n        long maxIndex17 = arr.size() - 17;\n\
    \        long maxIndex18 = arr.size() - 18;\n        long maxIndex19 = arr.size()\
    \ - 19;\n        long maxIndex20 = arr.size() - 20;\n        long maxIndex21 =\
    \ arr.size() - 21;\n        long maxIndex22 = arr.size() - 22;\n        long maxIndex23\
    \ = arr.size() - 23;\n        long maxIndex24 = arr.size() - 24;\n        long\
    \ maxIndex25 = arr.size() - 25;\n        long maxIndex26 = arr.size() - 26;\n\
    \        long maxIndex27 = arr.size() - 27;\n        long maxIndex28 = arr.size()\
    \ - 28;\n        long maxIndex29 = arr.size() - 29;\n        long maxIndex30 =\
    \ arr.size() - 30;\n        long maxIndex31 = arr.size() - 31;\n        long maxIndex32\
    \ = arr.size() - 32;\n        long maxIndex33 = arr.size() - 33;\n        long\
    \ maxIndex34 = arr.size() - 34;\n        long maxIndex35 = arr.size() - 35;\n\
    \        long maxIndex36 = arr.size() - 36;\n        long maxIndex37 = arr.size()\
    \ - 37;\n        long maxIndex38 = arr.size() - 38;\n        long maxIndex39 =\
    \ arr.size() - 39;\n        long maxIndex40 = arr.size() - 40;\n        long maxIndex41\
    \ = arr.size() - 41;\n        long maxIndex42 = arr.size() - 42;\n        long\
    \ maxIndex43 = arr.size() - 43;\n        long ", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long max = 0;\n        long min = 0;\n       \
    \ long sum = 0;\n        long count = 0;\n        long temp;\n        for(long\
    \ i : arr) {\n            sum += i;\n            if(sum > max) {\n           \
    \     max = sum;\n            }\n            if(sum < min) {\n               \
    \ min = sum;\n            }\n        }\n        for(long i : arr) {\n        \
    \    temp = sum - i;\n            if(temp > k) {\n                result.add(i);\n\
    \                count += 1;\n            }\n            if(temp < -k) {\n   \
    \             result.add(-i);\n                count += 1;\n            }\n  \
    \      }\n        if(count > k) {\n            for(long i : arr) {\n         \
    \       result.add(i);\n            }\n        }\n        if(count < k) {\n  \
    \          for(long i : arr) {\n                result.add(-i);\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long max = 0;\n        long temp = 0;\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            temp = arr.get(i);\n            if(temp > max) {\n     \
    \           max = temp;\n            }\n        }\n        for(int i = 0; i <\
    \ arr.size(); i++) {\n            temp = arr.get(i);\n            if(temp > max)\
    \ {\n                result.add(temp);\n            }\n        }\n        for(int\
    \ i = 0; i < result.size(); i++) {\n            temp = result.get(i);\n      \
    \      if(temp > k) {\n                result.add(temp - k);\n            }\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long max = 0;\n        long cur = 0;\n   \
    \     for (long i : arr) {\n            if (max < i) {\n                max =\
    \ i;\n                cur = i;\n            }\n            if (cur == k) {\n \
    \               result.add(max);\n                max = 0;\n                cur\
    \ = 0;\n            }\n        }\n        if (max > 0) {\n            result.add(max);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        Arrays.sort(arr);\n        long max = 0;\n        long maxIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) >\
    \ max) {\n                max = arr.get(i);\n                maxIndex = i;\n \
    \           }\n        }\n        result.add(max, maxIndex);\n        if (result.size()\
    \ > k) {\n            result.remove(k);\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long max = 0;\n \
    \       long temp = 0;\n        for(int i = 0; i < arr.size(); i++) {\n      \
    \      temp = arr.get(i);\n            if(temp > max) {\n                max =\
    \ temp;\n            }\n        }\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            temp = arr.get(i);\n            if(temp == max) {\n         \
    \       result.add(temp);\n            }\n        }\n        return result;",
  "        ArrayList<Long> res = new ArrayList<>();\n        long max = 0;\n     \
    \   long min = 0;\n        long maxIndex = 0;\n        long minIndex = 0;\n  \
    \      long maxVal = 0;\n        long minVal = 0;\n        long maxIndex2 = 0;\n\
    \        long minIndex2 = 0;\n        long maxVal2 = 0;\n        long minVal2\
    \ = 0;\n        long maxIndex3 = 0;\n        long minIndex3 = 0;\n        long\
    \ maxVal3 = 0;\n        long minVal3 = 0;\n        long maxIndex4 = 0;\n     \
    \   long minIndex4 = 0;\n        long maxVal4 = 0;\n        long minVal4 = 0;\n\
    \        long maxIndex5 = 0;\n        long minIndex5 = 0;\n        long maxVal5\
    \ = 0;\n        long minVal5 = 0;\n        long maxIndex6 = 0;\n        long minIndex6\
    \ = 0;\n        long maxVal6 = 0;\n        long minVal6 = 0;\n        long maxIndex7\
    \ = 0;\n        long minIndex7 = 0;\n        long maxVal7 = 0;\n        long minVal7\
    \ = 0;\n        long maxIndex8 = 0;\n        long minIndex8 = 0;\n        long\
    \ maxVal8 = 0;\n        long minVal8 = 0;\n        long maxIndex9 = 0;\n     \
    \   long minIndex9 = 0;\n        long maxVal9 = 0;\n        long minVal9 = 0;\n\
    \        long maxIndex10 = 0;\n        long minIndex10 = 0;\n        long maxVal10\
    \ = 0;\n        long minVal10 = 0;\n        long maxIndex11 = 0;\n        long\
    \ minIndex11 = 0;\n        long maxVal11 = 0;\n        long minVal11 = 0;\n  \
    \      long maxIndex12 = 0;\n        long minIndex12 = 0;\n        long maxVal12\
    \ = 0;\n        long minVal12 = 0;\n        long maxIndex13 = 0;\n        long\
    \ minIndex13 = 0;\n        long maxVal13 = 0;\n        long minVal13 = 0;\n  \
    \      long maxIndex14 = 0;\n        long minIndex14 = 0;\n        long maxVal14\
    \ = 0;\n        long minVal14 = 0;\n        long maxIndex15 = 0;\n        long\
    \ minIndex15 = 0;\n        long maxVal15 = 0;\n        long minVal15 = 0;\n  \
    \      long maxIndex16 = 0;\n        long minIndex16 = 0;\n        long maxVal16\
    \ = 0;\n        long minVal16 = 0;\n        long maxIndex17 = 0;\n        long\
    \ minIndex17 = 0;\n        long maxVal17 = 0;\n        long minVal17 = 0;\n  \
    \      long maxIndex18 = 0;\n        long minIndex18 = 0;\n        long maxVal18\
    \ = 0;\n        long minVal18 = 0;\n        long maxIndex19 = 0;\n        long ",
  "        ArrayList<Long> result = new ArrayList<>();\n        long max = arr.get(0);\n\
    \        long maxIndex = 0;\n        for (int i = 1; i < arr.size(); i++) {\n\
    \            if (arr.get(i) > max) {\n                max = arr.get(i);\n    \
    \            maxIndex = i;\n            }\n        }\n        if (maxIndex - k\
    \ + 1 > arr.size()) {\n            k = maxIndex - arr.size() + 1;\n        }\n\
    \        for (int i = 0; i < k; i++) {\n            result.add(max);\n       \
    \ }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = 0;\n        long cur = 0;\n        for (long i : arr) {\n\
    \            if (max < i) {\n                max = i;\n            }\n       \
    \ }\n        for (long i : arr) {\n            if (max < i) {\n              \
    \  cur = i;\n            }\n            if (cur > max) {\n                result.add(cur);\n\
    \                max = cur;\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        long min = Long.MAX_VALUE;\n        for (long\
    \ i : arr) {\n            if (i < min) {\n                min = i;\n         \
    \   }\n            if (i > max) {\n                max = i;\n            }\n \
    \       }\n        long mid = max - (max - min) / 2;\n        long mid2 = mid\
    \ / 2;\n        long mid3 = mid / 3;\n        long mid4 = mid / 4;\n        long\
    \ mid5 = mid / 5;\n        long mid6 = mid / 6;\n        long mid7 = mid / 7;\n\
    \        long mid8 = mid / 8;\n        long mid9 = mid / 9;\n        long mid10\
    \ = mid / 10;\n        long mid11 = mid / 11;\n        long mid12 = mid / 12;\n\
    \        long mid13 = mid / 13;\n        long mid14 = mid / 14;\n        long\
    \ mid15 = mid / 15;\n        long mid16 = mid / 16;\n        long mid17 = mid\
    \ / 17;\n        long mid18 = mid / 18;\n        long mid19 = mid / 19;\n    \
    \    long mid20 = mid / 20;\n        long mid21 = mid / 21;\n        long mid22\
    \ = mid / 22;\n        long mid23 = mid / 23;\n        long mid24 = mid / 24;\n\
    \        long mid25 = mid / 25;\n        long mid26 = mid / 26;\n        long\
    \ mid27 = mid / 27;\n        long mid28 = mid / 28;\n        long mid29 = mid\
    \ / 29;\n        long mid30 = mid / 30;\n        long mid31 = mid / 31;\n    \
    \    long mid32 = mid / 32;\n        long mid33 = mid / 33;\n        long mid34\
    \ = mid / 34;\n        long mid35 = mid / 35;\n        long mid36 = mid / 36;\n\
    \        long mid37 = mid / 37;\n        long mid38 = mid / 38;\n        long\
    \ mid39 = mid / 39;\n        long mid40 = mid / 40;\n        long mid41 = mid\
    \ / 41;\n        long mid42 = mid / 42;\n        long mid43 = mid / 43;\n    \
    \    long mid44 = mid / 44;\n        long mid45 = mid / 45;\n        long mid46\
    \ = mid / 46;\n        long mid", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long max = 0;\n        long min = 0;\n        long maxIndex = 0;\n  \
    \      long minIndex = 0;\n        long maxValue = arr.get(0);\n        long minValue\
    \ = arr.get(0);\n        long maxIndexValue = arr.get(0);\n        long minIndexValue\
    \ = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            max\
    \ = Math.max(max, arr.get(i));\n            min = Math.min(min, arr.get(i));\n\
    \            maxIndex = i;\n            minIndex = i;\n            maxValue =\
    \ arr.get(i);\n            minValue = arr.get(i);\n            maxIndexValue =\
    \ arr.get(i);\n            minIndexValue = arr.get(i);\n        }\n        for(int\
    \ i = arr.size() - 1; i >= 0; i--) {\n            if(arr.get(i) > maxValue) {\n\
    \                maxValue = arr.get(i);\n                maxIndex = i;\n     \
    \       }\n            if(arr.get(i) < minValue) {\n                minValue =\
    \ arr.get(i);\n                minIndex = i;\n            }\n            if(arr.get(i)\
    \ > maxIndexValue) {\n                maxIndexValue = arr.get(i);\n          \
    \      maxIndex = i;\n            }\n            if(arr.get(i) < minIndexValue)\
    \ {\n                minIndexValue = arr.get(i);\n                minIndex = i;\n\
    \            }\n        }\n        if(maxIndex - minIndex > k) {\n           \
    \ for(int i = maxIndex; i <= minIndex; i++) {\n                result.add(arr.get(i));\n\
    \            }\n        } else {\n            for(int i = maxIndex; i <= minIndex;\
    \ i++) {\n                result.add(arr.get(i));\n            }\n           \
    \ for(int i = minIndex; i <= maxIndex; i++) {\n                result.add(arr.get(i));\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n   \
    \     long current = 0;\n        long maxIndex = 0;\n        long currentIndex\
    \ = 0;\n        long maxValue = 0;\n        long currentValue = 0;\n        long\
    \ maxIndex2 = 0;\n        long currentIndex2 = 0;\n        long maxValue2 = 0;\n\
    \        long currentValue2 = 0;\n        long maxIndex3 = 0;\n        long currentIndex3\
    \ = 0;\n        long maxValue3 = 0;\n        long currentValue3 = 0;\n       \
    \ long maxIndex4 = 0;\n        long currentIndex4 = 0;\n        long maxValue4\
    \ = 0;\n        long currentValue4 = 0;\n        long maxIndex5 = 0;\n       \
    \ long currentIndex5 = 0;\n        long maxValue5 = 0;\n        long currentValue5\
    \ = 0;\n        long maxIndex6 = 0;\n        long currentIndex6 = 0;\n       \
    \ long maxValue6 = 0;\n        long currentValue6 = 0;\n        long maxIndex7\
    \ = 0;\n        long currentIndex7 = 0;\n        long maxValue7 = 0;\n       \
    \ long currentValue7 = 0;\n        long maxIndex8 = 0;\n        long currentIndex8\
    \ = 0;\n        long maxValue8 = 0;\n        long currentValue8 = 0;\n       \
    \ long maxIndex9 = 0;\n        long currentIndex9 = 0;\n        long maxValue9\
    \ = 0;\n        long currentValue9 = 0;\n        long maxIndex10 = 0;\n      \
    \  long currentIndex10 = 0;\n        long maxValue10 = 0;\n        long currentValue10\
    \ = 0;\n        long maxIndex11 = 0;\n        long currentIndex11 = 0;\n     \
    \   long maxValue11 = 0;\n        long currentValue11 = 0;\n        long maxIndex12\
    \ = 0;\n        long currentIndex12 = 0;\n        long maxValue12 = 0;\n     \
    \   long currentValue12 = 0;\n        long maxIndex13 = 0;\n        long currentIndex13\
    \ = 0;\n        long maxValue13 = 0;\n        long currentValue13 = 0;\n     \
    \   long maxIndex14 = 0;\n        long currentIndex14 = 0;\n        long maxValue14\
    \ = 0;\n        long currentValue14 = 0;\n        long maxIndex15 = 0;\n     \
    \   long currentIndex15 = 0;\n        long maxValue15 = 0;\n        long currentValue15\
    \ = 0;\n        long maxIndex16 = 0;\n        long currentIndex16 = 0;\n     \
    \   long maxValue16 = 0;\n        long currentValue16 = 0;\n        long maxIndex17\
    \ = 0;\n        long currentIndex17 = 0;\n        long maxValue17 = 0;\n     \
    \   long currentValue17 = 0;\n        long maxIndex18 = 0;\n        long currentIndex18\
    \ = 0;\n        long maxValue18 = 0;\n        long currentValue18 = 0;\n     \
    \   long max", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ max = 0;\n        long min = Long.MAX_VALUE;\n        for (long i : arr) {\n\
    \            if (max < i) {\n                max = i;\n            }\n       \
    \     if (min > i) {\n                min = i;\n            }\n        }\n   \
    \     if (max > k) {\n            max = k;\n        }\n        if (min < -k) {\n\
    \            min = -k;\n        }\n        if (max > min) {\n            long\
    \ mid = max + (max - min) / 2;\n            while (max > min) {\n            \
    \    if (max > mid) {\n                    result.add(mid);\n                \
    \    max -= mid;\n                } else {\n                    result.add(min);\n\
    \                    min += mid;\n                }\n            }\n        }\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long max = 0;\n        long min = Long.MAX_VALUE;\n        for (long\
    \ i : arr) {\n            if (i < min) {\n                min = i;\n         \
    \   }\n            if (i > max) {\n                max = i;\n            }\n \
    \       }\n        long mid = max + (max - min) / 2;\n        long mid2 = mid\
    \ / 2;\n        long mid3 = mid * 2;\n        long mid4 = mid * 3;\n        long\
    \ mid5 = mid * 4;\n        long mid6 = mid * 5;\n        long mid7 = mid * 6;\n\
    \        long mid8 = mid * 7;\n        long mid9 = mid * 8;\n        long mid10\
    \ = mid * 9;\n        long mid11 = mid * 10;\n        long mid12 = mid * 11;\n\
    \        long mid13 = mid * 12;\n        long mid14 = mid * 13;\n        long\
    \ mid15 = mid * 14;\n        long mid16 = mid * 15;\n        long mid17 = mid\
    \ * 16;\n        long mid18 = mid * 17;\n        long mid19 = mid * 18;\n    \
    \    long mid20 = mid * 19;\n        long mid21 = mid * 20;\n        long mid22\
    \ = mid * 21;\n        long mid23 = mid * 22;\n        long mid24 = mid * 23;\n\
    \        long mid25 = mid * 24;\n        long mid26 = mid * 25;\n        long\
    \ mid27 = mid * 26;\n        long mid28 = mid * 27;\n        long mid29 = mid\
    \ * 28;\n        long mid30 = mid * 29;\n        long mid31 = mid * 30;\n    \
    \    long mid32 = mid * 31;\n        long mid33 = mid * 32;\n        long mid34\
    \ = mid * 33;\n        long mid35 = mid * 34;\n        long mid36 = mid * 35;\n\
    \        long mid37 = mid * 36;\n        long mid38 = mid * 37;\n        long\
    \ mid39 = mid * 38;\n        long mid40 = mid * 39;\n        long mid41 = mid\
    \ * 40;\n        long mid42 = mid * 41;\n        long mid43 = mid * 42;\n    \
    \    long mid44 = mid * 43;\n        long mid45 = mid * 44;\n        long mid46\
    \ = mid * 45;\n        long mid47 = mid * 46;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        Arrays.sort(arr);\n        long max = arr.get(arr.size()\
    \ - 1);\n        long maxIndex = 0;\n        long maxCount = 0;\n        for (int\
    \ i = 0; i < arr.size(); i++) {\n            if (arr.get(i) == max) {\n      \
    \          maxCount++;\n                if (maxCount > k) {\n                \
    \    maxIndex = i;\n                }\n            }\n        }\n        result.add(max);\n\
    \        result.add(maxIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long max = 0;\n        long temp = 0;\n\
    \        long sum = 0;\n        long count = 0;\n        for (long i : arr) {\n\
    \            sum += i;\n            if (sum > max) {\n                max = sum;\n\
    \            }\n        }\n        long count = 0;\n        for (long i : arr)\
    \ {\n            if (sum - i > k) {\n                result.add(sum - i);\n  \
    \              count++;\n            }\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        long maxIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max\
    \ = arr.get(i);\n                maxIndex = i;\n            }\n        }\n   \
    \     if (maxIndex == arr.size() - 1) {\n            result.add(max);\n      \
    \  } else {\n            result.add(max, maxIndex);\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<Long>();\n       \
    \ Arrays.sort(arr);\n        long max = 0;\n        long cur = 0;\n        long\
    \ max2 = 0;\n        long cur2 = 0;\n        long max3 = 0;\n        long cur3\
    \ = 0;\n        long max4 = 0;\n        long cur4 = 0;\n        long max5 = 0;\n\
    \        long cur5 = 0;\n        long max6 = 0;\n        long cur6 = 0;\n    \
    \    long max7 = 0;\n        long cur7 = 0;\n        long max8 = 0;\n        long\
    \ cur8 = 0;\n        long max9 = 0;\n        long cur9 = 0;\n        long max10\
    \ = 0;\n        long cur10 = 0;\n        long max11 = 0;\n        long cur11 =\
    \ 0;\n        long max12 = 0;\n        long cur12 = 0;\n        long max13 = 0;\n\
    \        long cur13 = 0;\n        long max14 = 0;\n        long cur14 = 0;\n \
    \       long max15 = 0;\n        long cur15 = 0;\n        long max16 = 0;\n  \
    \      long cur16 = 0;\n        long max17 = 0;\n        long cur17 = 0;\n   \
    \     long max18 = 0;\n        long cur18 = 0;\n        long max19 = 0;\n    \
    \    long cur19 = 0;\n        long max20 = 0;\n        long cur20 = 0;\n     \
    \   long max21 = 0;\n        long cur21 = 0;\n        long max22 = 0;\n      \
    \  long cur22 = 0;\n        long max23 = 0;\n        long cur23 = 0;\n       \
    \ long max24 = 0;\n        long cur24 = 0;\n        long max25 = 0;\n        long\
    \ cur25 = 0;\n        long max26 = 0;\n        long cur26 = 0;\n        long max27\
    \ = 0;\n        long cur27 = 0;\n        long max28 = 0;\n        long cur28 =\
    \ 0;\n        long max29 = 0;\n        long cur29 = 0;\n        long max30 = 0;\n\
    \        long cur30 = 0;\n        long max31 = 0;\n        long cur31 = 0;\n \
    \       long max32 = 0;\n        long cur32 = 0;\n        long max33 = 0;\n  \
    \      long cur33 = 0;\n        long max34 = 0;\n        long cur34 = 0;\n   \
    \     long max35 = 0;\n        long cur35 = 0;\n        long max36 = 0;\n    \
    \    long cur36 = 0;\n        long max37 = 0;\n        long cur37 = 0;\n     \
    \   long max38 = 0;\n        long cur38 = 0;\n        long max39 = 0;\n      \
    \  long cur39 = 0;\n        long max40 = 0;\n        long cur40 = 0;\n       \
    \ long max41 = 0;\n        long cur41 = 0;\n        long max42 = 0;\n        long\
    \ cur42 = 0;\n        long ", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        ArrayList<Long> temp = new ArrayList<>();\n        long max = 0;\n  \
    \      long min = 0;\n        long sum = 0;\n        long count = 0;\n       \
    \ for (long i : arr) {\n            if (i < 0) {\n                temp.add(-i);\n\
    \            } else {\n                temp.add(i);\n            }\n        }\n\
    \        Collections.sort(temp);\n        for (long i : temp) {\n            sum\
    \ += i;\n            count++;\n            if (sum > k) {\n                max\
    \ = i;\n                min = k;\n            } else if (sum == k) {\n       \
    \         max = i;\n                min = k;\n            } else if (sum < k)\
    \ {\n                max = k;\n                min = sum;\n            }\n   \
    \     }\n        if (count > k) {\n            max = k;\n            min = sum;\n\
    \        }\n        for (long i : temp) {\n            if (i < min) {\n      \
    \          result.add(-i);\n            } else if (i > max) {\n              \
    \  result.add(i);\n            }\n        }\n        return result;", "      \
    \  ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n  \
    \      long max = 0;\n        long maxIndex = 0;\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n\
    \                maxIndex = i;\n            }\n        }\n        for(int i =\
    \ maxIndex; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n     \
    \           max = arr.get(i);\n            }\n        }\n        for(int i = 0;\
    \ i < arr.size(); i++) {\n            if(arr.get(i) == max) {\n              \
    \  result.add(arr.get(i));\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long max = 0;\n  \
    \      long min = Long.MAX_VALUE;\n        for (long i : arr) {\n            if\
    \ (max < i) {\n                max = i;\n            }\n            if (min >\
    \ i) {\n                min = i;\n            }\n        }\n        if (max >=\
    \ k) {\n            for (long i : arr) {\n                if (i < k) {\n     \
    \               result.add(i);\n                }\n            }\n        } else\
    \ {\n            for (long i : arr) {\n                if (i > k) {\n        \
    \            result.add(i);\n                }\n            }\n        }\n   \
    \     return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long max = arr.get(0);\n        long maxIndex = 0;\n        for (int\
    \ i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n       \
    \         max = arr.get(i);\n                maxIndex = i;\n            }\n  \
    \      }\n        ArrayList<Long> temp = new ArrayList<Long>();\n        for (int\
    \ i = 0; i < k; i++) {\n            temp.add(arr.get(maxIndex + i));\n       \
    \ }\n        result.addAll(temp);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n\
    \        long maxIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) > max) {\n                max = arr.get(i);\n    \
    \            maxIndex = i;\n            }\n        }\n        result.add(max,\
    \ maxIndex);\n        if (arr.size() > k) {\n            ArrayList<Long> newArr\
    \ = new ArrayList<>();\n            for (int i = 0; i < arr.size() - k + 1; i++)\
    \ {\n                long temp = 0;\n                for (int j = i; j < i + k;\
    \ j++) {\n                    temp += arr.get(j);\n                }\n       \
    \         newArr.add(temp);\n            }\n            result = result.stream().flatMap(x\
    \ -> newArr.stream()).collect(Collectors.toList());\n        }\n        return\
    \ result;", "        ArrayList<Long> res = new ArrayList<Long>();\n        long\
    \ max = 0;\n        long min = 0;\n        long sum = 0;\n        long count =\
    \ 0;\n        for (long i : arr) {\n            sum += i;\n            if (sum\
    \ > max) {\n                max = sum;\n            }\n            if (sum < min)\
    \ {\n                min = sum;\n            }\n            count++;\n       \
    \ }\n        if (count > k) {\n            k = count;\n        }\n        long\
    \ mid = min + (max - min) / 2;\n        long mid2 = mid / 2;\n        long mid3\
    \ = mid2 / 2;\n        long mid4 = mid3 / 2;\n        long mid5 = mid4 / 2;\n\
    \        long mid6 = mid5 / 2;\n        long mid7 = mid6 / 2;\n        long mid8\
    \ = mid7 / 2;\n        long mid9 = mid8 / 2;\n        long mid10 = mid9 / 2;\n\
    \        long mid11 = mid10 / 2;\n        long mid12 = mid11 / 2;\n        long\
    \ mid13 = mid12 / 2;\n        long mid14 = mid13 / 2;\n        long mid15 = mid14\
    \ / 2;\n        long mid16 = mid15 / 2;\n        long mid17 = mid16 / 2;\n   \
    \     long mid18 = mid17 / 2;\n        long mid19 = mid18 / 2;\n        long mid20\
    \ = mid19 / 2;\n        long mid21 = mid20 / 2;\n        long mid22 = mid21 /\
    \ 2;\n        long mid23 = mid22 / 2;\n        long mid24 = mid23 / 2;\n     \
    \   long mid25 = mid24 / 2;\n        long mid26 = mid25 / 2;\n        long mid27\
    \ = mid26 / 2;\n        long mid28 = mid27 / 2;\n        long mid29 = mid28 /\
    \ 2;\n        long mid30 = mid29 / 2;\n        long mid31 = mid30 / 2;\n     \
    \   long mid32 = mid31 / 2;\n        long mid33 = mid32 / 2;\n        long mid34\
    \ = mid33 / 2;\n        long mid35 = mid34 / 2;\n        long mid36 = mid35 /\
    \ 2;\n        long mid37 = mid36 / 2;\n        long mid38 = mid37 / 2;\n     \
    \   long mid39 = mid38 / 2;\n        long mid40 = mid39 / 2;\n        long mid41\
    \ = mid40 / 2;\n        long mid42 = mid41 / 2;\n        long mid43 = mid42 /\
    \ 2;\n        long mid44 = mid43 / ", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long max = 0;\n        long maxIndex = 0;\n\
    \        long current = 0;\n        long currentIndex = 0;\n        long sum =\
    \ 0;\n        long sumIndex = 0;\n        long sumOfSquares = 0;\n        long\
    \ sumOfSquaresIndex = 0;\n        long currentSum = 0;\n        long currentSumIndex\
    \ = 0;\n        long currentSumOfSquares = 0;\n        long currentSumOfSquaresIndex\
    \ = 0;\n        long currentMax = 0;\n        long currentMaxIndex = 0;\n    \
    \    long currentMaxOfSquares = 0;\n        long currentMaxOfSquaresIndex = 0;\n\
    \        long currentMin = 0;\n        long currentMinIndex = 0;\n        long\
    \ currentMinOfSquares = 0;\n        long currentMinOfSquaresIndex = 0;\n     \
    \   long currentMinOfSquares = 0;\n        long currentMaxOfSquares = 0;\n   \
    \     long currentMaxOfSquaresIndex = 0;\n        long currentMaxOfSquares = 0;\n\
    \        long currentMinOfSquares = 0;\n        long currentMinOfSquaresIndex\
    \ = 0;\n        long currentMinOfSquares = 0;\n        long currentMaxOfSquares\
    \ = 0;\n        long currentMaxOfSquaresIndex = 0;\n        long currentMaxOfSquares\
    \ = 0;\n        long currentMinOfSquares = 0;\n        long currentMinOfSquaresIndex\
    \ = 0;\n        long currentMinOfSquares = 0;\n        long currentMaxOfSquares\
    \ = 0;\n        long currentMaxOfSquaresIndex = 0;\n        long currentMaxOfSquares\
    \ = 0;\n        long currentMinOfSquares = 0;\n        long currentMinOfSquaresIndex\
    \ = 0;\n        long currentMinOfSquares = 0;\n        long currentMaxOfSquares\
    \ = 0;\n        long currentMaxOfSquaresIndex = 0;\n        long currentMaxOfSquares\
    \ = 0;\n        long currentMinOfSquares = 0;\n        long currentMinOfSquaresIndex\
    \ = 0;\n        long currentMinOfSquares = 0;\n        long currentMaxOfSquares\
    \ = 0;\n        long currentMaxOfSquaresIndex = 0;\n        long currentMaxOfSquares\
    \ = 0;\n        long currentMinOfSquares = 0;\n        long currentMinOfSquaresIndex\
    \ = 0;\n        long currentMinOfSquares = 0;\n        long currentMaxOfSquares\
    \ = 0;\n        long currentMaxOfSquaresIndex = 0;\n        long currentMaxOfSquares\
    \ = 0;\n        long currentMinOfSquares = 0;\n        long currentMinOfSquaresIndex\
    \ = 0;\n        long currentMinOfSquares = 0;\n        long currentMaxOfSquares\
    \ = 0;\n        long currentMaxOfSquaresIndex = 0;\n        long currentMaxOfSquares\
    \ = 0;\n        long currentMinOfSquares = 0;\n        ", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long max = Long.MIN_VALUE;\n      \
    \  for (long i : arr) {\n            if (max < i) {\n                max = i;\n\
    \            }\n        }\n        long start = max;\n        long end = max;\n\
    \        while (end < arr.size()) {\n            end = end + k;\n            if\
    \ (end > arr.size()) {\n                end = arr.size();\n            }\n   \
    \         long mid = start + (end - start) / 2;\n            if (mid > max) {\n\
    \                start = mid;\n            } else {\n                end = mid;\n\
    \            }\n        }\n        result.addAll(Arrays.asList(arr.subList(start,\
    \ end + 1)));\n        return result;", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        Arrays.sort(arr);\n        long maxValue = arr.get(arr.size()\
    \ - 1);\n        long maxIndex = arr.size() - 1;\n        long currentMax = maxValue;\n\
    \        long currentIndex = maxIndex;\n        long currentMaxIndex = 0;\n  \
    \      while (currentIndex >= 0) {\n            if (currentMax > arr.get(currentIndex))\
    \ {\n                currentMax = arr.get(currentIndex);\n                currentMaxIndex\
    \ = currentIndex;\n            }\n            currentIndex--;\n        }\n   \
    \     long currentMaxIndex = currentMaxIndex;\n        while (currentMaxIndex\
    \ >= 0) {\n            if (currentMaxIndex == k - 1) {\n                result.add(currentMax);\n\
    \                break;\n            }\n            if (currentMaxIndex > k -\
    \ 1) {\n                currentMaxIndex--;\n            }\n            currentMaxIndex--;\n\
    \            currentMax = arr.get(currentMaxIndex);\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long maxValue = arr.get(arr.size() - 1);\n        long maxIndex = arr.size()\
    \ - 1;\n        long currentMaxValue = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMaxCount = 0;\n        for (long i = 0; i <\
    \ arr.size(); i++) {\n            if (arr.get(i) == maxValue) {\n            \
    \    currentMaxCount++;\n                if (currentMaxCount > k) {\n        \
    \            result.add(maxValue);\n                    break;\n             \
    \   }\n            }\n            if (arr.get(i) > maxValue) {\n             \
    \   currentMaxValue = arr.get(i);\n                currentMaxIndex = i;\n    \
    \            currentMaxCount = 1;\n            }\n        }\n        result.add(maxValue);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = 0;\n        long min = 0;\n        for (long i : arr) {\n\
    \            if (max < i) {\n                max = i;\n            }\n       \
    \     if (min > i) {\n                min = i;\n            }\n        }\n   \
    \     if (max > min) {\n            long mid = (max + min) / 2;\n            ArrayList<Long>\
    \ left = new ArrayList<>();\n            ArrayList<Long> right = new ArrayList<>();\n\
    \            for (long i : arr) {\n                if (i < mid) {\n          \
    \          left.add(i);\n                } else {\n                    right.add(i);\n\
    \                }\n            }\n            ArrayList<Long> leftMax = maximum(left,\
    \ k);\n            ArrayList<Long> rightMax = maximum(right, k);\n           \
    \ ArrayList<Long> result = new ArrayList<>(leftMax);\n            result.addAll(rightMax);\n\
    \            Collections.sort(result);\n            if (result.size() > k) {\n\
    \                result.subList(k, result.size()).clear();\n            }\n  \
    \          result = new ArrayList<>(result);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long max = 0;\n  \
    \      long temp = 0;\n        for(int i = 0; i < arr.size(); i++) {\n       \
    \     temp = arr.get(i);\n            if(temp > max) {\n                max =\
    \ temp;\n            }\n        }\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            temp = arr.get(i);\n            if(temp > max) {\n          \
    \      result.add(temp);\n            }\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long max = arr.get(0);\n\
    \        long maxIndex = 0;\n        long currentMax = max;\n        for(int i\
    \ = 1; i < arr.size(); i++) {\n            long current = arr.get(i);\n      \
    \      if(current > max) {\n                max = current;\n                maxIndex\
    \ = i;\n            }\n        }\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            long current = arr.get(i);\n            if(current == max) {\n\
    \                result.add(max);\n                result.add(maxIndex);\n   \
    \             break;\n            }\n        }\n        return result;", "   \
    \     ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long max = arr.get(arr.size() - 1);\n        long maxIndex = 0;\n   \
    \     long currentMax = max;\n        long currentMaxIndex = 0;\n        boolean\
    \ isMax = true;\n        for (int i = 0; i < arr.size(); i++) {\n            if\
    \ (arr.get(i) == max) {\n                isMax = true;\n                currentMax\
    \ = max;\n                currentMaxIndex = i;\n            }\n            if\
    \ (arr.get(i) > max) {\n                isMax = false;\n            }\n      \
    \      if (isMax) {\n                max = arr.get(i);\n                maxIndex\
    \ = i;\n            }\n        }\n        ArrayList<Long> temp = new ArrayList<>();\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (i == maxIndex)\
    \ {\n                temp.add(arr.get(i));\n            }\n        }\n       \
    \ result.addAll(temp);\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        long max = 0;\n        long min = 0;\n   \
    \     long sum = 0;\n        for (long i : arr) {\n            sum += i;\n   \
    \         if (sum > max) {\n                max = sum;\n            }\n      \
    \      if (sum < min) {\n                min = sum;\n            }\n        }\n\
    \        if (max < k) {\n            max = k;\n        }\n        if (min > k)\
    \ {\n            min = k;\n        }\n        long mid = min + (max - min) / 2;\n\
    \        for (long i : arr) {\n            if (i < mid) {\n                result.add(i);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        Arrays.sort(arr);\n        long max = 0;\n\
    \        long cur = 0;\n        long max2 = 0;\n        long cur2 = 0;\n     \
    \   for (long i = 0; i < arr.size(); i++) {\n            if (max < arr.get(i))\
    \ {\n                max = arr.get(i);\n                cur = i;\n           \
    \ }\n            if (max2 < arr.get(i)) {\n                max2 = arr.get(i);\n\
    \                cur2 = i;\n            }\n        }\n        if (cur == cur2)\
    \ {\n            while (cur < cur2) {\n                result.add(arr.get(cur));\n\
    \                cur++;\n            }\n        } else {\n            while (cur\
    \ < cur2) {\n                result.add(arr.get(cur));\n                cur++;\n\
    \            }\n            while (cur2 < cur) {\n                result.add(arr.get(cur2));\n\
    \                cur2++;\n            }\n        }\n        if (result.size()\
    \ > k) {\n            result = result.subList(0, k);\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ max = 0;\n        long min = Long.MAX_VALUE;\n        for (long i : arr) {\n\
    \            if (max < i) {\n                max = i;\n            }\n       \
    \     if (min > i) {\n                min = i;\n            }\n        }\n   \
    \     if (max > min) {\n            long mid = (max + min) / 2;\n            ArrayList<Long>\
    \ left = new ArrayList<>();\n            ArrayList<Long> right = new ArrayList<>();\n\
    \            for (long i : arr) {\n                if (i < mid) {\n          \
    \          left.add(i);\n                } else {\n                    right.add(i);\n\
    \                }\n            }\n            left = maximum(left, k - left.size());\n\
    \            right = maximum(right, k - right.size());\n            ArrayList<Long>\
    \ leftMax = maximum(left, k);\n            ArrayList<Long> rightMax = maximum(right,\
    \ k);\n            ArrayList<Long> merged = new ArrayList<>();\n            merged.addAll(leftMax);\n\
    \            merged.addAll(rightMax);\n            merged.addAll(left);\n    \
    \        merged.addAll(right);\n            result = merged;\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       long max = 0;\n        long temp = 0;\n        for (long i : arr) {\n\
    \            if (max < i) {\n                max = i;\n            }\n       \
    \ }\n        for (long i : arr) {\n            if (max < i) {\n              \
    \  temp = i;\n            }\n        }\n        if (temp > k) {\n            k\
    \ = temp;\n        }\n        for (long i : arr) {\n            if (max < i) {\n\
    \                result.add(i);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        if (arr.size() > k) {\n            k = arr.size();\n        }\n     \
    \   long max = 0;\n        long maxIndex = 0;\n        for (int i = 0; i < k;\
    \ i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n\
    \                maxIndex = i;\n            }\n        }\n        result.add(max);\n\
    \        for (int i = maxIndex + 1; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ > max) {\n                max = arr.get(i);\n            }\n        }\n    \
    \    result.add(max);\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n   \
    \     long maxIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n    \
    \        if(arr.get(i) > max) {\n                max = arr.get(i);\n         \
    \       maxIndex = i;\n            }\n        }\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            if(arr.get(i) == max) {\n                result.add(arr.get(maxIndex));\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = arr.get(arr.size()\
    \ - 1);\n        for (int i = 0; i < k; i++) {\n            if (arr.get(i) > max)\
    \ {\n                max = arr.get(i);\n            }\n        }\n        result.add(max);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long max = 0;\n        long cur = 0;\n   \
    \     for (long i : arr) {\n            if (max < i) {\n                max =\
    \ i;\n                cur = i;\n            }\n            if (cur == k) {\n \
    \               result.add(max);\n                cur = 0;\n                max\
    \ = 0;\n            }\n        }\n        if (max > 0) {\n            result.add(max);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        Arrays.sort(arr);\n        long max = 0;\n        long maxIndex = 0;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > max)\
    \ {\n                max = arr.get(i);\n                maxIndex = i;\n      \
    \      }\n        }\n        while(maxIndex < arr.size() && arr.size() > k) {\n\
    \            result.add(arr.get(maxIndex));\n            maxIndex++;\n       \
    \ }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = 0;\n        long min = 0;\n        for (long i : arr) {\n\
    \            if (max < i) {\n                max = i;\n            }\n       \
    \     if (min > i) {\n                min = i;\n            }\n        }\n   \
    \     long mid = min + (max - min) / 2;\n        long mid2 = mid / 2;\n      \
    \  long mid3 = mid2 / 2;\n        long mid4 = mid3 / 2;\n        long mid5 = mid4\
    \ / 2;\n        long mid6 = mid5 / 2;\n        long mid7 = mid6 / 2;\n       \
    \ long mid8 = mid7 / 2;\n        long mid9 = mid8 / 2;\n        long mid10 = mid9\
    \ / 2;\n        long mid11 = mid10 / 2;\n        long mid12 = mid11 / 2;\n   \
    \     long mid13 = mid12 / 2;\n        long mid14 = mid13 / 2;\n        long mid15\
    \ = mid14 / 2;\n        long mid16 = mid15 / 2;\n        long mid17 = mid16 /\
    \ 2;\n        long mid18 = mid17 / 2;\n        long mid19 = mid18 / 2;\n     \
    \   long mid20 = mid19 / 2;\n        long mid21 = mid20 / 2;\n        long mid22\
    \ = mid21 / 2;\n        long mid23 = mid22 / 2;\n        long mid24 = mid23 /\
    \ 2;\n        long mid25 = mid24 / 2;\n        long mid26 = mid25 / 2;\n     \
    \   long mid27 = mid26 / 2;\n        long mid28 = mid27 / 2;\n        long mid29\
    \ = mid28 / 2;\n        long mid30 = mid29 / 2;\n        long mid31 = mid30 /\
    \ 2;\n        long mid32 = mid31 / 2;\n        long mid33 = mid32 / 2;\n     \
    \   long mid34 = mid33 / 2;\n        long mid35 = mid34 / 2;\n        long mid36\
    \ = mid35 / 2;\n        long mid37 = mid36 / 2;\n        long mid38 = mid37 /\
    \ 2;\n        long mid39 = mid38 / 2;\n        long mid40 = mid39 / 2;\n     \
    \   long mid41 = mid40 / 2;\n        long mid42 = mid41 / 2;\n        long mid43\
    \ = mid42 / 2;\n        long mid44 = mid43 / 2;\n        long mid45 = mid44 /\
    \ 2;\n        long mid46 = mid45 / 2;\n        long mid47 = mid46 / 2;\n     \
    \   long ", "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long max = arr.get(arr.size() - 1);\n        long maxIndex = 0;\n   \
    \     for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) == max)\
    \ {\n                maxIndex = i;\n            }\n        }\n        ArrayList<Long>\
    \ newArr = new ArrayList<>();\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (i < maxIndex) {\n                newArr.add(arr.get(i));\n  \
    \          }\n        }\n        result.addAll(newArr);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long max = arr.get(k);\n        for (int i = 0; i < k; i++) {\n     \
    \       if (arr.get(i) > max) {\n                max = arr.get(i);\n         \
    \   }\n        }\n        result.add(max);\n        return result;", "       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        Arrays.sort(arr);\n\
    \        long max = arr.get(arr.size() - 1);\n        long maxIndex = 0;\n   \
    \     long maxIndex2 = 0;\n        long maxIndex3 = 0;\n        long maxIndex4\
    \ = 0;\n        long maxIndex5 = 0;\n        long maxIndex6 = 0;\n        long\
    \ maxIndex7 = 0;\n        long maxIndex8 = 0;\n        long maxIndex9 = 0;\n \
    \       long maxIndex10 = 0;\n        long maxIndex11 = 0;\n        long maxIndex12\
    \ = 0;\n        long maxIndex13 = 0;\n        long maxIndex14 = 0;\n        long\
    \ maxIndex15 = 0;\n        long maxIndex16 = 0;\n        long maxIndex17 = 0;\n\
    \        long maxIndex18 = 0;\n        long maxIndex19 = 0;\n        long maxIndex20\
    \ = 0;\n        long maxIndex21 = 0;\n        long maxIndex22 = 0;\n        long\
    \ maxIndex23 = 0;\n        long maxIndex24 = 0;\n        long maxIndex25 = 0;\n\
    \        long maxIndex26 = 0;\n        long maxIndex27 = 0;\n        long maxIndex28\
    \ = 0;\n        long maxIndex29 = 0;\n        long maxIndex30 = 0;\n        long\
    \ maxIndex31 = 0;\n        long maxIndex32 = 0;\n        long maxIndex33 = 0;\n\
    \        long maxIndex34 = 0;\n        long maxIndex35 = 0;\n        long maxIndex36\
    \ = 0;\n        long maxIndex37 = 0;\n        long maxIndex38 = 0;\n        long\
    \ maxIndex39 = 0;\n        long maxIndex40 = 0;\n        long maxIndex41 = 0;\n\
    \        long maxIndex42 = 0;\n        long maxIndex43 = 0;\n        long maxIndex44\
    \ = 0;\n        long maxIndex45 = 0;\n        long maxIndex46 = 0;\n        long\
    \ maxIndex47 = 0;\n        long maxIndex48 = 0;\n        long maxIndex49 = 0;\n\
    \        long maxIndex50 = 0;\n        long maxIndex51 = 0;\n        long maxIndex52\
    \ = 0;\n        long maxIndex53 = 0;\n        long maxIndex54 = 0;\n        long\
    \ maxIndex55 = 0;\n        long maxIndex56 = 0;\n        long maxIndex57 = 0;\n\
    \        long maxIndex58 = 0;\n        long maxIndex59 = 0;\n        long maxIndex60\
    \ = 0;\n        long maxIndex61 = 0;\n        long maxIndex62 = 0;\n        long\
    \ maxIndex63 = 0;\n        long maxIndex64 = 0;\n        long maxIndex65 = 0;\n\
    \        long maxIndex66 = 0;\n        long maxIndex67 = 0;\n        long maxIndex68\
    \ = 0;\n        long maxIndex69 = 0;\n        long maxIndex70 = 0;\n        ",
  "        ArrayList<Long> result = new ArrayList<>();\n        long max = 0;\n  \
    \      long min = Long.MAX_VALUE;\n        for(long i : arr) {\n            max\
    \ = Math.max(max, i);\n            min = Math.min(min, i);\n        }\n      \
    \  long mid = min + (max - min) / 2;\n        for(long i : arr) {\n          \
    \  if(i <= mid) {\n                result.add(i);\n            }\n        }\n\
    \        if(result.size() > k) {\n            result = result.subList(0, k);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = Long.MIN_VALUE;\n        for (long i : arr) {\n          \
    \  if (max < i) {\n                max = i;\n            }\n        }\n      \
    \  if (max < k) {\n            k = max;\n        }\n        long mid = max / k;\n\
    \        long left = 0;\n        long right = 0;\n        for (long i = mid; i\
    \ > 0; i /= 2) {\n            left = i;\n            right = i - 1;\n        \
    \    if (left > k) {\n                left = k;\n            }\n            if\
    \ (right > k) {\n                right = k;\n            }\n            ArrayList<Long>\
    \ leftMax = maximum(arr, left);\n            ArrayList<Long> rightMax = maximum(arr,\
    \ right);\n            ArrayList<Long> max = new ArrayList<>();\n            max.addAll(leftMax);\n\
    \            max.addAll(rightMax);\n            max.addAll(leftMax);\n       \
    \     max.addAll(rightMax);\n            result.addAll(max);\n        }\n    \
    \    return result;", "        ArrayList<Long> res = new ArrayList<>();\n    \
    \    long max = 0;\n        long min = 0;\n        long maxIndex = 0;\n      \
    \  long minIndex = 0;\n        long maxValue = arr.get(0);\n        long minValue\
    \ = arr.get(0);\n        long maxIndexValue = arr.get(0);\n        long minIndexValue\
    \ = arr.get(0);\n        for(int i = 0; i < arr.size(); i++) {\n            max\
    \ = Math.max(max, arr.get(i));\n            min = Math.min(min, arr.get(i));\n\
    \            maxIndex = i;\n            minIndex = i;\n            maxValue =\
    \ arr.get(i);\n            minValue = arr.get(i);\n            maxIndexValue =\
    \ arr.get(i);\n            minIndexValue = arr.get(i);\n        }\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            if(maxIndex == i) {\n           \
    \     res.add(maxValue);\n                maxIndex++;\n                maxIndexValue\
    \ = maxValue;\n            }\n            if(minIndex == i) {\n              \
    \  res.add(minValue);\n                minIndex++;\n                minIndexValue\
    \ = minValue;\n            }\n            if(maxIndexValue > arr.get(i)) {\n \
    \               maxIndex++;\n                maxIndexValue = arr.get(i);\n   \
    \         }\n            if(minIndexValue < arr.get(i)) {\n                minIndex++;\n\
    \                minIndexValue = arr.get(i);\n            }\n        }\n     \
    \   for(int i = 0; i < arr.size(); i++) {\n            if(maxIndex == i) {\n \
    \               res.add(maxValue);\n                maxIndex++;\n            \
    \    maxIndexValue = maxValue;\n            }\n            if(minIndex == i) {\n\
    \                res.add(minValue);\n                minIndex++;\n           \
    \     minIndexValue = minValue;\n            }\n            if(maxIndexValue >\
    \ arr.get(i)) {\n                maxIndex++;\n                maxIndexValue =\
    \ arr.get(i);\n            }\n            if(minIndexValue < arr.get(i)) {\n \
    \               minIndex++;\n                minIndexValue = arr.get(i);\n   \
    \         }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n      \
    \      if(maxIndex == i) {\n                res.add(maxValue);\n             \
    \   maxIndex++;\n                maxIndexValue = maxValue;\n            }\n  \
    \          if(minIndex == i) {\n                res.add(minValue);\n         \
    \       minIndex++;\n                minIndexValue = minValue;\n            }\n\
    \            if(maxIndexValue > arr.get(i)) {\n                maxIndex++;\n \
    \               maxIndexValue = arr.get(i);\n            }\n            if(minIndexValue\
    \ < arr.get(i)) {\n                minIndex++;\n                minIndexValue\
    \ = arr.get(i);\n            }\n        }\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            if(maxIndex == i) {\n                res.add(maxValue);\n\
    \                maxIndex++;\n                maxIndexValue = maxValue;\n    \
    \        }\n            if(minIndex == i) {\n                res.add(minValue);\n\
    \                minIndex++;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long max = 0;\n        for (long i : arr) {\n            if (max < i)\
    \ {\n                max = i;\n            }\n        }\n        long start =\
    \ 0;\n        long end = arr.size() - 1;\n        while (start <= end) {\n   \
    \         long mid = (start + end) / 2;\n            if (arr[mid] > max) {\n \
    \               end = mid - 1;\n            } else {\n                start =\
    \ mid + 1;\n            }\n        }\n        if (start > end) {\n           \
    \ while (start <= end) {\n                result.add(arr[start]);\n          \
    \      start++;\n            }\n        } else {\n            while (start <=\
    \ end) {\n                result.add(arr[end]);\n                end--;\n    \
    \        }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        long max = arr.get(0);\n        long maxIndex\
    \ = 0;\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ > max) {\n                max = arr.get(i);\n                maxIndex = i;\n\
    \            }\n        }\n        for (int i = 0; i < k; i++) {\n           \
    \ result.add(max);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n\
    \        long maxIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) > max) {\n                max = arr.get(i);\n    \
    \            maxIndex = i;\n            }\n        }\n        ArrayList<Long>\
    \ newArr = new ArrayList<>();\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (i == maxIndex) {\n                newArr.add(arr.get(i));\n \
    \           } else {\n                newArr.add(arr.get(i));\n            }\n\
    \        }\n        result.addAll(newArr);\n        return result;", "       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long max = 0;\n       \
    \ for (long num : arr) {\n            if (num > max) {\n                max =\
    \ num;\n            }\n        }\n        if (max > k) {\n            max = k;\n\
    \        }\n        long start = 0;\n        long end = arr.size() - 1;\n    \
    \    while (start <= end) {\n            long mid = (start + end) / 2;\n     \
    \       if (arr[mid] > max) {\n                end = mid - 1;\n            } else\
    \ {\n                start = mid + 1;\n            }\n        }\n        result.addAll(Arrays.asList(arr.subList(start,\
    \ end + 1)));\n        return result;", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        Arrays.sort(arr);\n        long max = 0;\n     \
    \   long cur = 0;\n        for (long i : arr) {\n            if (max < i) {\n\
    \                max = i;\n                cur = i;\n            }\n        }\n\
    \        if (max >= k) {\n            for (long i : arr) {\n                if\
    \ (i == cur) {\n                    result.add(cur);\n                }\n    \
    \        }\n        }\n        return result;", "        ArrayList<Long> res =\
    \ new ArrayList<Long>();\n        long max = 0;\n        long min = 0;\n     \
    \   long maxIndex = 0;\n        long minIndex = 0;\n        long maxVal = 0;\n\
    \        long minVal = 0;\n        long maxIndex2 = 0;\n        long minIndex2\
    \ = 0;\n        long maxVal2 = 0;\n        long minVal2 = 0;\n        long maxIndex3\
    \ = 0;\n        long minIndex3 = 0;\n        long maxVal3 = 0;\n        long minVal3\
    \ = 0;\n        long maxIndex4 = 0;\n        long minIndex4 = 0;\n        long\
    \ maxVal4 = 0;\n        long minVal4 = 0;\n        long maxIndex5 = 0;\n     \
    \   long minIndex5 = 0;\n        long maxVal5 = 0;\n        long minVal5 = 0;\n\
    \        long maxIndex6 = 0;\n        long minIndex6 = 0;\n        long maxVal6\
    \ = 0;\n        long minVal6 = 0;\n        long maxIndex7 = 0;\n        long minIndex7\
    \ = 0;\n        long maxVal7 = 0;\n        long minVal7 = 0;\n        long maxIndex8\
    \ = 0;\n        long minIndex8 = 0;\n        long maxVal8 = 0;\n        long minVal8\
    \ = 0;\n        long maxIndex9 = 0;\n        long minIndex9 = 0;\n        long\
    \ maxVal9 = 0;\n        long minVal9 = 0;\n        long maxIndex10 = 0;\n    \
    \    long minIndex10 = 0;\n        long maxVal10 = 0;\n        long minVal10 =\
    \ 0;\n        long maxIndex11 = 0;\n        long minIndex11 = 0;\n        long\
    \ maxVal11 = 0;\n        long minVal11 = 0;\n        long maxIndex12 = 0;\n  \
    \      long minIndex12 = 0;\n        long maxVal12 = 0;\n        long minVal12\
    \ = 0;\n        long maxIndex13 = 0;\n        long minIndex13 = 0;\n        long\
    \ maxVal13 = 0;\n        long minVal13 = 0;\n        long maxIndex14 = 0;\n  \
    \      long minIndex14 = 0;\n        long maxVal14 = 0;\n        long minVal14\
    \ = 0;\n        long maxIndex15 = 0;\n        long minIndex15 = 0;\n        long\
    \ maxVal15 = 0;\n        long minVal15 = 0;\n        long maxIndex16 = 0;\n  \
    \      long minIndex16 = 0;\n        long maxVal16 = 0;\n        long minVal16\
    \ = 0;\n        long maxIndex17 = 0;\n        long minIndex17 = 0;\n        long\
    \ maxVal17 = 0;\n        long minVal17 = 0;\n        long maxIndex18 = 0;\n  \
    \      long minIndex18 = 0;\n        long maxVal18 = 0;\n        long minVal18\
    \ = 0;\n        long maxIndex19 = 0;\n        ", "        ArrayList<Long> res\
    \ = new ArrayList<Long>();\n        long max = 0;\n        long min = Long.MAX_VALUE;\n\
    \        for (long i : arr) {\n            if (i < min) {\n                min\
    \ = i;\n            }\n            if (i > max) {\n                max = i;\n\
    \            }\n        }\n        if (max > k) {\n            return res;\n \
    \       }\n        long mid = max - (k - 1);\n        long mid2 = max - k;\n \
    \       long mid3 = max - mid;\n        long mid4 = max - mid2;\n        long\
    \ mid5 = max - mid3;\n        long mid6 = max - mid4;\n        long mid7 = max\
    \ - mid5;\n        long mid8 = max - mid6;\n        long mid9 = max - mid7;\n\
    \        long mid10 = max - mid8;\n        long mid11 = max - mid9;\n        long\
    \ mid12 = max - mid10;\n        long mid13 = max - mid11;\n        long mid14\
    \ = max - mid12;\n        long mid15 = max - mid13;\n        long mid16 = max\
    \ - mid14;\n        long mid17 = max - mid15;\n        long mid18 = max - mid16;\n\
    \        long mid19 = max - mid17;\n        long mid20 = max - mid18;\n      \
    \  long mid21 = max - mid19;\n        long mid22 = max - mid20;\n        long\
    \ mid23 = max - mid21;\n        long mid24 = max - mid22;\n        long mid25\
    \ = max - mid23;\n        long mid26 = max - mid24;\n        long mid27 = max\
    \ - mid25;\n        long mid28 = max - mid26;\n        long mid29 = max - mid27;\n\
    \        long mid30 = max - mid28;\n        long mid31 = max - mid29;\n      \
    \  long mid32 = max - mid30;\n        long mid33 = max - mid31;\n        long\
    \ mid34 = max - mid32;\n        long mid35 = max - mid33;\n        long mid36\
    \ = max - mid34;\n        long mid37 = max - mid35;\n        long mid38 = max\
    \ - mid36;\n        long mid39 = max - mid37;\n        long mid40 = max - mid38;\n\
    \        long mid41 = max - mid39;\n        long mid42 = max - mid40;\n      \
    \  long mid43 = max - mid41;\n        long mid44 = max - mid42;\n        long\
    \ mid45 = max - mid43;\n        long mid46 = max - mid44;\n        long mid47\
    \ = max - mid45;\n        long mid48 = max - mid4", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        ArrayList<Long> temp = new ArrayList<>();\n  \
    \      long max = 0;\n        long min = 0;\n        long sum = 0;\n        long\
    \ count = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4\
    \ = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n\
    \        long sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n   \
    \     long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n    \
    \    long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n     \
    \   long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n      \
    \  long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n       \
    \ long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long\
    \ sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29\
    \ = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 =\
    \ 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n\
    \        long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n \
    \       long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n  \
    \      long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n   \
    \     long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n    \
    \    long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n     \
    \   long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n      \
    \  long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n       \
    \ long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long\
    \ sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63\
    \ = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long sum66 =\
    \ 0;\n        long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n\
    \        long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n \
    \       long sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n  \
    \      long sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n   \
    \     long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;", "  \
    \      ArrayList<Long> result = new ArrayList<Long>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        for (long i : arr) {\n            if (max < i)\
    \ {\n                max = i;\n            }\n        }\n        if (max >= k)\
    \ {\n            max = k - 1;\n        }\n        for (long i : arr) {\n     \
    \       if (max < i) {\n                result.add(i);\n                max +=\
    \ i;\n            }\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        Arrays.sort(arr);\n        long maxValue\
    \ = arr.get(arr.size() - 1);\n        long maxIndex = arr.size() - 1;\n      \
    \  long maxIndexValue = arr.get(arr.size() - 1);\n        while (maxIndex > 0\
    \ && maxIndexValue == maxValue) {\n            maxIndex--;\n            maxIndexValue\
    \ = arr.get(maxIndex);\n        }\n        if (maxIndex > 0) {\n            result.add(maxValue);\n\
    \            while (maxIndex > 0 && maxIndexValue == maxValue) {\n           \
    \     maxIndex--;\n                maxIndexValue = arr.get(maxIndex);\n      \
    \      }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long max = arr.get(0);\n        long maxIndex\
    \ = 0;\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ > max) {\n                max = arr.get(i);\n                maxIndex = i;\n\
    \            }\n        }\n        for(int i = 0; i < k; i++) {\n            result.add(max);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        Arrays.sort(arr);\n        long max = 0;\n        long maxIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) >\
    \ max) {\n                max = arr.get(i);\n                maxIndex = i;\n \
    \           }\n        }\n        result.add(max);\n        if (arr.size() > k)\
    \ {\n            ArrayList<Long> newArr = new ArrayList<Long>();\n           \
    \ for (int i = maxIndex; i < arr.size(); i++) {\n                newArr.add(arr.get(i));\n\
    \            }\n            result = maximum(result, k);\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ max = 0;\n        long min = 0;\n        long sum = 0;\n        for (long i\
    \ : arr) {\n            sum += i;\n            if (sum > max) {\n            \
    \    max = sum;\n            }\n            if (sum < min) {\n               \
    \ min = sum;\n            }\n        }\n        long temp = 0;\n        for (long\
    \ i : arr) {\n            temp = max - i;\n            if (temp > k) {\n     \
    \           result.add(temp);\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long maxValue = arr.get(arr.size() - 1);\n        long maxIndex = arr.size()\
    \ - 1;\n        long currentMax = maxValue;\n        long currentIndex = maxIndex;\n\
    \        while (currentIndex >= 0) {\n            if (currentMax < arr.get(currentIndex))\
    \ {\n                currentMax = arr.get(currentIndex);\n                currentIndex\
    \ = currentIndex - 1;\n            } else {\n                result.add(currentMax);\n\
    \                currentMax = arr.get(currentIndex);\n                currentIndex\
    \ = currentIndex - 1;\n            }\n        }\n        result.add(currentMax);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        ArrayList<Long> tmp = new ArrayList<>();\n        long max = 0;\n   \
    \     long min = 0;\n        for (long i : arr) {\n            if (i < min) {\n\
    \                min = i;\n            }\n            if (i > max) {\n       \
    \         max = i;\n            }\n        }\n        long mid = max + (max -\
    \ min) / 2;\n        long mid2 = mid / 2;\n        long mid3 = mid2 / 2;\n   \
    \     long mid4 = mid3 / 2;\n        long mid5 = mid4 / 2;\n        long mid6\
    \ = mid5 / 2;\n        long mid7 = mid6 / 2;\n        long mid8 = mid7 / 2;\n\
    \        long mid9 = mid8 / 2;\n        long mid10 = mid9 / 2;\n        long mid11\
    \ = mid10 / 2;\n        long mid12 = mid11 / 2;\n        long mid13 = mid12 /\
    \ 2;\n        long mid14 = mid13 / 2;\n        long mid15 = mid14 / 2;\n     \
    \   long mid16 = mid15 / 2;\n        long mid17 = mid16 / 2;\n        long mid18\
    \ = mid17 / 2;\n        long mid19 = mid18 / 2;\n        long mid20 = mid19 /\
    \ 2;\n        long mid21 = mid20 / 2;\n        long mid22 = mid21 / 2;\n     \
    \   long mid23 = mid22 / 2;\n        long mid24 = mid23 / 2;\n        long mid25\
    \ = mid24 / 2;\n        long mid26 = mid25 / 2;\n        long mid27 = mid26 /\
    \ 2;\n        long mid28 = mid27 / 2;\n        long mid29 = mid28 / 2;\n     \
    \   long mid30 = mid29 / 2;\n        long mid31 = mid30 / 2;\n        long mid32\
    \ = mid31 / 2;\n        long mid33 = mid32 / 2;\n        long mid34 = mid33 /\
    \ 2;\n        long mid35 = mid34 / 2;\n        long mid36 = mid35 / 2;\n     \
    \   long mid37 = mid36 / 2;\n        long mid38 = mid37 / 2;\n        long mid39\
    \ = mid38 / 2;\n        long mid40 = mid39 / 2;\n        long mid41 = mid40 /\
    \ 2;\n        long mid42 = mid41 / 2;\n        long mid43 = mid42 / 2;\n     \
    \   long mid44 = mid43 / 2;\n        long mid45 = mid44 / 2;\n        long mid46\
    \ = mid45 / 2;\n        long mid", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = 0;\n        for (long i : arr) {\n            if (max < i)\
    \ {\n                max = i;\n            }\n        }\n        long maxIndex\
    \ = -1;\n        for (long i : arr) {\n            if (max < i) {\n          \
    \      result.add(max);\n                maxIndex = arr.indexOf(i);\n        \
    \    }\n        }\n        if (maxIndex != -1) {\n            result.add(max);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = 0;\n        long min = Long.MAX_VALUE;\n        for (long\
    \ i : arr) {\n            if (max < i) {\n                max = i;\n         \
    \   }\n            if (min > i) {\n                min = i;\n            }\n \
    \       }\n        if (max > min) {\n            long mid = (max + min) / 2;\n\
    \            for (long i : arr) {\n                if (i > mid) {\n          \
    \          result.add(i);\n                }\n            }\n        }\n     \
    \   return result;", "        ArrayList<Long> result = new ArrayList<>();\n  \
    \      Arrays.sort(arr);\n        long max = 0;\n        long maxIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) >\
    \ max) {\n                max = arr.get(i);\n                maxIndex = i;\n \
    \           }\n        }\n        if (maxIndex == arr.size() - 1) {\n        \
    \    result.add(max);\n        } else {\n            result.add(max, maxIndex);\n\
    \        }\n        if (result.size() > k) {\n            ArrayList<Long> newResult\
    \ = new ArrayList<>();\n            int start = 0;\n            int end = result.size()\
    \ - 1;\n            while (start < end) {\n                long mid = (start +\
    \ end) / 2;\n                if (result.get(mid) > result.get(mid + 1)) {\n  \
    \                  end = mid - 1;\n                } else {\n                \
    \    start = mid + 1;\n                }\n            }\n            newResult.addAll(result);\n\
    \            newResult.removeAll(result.subList(start, result.size()));\n    \
    \        result = newResult;\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n\
    \        long maxIndex = 0;\n        long maxValue = arr.get(0);\n        for\
    \ (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > maxValue) {\n\
    \                maxValue = arr.get(i);\n                maxIndex = i;\n     \
    \       }\n        }\n        if (maxIndex == k) {\n            result.add(maxValue);\n\
    \        } else {\n            for (int i = maxIndex; i < k; i++) {\n        \
    \        result.add(arr.get(i));\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        long cur = 0;\n        long curMax = 0;\n    \
    \    long curMaxIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           max = Math.max(max, arr.get(i));\n            if (max != 0) {\n  \
    \              cur = arr.get(i);\n                curMax = max;\n            \
    \    curMaxIndex = i;\n            }\n        }\n        if (curMaxIndex + 1 ==\
    \ arr.size()) {\n            result.add(cur);\n        } else {\n            for\
    \ (int i = curMaxIndex + 1; i < arr.size(); i++) {\n                max = Math.max(max,\
    \ arr.get(i));\n                if (max != 0) {\n                    cur = arr.get(i);\n\
    \                    curMax = max;\n                    curMaxIndex = i;\n   \
    \             }\n            }\n            result.add(cur);\n        }\n    \
    \    if (curMaxIndex + 1 < arr.size()) {\n            for (int i = curMaxIndex\
    \ + 1; i < arr.size(); i++) {\n                max = Math.max(max, arr.get(i));\n\
    \                if (max != 0) {\n                    cur = arr.get(i);\n    \
    \                curMax = max;\n                    curMaxIndex = i;\n       \
    \         }\n            }\n            result.add(cur);\n        }\n        if\
    \ (curMaxIndex + 2 < arr.size()) {\n            for (int i = curMaxIndex + 2;\
    \ i < arr.size(); i++) {\n                max = Math.max(max, arr.get(i));\n \
    \               if (max != 0) {\n                    cur = arr.get(i);\n     \
    \               curMax = max;\n                    curMaxIndex = i;\n        \
    \        }\n            }\n            result.add(cur);\n        }\n        if\
    \ (curMaxIndex + 3 < arr.size()) {\n            for (int i = curMaxIndex + 3;\
    \ i < arr.size(); i++) {\n                max = Math.max(max, arr.get(i));\n \
    \               if (max != 0) {\n                    cur = arr.get(i);\n     \
    \               curMax = max;\n                    curMaxIndex = i;\n        \
    \        }\n            }\n            result.add(cur);\n        }\n        if\
    \ (curMaxIndex + 4 < arr.size()) {\n            for (int i = curMaxIndex + 4;\
    \ i < arr.size(); i++) {\n                max = Math.max(max, arr.get(i));\n \
    \               if (max != 0) {\n                    cur = arr.get(i);\n     \
    \               curMax = max;\n                    curMaxIndex = i;\n        \
    \        }\n            }\n            result.add(cur);\n        }\n        if\
    \ (curMaxIndex + 5 < arr.size()) {\n            for (int i = curMaxIndex + 5;\
    \ i < arr.size(); i++) {\n                max = Math.max(max, arr.get(i));\n \
    \               if (max != 0) {\n                    cur = arr.get(i);\n     \
    \               curMax = max;\n                    curMaxIndex = i;\n        \
    \        }\n            }\n            result.add(cur);\n        }\n        if\
    \ (curMaxIndex + 6 < ", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = 0;\n        long temp = 0;\n        long temp2 = 0;\n    \
    \    long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n     \
    \   long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n      \
    \  long temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n     \
    \   long temp12 = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n   \
    \     long temp15 = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n \
    \       long temp18 = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n\
    \        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n\
    \        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n\
    \        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n\
    \        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n\
    \        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n\
    \        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n\
    \        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n\
    \        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n\
    \        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n\
    \        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n\
    \        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n\
    \        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n\
    \        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n\
    \        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n\
    \        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n\
    \        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n\
    \        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n\
    \        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n\
    \        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n\
    \        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n\
    \        long temp81 = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n\
    \        long temp84 = 0;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long max = arr.get(arr.size() - 1);\n    \
    \    long maxIndex = 0;\n        long maxIndex2 = 0;\n        long maxIndex3 =\
    \ 0;\n        long maxIndex4 = 0;\n        long maxIndex5 = 0;\n        long maxIndex6\
    \ = 0;\n        long maxIndex7 = 0;\n        long maxIndex8 = 0;\n        long\
    \ maxIndex9 = 0;\n        long maxIndex10 = 0;\n        long maxIndex11 = 0;\n\
    \        long maxIndex12 = 0;\n        long maxIndex13 = 0;\n        long maxIndex14\
    \ = 0;\n        long maxIndex15 = 0;\n        long maxIndex16 = 0;\n        long\
    \ maxIndex17 = 0;\n        long maxIndex18 = 0;\n        long maxIndex19 = 0;\n\
    \        long maxIndex20 = 0;\n        long maxIndex21 = 0;\n        long maxIndex22\
    \ = 0;\n        long maxIndex23 = 0;\n        long maxIndex24 = 0;\n        long\
    \ maxIndex25 = 0;\n        long maxIndex26 = 0;\n        long maxIndex27 = 0;\n\
    \        long maxIndex28 = 0;\n        long maxIndex29 = 0;\n        long maxIndex30\
    \ = 0;\n        long maxIndex31 = 0;\n        long maxIndex32 = 0;\n        long\
    \ maxIndex33 = 0;\n        long maxIndex34 = 0;\n        long maxIndex35 = 0;\n\
    \        long maxIndex36 = 0;\n        long maxIndex37 = 0;\n        long maxIndex38\
    \ = 0;\n        long maxIndex39 = 0;\n        long maxIndex40 = 0;\n        long\
    \ maxIndex41 = 0;\n        long maxIndex42 = 0;\n        long maxIndex43 = 0;\n\
    \        long maxIndex44 = 0;\n        long maxIndex45 = 0;\n        long maxIndex46\
    \ = 0;\n        long maxIndex47 = 0;\n        long maxIndex48 = 0;\n        long\
    \ maxIndex49 = 0;\n        long maxIndex50 = 0;\n        long maxIndex51 = 0;\n\
    \        long maxIndex52 = 0;\n        long maxIndex53 = 0;\n        long maxIndex54\
    \ = 0;\n        long maxIndex55 = 0;\n        long maxIndex56 = 0;\n        long\
    \ maxIndex57 = 0;\n        long maxIndex58 = 0;\n        long maxIndex59 = 0;\n\
    \        long maxIndex60 = 0;\n        long maxIndex61 = 0;\n        long maxIndex62\
    \ = 0;\n        long maxIndex63 = 0;\n        long maxIndex64 = 0;\n        long\
    \ maxIndex65 = 0;\n        long maxIndex66 = 0;\n        long maxIndex67 = 0;\n\
    \        long maxIndex68 = 0;\n        long maxIndex69 = 0;\n        long maxIndex70\
    \ = 0;\n        long ", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long max = arr.get(arr.size() - 1);\n    \
    \    long maxIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n    \
    \        if (arr.get(i) == max) {\n                maxIndex = i;\n           \
    \ }\n        }\n        if (maxIndex == arr.size() - 1) {\n            result.add(max);\n\
    \        } else {\n            result.add(max, maxIndex);\n        }\n       \
    \ return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        ArrayList<Long> max = new ArrayList<Long>();\n        ArrayList<Long>\
    \ tmp = new ArrayList<Long>();\n        long maxNum = 0;\n        long minNum\
    \ = Long.MAX_VALUE;\n        long maxNum2 = 0;\n        long minNum2 = Long.MAX_VALUE;\n\
    \        long maxNum3 = 0;\n        long minNum3 = Long.MAX_VALUE;\n        long\
    \ maxNum4 = 0;\n        long minNum4 = Long.MAX_VALUE;\n        long maxNum5 =\
    \ 0;\n        long minNum5 = Long.MAX_VALUE;\n        long maxNum6 = 0;\n    \
    \    long minNum6 = Long.MAX_VALUE;\n        long maxNum7 = 0;\n        long minNum7\
    \ = Long.MAX_VALUE;\n        long maxNum8 = 0;\n        long minNum8 = Long.MAX_VALUE;\n\
    \        long maxNum9 = 0;\n        long minNum9 = Long.MAX_VALUE;\n        long\
    \ maxNum10 = 0;\n        long minNum10 = Long.MAX_VALUE;\n        long maxNum11\
    \ = 0;\n        long minNum11 = Long.MAX_VALUE;\n        long maxNum12 = 0;\n\
    \        long minNum12 = Long.MAX_VALUE;\n        long maxNum13 = 0;\n       \
    \ long minNum13 = Long.MAX_VALUE;\n        long maxNum14 = 0;\n        long minNum14\
    \ = Long.MAX_VALUE;\n        long maxNum15 = 0;\n        long minNum15 = Long.MAX_VALUE;\n\
    \        long maxNum16 = 0;\n        long minNum16 = Long.MAX_VALUE;\n       \
    \ long maxNum17 = 0;\n        long minNum17 = Long.MAX_VALUE;\n        long maxNum18\
    \ = 0;\n        long minNum18 = Long.MAX_VALUE;\n        long maxNum19 = 0;\n\
    \        long minNum19 = Long.MAX_VALUE;\n        long maxNum20 = 0;\n       \
    \ long minNum20 = Long.MAX_VALUE;\n        long maxNum21 = 0;\n        long minNum21\
    \ = Long.MAX_VALUE;\n        long maxNum22 = 0;\n        long minNum22 = Long.MAX_VALUE;\n\
    \        long maxNum23 = 0;\n        long minNum23 = Long.MAX_VALUE;\n       \
    \ long maxNum24 = 0;\n        long minNum24 = Long.MAX_VALUE;\n        long maxNum25\
    \ = 0;\n        long minNum25 = Long.MAX_VALUE;\n        long maxNum26 = 0;\n\
    \        long minNum26 = Long.MAX_VALUE;\n        long maxNum27", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long maxValue\
    \ = arr.get(arr.size() - 1);\n        long maxIndex = arr.size() - 1;\n      \
    \  long maxIndexValue = arr.get(maxIndex);\n        long currentValue = arr.get(0);\n\
    \        long currentIndex = arr.size() - 1;\n        long currentIndexValue =\
    \ arr.get(currentIndex);\n        while (currentIndex > 0 && currentIndexValue\
    \ > maxIndexValue) {\n            currentIndex--;\n            currentIndexValue\
    \ = arr.get(currentIndex);\n        }\n        while (currentIndex > 0 && currentIndexValue\
    \ < maxIndexValue) {\n            currentIndex--;\n            currentIndexValue\
    \ = arr.get(currentIndex);\n        }\n        while (currentIndex < arr.size()\
    \ && currentIndexValue > maxIndexValue) {\n            currentIndex++;\n     \
    \       currentIndexValue = arr.get(currentIndex);\n        }\n        while (currentIndex\
    \ < arr.size() && currentIndexValue < maxIndexValue) {\n            currentIndex++;\n\
    \            currentIndexValue = arr.get(currentIndex);\n        }\n        while\
    \ (currentIndex > 0 && currentIndexValue == maxIndexValue) {\n            currentIndex--;\n\
    \            currentIndexValue = arr.get(currentIndex);\n        }\n        while\
    \ (currentIndex < arr.size() && currentIndexValue == maxIndexValue) {\n      \
    \      currentIndex++;\n            currentIndexValue = arr.get(currentIndex);\n\
    \        }\n        while (currentIndex > 0 && currentIndexValue < maxIndexValue)\
    \ {\n            currentIndex--;\n            currentIndexValue = arr.get(currentIndex);\n\
    \        }\n        while (currentIndex < arr.size() && currentIndexValue < maxIndexValue)\
    \ {\n            currentIndex++;\n            currentIndexValue = arr.get(currentIndex);\n\
    \        }\n        while (currentIndex == arr.size() && currentIndexValue ==\
    \ maxIndexValue) {\n            currentIndex++;\n            currentIndexValue\
    \ = arr.get(currentIndex);\n        }\n        while (currentIndex > 0 && currentIndexValue\
    \ == maxIndexValue) {\n            currentIndex--;\n            currentIndexValue\
    \ = arr.get(currentIndex);\n        }\n        while (currentIndex < arr.size()\
    \ && currentIndexValue == maxIndexValue) {\n            currentIndex++;\n    \
    \        currentIndexValue = arr.get(currentIndex);\n        }\n        while\
    \ (currentIndex == arr.size() && currentIndexValue < maxIndexValue) {\n      \
    \      currentIndex++;\n            currentIndexValue = arr.get(currentIndex);\n\
    \        }\n        while (currentIndex == arr.size() && currentIndexValue > maxIndexValue)\
    \ {\n            currentIndex--;\n            currentIndexValue = arr.get(currentIndex);\n\
    \        }\n        while (currentIndex == arr.size() && currentIndexValue < maxIndexValue)\
    \ {\n            currentIndex--;\n            currentIndexValue = arr.get(currentIndex);\n\
    \        }\n        while (currentIndex == arr.size() && currentIndexValue > maxIndexValue)\
    \ {\n            ", "        ArrayList<Long> res = new ArrayList<>();\n      \
    \  Arrays.sort(arr);\n        long max = 0;\n        for (long i : arr) {\n  \
    \          if (max < i) {\n                max = i;\n            }\n        }\n\
    \        long count = 0;\n        for (long i : arr) {\n            if (i == max)\
    \ {\n                count++;\n            }\n        }\n        if (count > k)\
    \ {\n            max = -1;\n        }\n        for (long i : arr) {\n        \
    \    if (i == max) {\n                res.add(i);\n            }\n        }\n\
    \        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long max = 0;\n        long maxIndex = 0;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > max)\
    \ {\n                max = arr.get(i);\n                maxIndex = i;\n      \
    \      }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n         \
    \   if(arr.get(i) == max) {\n                result.add(arr.get(maxIndex));\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long max = 0;\n        for (long i : arr) {\n\
    \            if (max < i) {\n                max = i;\n            }\n       \
    \ }\n        if (max <= k) {\n            result.add(max);\n            return\
    \ result;\n        }\n        long start = 0;\n        long end = arr.size() -\
    \ 1;\n        while (start < end) {\n            long mid = (start + end) / 2;\n\
    \            if (arr[mid] > k) {\n                end = mid - 1;\n           \
    \ } else {\n                start = mid + 1;\n            }\n        }\n     \
    \   if (arr[start] > k) {\n            result.add(k);\n            return result;\n\
    \        }\n        ArrayList<Long> left = new ArrayList<>();\n        ArrayList<Long>\
    \ right = new ArrayList<>();\n        long mid = start;\n        while (arr[mid]\
    \ < k) {\n            left.add(arr[mid]);\n            mid++;\n        }\n   \
    \     mid = end;\n        while (arr[mid] > k) {\n            right.add(arr[mid]);\n\
    \            mid--;\n        }\n        left.addAll(right);\n        result.addAll(left);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        Arrays.sort(arr);\n        long max = 0;\n        long cur = 0;\n   \
    \     for(long i : arr) {\n            if(i>max) {\n                max = i;\n\
    \                cur = i;\n            }\n        }\n        while(cur<k) {\n\
    \            result.add(cur);\n            cur++;\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        long min = Long.MAX_VALUE;\n        for (long\
    \ i : arr) {\n            if (max < i) {\n                max = i;\n         \
    \   }\n            if (min > i) {\n                min = i;\n            }\n \
    \       }\n        if (max > k) {\n            max = k;\n        }\n        if\
    \ (min < k) {\n            min = k;\n        }\n        if (max > min) {\n   \
    \         for (long i = max; i > min; i--) {\n                result.add(i);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n   \
    \     long maxIndex = 0;\n        long maxValue = arr.get(0);\n        for (int\
    \ i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > maxValue) {\n  \
    \              maxValue = arr.get(i);\n                maxIndex = i;\n       \
    \     }\n        }\n        result.add(maxValue);\n        if (arr.size() > k)\
    \ {\n            ArrayList<Long> temp = new ArrayList<>();\n            while\
    \ (result.size() < k) {\n                temp.add(result.get(result.size() - 1));\n\
    \            }\n            result = temp;\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long max = 0;\n  \
    \      long min = Long.MAX_VALUE;\n        for (long num : arr) {\n          \
    \  max = Math.max(max, num);\n            min = Math.min(min, num);\n        }\n\
    \        long mid = min + (max - min) / 2;\n        for (long num : arr) {\n \
    \           if (num == mid) {\n                result.add(mid);\n            }\
    \ else if (num > mid) {\n                result.add(num);\n            } else\
    \ {\n                long left = mid;\n                while (left < num) {\n\
    \                    left += num;\n                }\n                long right\
    \ = mid;\n                while (right > num) {\n                    right -=\
    \ num;\n                }\n                result.add(left);\n               \
    \ result.add(right);\n            }\n        }\n        return result;", "   \
    \     ArrayList<Long> result = new ArrayList<>();\n        long max = Long.MIN_VALUE;\n\
    \        for (long num : arr) {\n            if (num > max) {\n              \
    \  max = num;\n            }\n        }\n        long maxNum = max;\n        long\
    \ maxIndex = -1;\n        int count = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            if (arr.get(i) == maxNum) {\n                count++;\n\
    \                if (count == k) {\n                    maxIndex = i;\n      \
    \          }\n            }\n        }\n        if (maxIndex != -1) {\n      \
    \      result.add(maxNum);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n\
    \        long cur = 0;\n        long maxIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            cur = arr.get(i);\n            if (cur > max)\
    \ {\n                max = cur;\n                maxIndex = i;\n            }\n\
    \        }\n        result.add(max, maxIndex);\n        if (result.size() > k)\
    \ {\n            ArrayList<Long> newResult = new ArrayList<>();\n            int\
    \ start = 0;\n            int end = result.size() - 1;\n            while (start\
    \ < end) {\n                long mid = (start + end) / 2;\n                if\
    \ (result.get(mid) < result.get(mid + 1)) {\n                    end = mid - 1;\n\
    \                } else {\n                    start = mid + 1;\n            \
    \    }\n            }\n            while (start < result.size()) {\n         \
    \       long mid = (start + end) / 2;\n                if (result.get(mid) < result.get(mid\
    \ + 1)) {\n                    newResult.add(result.get(mid));\n             \
    \       start = mid + 1;\n                } else {\n                    newResult.add(result.get(mid\
    \ + 1));\n                    end = mid - 1;\n                }\n            }\n\
    \            result = newResult;\n        }\n        return result;", "      \
    \  ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n  \
    \      long max = arr.get(arr.size() - 1);\n        long maxIndex = 0;\n     \
    \   for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) == max)\
    \ {\n                maxIndex = i;\n            }\n        }\n        result.add(max,\
    \ maxIndex);\n        if (arr.size() > k) {\n            ArrayList<Long> newArr\
    \ = new ArrayList<>();\n            int startIndex = maxIndex - k;\n         \
    \   int endIndex = maxIndex + k;\n            for (int i = startIndex; i < endIndex;\
    \ i++) {\n                newArr.add(arr.get(i));\n            }\n           \
    \ Arrays.sort(newArr);\n            for (int i = 0; i < newArr.size(); i++) {\n\
    \                result.add(newArr.get(i), i);\n            }\n        }\n   \
    \     return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long maxValue = arr.get(arr.size() - 1);\n\
    \        long maxIndex = arr.size() - 1;\n        long maxCount = 0;\n       \
    \ long currentCount = 0;\n        long currentValue = arr.get(0);\n        long\
    \ currentIndex = -1;\n        boolean isMax = false;\n        for (int i = 0;\
    \ i < arr.size(); i++) {\n            currentValue = arr.get(i);\n           \
    \ currentCount = 1;\n            if (currentValue == maxValue) {\n           \
    \     currentCount++;\n            }\n            if (currentCount > maxCount)\
    \ {\n                maxCount = currentCount;\n                maxValue = currentValue;\n\
    \                maxIndex = i;\n                isMax = true;\n            } else\
    \ if (currentCount == maxCount) {\n                if (currentValue > maxValue)\
    \ {\n                    maxValue = currentValue;\n                    maxIndex\
    \ = i;\n                    isMax = true;\n                }\n            }\n\
    \        }\n        if (isMax) {\n            while (maxIndex > 0) {\n       \
    \         result.add(arr.get(maxIndex--));\n            }\n        }\n       \
    \ return result;", "        ArrayList<Long> result = new ArrayList<>();\n    \
    \    long max = 0;\n        long temp = 0;\n        for (long i : arr) {\n   \
    \         if (max < i) {\n                max = i;\n            }\n        }\n\
    \        long temp2 = max;\n        long temp3 = max;\n        long temp4 = max;\n\
    \        long temp5 = max;\n        long temp6 = max;\n        long temp7 = max;\n\
    \        long temp8 = max;\n        long temp9 = max;\n        long temp10 = max;\n\
    \        long temp11 = max;\n        long temp12 = max;\n        long temp13 =\
    \ max;\n        long temp14 = max;\n        long temp15 = max;\n        long temp16\
    \ = max;\n        long temp17 = max;\n        long temp18 = max;\n        long\
    \ temp19 = max;\n        long temp20 = max;\n        long temp21 = max;\n    \
    \    long temp22 = max;\n        long temp23 = max;\n        long temp24 = max;\n\
    \        long temp25 = max;\n        long temp26 = max;\n        long temp27 =\
    \ max;\n        long temp28 = max;\n        long temp29 = max;\n        long temp30\
    \ = max;\n        long temp31 = max;\n        long temp32 = max;\n        long\
    \ temp33 = max;\n        long temp34 = max;\n        long temp35 = max;\n    \
    \    long temp36 = max;\n        long temp37 = max;\n        long temp38 = max;\n\
    \        long temp39 = max;\n        long temp40 = max;\n        long temp41 =\
    \ max;\n        long temp42 = max;\n        long temp43 = max;\n        long temp44\
    \ = max;\n        long temp45 = max;\n        long temp46 = max;\n        long\
    \ temp47 = max;\n        long temp48 = max;\n        long temp49 = max;\n    \
    \    long temp50 = max;\n        long temp51 = max;\n        long temp52 = max;\n\
    \        long temp53 = max;\n        long temp54 = max;\n        long temp55 =\
    \ max;\n        long temp56 = max;\n        long temp57 = max;\n        long temp58\
    \ = max;\n        long temp59 = max;\n        long temp60 = max;\n        long\
    \ temp61 = max;\n        long temp6", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long max = 0;\n        long min = 0;\n        long sum = 0;\n       \
    \ for (long i : arr) {\n            sum += i;\n            if (sum > max) {\n\
    \                max = sum;\n            }\n            if (sum < min) {\n   \
    \             min = sum;\n            }\n        }\n        if (max <= k) {\n\
    \            return arr;\n        }\n        long mid = max / 2;\n        long\
    \ mid2 = min / 2;\n        long mid3 = mid / 2;\n        long mid4 = mid3 / 2;\n\
    \        long mid5 = mid4 / 2;\n        long mid6 = mid5 / 2;\n        long mid7\
    \ = mid6 / 2;\n        long mid8 = mid7 / 2;\n        long mid9 = mid8 / 2;\n\
    \        long mid10 = mid9 / 2;\n        long mid11 = mid10 / 2;\n        long\
    \ mid12 = mid11 / 2;\n        long mid13 = mid12 / 2;\n        long mid14 = mid13\
    \ / 2;\n        long mid15 = mid14 / 2;\n        long mid16 = mid15 / 2;\n   \
    \     long mid17 = mid16 / 2;\n        long mid18 = mid17 / 2;\n        long mid19\
    \ = mid18 / 2;\n        long mid20 = mid19 / 2;\n        long mid21 = mid20 /\
    \ 2;\n        long mid22 = mid21 / 2;\n        long mid23 = mid22 / 2;\n     \
    \   long mid24 = mid23 / 2;\n        long mid25 = mid24 / 2;\n        long mid26\
    \ = mid25 / 2;\n        long mid27 = mid26 / 2;\n        long mid28 = mid27 /\
    \ 2;\n        long mid29 = mid28 / 2;\n        long mid30 = mid29 / 2;\n     \
    \   long mid31 = mid30 / 2;\n        long mid32 = mid31 / 2;\n        long mid33\
    \ = mid32 / 2;\n        long mid34 = mid33 / 2;\n        long mid35 = mid34 /\
    \ 2;\n        long mid36 = mid35 / 2;\n        long mid37 = mid36 / 2;\n     \
    \   long mid38 = mid37 / 2;\n        long mid39 = mid38 / 2;\n        long mid40\
    \ = mid39 / 2;\n        long mid41 = mid40 / 2;\n        long mid42 = mid41 /\
    \ 2;\n        long mid43 = mid42 / 2;\n        long mid44 = mid43 / 2;\n     \
    \   long mid45 = mid44 / 2;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long max = arr.get(0);\n        long maxIndex = 0;\n        for (int\
    \ i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n       \
    \         max = arr.get(i);\n                maxIndex = i;\n            }\n  \
    \      }\n        if (maxIndex == k) {\n            result.add(max);\n       \
    \     return result;\n        }\n        ArrayList<Long> left = new ArrayList<Long>();\n\
    \        ArrayList<Long> right = new ArrayList<Long>();\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            if (i < maxIndex) {\n               \
    \ left.add(arr.get(i));\n            } else {\n                right.add(arr.get(i));\n\
    \            }\n        }\n        ArrayList<Long> result = maximum(left, k);\n\
    \        result.add(max);\n        result = maximum(result, k);\n        result.add(max);\n\
    \        result = maximum(result, k);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long max = 0;\n\
    \        long maxIndex = 0;\n        long currentMax = arr.get(0);\n        long\
    \ currentMaxIndex = 0;\n        for(long i : arr) {\n            if(i == currentMax)\
    \ {\n                currentMaxIndex = i;\n            }\n            if(i ==\
    \ currentMax) {\n                currentMaxIndex = i;\n            }\n       \
    \     if(i == currentMax) {\n                currentMaxIndex = i;\n          \
    \  }\n            if(i == currentMax) {\n                currentMaxIndex = i;\n\
    \            }\n            if(i == currentMax) {\n                currentMaxIndex\
    \ = i;\n            }\n            if(i == currentMax) {\n                currentMaxIndex\
    \ = i;\n            }\n            if(i == currentMax) {\n                currentMaxIndex\
    \ = i;\n            }\n            if(i == currentMax) {\n                currentMaxIndex\
    \ = i;\n            }\n            if(i == currentMax) {\n                currentMaxIndex\
    \ = i;\n            }\n            if(i == currentMax) {\n                currentMaxIndex\
    \ = i;\n            }\n            if(i == currentMax) {\n                currentMaxIndex\
    \ = i;\n            }\n            if(i == currentMax) {\n                currentMaxIndex\
    \ = i;\n            }\n            if(i == currentMax) {\n                currentMaxIndex\
    \ = i;\n            }\n            if(i == currentMax) {\n                currentMaxIndex\
    \ = i;\n            }\n            if(i == currentMax) {\n                currentMaxIndex\
    \ = i;\n            }\n            if(i == currentMax) {\n                currentMaxIndex\
    \ = i;\n            }\n            if(i == currentMax) {\n                currentMaxIndex\
    \ = i;\n            }\n            if(i == currentMax) {\n                currentMaxIndex\
    \ = i;\n            }\n            if(i == currentMax) {\n                currentMaxIndex\
    \ = i;\n            }\n            if(i == currentMax) {\n                currentMaxIndex\
    \ = i;\n            }\n            if(i == currentMax) {\n                currentMaxIndex\
    \ = i;\n            }\n            if(i == currentMax) {\n                currentMaxIndex\
    \ = i;\n            }\n            if(i == currentMax) {\n                currentMaxIndex\
    \ = i;\n            }\n            if(i == currentMax) {\n                currentMaxIndex\
    \ = i;\n            }\n            if(i == currentMax) {\n                currentMaxIndex\
    \ = i;\n            }\n            if(i == currentMax) {\n                currentMaxIndex\
    \ = i;\n            }\n            if(i == currentMax) {\n                currentMaxIndex\
    \ = i;\n            }\n            if(i == currentMax) {\n                currentMaxIndex\
    \ = i;\n            }\n            if(i == currentMax) {\n                currentMaxIndex\
    \ = i;\n", "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        long maxIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max\
    \ = arr.get(i);\n                maxIndex = i;\n            }\n        }\n   \
    \     if (maxIndex == arr.size() - 1) {\n            result.add(max);\n      \
    \  } else {\n            result.add(max, maxIndex);\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        long temp = 0;\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            temp = arr.get(i);\n            if(temp > max) {\n     \
    \           max = temp;\n            }\n        }\n        for(int i = 0; i <\
    \ arr.size(); i++) {\n            temp = arr.get(i);\n            if(temp == max)\
    \ {\n                result.add(temp);\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ max = 0;\n        long min = 0;\n        long temp = 0;\n        for(int i =\
    \ 0; i < arr.size(); i++) {\n            temp = arr.get(i);\n            if(temp\
    \ > max) {\n                max = temp;\n            }\n            if(temp <\
    \ min) {\n                min = temp;\n            }\n        }\n        long\
    \ diff = max - min;\n        long temp2 = 0;\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            temp2 = arr.get(i);\n            if(temp2 > max) {\n   \
    \             max = temp2;\n            }\n            if(temp2 < min) {\n   \
    \             min = temp2;\n            }\n        }\n        long diff = max\
    \ - min;\n        long temp3 = 0;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            temp3 = arr.get(i);\n            if(temp3 > max) {\n        \
    \        max = temp3;\n            }\n            if(temp3 < min) {\n        \
    \        min = temp3;\n            }\n        }\n        long diff = max - min;\n\
    \        long temp4 = 0;\n        for(int i = 0; i < arr.size(); i++) {\n    \
    \        temp4 = arr.get(i);\n            if(temp4 > max) {\n                max\
    \ = temp4;\n            }\n            if(temp4 < min) {\n                min\
    \ = temp4;\n            }\n        }\n        long diff = max - min;\n       \
    \ long temp5 = 0;\n        for(int i = 0; i < arr.size(); i++) {\n           \
    \ temp5 = arr.get(i);\n            if(temp5 > max) {\n                max = temp5;\n\
    \            }\n            if(temp5 < min) {\n                min = temp5;\n\
    \            }\n        }\n        long diff = max - min;\n        long temp6\
    \ = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            temp6 = arr.get(i);\n\
    \            if(temp6 > max) {\n                max = temp6;\n            }\n\
    \            if(temp6 < min) {\n                min = temp6;\n            }\n\
    \        }\n        long diff = max - min;\n        long temp7 = 0;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            temp7 = arr.get(i);\n           \
    \ if(temp7 > max) {\n                max = temp7;\n            }\n           \
    \ if(temp7 < min) {\n                min = temp7;\n            }\n        }\n\
    \        long diff = max - min;\n        long temp8 = 0;\n        for(int i =\
    \ 0; i < arr.size(); i++) {\n            temp8 = arr.get(i);\n            if(temp8\
    \ > max) {\n                max = temp8;\n            }\n            if(temp8\
    \ < min) {\n                min = temp8;\n            }\n        }\n        long\
    \ diff = max - min;\n        long temp9 = 0;\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            temp9 = arr.get(i);\n            if(temp9 > max) {\n   \
    \             max = temp9;\n            }\n            if(temp9 < min) {\n   \
    \             min = temp9;\n            }\n        }\n        long diff = max\
    \ - min", "        ArrayList<Long> result = new ArrayList<Long>();\n        Arrays.sort(arr);\n\
    \        long maxValue = arr.get(arr.size() - 1);\n        long maxIndex = arr.size()\
    \ - 1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ == maxValue) {\n                maxIndex--;\n            }\n            if (maxIndex\
    \ < k) {\n                result.add(arr.get(maxIndex));\n            }\n    \
    \    }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp = new ArrayList<Long>();\n        long max = 0;\n\
    \        long min = 0;\n        long maxIndex = 0;\n        long minIndex = 0;\n\
    \        long maxValue = arr.get(0);\n        long minValue = arr.get(0);\n  \
    \      long maxIndexValue = arr.get(0);\n        long minIndexValue = arr.get(0);\n\
    \        long tempValue = arr.get(0);\n        long tempIndex = 0;\n        long\
    \ tempMax = 0;\n        long tempMin = 0;\n        long tempMaxIndex = 0;\n  \
    \      long tempMinIndex = 0;\n        long tempMaxValue = arr.get(0);\n     \
    \   long tempMinValue = arr.get(0);\n        long tempMaxIndexValue = arr.get(0);\n\
    \        long tempMinIndexValue = arr.get(0);\n        long tempMaxIndexValue\
    \ = arr.get(0);\n        long tempMinIndexValue = arr.get(0);\n        long tempMaxIndexValue\
    \ = arr.get(0);\n        long tempMinIndexValue = arr.get(0);\n        long tempMaxIndexValue\
    \ = arr.get(0);\n        long tempMinIndexValue = arr.get(0);\n        long tempMaxIndexValue\
    \ = arr.get(0);\n        long tempMinIndexValue = arr.get(0);\n        long tempMaxIndexValue\
    \ = arr.get(0);\n        long tempMinIndexValue = arr.get(0);\n        long tempMaxIndexValue\
    \ = arr.get(0);\n        long tempMinIndexValue = arr.get(0);\n        long tempMaxIndexValue\
    \ = arr.get(0);\n        long tempMinIndexValue = arr.get(0);\n        long tempMaxIndexValue\
    \ = arr.get(0);\n        long tempMinIndexValue = arr.get(0);\n        long tempMaxIndexValue\
    \ = arr.get(0);\n        long tempMinIndexValue = arr.get(0);\n        long tempMaxIndexValue\
    \ = arr.get(0);\n        long tempMinIndexValue = arr.get(0);\n        long tempMaxIndexValue\
    \ = arr.get(0);\n        long tempMinIndexValue = arr.get(0);\n        long tempMaxIndexValue\
    \ = arr.get(0);\n        long tempMinIndexValue = arr.get(0);\n        long tempMaxIndexValue\
    \ = arr.get(0);\n        long tempMinIndexValue = arr.get(0);\n        long tempMaxIndexValue\
    \ = arr.get(0);\n        long tempMinIndexValue = arr.get(0);\n        long tempMaxIndexValue\
    \ = arr.get(0);\n        long tempMinIndexValue = arr.get(0);\n        long tempMaxIndexValue\
    \ = arr.get(0);\n        long tempMinIndexValue = arr.get(0);\n        long tempMaxIndexValue\
    \ = arr.get(0);\n        long tempMinIndexValue = arr.get(0);\n        long tempMaxIndexValue\
    \ = arr.get(0);\n        long tempMinIndexValue = arr.get(", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long max = Long.MIN_VALUE;\n      \
    \  long maxIndex = 0;\n        for (long i : arr) {\n            if (max < i)\
    \ {\n                max = i;\n                maxIndex = 0;\n            } else\
    \ if (max == i) {\n                maxIndex++;\n            }\n        }\n   \
    \     if (maxIndex < k) {\n            while (maxIndex < k) {\n              \
    \  result.add(max);\n                maxIndex++;\n            }\n        } else\
    \ {\n            while (maxIndex >= k) {\n                result.add(max);\n \
    \               maxIndex--;\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Long>\
    \ max = new ArrayList<Long>();\n        ArrayList<Long> temp = new ArrayList<Long>();\n\
    \        long maxVal = Long.MIN_VALUE;\n        long minVal = Long.MAX_VALUE;\n\
    \        long sum = 0;\n        long maxCount = 0;\n        long minCount = 0;\n\
    \        long maxCount2 = 0;\n        long minCount2 = 0;\n        long maxCount3\
    \ = 0;\n        long minCount3 = 0;\n        long maxCount4 = 0;\n        long\
    \ minCount4 = 0;\n        long maxCount5 = 0;\n        long minCount5 = 0;\n \
    \       long maxCount6 = 0;\n        long minCount6 = 0;\n        long maxCount7\
    \ = 0;\n        long minCount7 = 0;\n        long maxCount8 = 0;\n        long\
    \ minCount8 = 0;\n        long maxCount9 = 0;\n        long minCount9 = 0;\n \
    \       long maxCount10 = 0;\n        long minCount10 = 0;\n        long maxCount11\
    \ = 0;\n        long minCount11 = 0;\n        long maxCount12 = 0;\n        long\
    \ minCount12 = 0;\n        long maxCount13 = 0;\n        long minCount13 = 0;\n\
    \        long maxCount14 = 0;\n        long minCount14 = 0;\n        long maxCount15\
    \ = 0;\n        long minCount15 = 0;\n        long maxCount16 = 0;\n        long\
    \ minCount16 = 0;\n        long maxCount17 = 0;\n        long minCount17 = 0;\n\
    \        long maxCount18 = 0;\n        long minCount18 = 0;\n        long maxCount19\
    \ = 0;\n        long minCount19 = 0;\n        long maxCount20 = 0;\n        long\
    \ minCount20 = 0;\n        long maxCount21 = 0;\n        long minCount21 = 0;\n\
    \        long maxCount22 = 0;\n        long minCount22 = 0;\n        long maxCount23\
    \ = 0;\n        long minCount23 = 0;\n        long maxCount24 = 0;\n        long\
    \ minCount24 = 0;\n        long maxCount25 = 0;\n        long minCount25 = 0;\n\
    \        long maxCount26 = 0;\n        long minCount26 = 0;\n        long maxCount27\
    \ = 0;\n        long minCount27 = 0;\n        long maxCount28 = 0;\n        long\
    \ minCount28 = 0;\n        long maxCount29 = 0;\n        long minCount29 = 0;\n\
    \        long maxCount30 = 0;\n        long minCount30 = 0;\n        long maxCount31\
    \ = 0;\n        long minCount31 = 0;\n        long maxCount32 = 0;\n        long\
    \ minCount32 = 0;\n        long maxCount33 = 0;\n        long minCount33 = 0;\n\
    \        long max", "        ArrayList<Long> result = new ArrayList<>();\n   \
    \     Arrays.sort(arr);\n        long max = 0;\n        long maxIndex = 0;\n \
    \       long maxValue = arr.get(0);\n        for(int i = 1; i < arr.size(); i++)\
    \ {\n            if(arr.get(i) > maxValue) {\n                maxValue = arr.get(i);\n\
    \                maxIndex = i;\n            }\n        }\n        while(maxIndex\
    \ != k) {\n            result.add(maxValue);\n            maxIndex++;\n      \
    \      maxValue = arr.get(maxIndex);\n        }\n        return result;", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long maxValue = arr.get(k);\n        long maxIndex = k;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            if(arr.get(i) == maxValue) {\n  \
    \              maxIndex = i;\n            }\n        }\n        for(int i = 0;\
    \ i < arr.size(); i++) {\n            if(arr.get(i) == maxValue) {\n         \
    \       result.add(arr.get(i));\n            }\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long max = 0;\n  \
    \      long min = Long.MAX_VALUE;\n        for (long i : arr) {\n            if\
    \ (i < min) {\n                min = i;\n            }\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        if (max < k)\
    \ {\n            k = max;\n        }\n        if (k == 1) {\n            result.add(arr.get(0));\n\
    \            return result;\n        }\n        long mid = max / 2;\n        ArrayList<Long>\
    \ left = new ArrayList<>();\n        ArrayList<Long> right = new ArrayList<>();\n\
    \        ArrayList<Long> maxLeft = new ArrayList<>();\n        ArrayList<Long>\
    \ maxRight = new ArrayList<>();\n        for (long i : arr) {\n            if\
    \ (i < mid) {\n                left.add(i);\n            } else {\n          \
    \      right.add(i);\n            }\n        }\n        left.addAll(maximum(k\
    \ - 1, k));\n        right.addAll(maximum(k - 1, k));\n        for (long i : left)\
    \ {\n            if (i < mid) {\n                maxLeft.add(i);\n           \
    \ } else {\n                maxRight.add(i);\n            }\n        }\n     \
    \   maxLeft.addAll(maxRight);\n        maxLeft.addAll(maximum(k - 1, k));\n  \
    \      for (long i : maxLeft) {\n            result.add(i);\n        }\n     \
    \   return result;", "        ArrayList<Long> res = new ArrayList<>();\n     \
    \   Arrays.sort(arr);\n        long max = 0;\n        long min = 0;\n        long\
    \ mid = 0;\n        long count = 0;\n        long maxCount = 0;\n        long\
    \ minCount = 0;\n        long midCount = 0;\n        long maxCount2 = 0;\n   \
    \     long minCount2 = 0;\n        long midCount2 = 0;\n        long maxCount3\
    \ = 0;\n        long minCount3 = 0;\n        long midCount3 = 0;\n        long\
    \ maxCount4 = 0;\n        long minCount4 = 0;\n        long midCount4 = 0;\n \
    \       long maxCount5 = 0;\n        long minCount5 = 0;\n        long midCount5\
    \ = 0;\n        long maxCount6 = 0;\n        long minCount6 = 0;\n        long\
    \ midCount6 = 0;\n        long maxCount7 = 0;\n        long minCount7 = 0;\n \
    \       long midCount7 = 0;\n        long maxCount8 = 0;\n        long minCount8\
    \ = 0;\n        long midCount8 = 0;\n        long maxCount9 = 0;\n        long\
    \ minCount9 = 0;\n        long midCount9 = 0;\n        long maxCount10 = 0;\n\
    \        long minCount10 = 0;\n        long midCount10 = 0;\n        long maxCount11\
    \ = 0;\n        long minCount11 = 0;\n        long midCount11 = 0;\n        long\
    \ maxCount12 = 0;\n        long minCount12 = 0;\n        long midCount12 = 0;\n\
    \        long maxCount13 = 0;\n        long minCount13 = 0;\n        long midCount13\
    \ = 0;\n        long maxCount14 = 0;\n        long minCount14 = 0;\n        long\
    \ midCount14 = 0;\n        long maxCount15 = 0;\n        long minCount15 = 0;\n\
    \        long midCount15 = 0;\n        long maxCount16 = 0;\n        long minCount16\
    \ = 0;\n        long midCount16 = 0;\n        long maxCount17 = 0;\n        long\
    \ minCount17 = 0;\n        long midCount17 = 0;\n        long maxCount18 = 0;\n\
    \        long minCount18 = 0;\n        long midCount18 = 0;\n        long maxCount19\
    \ = 0;\n        long minCount19 = 0;\n        long midCount19 = 0;\n        long\
    \ maxCount20 = 0;\n        long minCount20 = 0;\n        long midCount20 = 0;\n\
    \        long maxCount21 = 0;\n        long minCount21 = 0;\n        long midCount21\
    \ = 0;\n        long maxCount22 = 0;\n        long minCount22 = 0;\n        long\
    \ midCount22 = 0;\n        long maxCount23 = 0;\n        long minCount23 = 0;\n\
    \        long midCount23 = 0;\n        long maxCount24 = 0;\n        long min",
  "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        long maxIndex = 0;\n        long maxValue = arr.get(0);\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) >\
    \ maxValue) {\n                max = arr.get(i);\n                maxIndex = i;\n\
    \                maxValue = max;\n            }\n        }\n        for (int i\
    \ = 0; i < arr.size(); i++) {\n            if (arr.get(i) == maxValue) {\n   \
    \             result.add(arr.get(maxIndex));\n            }\n        }\n     \
    \   return result;", "        ArrayList<Long> result = new ArrayList<>();\n  \
    \      long max = 0;\n        for (long i : arr) {\n            if (max < i) {\n\
    \                max = i;\n            }\n        }\n        if (max > k) {\n\
    \            max = k;\n        }\n        for (long i : arr) {\n            if\
    \ (max < i) {\n                result.add(i);\n                max = i;\n    \
    \        }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long max = arr.get(0);\n        for (long i :\
    \ arr) {\n            if (i > max) {\n                max = i;\n            }\n\
    \        }\n        if (k > max) {\n            k = max;\n        }\n        long\
    \ curMax = max;\n        long curMaxIndex = 0;\n        for (long i : arr) {\n\
    \            if (i > curMax) {\n                result.add(curMax);\n        \
    \        curMax = i;\n                curMaxIndex = result.size() - 1;\n     \
    \       } else if (i == curMax) {\n                curMax = i;\n             \
    \   curMaxIndex = result.size() - 1;\n            }\n        }\n        result.add(curMax);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long max = 0;\n        long min = 0;\n        long sum = 0;\n       \
    \ long count = 0;\n        for (long i : arr) {\n            sum += i;\n     \
    \       if (sum > max) {\n                max = sum;\n            }\n        \
    \    if (sum < min) {\n                min = sum;\n            }\n           \
    \ count++;\n        }\n        if (count > k) {\n            k = count;\n    \
    \    }\n        if (k == 1) {\n            result.add(arr.get(0));\n         \
    \   return result;\n        }\n        long mid = min + (max - min) / 2;\n   \
    \     ArrayList<Long> left = new ArrayList<Long>();\n        ArrayList<Long> right\
    \ = new ArrayList<Long>();\n        for (long i : arr) {\n            if (i <\
    \ mid) {\n                left.add(i);\n            } else {\n               \
    \ right.add(i);\n            }\n        }\n        left = maximum(left, k);\n\
    \        right = maximum(right, k);\n        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        result.addAll(left);\n        result.addAll(right);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long maxValue = arr.get(arr.size() - 1);\n        long maxIndex = arr.size()\
    \ - 1;\n        long currentMaxValue = maxValue;\n        long currentMaxIndex\
    \ = maxIndex;\n        long currentMaxCount = 0;\n        long currentMaxCountIndex\
    \ = 0;\n        long currentMaxCountValue = 0;\n        long currentMaxCountValueIndex\
    \ = 0;\n        long currentMaxCountValueIndex2 = 0;\n        long currentMaxCountValueIndex3\
    \ = 0;\n        long currentMaxCountValueIndex4 = 0;\n        long currentMaxCountValueIndex5\
    \ = 0;\n        long currentMaxCountValueIndex6 = 0;\n        long currentMaxCountValueIndex7\
    \ = 0;\n        long currentMaxCountValueIndex8 = 0;\n        long currentMaxCountValueIndex9\
    \ = 0;\n        long currentMaxCountValueIndex10 = 0;\n        long currentMaxCountValueIndex11\
    \ = 0;\n        long currentMaxCountValueIndex12 = 0;\n        long currentMaxCountValueIndex13\
    \ = 0;\n        long currentMaxCountValueIndex14 = 0;\n        long currentMaxCountValueIndex15\
    \ = 0;\n        long currentMaxCountValueIndex16 = 0;\n        long currentMaxCountValueIndex17\
    \ = 0;\n        long currentMaxCountValueIndex18 = 0;\n        long currentMaxCountValueIndex19\
    \ = 0;\n        long currentMaxCountValueIndex20 = 0;\n        long currentMaxCountValueIndex21\
    \ = 0;\n        long currentMaxCountValueIndex22 = 0;\n        long currentMaxCountValueIndex23\
    \ = 0;\n        long currentMaxCountValueIndex24 = 0;\n        long currentMaxCountValueIndex25\
    \ = 0;\n        long currentMaxCountValueIndex26 = 0;\n        long currentMaxCountValueIndex27\
    \ = 0;\n        long currentMaxCountValueIndex28 = 0;\n        long currentMaxCountValueIndex29\
    \ = 0;\n        long currentMaxCountValueIndex30 = 0;\n        long currentMaxCountValueIndex31\
    \ = 0;\n        long currentMaxCountValueIndex32 = 0;\n        long currentMaxCountValueIndex33\
    \ = 0;\n        long currentMaxCountValueIndex34 = 0;\n        long currentMaxCountValueIndex35\
    \ = 0;\n        long currentMaxCountValueIndex36 = 0;\n        long currentMaxCountValueIndex37\
    \ = 0;\n        long currentMaxCountValueIndex38 = 0;\n        long currentMaxCountValueIndex39\
    \ = 0;\n        long currentMaxCountValueIndex40 = 0;\n        long currentMaxCountValueIndex41\
    \ = 0;\n        long currentMaxCountValueIndex42 = 0;\n        long currentMaxCountValueIndex43\
    \ = 0;\n        long currentMaxCountValueIndex44 = 0;\n        long current",
  "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        if (arr.size() <= k) {\n            result.addAll(arr);\n           \
    \ return result;\n        }\n        ArrayList<Long> max = new ArrayList<>();\n\
    \        long maxValue = arr.get(0);\n        max.add(maxValue);\n        for\
    \ (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > maxValue) {\n\
    \                maxValue = arr.get(i);\n                max.add(maxValue);\n\
    \            }\n        }\n        result.addAll(max);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        long min = 0;\n        long maxIndex = 0;\n  \
    \      long minIndex = 0;\n        long maxVal = 0;\n        long minVal = 0;\n\
    \        long maxIndex2 = 0;\n        long minIndex2 = 0;\n        long maxVal2\
    \ = 0;\n        long minVal2 = 0;\n        long maxIndex3 = 0;\n        long minIndex3\
    \ = 0;\n        long maxVal3 = 0;\n        long minVal3 = 0;\n        long maxIndex4\
    \ = 0;\n        long minIndex4 = 0;\n        long maxVal4 = 0;\n        long minVal4\
    \ = 0;\n        long maxIndex5 = 0;\n        long minIndex5 = 0;\n        long\
    \ maxVal5 = 0;\n        long minVal5 = 0;\n        long maxIndex6 = 0;\n     \
    \   long minIndex6 = 0;\n        long maxVal6 = 0;\n        long minVal6 = 0;\n\
    \        long maxIndex7 = 0;\n        long minIndex7 = 0;\n        long maxVal7\
    \ = 0;\n        long minVal7 = 0;\n        long maxIndex8 = 0;\n        long minIndex8\
    \ = 0;\n        long maxVal8 = 0;\n        long minVal8 = 0;\n        long maxIndex9\
    \ = 0;\n        long minIndex9 = 0;\n        long maxVal9 = 0;\n        long minVal9\
    \ = 0;\n        long maxIndex10 = 0;\n        long minIndex10 = 0;\n        long\
    \ maxVal10 = 0;\n        long minVal10 = 0;\n        long maxIndex11 = 0;\n  \
    \      long minIndex11 = 0;\n        long maxVal11 = 0;\n        long minVal11\
    \ = 0;\n        long maxIndex12 = 0;\n        long minIndex12 = 0;\n        long\
    \ maxVal12 = 0;\n        long minVal12 = 0;\n        long maxIndex13 = 0;\n  \
    \      long minIndex13 = 0;\n        long maxVal13 = 0;\n        long minVal13\
    \ = 0;\n        long maxIndex14 = 0;\n        long minIndex14 = 0;\n        long\
    \ maxVal14 = 0;\n        long minVal14 = 0;\n        long maxIndex15 = 0;\n  \
    \      long minIndex15 = 0;\n        long maxVal15 = 0;\n        long minVal15\
    \ = 0;\n        long maxIndex16 = 0;\n        long minIndex16 = 0;\n        long\
    \ maxVal16 = 0;\n        long minVal16 = 0;\n        long maxIndex17 = 0;\n  \
    \      long minIndex17 = 0;\n        long maxVal17 = 0;\n        long minVal17\
    \ = 0;\n        long maxIndex18 = 0;\n        long minIndex18 = 0;\n        long\
    \ maxVal18 = 0;\n        long minVal18 = 0;\n        long max", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long max = Long.MIN_VALUE;\n        for\
    \ (long i : arr) {\n            if (max < i) {\n                max = i;\n   \
    \         }\n        }\n        if (max < k) {\n            max = k;\n       \
    \ }\n        for (long i : arr) {\n            if (max < i) {\n              \
    \  result.add(i);\n                max = i;\n            }\n        }\n      \
    \  return result;", "        ArrayList<Long> result = new ArrayList<>();\n   \
    \     long max = 0;\n        long min = Long.MAX_VALUE;\n        for (long i :\
    \ arr) {\n            if (max < i) {\n                max = i;\n            }\n\
    \            if (min > i) {\n                min = i;\n            }\n       \
    \ }\n        if (max < k) {\n            max = k;\n        }\n        if (min\
    \ > k) {\n            min = k;\n        }\n        if (max > min) {\n        \
    \    for (long i = min; i <= max; i++) {\n                result.add(i);\n   \
    \         }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        Arrays.sort(arr);\n        long max = 0;\n\
    \        long cur = 0;\n        for (long i : arr) {\n            if (max < i)\
    \ {\n                max = i;\n                cur = i;\n            }\n     \
    \       if (cur == k) {\n                result.add(max);\n                cur\
    \ = 0;\n                max = 0;\n            }\n        }\n        return result;",
  "        ArrayList<Long> res = new ArrayList<>();\n        long max = 0;\n     \
    \   long min = Long.MAX_VALUE;\n        for (long i : arr) {\n            max\
    \ = Math.max(max, i);\n            min = Math.min(min, i);\n        }\n      \
    \  long mid = max + (max - min) / 2;\n        long mid2 = mid / 2;\n        long\
    \ mid3 = mid2 / 2;\n        long mid4 = mid3 / 2;\n        long mid5 = mid4 /\
    \ 2;\n        long mid6 = mid5 / 2;\n        long mid7 = mid6 / 2;\n        long\
    \ mid8 = mid7 / 2;\n        long mid9 = mid8 / 2;\n        long mid10 = mid9 /\
    \ 2;\n        long mid11 = mid10 / 2;\n        long mid12 = mid11 / 2;\n     \
    \   long mid13 = mid12 / 2;\n        long mid14 = mid13 / 2;\n        long mid15\
    \ = mid14 / 2;\n        long mid16 = mid15 / 2;\n        long mid17 = mid16 /\
    \ 2;\n        long mid18 = mid17 / 2;\n        long mid19 = mid18 / 2;\n     \
    \   long mid20 = mid19 / 2;\n        long mid21 = mid20 / 2;\n        long mid22\
    \ = mid21 / 2;\n        long mid23 = mid22 / 2;\n        long mid24 = mid23 /\
    \ 2;\n        long mid25 = mid24 / 2;\n        long mid26 = mid25 / 2;\n     \
    \   long mid27 = mid26 / 2;\n        long mid28 = mid27 / 2;\n        long mid29\
    \ = mid28 / 2;\n        long mid30 = mid29 / 2;\n        long mid31 = mid30 /\
    \ 2;\n        long mid32 = mid31 / 2;\n        long mid33 = mid32 / 2;\n     \
    \   long mid34 = mid33 / 2;\n        long mid35 = mid34 / 2;\n        long mid36\
    \ = mid35 / 2;\n        long mid37 = mid36 / 2;\n        long mid38 = mid37 /\
    \ 2;\n        long mid39 = mid38 / 2;\n        long mid40 = mid39 / 2;\n     \
    \   long mid41 = mid40 / 2;\n        long mid42 = mid41 / 2;\n        long mid43\
    \ = mid42 / 2;\n        long mid44 = mid43 / 2;\n        long mid45 = mid44 /\
    \ 2;\n        long mid46 = mid45 / 2;\n        long mid47 = mid46 / 2;\n     \
    \   long mid48 = mid47", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp = new ArrayList<Long>();\n        long max = 0;\n\
    \        long min = 0;\n        long sum = 0;\n        long count = 0;\n     \
    \   long sum2 = 0;\n        long count2 = 0;\n        long sum3 = 0;\n       \
    \ long count3 = 0;\n        long sum4 = 0;\n        long count4 = 0;\n       \
    \ long sum5 = 0;\n        long count5 = 0;\n        long sum6 = 0;\n        long\
    \ count6 = 0;\n        long sum7 = 0;\n        long count7 = 0;\n        long\
    \ sum8 = 0;\n        long count8 = 0;\n        long sum9 = 0;\n        long count9\
    \ = 0;\n        long sum10 = 0;\n        long count10 = 0;\n        long sum11\
    \ = 0;\n        long count11 = 0;\n        long sum12 = 0;\n        long count12\
    \ = 0;\n        long sum13 = 0;\n        long count13 = 0;\n        long sum14\
    \ = 0;\n        long count14 = 0;\n        long sum15 = 0;\n        long count15\
    \ = 0;\n        long sum16 = 0;\n        long count16 = 0;\n        long sum17\
    \ = 0;\n        long count17 = 0;\n        long sum18 = 0;\n        long count18\
    \ = 0;\n        long sum19 = 0;\n        long count19 = 0;\n        long sum20\
    \ = 0;\n        long count20 = 0;\n        long sum21 = 0;\n        long count21\
    \ = 0;\n        long sum22 = 0;\n        long count22 = 0;\n        long sum23\
    \ = 0;\n        long count23 = 0;\n        long sum24 = 0;\n        long count24\
    \ = 0;\n        long sum25 = 0;\n        long count25 = 0;\n        long sum26\
    \ = 0;\n        long count26 = 0;\n        long sum27 = 0;\n        long count27\
    \ = 0;\n        long sum28 = 0;\n        long count28 = 0;\n        long sum29\
    \ = 0;\n        long count29 = 0;\n        long sum30 = 0;\n        long count30\
    \ = 0;\n        long sum31 = 0;\n        long count31 = 0;\n        long sum32\
    \ = 0;\n        long count32 = 0;\n        long sum33 = 0;\n        long count33\
    \ = 0;\n        long sum34 = 0;\n        long count34 = 0;\n        long sum35\
    \ = 0;\n        long count35 = 0;\n        long sum36 = 0;\n        long count36\
    \ = 0;\n        long sum37 = 0;\n        long count37 = 0;\n        long sum38\
    \ = 0;\n        long count38 = 0;\n        long sum39 = 0;\n        long count39\
    \ = 0;\n        long sum40 = 0;\n        long count40 = 0;\n        long sum41\
    \ = 0;\n        long count41 = 0;\n        ", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long max = 0;\n        for (long i : arr) {\n\
    \            if (max < i) {\n                max = i;\n            }\n       \
    \ }\n        long count = 0;\n        for (long i : arr) {\n            if (i\
    \ == max) {\n                count++;\n            }\n        }\n        if (count\
    \ > k) {\n            for (long i : arr) {\n                if (i != max) {\n\
    \                    result.add(i);\n                }\n            }\n      \
    \  } else {\n            for (long i : arr) {\n                if (i == max) {\n\
    \                    result.add(i);\n                }\n            }\n      \
    \  }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long max = 0;\n        long min = Long.MAX_VALUE;\n\
    \        for (long i : arr) {\n            if (max < i) {\n                max\
    \ = i;\n            }\n            if (min > i) {\n                min = i;\n\
    \            }\n        }\n        long mid = min + (max - min) / 2;\n       \
    \ long mid2 = mid / 2;\n        long mid3 = mid2 / 2;\n        long mid4 = mid3\
    \ / 2;\n        long mid5 = mid4 / 2;\n        long mid6 = mid5 / 2;\n       \
    \ long mid7 = mid6 / 2;\n        long mid8 = mid7 / 2;\n        long mid9 = mid8\
    \ / 2;\n        long mid10 = mid9 / 2;\n        long mid11 = mid10 / 2;\n    \
    \    long mid12 = mid11 / 2;\n        long mid13 = mid12 / 2;\n        long mid14\
    \ = mid13 / 2;\n        long mid15 = mid14 / 2;\n        long mid16 = mid15 /\
    \ 2;\n        long mid17 = mid16 / 2;\n        long mid18 = mid17 / 2;\n     \
    \   long mid19 = mid18 / 2;\n        long mid20 = mid19 / 2;\n        long mid21\
    \ = mid20 / 2;\n        long mid22 = mid21 / 2;\n        long mid23 = mid22 /\
    \ 2;\n        long mid24 = mid23 / 2;\n        long mid25 = mid24 / 2;\n     \
    \   long mid26 = mid25 / 2;\n        long mid27 = mid26 / 2;\n        long mid28\
    \ = mid27 / 2;\n        long mid29 = mid28 / 2;\n        long mid30 = mid29 /\
    \ 2;\n        long mid31 = mid30 / 2;\n        long mid32 = mid31 / 2;\n     \
    \   long mid33 = mid32 / 2;\n        long mid34 = mid33 / 2;\n        long mid35\
    \ = mid34 / 2;\n        long mid36 = mid35 / 2;\n        long mid37 = mid36 /\
    \ 2;\n        long mid38 = mid37 / 2;\n        long mid39 = mid38 / 2;\n     \
    \   long mid40 = mid39 / 2;\n        long mid41 = mid40 / 2;\n        long mid42\
    \ = mid41 / 2;\n        long mid43 = mid42 / 2;\n        long mid44 = mid43 /\
    \ 2;\n        long mid45 = mid44 / 2;\n        long mid46 = mid45 / 2;\n     \
    \   long ", "        ArrayList<Long> result = new ArrayList<Long>();\n       \
    \ ArrayList<Long> temp = new ArrayList<Long>();\n        long max = 0;\n     \
    \   long tempMax = 0;\n        long tempMin = 0;\n        long tempSum = 0;\n\
    \        long tempSum2 = 0;\n        long tempSum3 = 0;\n        long tempSum4\
    \ = 0;\n        long tempSum5 = 0;\n        long tempSum6 = 0;\n        long tempSum7\
    \ = 0;\n        long tempSum8 = 0;\n        long tempSum9 = 0;\n        long tempSum10\
    \ = 0;\n        long tempSum11 = 0;\n        long tempSum12 = 0;\n        long\
    \ tempSum13 = 0;\n        long tempSum14 = 0;\n        long tempSum15 = 0;\n \
    \       long tempSum16 = 0;\n        long tempSum17 = 0;\n        long tempSum18\
    \ = 0;\n        long tempSum19 = 0;\n        long tempSum20 = 0;\n        long\
    \ tempSum21 = 0;\n        long tempSum22 = 0;\n        long tempSum23 = 0;\n \
    \       long tempSum24 = 0;\n        long tempSum25 = 0;\n        long tempSum26\
    \ = 0;\n        long tempSum27 = 0;\n        long tempSum28 = 0;\n        long\
    \ tempSum29 = 0;\n        long tempSum30 = 0;\n        long tempSum31 = 0;\n \
    \       long tempSum32 = 0;\n        long tempSum33 = 0;\n        long tempSum34\
    \ = 0;\n        long tempSum35 = 0;\n        long tempSum36 = 0;\n        long\
    \ tempSum37 = 0;\n        long tempSum38 = 0;\n        long tempSum39 = 0;\n \
    \       long tempSum40 = 0;\n        long tempSum41 = 0;\n        long tempSum42\
    \ = 0;\n        long tempSum43 = 0;\n        long tempSum44 = 0;\n        long\
    \ tempSum45 = 0;\n        long tempSum46 = 0;\n        long tempSum47 = 0;\n \
    \       long tempSum48 = 0;\n        long tempSum49 = 0;\n        long tempSum50\
    \ = 0;\n        long tempSum51 = 0;\n        long tempSum52 = 0;\n        long\
    \ tempSum53 = 0;\n        long tempSum54 = 0;\n        long tempSum55 = 0;\n \
    \       long tempSum56 = 0;\n        long tempSum57 = 0;\n        long tempSum58\
    \ = 0;\n        long tempSum59 = 0;\n        long tempSum60 = 0;\n        long\
    \ tempSum61 = 0;\n        long tempSum62 = 0;\n        long tempSum63 = 0;\n \
    \       long tempSum64 = 0;\n        long tempSum65 = 0;\n        long tempSum66\
    \ = 0;\n        long tempSum67 = 0;\n        long tempSum68 = 0;\n        long\
    \ tempSum", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ max = 0;\n        long min = 0;\n        long sum = 0;\n        for (long i\
    \ : arr) {\n            sum += i;\n            if (sum > max) {\n            \
    \    max = sum;\n            }\n            if (sum < min) {\n               \
    \ min = sum;\n            }\n        }\n        if (max > k) {\n            max\
    \ = k;\n        }\n        if (min < -k) {\n            min = k;\n        }\n\
    \        if (min == max) {\n            max = min + 1;\n        }\n        if\
    \ (min == max) {\n            max = min - 1;\n        }\n        if (min == max)\
    \ {\n            max = min + 1;\n        }\n        if (min == max) {\n      \
    \      max = min - 1;\n        }\n        if (min == max) {\n            max =\
    \ min + 1;\n        }\n        if (min == max) {\n            max = min - 1;\n\
    \        }\n        if (min == max) {\n            max = min + 1;\n        }\n\
    \        if (min == max) {\n            max = min - 1;\n        }\n        if\
    \ (min == max) {\n            max = min + 1;\n        }\n        if (min == max)\
    \ {\n            max = min - 1;\n        }\n        if (min == max) {\n      \
    \      max = min + 1;\n        }\n        if (min == max) {\n            max =\
    \ min - 1;\n        }\n        if (min == max) {\n            max = min + 1;\n\
    \        }\n        if (min == max) {\n            max = min - 1;\n        }\n\
    \        if (min == max) {\n            max = min + 1;\n        }\n        if\
    \ (min == max) {\n            max = min - 1;\n        }\n        if (min == max)\
    \ {\n            max = min + 1;\n        }\n        if (min == max) {\n      \
    \      max = min - 1;\n        }\n        if (min == max) {\n            max =\
    \ min + 1;\n        }\n        if (min == max) {\n            max = min - 1;\n\
    \        }\n        if (min == max) {\n            max = min + 1;\n        }\n\
    \        if (min == max) {\n            max = min - 1;\n        }\n        if\
    \ (min == max) {\n            max = min + 1;\n        }\n        if (min == max)\
    \ {\n            max = min - 1;\n        }\n        if (min == max) {\n      \
    \      max = min + 1;\n        }\n        if (min == max) {\n            max =\
    \ min - 1;\n        }\n        if (min == max) {\n            max = min + 1;\n\
    \        }\n        if (min == max) {\n            max = min - 1;\n        }\n\
    \        if (min == max) {\n            max = min + 1;\n        }\n        if\
    \ (min == max) {\n            max = min - 1;\n        }\n        if (min == max)\
    \ {", "        ArrayList<Long> result = new ArrayList<>();\n        long max =\
    \ 0;\n        long min = 0;\n        for (long i : arr) {\n            if (max\
    \ < i) {\n                max = i;\n            }\n            if (min > i) {\n\
    \                min = i;\n            }\n        }\n        if (max > min) {\n\
    \            for (long i = min; i <= max; i++) {\n                result.add(i);\n\
    \            }\n        }\n        if (result.size() > k) {\n            Collections.sort(result);\n\
    \            result = result.subList(0, k);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        Arrays.sort(arr);\n\
    \        long max = 0;\n        long temp = 0;\n        for (long i = 0; i < arr.size();\
    \ i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n\
    \                temp = i;\n            }\n        }\n        result.add(max,\
    \ temp);\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long max = 0;\n        long min = 0;\n        for (long i : arr) {\n\
    \            if (max < i) {\n                max = i;\n            }\n       \
    \     if (min > i) {\n                min = i;\n            }\n        }\n   \
    \     if (max > min) {\n            for (long i = min; i <= max; i++) {\n    \
    \            result.add(i);\n            }\n        }\n        if (result.size()\
    \ > k) {\n            result = result.subList(0, k);\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ max = Long.MIN_VALUE;\n        for (long i : arr) {\n            if (max < i)\
    \ {\n                max = i;\n            }\n        }\n        if (max > k)\
    \ {\n            max = k;\n        }\n        for (long i : arr) {\n         \
    \   if (max < i) {\n                result.add(i);\n            }\n        }\n\
    \        return result;"]
stop_tokens:
- "\n    }\n"

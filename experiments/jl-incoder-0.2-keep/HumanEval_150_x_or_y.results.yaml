name: HumanEval_150_x_or_y
language: julia
results:
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x\n    elseif n == 2 \n        return y\n    elseif n % 2 == 0 \n\
    \        return x_or_y(n/2, x, y)\n    elseif n % 2 == 1 \n        return x_or_y(n/2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of times a given value appears in\
    \ a given array.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy67kr67k.jl:20\nin expression starting at\
    \ /tmp/tmpy67kr67k.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x\n    else if n == 2 \n        return y\n    else if n % 2 == 0\
    \ \n        return x_or_y(n / 2, x, y)\n    else \n        return x_or_y(n / 2,\
    \ y, x)\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n\
    <text>\nExercise 2\nWrite a function which returns the value of x if n is a prime\
    \ number and should return the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuf3i7koj.jl:12\nin expression starting at\
    \ /tmp/tmpuf3i7koj.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        then return x_or_y(n/2, y, x)\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the factorial of a number. \n\
    Examples:\nfactorial(5) == 120\nfactorial(3) == 6\nfactorial(4) == 24\nfactorial(2)\
    \ == 1\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpin1o6r_2.jl:11\nin expression starting at /tmp/tmpin1o6r_2.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n)\n\
    \        return x\n    else\n        return y\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf810_ajv.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf810_ajv.jl:1\n\
    in expression starting at /tmp/tmpf810_ajv.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n) ==\
    \ true\n        return y\n    else\n        return x\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the factorial of a number.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl6fvzlc2.jl:16\nin expression starting at\
    \ /tmp/tmpl6fvzlc2.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 2 || n\
    \ == 3 || n == 5\n        return y\n    else\n        return x\n    end\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number. \nThe factorial of a number $n$ is defined as:\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphcc0t1k2.jl:16\nin expression starting at\
    \ /tmp/tmphcc0t1k2.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        then return y\n        else return x\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function which takes as input a number n and returns the factorial\
    \ of n. \nThe factorial of a number n is defined as the product of all positive\
    \ integers less than or equal to n.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfhq4hbu3.jl:11\nin expression starting at /tmp/tmpfhq4hbu3.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        then return y\n        else return x\n    end\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a program which should return the value of x if n is \n    a\
    \ prime number and should return the value of y otherwise.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3sqmt782.jl:11\nin expression starting at /tmp/tmp3sqmt782.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 2 || n\
    \ == 3 || n == 5 || n == 7 || n == 11 \n        then y\n        else x\n    end\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that returns the factorial\
    \ of a given number. \nExamples:\nfactorial(3) == 6\nfactorial(5) == 120\nfactorial(10)\
    \ == 3628800\nHint: use recursion!\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"y\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfe3_9bpa.jl:11\nin expression starting at /tmp/tmpfe3_9bpa.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n)\n\
    \        return x\n    else\n        return y\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a program which should return the value of x if n is \n    a prime\
    \ number and should return the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiegamy6v.jl:15\nin expression starting at\
    \ /tmp/tmpiegamy6v.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 2 || n\
    \ == 3 || n == 5\n        return x\n    else\n        return y\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpo5q6snyx.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpo5q6snyx.jl:1\n\
    in expression starting at /tmp/tmpo5q6snyx.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    \n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program which prints\
    \ the factorial of a number. \nThe factorial of a number $n$ is defined as:\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp21cwkbu6.jl:11\nin expression starting at /tmp/tmp21cwkbu6.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x\n    else if n % 2 == 0 \n        return x_or_y(n/2, x, y)\n \
    \   else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.3>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 3\nWrite a function which returns the number of times a given\
    \ number appears in a given array.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcx0uuy6a.jl:12\nin expression starting at\
    \ /tmp/tmpcx0uuy6a.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    if n % 2 == 0 \n   \
    \     then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2, y, x)\n\
    \    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes a number\
    \ as an argument and returns the number of digits in that number.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdwgblhm5.jl:11\nin expression starting at /tmp/tmpdwgblhm5.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x\n    else \n        return y\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert x_or_y(7, 34, 12) == 34\n@assert x_or_y(15, 8, 5) == 5\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the number of times a value appears\
    \ in a given array.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl0miugmp.jl:15\nin expression starting at\
    \ /tmp/tmpl0miugmp.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 2 || n\
    \ == 3 || n == 5\n        return x\n    else\n        return y\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function which returns\
    \ the number of prime numbers less than a given number. \nFor example if given\
    \ number is 10, the function should return 3.\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp590iwzh2.jl:15\nin expression starting at\
    \ /tmp/tmp590iwzh2.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    \n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpier4mlu7.jl:11\nin expression starting at /tmp/tmpier4mlu7.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    \n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the value of x if n\
    \ is a prime number and returns the value of y otherwise.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0jw11o0j.jl:11\nin expression starting at /tmp/tmp0jw11o0j.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x \n        else return y \n    end\n    \n    if n % 2 ==\
    \ 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n /\
    \ 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a program which prints\
    \ the Fibonacci numbers. \nThe Fibonacci numbers are the numbers in the following\
    \ sequence: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, ...\nThe first two numbers\
    \ in the Fibonacci sequence are 0 and 1. \nThe second two numbers in the Fibonacci\
    \ sequence are 1 and 2. \nThe third number in the Fibonacci sequence is 2. \n\
    The fourth number in the Fibonacci sequence is 3. \nThe fifth number in the Fibonacci\
    \ sequence is 5. \nThe sixth number in the Fibonacci sequence is 8. \nThe seventh\
    \ number in the Fibonacci sequence is 13. \nThe eighth number in the Fibonacci\
    \ sequence is 21. \nThe ninth number in the Fibonacci sequence is 34. \nThe tenth\
    \ number in the Fibonacci sequence is 55. \nThe eleventh number in the Fibonacci\
    \ sequence is 89. \nThe twelfth number in the Fibonacci sequence is 144. \nThe\
    \ thirteenth number in the Fibonacci sequence is 233. \nThe fourteenth number\
    \ in the Fibonacci sequence is 377. \nThe fifteenth number in the Fibonacci sequence\
    \ is 610. \nThe sixteenth number in the Fibonacci sequence is 987. \nThe seventeenth\
    \ number in the Fibonacci sequence is 1597. \nThe eighteenth number in the Fibonacci\
    \ sequence is 2584. \nThe nineteenth number in the Fibonacci sequence is 4181.\
    \ \nThe twentieth number in the Fibonacci sequence is 6765. \nThe twenty-first\
    \ number in the Fibonacci sequence is 13821. \nThe twenty-second number in the\
    \ Fibonacci sequence is 19643. \nThe twenty-third number in the Fibonacci sequence\
    \ is 31781. \nThe twenty-fourth number in the Fibonacci sequence is 514229. \n\
    The twenty-fifth number in the Fibonacci sequence is 832041. \n\nusing Test\n\n\
    @testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t\
    @test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3_4_3c60.jl:11\nin expression starting at /tmp/tmp3_4_3c60.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1\n   \
    \     return x\n    else\n        return y\n    end\nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that takes two numbers and returns the sum of the squares\
    \ of the two numbers.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t\
    @test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp56d71465.jl:16\nin expression starting at\
    \ /tmp/tmp56d71465.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if n % 2 == 0 \n        then return x_or_y(n /\
    \ 2, x, y)\n    else \n        return x_or_y(n / 2, y, x)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 4\nWrite a\
    \ program which should return the value of x if n is a prime number and should\
    \ return the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvijf9n25.jl:11\nin expression starting at /tmp/tmpvijf9n25.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    \n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program which takes\
    \ a number n and returns the value of x if n is a prime number and returns the\
    \ value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkk51zq8r.jl:11\nin expression starting at /tmp/tmpkk51zq8r.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        then return y\n        else return x\n    end\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a program which should return the value of x if n is \n    a\
    \ prime number and should return the value of y otherwise.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqv4tm64w.jl:11\nin expression starting at /tmp/tmpqv4tm64w.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1\n   \
    \     return x\n    else\n        return y\n    end\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a program which should return True if n is a prime number and False\
    \ otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpttvnlmih.jl:16\nin expression starting at\
    \ /tmp/tmpttvnlmih.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n) ==\
    \ true\n        x \n    else\n        y\n    end\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a program which takes as input a number n and returns the value of\
    \ x if n is a prime number and returns the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg6axjjz3.jl:16\nin expression starting at\
    \ /tmp/tmpg6axjjz3.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then x\n    else\n        if isPrime(n)\n            then x_or_y(n-1, x,\
    \ y)\n        else\n            y\n        end\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function which returns the sum of all prime numbers less than\
    \ or equal to n.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvavuqn5o.jl:11\nin expression starting at /tmp/tmpvavuqn5o.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x\n    else if n % 2 == 0 \n        return x_or_y(n/2, x, y)\n \
    \   else \n        return x_or_y(n/2, y, x)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzesgdzqb.jl:12\nin expression starting at\
    \ /tmp/tmpzesgdzqb.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9n1niy9h.jl:11\nin expression starting at /tmp/tmp9n1niy9h.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n) ==\
    \ true \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprfmufmop.jl:11\nin expression starting at /tmp/tmprfmufmop.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<text>\nExercise\
    \ 7\nWrite a program which returns the number of times a given number appears\
    \ in a given list.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfs97wtgd.jl:11\nin expression starting at /tmp/tmpfs97wtgd.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        then return x\n        else return y\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers and returns the sum\
    \ of the squares of the numbers.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpuxwnyber.jl:11\nin expression starting at /tmp/tmpuxwnyber.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 2 || n\
    \ == 3 || n == 5\n        return y\n    else\n        return x\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which takes as input a number n and returns\
    \ the value of x if n is a prime number and returns the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj4z65uzy.jl:15\nin expression starting at\
    \ /tmp/tmpj4z65uzy.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x\n    else if n % 2 == 0 \n        return x_or_y(n/2, x, y)\n \
    \   else \n        return x_or_y(n/2, y, x)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzvgq9g8i.jl:12\nin expression starting at\
    \ /tmp/tmpzvgq9g8i.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n) ==\
    \ true\n        return x\n    else\n        return y\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a number n and returns the number of digits in\
    \ n. \nFor example, x_digits(12) == 3.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpppu2sjk5.jl:15\nin expression starting at\
    \ /tmp/tmpppu2sjk5.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    \n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program which should\
    \ return the value of x if n is a prime number and should return the value of\
    \ y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdo9wxb6q.jl:11\nin expression starting at /tmp/tmpdo9wxb6q.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    if n % 2 == 0 \n   \
    \     then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2, y, x)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the number of times a given number appears in a given\
    \ array. \nFor example count_in_array(3, [1, 2, 3, 3]) == 2.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpv47b28kz.jl:11\nin expression starting at /tmp/tmpv47b28kz.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    \n    if n % 2 == 0\
    \ \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program which returns\
    \ the value of x if n is a prime number and returns the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprts8daw3.jl:11\nin expression starting at /tmp/tmprts8daw3.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if isPrime(n)\n        then return y\n    else\
    \ \n        return x_or_y(n-1, x, y+1)\nend\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype x_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 4\nWrite a program\
    \ which returns the value of x if n is a prime number and returns the value of\
    \ y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9m17huzi.jl:11\nin expression starting at /tmp/tmp9m17huzi.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1\n   \
    \     return x\n    else\n        return y\nend\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.4>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the value of x if n is a prime\
    \ number and should return the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpelh9_cmz.jl:15\nin expression starting at\
    \ /tmp/tmpelh9_cmz.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        then return x\n        else return y\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a program that prints the numbers from 1 to 100 and then prints\
    \ the numbers that are divisible by 7 and are not divisible by 3.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1nnrbn80.jl:11\nin expression starting at /tmp/tmp1nnrbn80.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    if n % 2 == 0 \n   \
    \     then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2, y, x)\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\nx_or_y(7, 34, 12)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the value of x if n is a prime number and returns the\
    \ value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmps91p96g4.jl:11\nin expression starting at /tmp/tmps91p96g4.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x \n    else \n        return y \nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a program which should return the value of x if n is \n    a prime\
    \ number and should return the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_0g8509z.jl:15\nin expression starting at\
    \ /tmp/tmp_0g8509z.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    \n    if n % 2 == 0\
    \ \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x)\n    end\nend\n</cell>\n<text>\nExercise 10\nWrite a program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpimkehram.jl:11\nin expression starting at /tmp/tmpimkehram.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    if n % 2 == 0 \n   \
    \     then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2, y, x)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function which returns the number of times a given value appears in a given\
    \ array.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp84nxfyuy.jl:11\nin expression starting at /tmp/tmp84nxfyuy.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        then return y\n        else return x\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a program which should return the value of x if n is \n    a\
    \ prime number and should return the value of y otherwise.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpg6kri25a.jl:11\nin expression starting at /tmp/tmpg6kri25a.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        then return y\n        else return x\n    end\nend\n</cell>\n<text>\n\
    Exercise 4\nWrite a program which should return the value of x if n is \n    a\
    \ prime number and should return the value of y otherwise.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfefu9x32.jl:11\nin expression starting at /tmp/tmpfefu9x32.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    if n % 2 == 0 \n   \
    \     then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2, y, x)\n\
    \    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ factorial of a number. \nThe function should accept a number as an argument\
    \ and should return an Int64 number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5udmu7ld.jl:11\nin expression starting at /tmp/tmp5udmu7ld.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x\n    else\n        return y\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the factorial of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpddtopgwg.jl:15\nin expression starting at\
    \ /tmp/tmpddtopgwg.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.3>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a program which should return the value of x if n is\
    \ a prime number and should return the value of y otherwise.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp67wggip3.jl:11\nin expression starting at /tmp/tmp67wggip3.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0\n\
    \        then return y\n        else return x\n    end\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of times a given value appears\
    \ in a given array.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpuf0k7bb4.jl:11\nin expression starting at /tmp/tmpuf0k7bb4.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        then return x \n        else return y\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvbvtftwq.jl:11\nin expression starting at /tmp/tmpvbvtftwq.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        then return x \n        else return y\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the factorial of a given number.\
    \ \nThe function should accept a number as an argument and should return the factorial\
    \ of that number.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn_vmexi7.jl:11\nin expression starting at /tmp/tmpn_vmexi7.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n) ==\
    \ true\n        x \n    else\n        y\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp821dimfm.jl:21\n  Test threw exception\n\
    \  Expression: candidate(7, 34, 12) == 34\n  UndefVarError: isPrime not defined\n\
    \  Stacktrace:\n   [1] x_or_y(n::Int64, x::Int64, y::Int64)\n     @ Main /tmp/tmp821dimfm.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp821dimfm.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp821dimfm.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp821dimfm.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(15, 8, 5) == 5\n  UndefVarError: isPrime not defined\n  Stacktrace:\n\
    \   [1] x_or_y(n::Int64, x::Int64, y::Int64)\n     @ Main /tmp/tmp821dimfm.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp821dimfm.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp821dimfm.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp821dimfm.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(3, 33, 5212) == 33\n  UndefVarError: isPrime not defined\n  Stacktrace:\n\
    \   [1] x_or_y(n::Int64, x::Int64, y::Int64)\n     @ Main /tmp/tmp821dimfm.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp821dimfm.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp821dimfm.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp821dimfm.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(1259, 3, 52) == 3\n  UndefVarError: isPrime not defined\n  Stacktrace:\n\
    \   [1] x_or_y(n::Int64, x::Int64, y::Int64)\n     @ Main /tmp/tmp821dimfm.jl:10\n\
    \   [2] macro expansion\n   "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 10 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp821dimfm.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if n % 2 == 0 \n        then return x_or_y(n /\
    \ 2, x, y)\n    else \n        return x_or_y(n / 2, y, x)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ number of times a given number appears in a given array.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3r0w3m5e.jl:11\nin expression starting at /tmp/tmp3r0w3m5e.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    \n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<text>\nExercise 3\nWrite a program which returns the value of x if n\
    \ is a prime number and returns the value of y otherwise.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzcpvvy20.jl:11\nin expression starting at /tmp/tmpzcpvvy20.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if n == 2 \n        then return y\n    else if\
    \ n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n    else \n        return\
    \ x_or_y(n / 2, y, x)\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34,\
    \ 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the factorial of a given number. \n\
    Examples:\nfactorial(3) == 6\nfactorial(5) == 120\nfactorial(10) == 3628800\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp570w0ri0.jl:11\nin expression starting at /tmp/tmp570w0ri0.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n) ==\
    \ true \n        x \n    else \n        y \n    end\nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a program which should return the value of x if n is \n    a prime\
    \ number and should return the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpffqdm8zt.jl:16\nin expression starting at\
    \ /tmp/tmpffqdm8zt.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    \n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program which returns\
    \ the value of x if n is a prime number and returns the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpilck9nik.jl:11\nin expression starting at /tmp/tmpilck9nik.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x\n    else \n        return y\nend\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the factorial of a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx5gdj6kt.jl:15\nin expression starting at\
    \ /tmp/tmpx5gdj6kt.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    if n % 2 == 0 \n   \
    \     then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2, y, x)\n\
    \    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program which should return\
    \ True if n is a prime number and False otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpycngyt74.jl:11\nin expression starting at /tmp/tmpycngyt74.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if n == 2 \n        then return y\n    else if\
    \ n % 2 == 0 \n        then return x_or_y(n-1, x, y)\n    else \n        then\
    \ return x_or_y(n-1, y, x)\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7,\
    \ 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\n\
    Exercise 2\nWrite a program which takes an integer n and returns the value of\
    \ n!.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp600_8_nl.jl:11\nin expression starting at /tmp/tmp600_8_nl.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x\n    else if n == 2 \n        return y\n    else \n        return\
    \ x_or_y(n - 1, x, y) \nend\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp60e5hdku.jl:12\nin expression starting at\
    \ /tmp/tmp60e5hdku.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    \n    if n % 2 == 0\
    \ \n        then return x_or_y(n-1, x-y, y)\n        else return x_or_y(n-1, x,\
    \ y-x)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t\
    @test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7jymo48q.jl:11\nin expression starting at /tmp/tmp7jymo48q.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if isPrime(n)\n        then return y\n    else\
    \ \n        then return x_or_y(n-1, x, y+1)\n    end\nend\n</cell>\n<code language=julia-1.0>\n\
    @code_warntype x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.0>\n@code_warntype\
    \ x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 4\nWrite a function that takes a\
    \ vector of integers and returns a vector of the squares of the integers in the\
    \ vector.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqhq7c2d3.jl:11\nin expression starting at /tmp/tmpqhq7c2d3.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the value of x if n is a prime\
    \ number and returns the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsyeeagva.jl:11\nin expression starting at /tmp/tmpsyeeagva.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n) ==\
    \ true\n        return y\n    else\n        return x\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgushxkrq.jl:16\nin expression starting at\
    \ /tmp/tmpgushxkrq.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n) ==\
    \ true\n        return x\n    else\n        return y\n    end\nend\n</cell>\n\
    <code language=julia-1.4>\n@code_warntype x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the number of prime numbers less than a given number. \nThe function\
    \ should take one argument, the number to check. \nThe function should return\
    \ an integer which is the number of prime numbers less than the given number.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1jcpp_r0.jl:16\nin expression starting at\
    \ /tmp/tmp1jcpp_r0.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        then return x_or_y(n/2, y, x)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ number of times a given number appears in a given array.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_crnwlmz.jl:11\nin expression starting at /tmp/tmp_crnwlmz.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        then return y\n        else return x\n    end\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers and returns the sum\
    \ of all even numbers in the array. \nWrite a function that takes an array of\
    \ numbers and returns the sum of all odd numbers in the array. \nWrite a function\
    \ that takes an array of numbers and returns the product of all numbers in the\
    \ array. \nWrite a function that takes an array of numbers and returns the product\
    \ of all odd numbers in the array. \nWrite a function that takes an array of numbers\
    \ and returns the product of all even numbers in the array. \nWrite a function\
    \ that takes an array of numbers and returns the product of all numbers in the\
    \ array that are divisible by 7. \nWrite a function that takes an array of numbers\
    \ and returns the product of all numbers in the array that are divisible by 3.\
    \ \nWrite a function that takes an array of numbers and returns the product of\
    \ all numbers in the array that are divisible by 5. \nWrite a function that takes\
    \ an array of numbers and returns the product of all numbers in the array that\
    \ are divisible by 2. \nWrite a function that takes an array of numbers and returns\
    \ the product of all numbers in the array that are divisible by 1. \nWrite a function\
    \ that takes an array of numbers and returns the product of all numbers in the\
    \ array that are divisible by 4. \nWrite a function that takes an array of numbers\
    \ and returns the product of all numbers in the array that are divisible by 6.\
    \ \nWrite a function that takes an array of numbers and returns the product of\
    \ all numbers in the array that are divisible by 8. \nWrite a function that takes\
    \ an array of numbers and returns the product of all numbers in the array that\
    \ are divisible by 10. \nWrite a function that takes an array of numbers and returns\
    \ the product of all numbers in the array that are divisible by 11. \nWrite a\
    \ function that takes an array of numbers and returns the product of all numbers\
    \ in the array that are divisible by 12. \nWrite a function that takes an array\
    \ of numbers and returns the product of all numbers in the array that are divisible\
    \ by 14. \nWrite a function that takes an array of numbers and returns the product\
    \ of all numbers in the array that are divisible by 16. \nWrite a function that\
    \ takes an array of numbers and returns the product of all numbers in the array\
    \ that are divisible by 18. \nWrite a function that takes an array of numbers\
    \ and returns the product of all numbers in the array that are divisible by 20.\
    \ \nWrite a function that takes an array of numbers and returns the product of\
    \ all numbers in the array that are divisible by 22. \nWrite a function that takes\
    \ an array of numbers and returns the product of all numbers in the array that\
    \ are divisible by 24. \nWrite a function that takes an array of numbers and returns\
    \ the product of all numbers in the array that are divisible by 26. \nWrite a\
    \ function that takes an array of numbers and returns the product of all numbers\
    \ in the array that are divisible by 28. \nWrite a function that takes an array\
    \ of \nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpohl2v8sx.jl:11\nin expression starting at /tmp/tmpohl2v8sx.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then x\n        else y\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of times a given value appears in a given\
    \ array.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzt3yseu1.jl:11\nin expression starting at /tmp/tmpzt3yseu1.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x\n    else\n        if isPrime(n) == true\n            return y\n\
    \        else\n            return x\n        end\n    end\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of prime numbers less than\
    \ a given number. \nThe function should take one argument, x, and return a value\
    \ of type Int64.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn2yt6_fx.jl:20\nin expression starting at\
    \ /tmp/tmpn2yt6_fx.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    \n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program which returns\
    \ the value of x if n is a prime number and returns the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmmqnd0it.jl:11\nin expression starting at /tmp/tmpmmqnd0it.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x \n    else \n        return y \nend\n</cell>\n<code language=julia-1.5>\n\
    @assert x_or_y(7, 34, 12) == 34\n@assert x_or_y(15, 8, 5) == 5\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a vector as input and returns a vector\
    \ with the squared values of its elements.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqqggwxmm.jl:15\nin expression starting at\
    \ /tmp/tmpqqggwxmm.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n==2 \n    \
    \    then return x\n        else return y\n    end\n    if n%3==0 \n        then\
    \ return x_or_y(n/3, x, y)\n        else return x_or_y(n/3, y, x)\n    end\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a program which prints the prime numbers less\
    \ than a given number n. \nThe program should print all the prime numbers less\
    \ than or equal to n. \nThe program should print all the prime numbers less than\
    \ or equal to n. \nThe program should print all the prime numbers less than or\
    \ equal to n. \nThe program should print all the prime numbers less than or equal\
    \ to n. \nThe program should print all the prime numbers less than or equal to\
    \ n. \nThe program should print all the prime numbers less than or equal to n.\
    \ \nThe program should print all the prime numbers less than or equal to n. \n\
    The program should print all the prime numbers less than or equal to n. \nThe\
    \ program should print all the prime numbers less than or equal to n. \nThe program\
    \ should print all the prime numbers less than or equal to n. \nThe program should\
    \ print all the prime numbers less than or equal to n. \nThe program should print\
    \ all the prime numbers less than or equal to n. \nThe program should print all\
    \ the prime numbers less than or equal to n. \nThe program should print all the\
    \ prime numbers less than or equal to n. \nThe program should print all the prime\
    \ numbers less than or equal to n. \nThe program should print all the prime numbers\
    \ less than or equal to n. \nThe program should print all the prime numbers less\
    \ than or equal to n. \nThe program should print all the prime numbers less than\
    \ or equal to n. \nThe program should print all the prime numbers less than or\
    \ equal to n. \nThe program should print all the prime numbers less than or equal\
    \ to n. \nThe program should print all the prime numbers less than or equal to\
    \ n. \nThe program should print all the prime numbers less than or equal to n.\
    \ \nThe program should print all the prime numbers less than or equal to n. \n\
    The program should print all the prime numbers less than or equal to n. \nThe\
    \ program should print all the prime numbers less than or equal to n. \nThe program\
    \ should print all the prime numbers less than or equal to n. \nThe program should\
    \ print all the prime numbers less than or equal to n. \nThe program should print\
    \ all the prime numbers less than or equal to n. \nThe program should print all\
    \ the prime numbers less than or equal to n. \nThe program should print all the\
    \ prime numbers less than or equal to n. \nThe program should print all the prime\
    \ numbers less than or equal to n. \nThe program should print all the prime numbers\
    \ less than or equal to n. \nThe program should print all the prime numbers less\
    \ than or equal to n. \nThe program should print all the prime numbers less than\
    \ or equal to n. \n\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmph__3_gbx.jl:11\nin expression starting at /tmp/tmph__3_gbx.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x\n    else if n == 2 \n        return y\n    else if n % 2 == 0\
    \ \n        return x_or_y(n / 2, x, y)\n    else \n        return x_or_y(n / 2,\
    \ y, x)\nend\n</cell>\n<code language=julia-1.0>\nx_or_y(7, 34, 12)\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of divisors of a given number. \nFor example\
    \ if the number is 7 then it should return 3 because there are 3 divisors: 1,\
    \ 2, and 3.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_7c8ivbc.jl:12\nin expression starting at\
    \ /tmp/tmp_7c8ivbc.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x\n    else if n % 2 == 0 \n        return x_or_y(n/2, x, y)\n \
    \   else \n        return x_or_y(n/2, y, x)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdcn791jq.jl:12\nin expression starting at\
    \ /tmp/tmpdcn791jq.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 2\n   \
    \     y \n    else\n        x\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a program which should return the value of x if n is \n    a prime number and\
    \ should return the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkl6wld31.jl:16\nin expression starting at\
    \ /tmp/tmpkl6wld31.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if n % 2 == 0 \n        then return x_or_y(n /\
    \ 2, x, y)\n    else \n        then return x_or_y(n / 2, y, x)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n@code_warntype x_or_y(7, 34, 12)\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype x_or_y(15, 8, 5)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the value of x if n is a prime number\
    \ and should return the value of y otherwise.\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_xknpqa7.jl:11\nin expression starting at /tmp/tmp_xknpqa7.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    \n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a program which prints\
    \ the square of a given number. \nThe program should ask the user for a number\
    \ and then print its square. \nThe program should ask the user for a number and\
    \ then print its square. \nThe program should ask the user for a number and then\
    \ print its square. \nThe program should ask the user for a number and then print\
    \ its square. \nThe program should ask the user for a number and then print its\
    \ square. \nThe program should ask the user for a number and then print its square.\
    \ \nThe program should ask the user for a number and then print its square. \n\
    The program should ask the user for a number and then print its square. \nThe\
    \ program should ask the user for a number and then print its square. \nThe program\
    \ should ask the user for a number and then print its square. \nThe program should\
    \ ask the user for a number and then print its square. \nThe program should ask\
    \ the user for a number and then print its square. \nThe program should ask the\
    \ user for a number and then print its square. \nThe program should ask the user\
    \ for a number and then print its square. \nThe program should ask the user for\
    \ a number and then print its square. \nThe program should ask the user for a\
    \ number and then print its square. \nThe program should ask the user for a number\
    \ and then print its square. \nThe program should ask the user for a number and\
    \ then print its square. \nThe program should ask the user for a number and then\
    \ print its square. \nThe program should ask the user for a number and then print\
    \ its square. \nThe program should ask the user for a number and then print its\
    \ square. \nThe program should ask the user for a number and then print its square.\
    \ \nThe program should ask the user for a number and then print its square. \n\
    The program should ask the user for a number and then print its square. \nThe\
    \ program should ask the user for a number and then print its square. \nThe program\
    \ should ask the user for a number and then print its square. \nThe program should\
    \ ask the user for a number and then print its square. \nThe program should ask\
    \ the user for a number and then print its square. \nThe program should ask the\
    \ user for a number and then print its square. \nThe program should ask the user\
    \ for a number and then print its square. \nThe program should ask the user for\
    \ a number and then print its square. \nThe program should ask the user for a\
    \ number \nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjfe2qq6j.jl:11\nin expression starting at /tmp/tmpjfe2qq6j.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x \n    else \n        return y \nend \n</cell>\n<code language=julia-1.5>\n\
    @assert x_or_y(7, 34, 12) == 34\n@assert x_or_y(15, 8, 5) == 5\n</cell>\n<text>\n\
    Exercise 3\nWrite a program which prints the following string: \n\"The value of\
    \ x is x if n is a prime number. \nThe value of y is y if n is not a prime number.\"\
    \nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp66sryh79.jl:15\nin expression starting at\
    \ /tmp/tmp66sryh79.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x \n        else return y \n    end\n    \n    for d in 2:(n-1)\
    \ \n        if n%d == 0 \n            then return x_or_y(n, x-1, y) \n       \
    \     else return x_or_y(n, x, y-1) \n        end\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@code_warntype x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the number of prime numbers less than a given number. \nThe function\
    \ should take one argument, n, which should be an Int64.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpappuf8jk.jl:11\nin expression starting at /tmp/tmpappuf8jk.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        then x_or_y(n, x, y)\n        else y\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the value of x if n is a prime\
    \ number and returns the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"x_or_y\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpt4gpefwl.jl:11\nin expression starting at /tmp/tmpt4gpefwl.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        then return x \n        else return y\n    end\nend\n</cell>\n<text>\n\
    Exercise 10\nWrite a program which should return the value of x if n is \n   \
    \ a prime number and should return the value of y otherwise.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpg1bi3ob0.jl:11\nin expression starting at /tmp/tmpg1bi3ob0.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        then return x\n        else return y\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype x_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the value of x if n is divisible by 3 and \nthe value of y if n\
    \ is divisible by 5 and should return the value of z if n is \ndivisible by both\
    \ 3 and 5 and should return -1 otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgypakwyz.jl:11\nin expression starting at /tmp/tmpgypakwyz.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if n == 2 \n        then return y\n    else if\
    \ n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n    else \n        return\
    \ x_or_y(n/2, y, x)\nend\n</cell>\n<text>\nExercise 4\nWrite a program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpp3n_hrmy.jl:11\nin expression starting at /tmp/tmpp3n_hrmy.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x \n    else \n        return y \nend \n</cell>\n<code language=julia-1.3>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.3>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function which returns the number of elements in a\
    \ vector which satisfy a certain condition. \nFor example the function should\
    \ return the number of elements in a vector which satisfy the condition $x^2 +\
    \ y^2 = z^2$. \nThe function should work for vectors of any length.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkjr6sn2o.jl:15\nin expression starting at\
    \ /tmp/tmpkjr6sn2o.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x \n    else \n        if isPrime(n) \n            then return\
    \ x \n        else \n            return y \nend\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of prime numbers less than or equal to n.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpczx82fj8.jl:11\nin expression starting at /tmp/tmpczx82fj8.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x \n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the value of x if n is a prime\
    \ number and should return the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpftnpytsd.jl:11\nin expression starting at /tmp/tmpftnpytsd.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    \n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of times a given number appears\
    \ in a given array.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpttsc9kx4.jl:11\nin expression starting at /tmp/tmpttsc9kx4.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n) ==\
    \ true\n        return x\n    else\n        return y\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpiwku20bd.jl:21\n  Test threw exception\n\
    \  Expression: candidate(7, 34, 12) == 34\n  UndefVarError: isPrime not defined\n\
    \  Stacktrace:\n   [1] x_or_y(n::Int64, x::Int64, y::Int64)\n     @ Main /tmp/tmpiwku20bd.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiwku20bd.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiwku20bd.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpiwku20bd.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(15, 8, 5) == 5\n  UndefVarError: isPrime not defined\n  Stacktrace:\n\
    \   [1] x_or_y(n::Int64, x::Int64, y::Int64)\n     @ Main /tmp/tmpiwku20bd.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiwku20bd.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiwku20bd.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpiwku20bd.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(3, 33, 5212) == 33\n  UndefVarError: isPrime not defined\n  Stacktrace:\n\
    \   [1] x_or_y(n::Int64, x::Int64, y::Int64)\n     @ Main /tmp/tmpiwku20bd.jl:10\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpiwku20bd.jl:23 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiwku20bd.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpiwku20bd.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(1259, 3, 52) == 3\n  UndefVarError: isPrime not defined\n  Stacktrace:\n\
    \   [1] x_or_y(n::Int64, x::Int64, y::Int64)\n     @ Main /tmp/tmpiwku20bd.jl:10\n\
    \   [2] macro expansion\n   "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 10 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiwku20bd.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    \n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function which takes\
    \ an integer n and returns the value of x if n is a prime number and returns the\
    \ value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp73vo9g2b.jl:11\nin expression starting at /tmp/tmp73vo9g2b.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x\n    else if n % 2 == 0 \n        return x_or_y(n-1, x, y)\n \
    \   else \n        return x_or_y(n-1, y, x)\nend\n</cell>\n<text>\nExercise 2\n\
    Write a program which prints the prime numbers between 1 and 100. \nThe program\
    \ should print each prime number on a separate line.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpypi9lj9y.jl:12\nin expression starting at\
    \ /tmp/tmpypi9lj9y.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of times a given value appears in a given array.\nusing Test\n\n\
    @testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t\
    @test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpu8rq19o4.jl:11\nin expression starting at /tmp/tmpu8rq19o4.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n) ==\
    \ true\n        return x\n    else\n        return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpaz1_54so.jl:16\nin expression starting at\
    \ /tmp/tmpaz1_54so.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        then return y\n        else return x\n    end\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an integer n and returns the sum of its\
    \ digits. \nFor example, sum_of_digits(123) = 1 + 2 + 3 = 6.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc7m6z_mk.jl:11\nin expression starting at /tmp/tmpc7m6z_mk.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    if n % 2 == 0 \n   \
    \     then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2, y, x)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype x_or_y(7, 34,\
    \ 12)\n</cell>\n<code language=julia-1.5>\n@code_warntype x_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a program which returns the value of x if n is a prime\
    \ number and returns the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvyszbr_8.jl:11\nin expression starting at /tmp/tmpvyszbr_8.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0\n\
    \        then return y\n        else return x\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers and returns the sum\
    \ of all even numbers in the array.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqxuvfbhb.jl:11\nin expression starting at /tmp/tmpqxuvfbhb.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1\n   \
    \     return x\n    else\n        return y\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp68rgbwpf.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp68rgbwpf.jl:1\n\
    in expression starting at /tmp/tmp68rgbwpf.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1\n   \
    \     return x\n    else\n        return y\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpkayziqle.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpkayziqle.jl:1\n\
    in expression starting at /tmp/tmpkayziqle.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if n % 2 == 0 \n        then return x_or_y(n /\
    \ 2, x, y)\n    else \n        return x_or_y(n / 2, y, x)\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t\
    @test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvym46lhp.jl:11\nin expression starting at /tmp/tmpvym46lhp.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n) ==\
    \ true \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a number n and returns the square\
    \ of n if n is a prime number and returns the square of -n otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0hu6lf4p.jl:11\nin expression starting at /tmp/tmp0hu6lf4p.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n) ==\
    \ true\n        x \n    else\n        y\n    end\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a program which should return True if n is a prime number and False\
    \ otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9vwy4095.jl:16\nin expression starting at\
    \ /tmp/tmp9vwy4095.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        then return x \n        else return y\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfk3xye_o.jl:11\nin expression starting at /tmp/tmpfk3xye_o.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a program which should return the value of x if n is a prime number\
    \ and should return the value of y otherwise.\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpr7kx_9xr.jl:11\nin expression starting at /tmp/tmpr7kx_9xr.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 2 || n\
    \ == 3 || n == 5\n        return y\n    else\n        return x\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp8xs5cbpb.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8xs5cbpb.jl:1\n\
    in expression starting at /tmp/tmp8xs5cbpb.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        then return x_or_y(n/2, y, x)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function which returns the value of x if n is a prime number and should return\
    \ the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmproal3pjh.jl:11\nin expression starting at /tmp/tmproal3pjh.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        then return x \n        else return y\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a program which takes a number n and returns the square of n\
    \ if n is \n    a prime number and returns the cube of n otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcl_49gta.jl:11\nin expression starting at /tmp/tmpcl_49gta.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if n % 2 == 0 \n        then return x_or_y(n /\
    \ 2, x, y)\n    else \n        then return x_or_y(n / 2, y, x)\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\nx_or_y(7, 34, 12)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a program which takes as input a number n and returns the value of\
    \ x if n is a prime number and returns the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptlzzylk0.jl:11\nin expression starting at /tmp/tmptlzzylk0.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x \n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n        else return x_or_y(n/2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype x_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes in three numbers and returns the sum of the squares of the first\
    \ two numbers and the sum of the squares of the last two numbers. \nThe function\
    \ should return two numbers. \nThe function should return nothing if the input\
    \ numbers are less than or equal to zero.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9o46zke0.jl:11\nin expression starting at /tmp/tmp9o46zke0.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    \n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program which takes\
    \ a number n and returns the value of x if n is a prime number and returns the\
    \ value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpq4fo8sbk.jl:11\nin expression starting at /tmp/tmpq4fo8sbk.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        then return y\n        else return x\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a program which should return True if n is divisible by 3 and\
    \ False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpo0rcxqlp.jl:11\nin expression starting at /tmp/tmpo0rcxqlp.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x\n    else if n % 2 == 0 \n        return x_or_y(n-1, x, y)\n \
    \   else \n        return x_or_y(n-1, y, x)\nend\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.0>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of divisors of n\
    \ that are less than or equal to n.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpct6rmrx4.jl:12\nin expression starting at\
    \ /tmp/tmpct6rmrx4.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x \n    else \n        return y \nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 3\nWrite a function which returns the value of x if n is a prime\
    \ number and returns the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo_ig19y7.jl:15\nin expression starting at\
    \ /tmp/tmpo_ig19y7.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n) ==\
    \ true\n        return x\n    else\n        return y\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\n@code_warntype x_or_y(7, 34, 12)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function which takes as input a number n and returns the square\
    \ of n. \nThe function should raise an error if n is not a positive integer.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn1nj__30.jl:16\nin expression starting at\
    \ /tmp/tmpn1nj__30.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x \n        else return y \n    end\n    \n    if n % 2 ==\
    \ 0 \n        then return x_or_y(n/2, x, y) \n        else return x_or_y(n/2,\
    \ y, x) \n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function which returns the factorial of a given number. \nFor example\
    \ factorial(5) == 120\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t\
    @test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpa6iberbn.jl:11\nin expression starting at /tmp/tmpa6iberbn.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n) ==\
    \ true \n        then return x \n        else return y\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpofaxzyiz.jl:11\nin expression starting at /tmp/tmpofaxzyiz.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        then return y\n        else return x\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a program which should return the value of x if n is \n    a\
    \ prime number and should return the value of y otherwise.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpp67_pvwi.jl:11\nin expression starting at /tmp/tmpp67_pvwi.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1\n   \
    \     return x\n    else\n        return y\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1s9iv7w9.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1s9iv7w9.jl:1\n\
    in expression starting at /tmp/tmp1s9iv7w9.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then x\n    else if n % 2 == 0 \n        then x_or_y(n / 2, x, y)\n   \
    \ else \n        then x_or_y(n / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the factorial of a given number. \nFor example factorial(5) == 120.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjv5794vv.jl:11\nin expression starting at /tmp/tmpjv5794vv.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        then return x_or_y(n/2, y, x)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite a program which takes as\
    \ input a number n and returns the value of x if n is a prime number and returns\
    \ the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprfeu_c4r.jl:11\nin expression starting at /tmp/tmprfeu_c4r.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x\n    else if n == 2 \n        return y\n    else if n % 2 == 0\
    \ \n        return x_or_y(n / 2, x, y)\n    else \n        return x_or_y(n / 2,\
    \ y, x)\nend\n</cell>\n<code language=julia-1.3>\nx_or_y(7, 34, 12)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the value of x if n is a prime number and returns the\
    \ value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu8drp307.jl:12\nin expression starting at\
    \ /tmp/tmpu8drp307.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    \n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype x_or_y(7,\
    \ 34, 12)\n</cell>\n<text>\nExercise 2\nWrite a function which returns the value\
    \ of x if n is a prime number and should return the value of y otherwise.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqpbi9_hd.jl:11\nin expression starting at /tmp/tmpqpbi9_hd.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n==2 \n    \
    \    return x \n    else \n        return y \nend\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2c4i0zp6.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2c4i0zp6.jl:1\n\
    in expression starting at /tmp/tmp2c4i0zp6.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    \n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype x_or_y(7,\
    \ 34, 12)\n</cell>\n<text>\nExercise 2\nWrite a program which takes as input a\
    \ number n and returns the value of x if n is a prime number and returns the value\
    \ of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgaofy7o1.jl:11\nin expression starting at /tmp/tmpgaofy7o1.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x\n    else if n % 2 == 0 \n        return x_or_y(n / 2, x, y)\n\
    \    else \n        return x_or_y(n / 2, y, x)\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the value of x if n is a prime\
    \ number and returns the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt53jg1ft.jl:12\nin expression starting at\
    \ /tmp/tmpt53jg1ft.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n) ==\
    \ true\n        return x\n    else\n        return y\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2rnx5i50.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2rnx5i50.jl:1\n\
    in expression starting at /tmp/tmp2rnx5i50.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n==2 || n==3\
    \ || n==5 || n==7 || n==11 || n==13 || n==17 || n==19 || n==23 || n==29 || n==31\
    \ || n==37 || n==43 || n==59 || n==63 || n==67 || n==71 \n    then y\n    else\
    \ x\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that will return\
    \ the number of digits in an integer. \nThe function should take an Int64 argument\
    \ and return the number of digits in the argument. \nThe function should raise\
    \ an error if the argument is not an Int64.\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"y\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpb9te06th.jl:11\nin expression starting at /tmp/tmpb9te06th.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n) ==\
    \ true\n        return x\n    else\n        return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers and returns\
    \ the number of elements that are greater than or equal to 5\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm40atozq.jl:16\nin expression starting at\
    \ /tmp/tmpm40atozq.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        then return y\n        else return x\n    end\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function which returns the factorial of a number. \nFor example\
    \ factorial(3) == 3 * 2 * 1.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpz6brnqlj.jl:11\nin expression starting at /tmp/tmpz6brnqlj.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n) ==\
    \ true\n        return x\n    else\n        return y\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a program which takes a number as input and prints out\
    \ the square of \nthat number. \nFor example if the input is 10, the output should\
    \ be 100. \nIf the input is 100, the output should be 10000.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxlttoylq.jl:16\nin expression starting at\
    \ /tmp/tmpxlttoylq.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        then return x \n        else return y\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp43i27xz4.jl:11\nin expression starting at /tmp/tmp43i27xz4.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1\n   \
    \     return x\n    else\n        return y\n    end\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a program which should return the value of x if n is \n    a prime\
    \ number and should return the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1w8118ei.jl:16\nin expression starting at\
    \ /tmp/tmp1w8118ei.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then x\n    else\n        if isPrime(n) \n            then y\n        else\n\
    \            x\n        end\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a program that prints the square of the numbers from 1 to 100. \nThe program\
    \ should print each number on a separate line.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpw325en01.jl:11\nin expression starting at /tmp/tmpw325en01.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a program which prints the square of x if x is a prime number and prints\
    \ the square of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvvoloti7.jl:11\nin expression starting at /tmp/tmpvvoloti7.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then x\n    else if n % 2 == 0 \n        then x_or_y(n/2, x, y)\n    else\
    \ \n        y \nend\n</cell>\n<text>\nExercise 2\nWrite a function which takes\
    \ in three numbers and returns the sum of the squares of the first two numbers\
    \ and the sum of the squares of the last two numbers. \nThe function should only\
    \ take in three numbers and return three numbers.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3m7v394u.jl:11\nin expression starting at /tmp/tmp3m7v394u.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n) ==\
    \ true\n        return y\n    else\n        return x\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbiirpwy2.jl:16\nin expression starting at\
    \ /tmp/tmpbiirpwy2.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        then return y\n        else return x\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvonqzhf3.jl:11\nin expression starting at /tmp/tmpvonqzhf3.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x\n    else if n % 2 == 0 \n        return x_or_y(n/2, x, y)\n \
    \   else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.0>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function which returns the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as the product of all the integers\
    \ \nless than or equal to $n$. \nThe factorial of 0 is 1.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0qkylo5x.jl:12\nin expression starting at\
    \ /tmp/tmp0qkylo5x.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then x\n    else\n        if n % 2 == 0 \n            then x_or_y(n / 2,\
    \ x, y)\n        else\n            if n % 3 == 0 \n                then x_or_y(n\
    \ / 3, x, y)\n            else\n                if n % 5 == 0 \n             \
    \       then x_or_y(n / 5, x, y)\n                else\n                    if\
    \ n % 7 == 0 \n                        then x_or_y(n / 7, x, y)\n            \
    \        else\n                        if n % 11 == 0 \n                     \
    \       then x_or_y(n / 11, x, y)\n                        else\n            \
    \                if n % 13 == 0 \n                                then x_or_y(n\
    \ / 13, x, y)\n                            else\n                            \
    \    if n % 17 == 0 \n                                    then x_or_y(n / 17,\
    \ x, y)\n                                else\n                              \
    \      if n % 19 == 0 \n                                        then x_or_y(n\
    \ / 19, x, y)\n                                    else\n                    \
    \                    if n % 23 == 0 \n                                       \
    \     then x_or_y(n / 23, x, y)\n                                        else\n\
    \                                            if n % 29 == 0 \n               \
    \                                 then x_or_y(n / 29, x, y)\n                \
    \                            else\n                                          \
    \      if n % 31 == 0 \n                                                    then\
    \ x_or_y(n / 31, x, y)\n                                                else\n\
    \                                                    if n % 37 == 0 \n       \
    \                                                 then x_or_y(n / 37, x, y)\n\
    \                                                    else\n                  \
    \                                      if n % 41 == 0 \n                     \
    \                                       then x_or_y(n / 41, x, y)\n          \
    \                                              else\n                        \
    \                                    if n % 43 == 0 \n                       \
    \                                         then x_or_y(n / 43, x, y)\n        \
    \                                                    else\n                  \
    \                                              if n % 47 == 0 \n             \
    \                                                       then x_or_y(n / 47, x,\
    \ y)\n                                                                else\n \
    \                                                                   if n % 49\
    \ == 0 \n                                                                    \
    \    then x_or_y(n / 49, x, y)\n                                             \
    \                       else\n                                               \
    \                                         if n % 53 == 0 \n                  \
    \                                          then x_or_y(n / 53, x, y)\n       \
    \                                                 else\n                     \
    \                                       if n % 59 == 0 \n                    \
    \                                            then x_or_y(n / 59, x, y)\n     \
    \                                                       else\n               \
    \                                                 if n % 61 == 0 \n          \
    \                                                          then x_or_y(n / 61,\
    \ x, y)\n                                                                else\n\
    \                                                                    if n % 67\
    \ == 0 \n                                                                    \
    \    then x_or_y(n / 67, x, y)\n                                             \
    \                       else\n                                               \
    \         if n % 71 == 0 \n                                                  \
    \          then x_or_y(n / 71, x, y)\n                                       \
    \                 else\n                                                     \
    \       if n % 73 == 0 \n                                                    \
    \            then x_or_y(n / 73, x, y)\n                                     \
    \                       else\n                                               \
    \                 if n % 79 == 0 \n                                          \
    \                          then x_or_y(n / 79, x, y)\n                       \
    \                                         else\n                             \
    \                                       if n % 83 == 0 \n                    \
    \                                                    then x_or_y(n / 83, x, y)\n\
    \                                                                    else\n  \
    \                                                      if n % 89 == 0 \n     \
    \                                                       then x_or_y(n \nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7gu2nx8i.jl:11\nin expression starting at /tmp/tmp7gu2nx8i.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if n == 2 \n        then return y\n    else if\
    \ n % 2 == 0\n        then return x_or_y(n / 2, x, y)\n    else return x_or_y(n\
    \ / 2, y, x)\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of times a given value appears in a given\
    \ array.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6d38x0d_.jl:11\nin expression starting at /tmp/tmp6d38x0d_.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x \n    else \n        if isPrime(n) \n            then return\
    \ x \n        else \n            return y \nend \n</cell>\n<text>\nExercise 3\n\
    Write a program which should return the value of x if n is \n    a prime number\
    \ and should return the value of y otherwise.\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvwvj2u9n.jl:11\nin expression starting at /tmp/tmpvwvj2u9n.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    \n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a program which takes an integer n and returns the value of x if n\
    \ is a prime number and should return the value of y otherwise.\nusing Test\n\n\
    @testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t\
    @test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpicbf96ug.jl:11\nin expression starting at /tmp/tmpicbf96ug.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n) ==\
    \ true\n        return x\n    else\n        return y\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2ghm01ss.jl:16\nin expression starting at\
    \ /tmp/tmp2ghm01ss.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x\n    else if n == 2 \n        return y\n    else if n % 2 == 0\
    \ \n        return x_or_y(n/2, x, y)\n    else \n        return x_or_y(n/2, y,\
    \ x)\nend\n</cell>\n<text>\nExercise 2\nWrite a program which takes as input a\
    \ number n and returns the value of x if n is a prime number and returns the value\
    \ of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmfr2admn.jl:12\nin expression starting at\
    \ /tmp/tmpmfr2admn.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x\n    else if n % 2 == 0 \n        return x_or_y(n / 2, x, y)\n\
    \    else \n        return x_or_y(n / 2, y, x)\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the value of x if n is a prime number and returns the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp04n0x3mj.jl:12\nin expression starting at\
    \ /tmp/tmp04n0x3mj.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        then x_or_y(n / 2, x, y)\n        else y\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ value of x if n is a prime number and returns the value of y otherwise.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"x_or_y\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp316lf_p6.jl:11\nin expression starting at /tmp/tmp316lf_p6.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x\n    else if n % 2 == 0 \n        return x_or_y(n/2, x, y)\n \
    \   else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a vector of integers and returns\
    \ the sum of the squares of the integers in the vector.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp28zsg66s.jl:12\nin expression starting at\
    \ /tmp/tmp28zsg66s.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        then x_or_y(n / 2, x, y)\n        else y\n    end\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a program which returns the value of x if n is a prime number\
    \ and returns the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"x_or_y\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9kzeo2w7.jl:11\nin expression starting at /tmp/tmp9kzeo2w7.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the product of two numbers. \nThe function\
    \ should take two numbers as arguments and return the product of those two numbers.\
    \ \nThe function should raise an error if the arguments are of different types.\
    \ \nThe function should raise an error if the arguments are negative. \nThe function\
    \ should raise an error if the arguments are zero.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdpyaxs7f.jl:11\nin expression starting at /tmp/tmpdpyaxs7f.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x \n    else \n        return y \nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that takes an array of numbers and returns the sum of the\
    \ squares of the numbers.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq7lu9840.jl:15\nin expression starting at\
    \ /tmp/tmpq7lu9840.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    if n % 2 == 0 \n   \
    \     then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2, y, x)\n\
    \    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program which should return\
    \ the value of x if n is \n    a prime number and should return the value of y\
    \ otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbyojr7gj.jl:11\nin expression starting at /tmp/tmpbyojr7gj.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x \n    else \n        return y \nend \n</cell>\n<text>\nExercise\
    \ 3\nWrite a program which should return the value of x if n is \n    a prime\
    \ number and should return the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb3jcwqy6.jl:15\nin expression starting at\
    \ /tmp/tmpb3jcwqy6.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        then return y\n        else return x\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function which returns the factorial of a number.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpz7d9r5li.jl:11\nin expression starting at /tmp/tmpz7d9r5li.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    if n % 2 == 0 \n   \
    \     then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2, y, x)\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\nx_or_y(7, 34, 12)\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of times a given number appears in a given\
    \ array.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwl65ptck.jl:11\nin expression starting at /tmp/tmpwl65ptck.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if n == 2 \n        then return y\n    else if\
    \ n % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n    else \n        return\
    \ x_or_y(n / 2, y, x)\nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a number n and returns the number of digits in the number n. \nFor example\
    \ if n = 123 then your function should return 3.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdof1s7an.jl:11\nin expression starting at /tmp/tmpdof1s7an.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 2 || n\
    \ == 3 || n == 5\n        return y\n    else\n        return x\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the factorial of a number. \n\
    The factorial of a number $n$ is defined as:\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi3322er1.jl:15\nin expression starting at\
    \ /tmp/tmpi3322er1.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n==2 || n==3\
    \ || n==5 || n==7 || n==11 || n==13 || n==17 || n==19 || n==23 || n==29 || n==31\
    \ || n==37 || n==43 || n==49 || n==59 || n==63 || n==67 || n==71 \n        then\
    \ y\n    else\n        x\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program\
    \ which should return the number of prime numbers less than a given number. \n\
    The program should accept one argument which is the number to be tested.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"y\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpna2iouuv.jl:11\nin expression starting at /tmp/tmpna2iouuv.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    \n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ number. \nThe factorial of a number is defined as the product of all the integers\
    \ \nless than or equal to that number. \nFor example, 5! = 5 x 4 x 3 x 2 x 1 =\
    \ 120. \nThe function should work for any positive integer $n$. \nThe function\
    \ should return $0$ for $n = 1$. \nThe function should return $n!$ for $n \\ge\
    \ 1$. \nThe function should work for any integer type.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyvdanyvo.jl:11\nin expression starting at /tmp/tmpyvdanyvo.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    \n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\n@time x_or_y(7, 34,\
    \ 12)\n</cell>\n<code language=julia-1.5>\n@time x_or_y(15, 8, 5)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the value of x if n is a prime number\
    \ and should return the value of y otherwise.\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpit19nl35.jl:11\nin expression starting at /tmp/tmpit19nl35.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x \n    else \n        return y \nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes two vectors x and y and returns a vector of the\
    \ cross product of the two vectors.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_jhy548m.jl:15\nin expression starting at\
    \ /tmp/tmp_jhy548m.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n) ==\
    \ true \n        x \n    else \n        y \n    end\nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a program which should return the value of x if n is \n    a prime\
    \ number and should return the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkephc8ot.jl:16\nin expression starting at\
    \ /tmp/tmpkephc8ot.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n) ==\
    \ true\n        x \n    else\n        y\n    end\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the number of digits in an integer. \nFor example\
    \ the number 123 has 3 digits, 42 has 2 digits, etc.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp41ap_fp9.jl:16\nin expression starting at\
    \ /tmp/tmp41ap_fp9.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n) ==\
    \ true \n        x \n    else\n        y \n    end\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the factorial of a number. \nThe factorial\
    \ of a number $n$ is defined as the product of all the integers less than or equal\
    \ to $n$. \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120. \nWrite a function that\
    \ returns the factorial of a number $n$ if $n$ is a prime number. \nWrite a function\
    \ that returns the factorial of a number $n$ if $n$ is not a prime number. \n\
    Write a function that returns the factorial of a number $n$ if $n$ is neither\
    \ a prime number nor $n$ is a prime number. \nWrite a function that returns the\
    \ factorial of a number $n$ if $n$ is neither a prime number nor $n$ is a prime\
    \ number and $n$ is even. \nWrite a function that returns the factorial of a number\
    \ $n$ if $n$ is neither a prime number nor $n$ is a prime number and $n$ is odd.\
    \ \nWrite a function that returns the factorial of a number $n$ if $n$ is neither\
    \ a prime number nor $n$ is a prime number and $n$ is neither even nor odd. \n\
    Write a function that returns the factorial of a number $n$ if $n$ is neither\
    \ a prime number nor $n$ is a prime number and $n$ is neither even nor odd and\
    \ $n$ is less than or equal to 0.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7ss2rxbw.jl:16\nin expression starting at\
    \ /tmp/tmp7ss2rxbw.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    \n    if n % 2 == 0\
    \ \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a program which should return the value of x if n is a prime number and should\
    \ return the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7fn0sx74.jl:11\nin expression starting at /tmp/tmp7fn0sx74.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        then return y\n        else return x\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers and returns the sum\
    \ of the squares of the numbers.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptfrygcua.jl:11\nin expression starting at /tmp/tmptfrygcua.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        then return x \n        else return y\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function which takes a number as input and returns the number\
    \ of digits in the number.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphjk5rkn5.jl:11\nin expression starting at /tmp/tmphjk5rkn5.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x\n    else if n % 2 == 0 \n        return x_or_y(n / 2, x, y)\n\
    \    else \n        return x_or_y(n / 2, y, x)\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 3\nWrite a program which prints the numbers from 1 to 10 (both\
    \ included) \nexcept for those divisible by 3 and 5.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpghcxzwwm.jl:12\nin expression starting at\
    \ /tmp/tmpghcxzwwm.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1\n   \
    \     return x\n    else\n        return y\n    end\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function which returns the factorial of a number. \nThe function\
    \ should accept one argument, x, and should return the factorial of x.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp52lraydk.jl:16\nin expression starting at\
    \ /tmp/tmp52lraydk.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0\n\
    \        then return y\n        else return x\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a program which should return the value of x if n is \n    a\
    \ prime number and should return the value of y otherwise.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpu2pynbzc.jl:11\nin expression starting at /tmp/tmpu2pynbzc.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    \n    if n % 2 == 0\
    \ \n        then return x_or_y(n-1, x, x*y)\n        else return x_or_y(n-1, y,\
    \ x*y)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a program which should return the value of x if n is \n    a prime\
    \ number and should return the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpuca4hhq4.jl:11\nin expression starting at /tmp/tmpuca4hhq4.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x\n    else if n % 2 == 0 \n        return x_or_y(n/2, x, y)\n \
    \   else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the value of x if n is a prime\
    \ number and should return the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnlasmlhe.jl:12\nin expression starting at\
    \ /tmp/tmpnlasmlhe.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if n == 2 \n        then return y\n    else if\
    \ n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n    else \n        return\
    \ x_or_y(n/2, y, x)\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 4\nWrite a program which returns the number of prime numbers less than a given\
    \ number. \nThe function should take one argument which is the number to be tested.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmph5b8efe0.jl:11\nin expression starting at /tmp/tmph5b8efe0.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n) ==\
    \ true\n        return y\n    else\n        return x\n    end\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that takes a number as input and returns\
    \ the number of digits in that number. \nFor example the number 12345 has 5 digits,\
    \ 1234 has 4 digits, 123 has 3 digits and 12 has 2 digits. \nThe function should\
    \ work for any number.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t\
    @test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7jhmj1sy.jl:16\nin expression starting at\
    \ /tmp/tmp7jhmj1sy.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    if n % 2 == 0 \n   \
    \     then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2, y, x)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of divisors of n that are less than or equal\
    \ to n.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpu99b7v4_.jl:11\nin expression starting at /tmp/tmpu99b7v4_.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x \n    else \n        return y \nend\n</cell>\n<code language=julia-1.0>\n\
    @code_native x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.0>\n@code_native\
    \ x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the value of x if n is a prime number and should return the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbpxws384.jl:15\nin expression starting at\
    \ /tmp/tmpbpxws384.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n==1 \n    \
    \    return x\n    else if n==2 \n        return y\n    else if n==3 \n      \
    \  return x+y\n    else if n==5 \n        return x-y\n    else if n==7 \n    \
    \    return x-y\n    else if n==11 \n        return x-y\n    else if n==13 \n\
    \        return x-y\n    else if n==17 \n        return x-y\n    else if n==19\
    \ \n        return x-y\n    else if n==23 \n        return x-y\n    else if n==29\
    \ \n        return x-y\n    else if n==37 \n        return x-y\n    else if n==43\
    \ \n        return x-y\n    else if n==51 \n        return x-y\n    else if n==59\
    \ \n        return x-y\n    else if n==67 \n        return x-y\n    else if n==73\
    \ \n        return x-y\n    else if n==81 \n        return x-y\n    else if n==89\
    \ \n        return x-y\n    else if n==97 \n        return x-y\n    else if n==103\
    \ \n        return x-y\n    else if n==111 \n        return x-y\n    else if n==119\
    \ \n        return x-y\n    else if n==127 \n        return x-y\n    else if n==135\
    \ \n        return x-y\n    else if n==143 \n        return x-y\n    else if n==151\
    \ \n        return x-y\n    else if n==159 \n        return x-y\n    else if n==167\
    \ \n        return x-y\n    else if n==175 \n        return x-y\n    else if n==183\
    \ \n        return x-y\n    else if n==191 \n        return x-y\n    else if n==199\
    \ \n        return x-y\n    else if n==207 \n        return x-y\n    else if n==215\
    \ \n        return x-y\n    else if n==223 \n        return x-y\n    else if n==231\
    \ \n        return x-y\n    else if n==239 \n        return x-y\n    else if n==247\
    \ \n        return x-y\n    else if n==255 \n        return x-y\n    else if n==263\
    \ \n        return x-y\n    else if n==271 \n        return x-y\n    else if n==279\
    \ \n        return x-y\n    else if n==287 \n        return x-y\n    else \nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl8j3wlsl.jl:12\nin expression starting at\
    \ /tmp/tmpl8j3wlsl.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    \n    if n % 2 == 0\
    \ \n        then return x_or_y(n-1, x-y, y)\n        else return x_or_y(n-1, x,\
    \ y-x)\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a function that returns\
    \ the factorial of a number. \nThe function should accept a number as its only\
    \ argument. \nThe function should return an Int64 value.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkqck5xrr.jl:11\nin expression starting at /tmp/tmpkqck5xrr.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n) ==\
    \ true \n        then return x \n        else return y \n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes an array of numbers and returns the sum of the squares of the numbers.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptrbiaacw.jl:11\nin expression starting at /tmp/tmptrbiaacw.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n) ==\
    \ true\n        return x\n    else\n        return y\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the value of x if n is a prime number and returns the value of\
    \ y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwxxfq3tr.jl:16\nin expression starting at\
    \ /tmp/tmpwxxfq3tr.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then x\n    else if n % 2 == 0 \n        then x_or_y(n / 2, x, y)\n   \
    \ else \n        y \nend\n</cell>\n<text>\nExercise 4\nWrite a program which prints\
    \ the value of x if n is a prime number and prints the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1jp9p2iz.jl:11\nin expression starting at /tmp/tmp1jp9p2iz.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if n == 2 \n        then return y\n    else if\
    \ n % 2 == 0 \n        then return x_or_y(n/2, x, y)\n    else \n        then\
    \ return x_or_y(n/2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of prime numbers\
    \ less than a given number. \nThe function should take one parameter, n, which\
    \ represents the upper limit of the prime numbers \nto return.\nusing Test\n\n\
    @testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t\
    @test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppoaif9n7.jl:11\nin expression starting at /tmp/tmppoaif9n7.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n) ==\
    \ true\n        return x\n    else\n        return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers and returns\
    \ the number of positive numbers in the array.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzvkuiy07.jl:16\nin expression starting at\
    \ /tmp/tmpzvkuiy07.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    if n % 2 == 0 \n   \
    \     then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2, y, x)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of prime numbers less than a given number.\
    \ \nThe function should take one argument, the number to check for primality.\
    \ \nThe function should return one integer which is the number of prime numbers\
    \ less than the given number.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbi9dei_q.jl:11\nin expression starting at /tmp/tmpbi9dei_q.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1\n   \
    \     return x\n    else\n        return y\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps4a2n7b5.jl:21\n  Expression: candidate(7,\
    \ 34, 12) == 34\n   Evaluated: 12 == 34\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps4a2n7b5.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps4a2n7b5.jl:20\ntest set: Test\
    \ Failed at /tmp/tmps4a2n7b5.jl:23\n  Expression: candidate(3, 33, 5212) == 33\n\
    \   Evaluated: 5212 == 33\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps4a2n7b5.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps4a2n7b5.jl:20\ntest set: Test\
    \ Failed at /tmp/tmps4a2n7b5.jl:24\n  Expression: candidate(1259, 3, 52) == 3\n\
    \   Evaluated: 52 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps4a2n7b5.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps4a2n7b5.jl:20\ntest set: Test\
    \ Failed at /tmp/tmps4a2n7b5.jl:25\n  Expression: candidate(7919, -1, 12) == -1\n\
    \   Evaluated: 12 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmps4a2n7b5.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmps4a2n7b5.jl:20\ntest set: Test\
    \ Failed at /tmp/tmps4a2n7b5.jl:29\n  Expression: candidate(1, 2, 0) == 0\n  \
    \ Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macr"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps4a2n7b5.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x \n        else return y \n    end\n    \n    if n % 2 ==\
    \ 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n /\
    \ 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a program which should return the value of x if n is a prime number\
    \ and should return the value of y otherwise.\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8d75_ayo.jl:11\nin expression starting at /tmp/tmp8d75_ayo.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    if n % 2 == 0 \n   \
    \     then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2, y, x)\n\
    \    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program which prints the square\
    \ of every number from 1 to 100. \nThe program should print each number on a separate\
    \ line.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpz0ht0mhb.jl:11\nin expression starting at /tmp/tmpz0ht0mhb.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n==2 \n    \
    \    then return x\n        else return y\n    end\n    \n    if n%2==0 \n   \
    \     then return x_or_y(n-1, x, 2*x)\n        else return x_or_y(n-1, y, 2*y)\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\nx_or_y(7, 34, 12)\n</cell>\n\
    <text>\nExercise 2\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvrjea1bp.jl:11\nin expression starting at /tmp/tmpvrjea1bp.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    \n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<text>\nExercise 3\nWrite a function which returns the value of x if\
    \ n is a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdkm1bljm.jl:11\nin expression starting at /tmp/tmpdkm1bljm.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if n % 2 == 0 \n        then return x_or_y(n /\
    \ 2, x, y)\n    else \n        then return x_or_y(n / 2, y, x)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a program which should return the value of x if n is \n    a prime\
    \ number and should return the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp15qzd5tb.jl:11\nin expression starting at /tmp/tmp15qzd5tb.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    if isPrime(n) \n   \
    \     then return x\n        else return y\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite a function which returns\
    \ the number of prime factors of n.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpegte1847.jl:11\nin expression starting at /tmp/tmpegte1847.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n        else return y\n    end\n    \n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a number as input and returns the factorial of that number. \nThe factorial\
    \ of a number $n$ is defined as:\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzn0v9u80.jl:11\nin expression starting at /tmp/tmpzn0v9u80.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        return x \n    else \n        return y \nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1l5cac0m.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1l5cac0m.jl:1\n\
    in expression starting at /tmp/tmp1l5cac0m.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        return x \n    else \n        return y \nend \nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpev2ool2k.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpev2ool2k.jl:1\n\
    in expression starting at /tmp/tmpev2ool2k.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if n % 2 == 0 \n        then return x_or_y(n /\
    \ 2, x, y)\n    else \n        then return x_or_y(n / 2, y, x)\n    end\nend\n\
    </cell>\n<text>\nExercise 4\nWrite a program which returns the number of divisors\
    \ of a given number. \nThe function should take two arguments: an integer and\
    \ a divisor. \nThe function should return the number of divisors of that number.\
    \ \nThe function should return the number of divisors of that number if that number\
    \ is \ndivisible by the divisor. \nThe function should return the number of divisors\
    \ of that number if that number is \ndivisible by the divisor and also if the\
    \ number is divisible by the divisor and \nalso if the number is divisible by\
    \ the divisor and also if the number is divisible \nby the divisor and also if\
    \ the number is divisible by the divisor and also if the \nnumber is divisible\
    \ by the divisor and also if the number is divisible by the divisor \nand also\
    \ if the number is divisible by the divisor and also if the number is divisible\
    \ \nby the divisor and also if the number is divisible by the divisor and also\
    \ if the \nnumber is divisible by the divisor and also if the number is divisible\
    \ by the divisor \nand also if the number is divisible by the divisor and also\
    \ if the number is divisible \nby the divisor and also if the number is divisible\
    \ by the divisor and also if the \nnumber is divisible by the divisor and also\
    \ if the number is divisible by the divisor \nand also if the number is divisible\
    \ by the divisor and also if the number is divisible \nby the divisor and also\
    \ if the number is divisible by the divisor and also if the \nnumber is divisible\
    \ by the divisor and also if the number is divisible by the divisor \nand also\
    \ if the number is divisible by the divisor and also if the number is divisible\
    \ \nby the divisor and also if the number is divisible by the divisor and also\
    \ if the \nnumber is divisible by the divisor and also if the number is divisible\
    \ by the divisor \nand also if the number is divisible by the divisor and also\
    \ if the number is divisible \nby the divisor and also if the number is divisible\
    \ by the divisor and also if the \nnumber is divisible by the divisor and also\
    \ if the number is divisible by the divisor \nand also if the number is divisible\
    \ by the divisor and also if the number is divisible \nby the divisor and also\
    \ if the number is divisible by the divisor and also if the \nnumber is divisible\
    \ by the divisor and also if the number is divisible by the divisor \nand also\
    \ if the number is divisible by the divisor and also if the number is divisible\
    \ \nby the divisor and also if the number is divisible by the divisor and also\
    \ if the \nnumber is divisible by the divisor \nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp410q44t8.jl:11\nin expression starting at /tmp/tmp410q44t8.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n) ==\
    \ true \n        x \n    else \n        y \n    end\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a program which should return the value of x if n is \n    a prime\
    \ number and should return the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplf7k0cxu.jl:16\nin expression starting at\
    \ /tmp/tmplf7k0cxu.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x \n    else \n        return y \nend\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpx63tjrkk.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpx63tjrkk.jl:1\n\
    in expression starting at /tmp/tmpx63tjrkk.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      then return x\n    else if n % 2 == 0 \n        then return x_or_y(n /\
    \ 2, x, y)\n    else \n        then return x_or_y(n / 2, y, x)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a program which should return\
    \ the value of x if n is a prime number and should return the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7x_d3c5v.jl:11\nin expression starting at /tmp/tmp7x_d3c5v.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n == 1 \n  \
    \      return x\n    else if n % 2 == 0 \n        return x_or_y(n/2, x, y)\n \
    \   else \n        return x_or_y(n/2, y, x)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf8b_1byd.jl:12\nin expression starting at\
    \ /tmp/tmpf8b_1byd.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0\n\
    \        x \n    else\n        y\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe9dlz5cv.jl:21\n  Expression: candidate(7,\
    \ 34, 12) == 34\n   Evaluated: 12 == 34\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe9dlz5cv.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe9dlz5cv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpe9dlz5cv.jl:23\n  Expression: candidate(3, 33, 5212) == 33\n\
    \   Evaluated: 5212 == 33\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe9dlz5cv.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe9dlz5cv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpe9dlz5cv.jl:24\n  Expression: candidate(1259, 3, 52) == 3\n\
    \   Evaluated: 52 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe9dlz5cv.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe9dlz5cv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpe9dlz5cv.jl:25\n  Expression: candidate(7919, -1, 12) == -1\n\
    \   Evaluated: 12 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe9dlz5cv.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe9dlz5cv.jl:20\ntest set: Test\
    \ Failed at /tmp/tmpe9dlz5cv.jl:28\n  Expression: candidate(6, 34, 1234) == 1234\n\
    \   Evaluated: 34 == 1234\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe9dlz5cv.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5\n    \n    \"\"\
    \"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2 == 0 \n\
    \        then return y\n        else return x\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpt0djgr3z.jl:11\nin expression starting at /tmp/tmpt0djgr3z.jl:11\n"
  exit_code: 1
  status: SyntaxError

name: HumanEval_66_digitSum
language: julia
prompt: "\"\"\"Task\n    Write a function that takes a string as input and returns\
  \ the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n   \
  \     digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"\
  abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\"\
  ) => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\nfunction digitSum(s::String)::Int64\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = digitSum;\n\t@test(candidate(\"\
  \") == 0)\n\t@test(candidate(\"abAB\") == 131)\n\t@test(candidate(\"abcCd\") ==\
  \ 67)\n\t@test(candidate(\"helloE\") == 69)\n\t@test(candidate(\"woArBld\") == 131)\n\
  \t@test(candidate(\"aAaaaXa\") == 153)\n\t@test(candidate(\" How are yOu?\") ==\
  \ 151)\n\t@test(candidate(\"You arE Very Smart\") == 327)\nend\n"
completions: ["    digitSum = foldl(\\accum c -> accum + if isUpper(c) then ord(c)\
    \ else 0 end, 0)\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\"\
    )\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as input\
    \ and returns the number of uppercase letters.", "    digitSum = foldl(\\accum\
    \ -> accum + toUpper(accum), 0) \nend", "    digitSum = 0\n    for c in s \n \
    \       if ('A' <= c && c <= 'Z') \n            digitSum += c - 'A' + 1\n    \
    \    else \n            digitSum += c\n    return digitSum\nend", "    digitSum\
    \ = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n            digitSum\
    \ += c - 'A' + 1\n        else if ('a' <= c && c <= 'z')\n            digitSum\
    \ += c - 'a' + 1\n        else if ('0' <= c && c <= '9')\n            digitSum\
    \ += c - '0'\n    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the sum of the digits in that string.", "    sum\
    \ = 0\n    for c in s do \n        if c >= 'A' && c <= 'Z' then \n           \
    \ sum += c - 'A' + 1\n        else \n            sum += c\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the number of characters in the string that are upper case. \nFor example, digitCount(\"\
    helloE\") => 3\nWrite a function that takes a string as input and returns the\
    \ number of characters in the string that are lower case. \nFor example, digitCount(\"\
    helloE\") => 2\nWrite a function that takes a string as input and returns the\
    \ number of characters in the string that are digits. \nFor example, digitCount(\"\
    helloE\") => 1\nWrite a function that takes a string as input and returns the\
    \ number of characters in the string that are alphanumeric. \nFor example, digitCount(\"\
    helloE\") => 4\nWrite a function that takes a string as input and returns the\
    \ number of characters in the string that are non-alphanumeric. \nFor example,\
    \ digitCount(\"helloE\") => 5", "    digitSum = 0\n    for c in s\n        if\
    \ ('A' <= c && c <= 'Z') || (\"a\" <= c && c <= \"z\")\n            digitSum +=\
    \ c - 'A' + 1\n        end\n    end\n    return digitSum\nend", "    sum::Int64\
    \ = 0\n    for c in s \n        if ('A' <= c && c <= 'Z') \n            sum +=\
    \ c - 'A' + 1\n        else \n            sum += c\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"woArBld\")\n</cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\"\
    )\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string as input\
    \ and returns the number of characters in the string that are uppercase letters.",
  "    sum::Int64 = 0\n    for c in s \n        if c >= '0' && c <= '9' \n       \
    \     sum += c - '0'\n    return sum\nend\n</cell>\n<code language=julia-1.4>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string. \n   \
    \ \n    Examples:\n        charCount(\"\") => 0\n        charCount(\"abAB\") =>\
    \ 2\n        charCount(\"abcCd\") => 3\n        charCount(\"helloE\") => 5\n \
    \       charCount(\"woArBld\") => 5\n        charCount(\"aAaaaXa\") => 5\n   \
    \ \"\"\"", "    sum::Int64 = 0\n    for c in s do\n        sum += (ord(c) >= 65\
    \ && ord(c) <= 90) ? ord(c) - 65 : ord(c) - 97\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a string as input and returns the number of characters\
    \ in the string that are uppercase letters.", "    sum::Int64 = 0\n    for c in\
    \ s do \n        if c >= 'a' && c <= 'z' then \n            sum += c - 'a'\n \
    \       else \n            sum += c - 'A'\n    end\n    return sum\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the number of characters in the string that are uppercase letters.", "    digitSum\
    \ = foldl(\\accum -> accum + digitToInt(accum), 0, s)\nend", "    digitSum = 0\n\
    \    for c in s do\n        if c.isUpper() then digitSum += c.codePointAt(0)\n\
    \    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as\
    \ input and returns the number of uppercase letters.", "    sum = 0\n    for c\
    \ in s do \n        if c >= '0' && c <= '9' then \n            sum += c - '0'\n\
    \        else \n            sum += 10\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise: Write\
    \ a function that takes a string as input and returns the sum of the digits only'\n\
    \    ASCII codes.", "    sum = 0\n    for c in s do\n        sum += (ord(c) -\
    \ ord('0'))\n    end\n    return sum\nend", "    digitSum = 0\n    for c in s\n\
    \        if ('A' <= c && c <= 'Z')\n            digitSum += c - 'A' + 1\n    \
    \    else if ('a' <= c && c <= 'z')\n            digitSum += c - 'a' + 1\n   \
    \     else if ('0' <= c && c <= '9')\n            digitSum += c - '0'\n    end\n\
    \    return digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\"\
    )\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as input\
    \ and returns the number of characters in the string that are uppercase letters.",
  "    sum::Int64 = 0\n    for c in s\n        if isUpper c\n            sum += c\
    \ - 'A' + 1\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.", "    digitSum = 0\n    for c in s\n        if ('A' <= c\
    \ && c <= 'Z')\n            digitSum += c - 'A' + 1\n        else\n          \
    \  digitSum += c - '0'\n    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.", "    sum = 0\n    for c in s do \n        if c >= '0' &&\
    \ c <= '9' then \n            sum += c - '0'\n        else \n            sum +=\
    \ 10\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise: Write a function that takes a\
    \ string as input and returns the sum of the digits in that string. \n    ASCII\
    \ codes.", "    digitSum = foldl(\\accum -> accum + digitToInt(accum), 0, s)\n\
    end", "    sum::Int64 = 0\n    for c in s \n        if c >= '0' && c <= '9' \n\
    \            sum += c - '0'\n        end\n    end\n    return sum\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the number of characters in the string that are uppercase letters.", "    digitSum\
    \ = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n            digitSum\
    \ += c - 'A' + 1\n        else\n            digitSum += c - '0'\n    end\n   \
    \ return digitSum\nend", "    digitSum = 0\n    for c in s do\n        if c >=\
    \ '0' && c <= '9' then digitSum += c - '0'\n    end\n    return digitSum\nend",
  "    sum::Int64 = 0\n    for c in s do\n        if c >= 'A' and c <= 'Z' then\n\
    \            sum += c - 'A' + 1\n        else\n            sum += c\n        end\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    aAaaaXa\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string\
    \ as input and returns the number of characters in the string that are uppercase\
    \ letters.", "    sum = 0\n    for c in s do \n        if isUpper c then \n  \
    \          sum += c - 'A' + 1\n        else \n            sum += c - 'a'\n   \
    \ end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\"\
    )\n</cell>\n<code language=julia-1.5>\ndigitSum(\"woArBld\")\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise: Write a function that takes\
    \ a string as input and returns the number of uppercase letters.", "    digitSum\
    \ = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n            digitSum\
    \ += c - 'A' + 1\n        else if ('a' <= c && c <= 'z')\n            digitSum\
    \ += c - 'a' + 1\n        else if ('0' <= c && c <= '9')\n            digitSum\
    \ += c - '0'\n    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nTask\nWrite a function that takes a string\
    \ as input and returns the sum of the digits in that string.", "    digitSum =\
    \ 0\n    for c in s\n        if ('A' <= c && c <= 'Z') || (\"a\" <= c && c <=\
    \ \"z\")\n            digitSum += c - 'A' + 1\n        else\n            digitSum\
    \ += c - 'a'\n    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.3>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.", "    digitSum = 0\n    for c in s\n        if ('A' <= c\
    \ && c <= 'Z')\n            digitSum += c - 'A' + 1\n        else if ('a' <= c\
    \ && c <= 'z')\n            digitSum += c - 'a' + 1\n        else if ('0' <= c\
    \ && c <= '9')\n            digitSum += c - '0'\n    end\n    return digitSum\n\
    end\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\") => 69\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"woArBld\") => 131\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\") => 153\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a string as input and returns the number of characters in the string that\
    \ are uppercase letters.", "    sum = 0\n    for c in s do \n        if c.isUpper()\
    \ then \n            sum += c.codePointAt(0)\n        end\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.3>\ndigitSum(\"helloE\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the number of uppercase letters in the string.", "    digitSum = 0\n    for\
    \ c in s do\n        digitSum += toupper(c) - 'A' + 1\n    end\n    return digitSum\n\
    end", "    digitSum = 0\n    for c in s do\n        digitSum = digitSum + Int64(Char.digit(c))\n\
    \    end\n    return digitSum\nend", "    digitSum = 0\n    for c in s\n     \
    \   if ('A' <= c && c <= 'Z')\n            digitSum += c - 'A' + 1\n        else\
    \ if ('a' <= c && c <= 'z')\n            digitSum += c - 'a' + 1\n        else\
    \ if ('0' <= c && c <= '9')\n            digitSum += c - '0'\n    end\n    return\
    \ digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a string as input and returns\
    \ the number of characters in the string. \nThe function should ignore all non-alphanumeric\
    \ characters.", "    sum = 0\n    for c in s\n        if isUpper(c)\n        \
    \    sum += toUpper(c)\n        end\n    end\n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndigitSum(\"helloE\") => 69\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"woArBld\") => 131\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    aAaaaXa\") => 153\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ string as input and returns the number of uppercase letters.", "    sum::Int64\
    \ = 0\n    for c in s do\n        sum += (ord(c) - ord('A') + 1) % 26\n    end\n\
    \    return sum\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ upper case. For example, \"aBcD\" has 3 upper case characters and \"aBcDe\"\
    \ has 4 upper case characters.", "    sum::Int64 = 0\n    for c in s do \n   \
    \     if isUpper(c) then \n            sum += toUpper(c) - 'A' + 1\n        else\
    \ \n            sum += toLower(c) - 'a' + 1\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.4>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string as input and returns the number of characters\
    \ in the string that are uppercase letters.", "    sum = 0\n    for c in s\n \
    \       if ('A' <= c && c <= 'Z')\n            sum += c - 'A' + 1\n        else\n\
    \            sum += c\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the sum of the digits in that string.", "    sum::Int64\
    \ = 0\n    for c in s\n        if isUpper(c)\n            sum += toUpper(c) -\
    \ 'A' + 1\n        end\n    end\n    return sum\nend", "    sum::Int64 = 0\n \
    \   for c in s do \n        if c >= '0' && c <= '9' then \n            sum +=\
    \ (c - '0')\n        else \n            sum += (c - 'A' + 10)\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a string as input and returns\
    \ the number of characters in the string that are uppercase letters.", "    digitSum\
    \ = 0\n    for c in s do\n        if c >= '0' && c <= '9' then\n            digitSum\
    \ += c - '0'\n        end\n    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.", "    digitSum = 0\n    for c in s do\n        if c >= '0'\
    \ && c <= '9' then\n            digitSum += c - '0'\n        else\n          \
    \  digitSum += 10\n        end\n    end\n    return digitSum\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string as input and returns the number of characters\
    \ in the string. \nThe function should ignore all non-alphabetic characters and\
    \ count the alphabetic characters.", "    sum::Int64 = 0\n    for c in s \n  \
    \      if c >= 'A' && c <= 'Z' \n            sum += c - 'A' + 1\n        else\
    \ \n            sum += c\n    return sum\nend\n</cell>\n<code language=julia-1.0>\n\
    digitSum(\"helloE\") => 69\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a string as input and returns the number of characters in the string that\
    \ are uppercase letters.", "    digitSum = 0\n    for c in s\n        if c >=\
    \ '0' && c <= '9'\n            digitSum += c - '0'\n        end\n    end\n   \
    \ return digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\"\
    )\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string as input\
    \ and returns the number of characters in the string that are not digits.", " \
    \   sum::Int64 = 0\n    for c in s\n        if isUpper(c)\n            sum +=\
    \ toUpper(c)\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.", "    digitSum = Int64(0) \n    for c in s do \n       \
    \ if ('A' <= c && c <= 'Z') then \n            digitSum += c - 'A' + 1 \n    \
    \    else \n            digitSum += 0 \n    return digitSum \nend\n</cell>\n<code\
    \ language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"woArBld\")\n</cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\"\
    )\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as input\
    \ and returns the number of characters in the string that are uppercase letters.",
  "    digitSum = 0\n    for c in s\n        if isUpper c\n            digitSum +=\
    \ toUpper c\n        end\n    end\n    return digitSum\nend", "    sum = 0\n \
    \   for c in s do \n        if c >= '0' && c <= '9' then \n            sum +=\
    \ c - '0'\n        else \n            sum += 10\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a string as input and returns the number of characters\
    \ in the string that are uppercase letters.", "    digitSum = 0\n    for c in\
    \ s do \n        if isDigit(c) then digitSum += c - '0'\n    end\n    return digitSum\n\
    end", "    digitSum = 0\n    for c in s do \n        if isUpper(c) then digitSum\
    \ += toUpper(c) - 'A' + 1 \n        else digitSum += c - 'A' \n    end\n    return\
    \ digitSum\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string\
    \ as input and returns the number of uppercase letters in the string.", "    digitSum\
    \ = 0\n    for c in s\n        if isUpper(c)\n            digitSum += toUpper(c)\
    \ - 'A' + 1\n        end\n    end\n    return digitSum\nend", "    digitSum =\
    \ 0\n    for c in s do \n        if isUpper(c) then digitSum += toUpper(c) - 'A'\
    \ + 1 \n        else digitSum += toLower(c) - 'a' + 1 \n    end\n    return digitSum\n\
    end\n</cell>\n<code language=julia-1.4>\ndigitSum(\"helloE\") # => 69\n</cell>\n\
    <code language=julia-1.4>\ndigitSum(\"woArBld\") # => 131\n</cell>\n<code language=julia-1.4>\n\
    digitSum(\"aAaaaXa\") # => 153\n</cell>\n<text>\nExercise\nWrite a function that\
    \ takes a string as input and returns the sum of the digits only'\n    ASCII codes.",
  "    sum::Int64 = 0\n    for c in s \n        if isUpper(c) \n            sum +=\
    \ toUpper(c) - 'A' + 1\n        else \n            sum += toLower(c) - 'a' + 1\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\"\
    )\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as input\
    \ and returns the number of characters in the string that are uppercase letters.",
  "    digitSum = 0\n    for c in s do\n        if c >= '0' && c <= '9' then\n   \
    \         digitSum += c - '0'\n        end\n    end\n    return digitSum\nend\n\
    </cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\") => 69\n</cell>\n<code\
    \ language=julia-1.5>\ndigitSum(\"woArBld\") => 131\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\") => 153\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a string as input and returns the number of characters in the string that\
    \ are not digits.", "    sum::Int64 = 0\n    for c in s do \n        if isUpper(c)\
    \ then \n            sum += toUpper(c) - 'A' + 1\n        else \n            sum\
    \ += toLower(c) - 'a' + 1\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of uppercase letters in the string.",
  "    digitSum = 0\n    for c in s\n        if c >= '0' && c <= '9'\n           \
    \ digitSum += c - '0'\n        end\n    end\n    return digitSum\nend", "    sum::Int64\
    \ = 0\n    for c in s do \n        if isUpper(c) then \n            sum += toUpper(c)\
    \ - 'A' + 1\n        else \n            sum += toLower(c) - 'a' + 1\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.4>\ndigitSum(\"helloE\"\
    )\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as input\
    \ and returns the number of characters in the string that are uppercase letters.",
  "    digitSum = 0\n    for c in s\n        if c.isUpper\n            digitSum +=\
    \ c.codePointAt(0)\n        end\n    end\n    return digitSum\nend\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string as input and returns the number of characters\
    \ in the string that are uppercase letters.", "    sum = 0\n    for c in s\n \
    \       if isUpper c\n            sum += toUpper c\n        end\n    end\n   \
    \ return sum\nend\n</cell>\n<code language=julia-1.0>\ndigitSum(\"helloE\")\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string as input and\
    \ returns the sum of the digits of that string.", "    sum::Int64 = 0\n    for\
    \ c in s do\n        if ('A'<=c && c<='Z') || (c=='a' || c=='A') then\n      \
    \      sum += c-'A'\n        end\n    end\n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a string as input and returns the number of characters\
    \ in the string that are not digits. \nFor example, digitCount(\"aAaaaXa\") =>\
    \ 3", "    sum = 0\n    for c in s do\n        if c >= '0' && c <= '9' then\n\
    \            sum = sum + c - '0'\n        end\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\") => 69\n</cell>\n<code\
    \ language=julia-1.5>\ndigitSum(\"woArBld\") => 131\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\") => 153\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a string as input and returns the number of characters in the string that\
    \ are uppercase letters.", "    sum = 0\n    for c in s\n        if ('A' <= c\
    \ && c <= 'Z')\n            sum += c - 'A' + 1\n        else\n            sum\
    \ += c\n    end\n    return sum\nend", "    digitSum = 0\n    for c in s\n   \
    \     if isUpper c\n            digitSum += c - 'A' + 1\n        end\n    end\n\
    \    return digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\"\
    )\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as input\
    \ and returns the sum of the digits in that string.", "    digitSum = foldl(\\\
    accum -> accum + toUpper(accum), 0, s)\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a string as input and returns the number of characters\
    \ in the string that are uppercase letters.", "    sum = 0\n    for c in s \n\
    \        if c.isUpper() \n            sum += c.codePointAt(0)\n    return sum\n\
    end\n</cell>\n<code language=julia-1.0>\ndigitSum(\"helloE\") => 69\n</cell>\n\
    <code language=julia-1.0>\ndigitSum(\"woArBld\") => 131\n</cell>\n<code language=julia-1.0>\n\
    digitSum(\"aAaaaXa\") => 153\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a string as input and returns the number of characters in the string that\
    \ are uppercase letters.", "    sum::Int64 = 0\n    for c in s \n        if c\
    \ >= '0' && c <= '9' \n            sum += c - '0'\n        else \n           \
    \ sum += 0\n    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ as input and returns the sum of the digits in that string.", "    digitSum =\
    \ 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n            digitSum +=\
    \ c - 'A' + 1\n        else if ('a' <= c && c <= 'z')\n            digitSum +=\
    \ c - 'a' + 1\n        else if ('0' <= c && c <= '9')\n            digitSum +=\
    \ c - '0'\n    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.", "    sum = 0\n    for c in s\n        if c.isUpper\n  \
    \          sum += c.codePointAt(0)\n    return sum\nend", "    digitSum = 0\n\
    \    for c in s do\n        if c >= '0' && c <= '9' then\n            digitSum\
    \ += c - '0'\n        else\n            digitSum = 0\n        end\n    end\n \
    \   return digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\"\
    )\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as input\
    \ and returns the number of characters in the string that are uppercase letters.",
  "    digitSum = 0\n    for c in s\n        if c.isUpper\n            digitSum +=\
    \ c.codePointAt(0)\n        end\n    end\n    return digitSum\nend", "    sum\
    \ = 0\n    for c in s do \n        if c >= 'A' && c <= 'Z' then \n           \
    \ sum += (c - 'A' + 10)\n        else \n            sum += c\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the sum of the digits only'\n    ASCII codes.", "    digitSum = 0\n    for c\
    \ in s\n        if isUpper(c)\n            digitSum += toUpper(c) - 'A' + 1\n\
    \        end\n    end\n    return digitSum\nend", "    sum::Int64 = 0\n    for\
    \ c in s \n        if isUpper c \n            sum += toUpper c\n    return sum\n\
    end\n</cell>\n<code language=julia-1.0>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a string as input and returns the number\
    \ of characters in the string that are uppercase letters.", "    digitSum = 0\n\
    \    for c in s do\n        if isUpper c then digitSum += c - 'A'\n    end\n \
    \   return digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\"\
    )\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as input\
    \ and returns the number of characters in the string that are uppercase letters.",
  "    sum::Int64 = 0\n    for c in s do\n        sum += if c >= 'A' && c <= 'Z' then\
    \ c - 'A' else 0\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.", "    sum = 0\n    for c in s\n        if ('A' <= c && c\
    \ <= 'Z')\n            sum += c - 'A' + 1\n        else\n            sum += c\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    helloE\") => 69\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ as input and returns the number of characters in the string that are uppercase\
    \ letters.", "    digitSum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\
    \ || (\"a\" <= c && c <= \"z\")\n            digitSum += c - 'A' + 1\n       \
    \ else\n            digitSum += c - 'a'\n    end\n    return digitSum\nend", " \
    \   sum::Int64 = 0\n    for c in s do\n        sum += (ord(c) - ord('A') + 1)\
    \ % 26\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.3>\ndigitSum(\"\
    helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as\
    \ input and returns the number of uppercase letters.", "    sum = 0\n    for c\
    \ in s do \n        if c >= 'A' && c <= 'Z' then \n            sum += (c - 'A'\
    \ + 10)\n        else \n            sum += c\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.3>\ndigitSum(\"helloE\")\n</cell>\n<code language=julia-1.3>\n\
    digitSum(\"woArBld\")\n</cell>\n<code language=julia-1.3>\ndigitSum(\"aAaaaXa\"\
    )\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as input\
    \ and returns the number of characters in the string that are uppercase letters.",
  "    digitSum = foldl(\\accum -> accum + digitToInt(accum), 0, s)\nend\n</cell>\n\
    <code language=julia-1.3>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a string as input and returns the number of characters\
    \ in the string that are uppercase letters.", "    digitSum = 0\n    for c in\
    \ s do \n        if isDigit(c) then digitSum += toUpper(c) - 'A' + 1\n    end\n\
    \    return digitSum\nend", "    sum::Int64 = 0\n    for c in s\n        if ('A'\
    \ <= c && c <= 'Z')\n            sum += c - 'A' + 1\n        else\n          \
    \  sum += c\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.", "    sum::Int64 = 0\n    for c in s\n        if isUpper\
    \ c\n            sum += c - 'A' + 1\n        end\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a string as input and returns the number of characters\
    \ in the string that are uppercase letters.", "    sum::Int64 = 0\n    for c in\
    \ s do\n        if c >= 'A' && c <= 'Z' then\n            sum += c - 'A' + 1\n\
    \        else\n            sum += c\n        end\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a string as input and returns the sum of the\
    \ digits in that string.", "    digitSum = 0\n    for c in s\n        if isUpper(c)\n\
    \            digitSum += toUpper(c) - 'A' + 1\n        end\n    end\n    return\
    \ digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the number of uppercase letters in the string.", "    sum = 0\n    for c in\
    \ s do\n        sum += (ord(c) - ord('0'))\n    end\n    return sum\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the number of characters in the string that are uppercase letters.", "    digitSum\
    \ = 0\n    for c in s do\n        if isUpper c then digitSum += c - 'A' + 1\n\
    \    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.3>\ndigitSum(\"\
    helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as\
    \ input and returns the sum of the digits only'\n    ASCII codes.", "    sum::Int64\
    \ = 0\n    for c in s do\n        if c >= 'A' and c <= 'Z' then\n            sum\
    \ += c - 'A' + 1\n        else\n            sum += c\n        end\n    end\n \
    \   return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\")\n\
    </cell>\n<code language=julia-1.5>\ndigitSum(\"woArBld\")\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.", "    digitSum = 0\n    for c in s\n        if ('A' <= c\
    \ && c <= 'Z')\n            digitSum += c - 'A' + 1\n        elseif ('a' <= c\
    \ && c <= 'z')\n            digitSum += c - 'a' + 1\n        else\n          \
    \  digitSum += c\n    end\n    return digitSum\nend", "    sum = 0\n    for c\
    \ in s\n        if ('A' <= c && c <= 'Z') || ('a' <= c && c <= 'z')\n        \
    \    sum += c - 'A' + 1\n        end\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.3>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string as input and returns the number of characters\
    \ in the string that are uppercase letters.", "    sum::Int64 = 0\n    for c in\
    \ s\n        if ('A' <= c && c <= 'Z') || ('a' <= c && c <= 'z')\n           \
    \ sum += c - 'A' + 1\n        end\n    end\n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string as input and returns the number of characters\
    \ in the string that are uppercase letters.", "    digitSum = 0\n    for c in\
    \ s\n        if isUpper c\n            digitSum += c - 'A' + 1\n        end\n\
    \    end\n    return digitSum\nend", "    digitSum = 0\n    for c in s\n     \
    \   if ('A' <= c && c <= 'Z') || (\"a\" <= c && c <= \"z\")\n            digitSum\
    \ += c - 'A' + 1\n        else if ('0' <= c && c <= '9')\n            digitSum\
    \ += c - '0'\n    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"helloE\")\n</cell>\n<code language=julia-1.5>\ndigitSum(\"woArBld\"\
    )\n</cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string as input and returns the sum\
    \ of the digits in that string.", "    digitSum = 0\n    for c in s \n       \
    \ if ('A' <= c && c <= 'Z') \n            digitSum += c - 'A' + 1\n        else\
    \ \n            digitSum += c - '0'\n    return digitSum\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nTask\nWrite a function\
    \ that takes a string as input and returns the sum of the digits only'\n    ASCII\
    \ codes.", "    sum::Int64 = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n\
    \            sum += c - 'A' + 1\n        else\n            sum += c\n    end\n\
    \    return sum\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.", "    digitSum = 0\n    for c in s do\n        if isUpper(c)\
    \ then digitSum += toUpper(c) - 'A'\n    end\n    return digitSum\nend", "   \
    \ sum::Int64 = 0\n    for c in s \n        if c >= 'A' && c <= 'Z' \n        \
    \    sum += c - 'A' + 1\n        else \n            sum += c\n    return sum\n\
    end", "    sum::Int64 = 0\n    for c in s \n        if c >= 'a' && c <= 'z' \n\
    \            sum += c - 'a'\n        else \n            sum += c\n    return sum\n\
    end", "    digitSum = foldl(\\accum c -> accum + toChar(c) - '0' + 10*accum +\
    \ toChar(c) - 'A' + 10*accum + toChar(c) - 'a') 0\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the sum of the digits of that string.", "    sum\
    \ = 0\n    for c in s do \n        if c >= 'A' and c <= 'Z' then \n          \
    \  sum += (c - 'A' + 10)\n        else \n            sum += c\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"woArBld\")\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string as input and returns the sum of the digits of that string.", "    sum\
    \ = 0\n    for c in s do\n        if c >= 'A' and c <= 'Z' then\n            sum\
    \ = sum + c - 'A' + 10\n        elseif c >= 'a' and c <= 'z' then\n          \
    \  sum = sum + c - 'a' + 10\n        else\n            sum = sum + c\n       \
    \ end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ as input and returns the number of characters in the string that are uppercase\
    \ letters.", "    digitSum = foldl(\\accum c -> accum + if isDigit(c) then toUpper(c)\
    \ else 0, 0, s)\nend\n</cell>\n<code language=julia-1.0>\ndigitSum(\"aAaaaXa\"\
    )\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string as input\
    \ and returns the number of characters in the string that are digits. \nThe function\
    \ should ignore all non-digit characters.", "    digitSum = foldl(\\accum -> accum\
    \ + getChar(accum, 0), 0, s)\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a string as input and returns the number of characters in the string\
    \ that are uppercase letters.", "    digitSum = 0\n    for c in s do \n      \
    \  if isUpper c then digitSum += toUpper c else digitSum += toLower c \n    end\n\
    \    return digitSum\nend", "    sum = 0\n    for c in s do \n        if c >=\
    \ '0' && c <= '9' then \n            sum = sum + c - '0'\n        else \n    \
    \        sum = sum + 10\n        end\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a string as input and returns the number of characters\
    \ in the string that are upper case. \nThe function should ignore all non-alphabetic\
    \ characters and return 0 if the string contains only alphabetic characters.",
  "    sum::Int64 = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n       \
    \     sum += c - 'A' + 1\n        elseif ('a' <= c && c <= 'z')\n            sum\
    \ += c - 'a' + 1\n        else\n            sum\n    end\n    sum\nend\n</cell>\n\
    <code language=julia-1.3>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string as input and returns the number of characters\
    \ in the string that are not digits.", "    digitSum = 0\n    for c in s do\n\
    \        if c >= '0' && c <= '9' then\n            digitSum += c - '0'\n     \
    \   end\n    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ not digits.", "    sum = 0\n    for c in s do\n        if c >= '0' && c <= '9'\
    \ then sum = sum + c - '0'\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.", "    digitSum = 0\n    for c in s\n        if ('A' <= c\
    \ && c <= 'Z')\n            digitSum += c - 'A' + 1\n        else\n          \
    \  digitSum += c - '0'\n    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"helloE\") => 69\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a string as input and returns the number of characters in the string that\
    \ are uppercase letters.", "    sum::Int64 = 0\n    for c in s do \n        if\
    \ ('A' <= c && c <= 'Z') then \n            sum += c - 'A' + 1\n        else \n\
    \            sum += c - 'a' + 1\n    end\n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string as input and returns the number of uppercase\
    \ letters.", "    digitSum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n\
    \            digitSum += c - 'A' + 1\n        else if ('a' <= c && c <= 'z')\n\
    \            digitSum += c - 'a' + 1\n        else\n            digitSum += c\n\
    \    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ as input and returns the number of characters in the string that are uppercase\
    \ letters.", "    sum = 0\n    for c in s\n        if c.isUpper\n            sum\
    \ += c.codePointAt(0)\n        end\n    end\n    return sum\nend", "    sum::Int64\
    \ = 0\n    for c in s \n        if c.isUpper() \n            sum += c.codePointAt(0)\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\"\
    ) # => 69\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as\
    \ input and returns the number of uppercase letters.", "    digitSum = 0\n   \
    \ for c in s\n        if c.isUpper\n            digitSum += c.codePointAt(0)\n\
    \        end\n    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the sum of the digits only'\n    ASCII codes.",
  "    sum = 0\n    for c in s do \n        if c >= '0' && c <= '9' then \n      \
    \      sum += c - '0'\n        else \n            sum += 10\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the sum of the digits in that string. \nThe digits are the characters between\
    \ '0' and '9'.", "    sum::Int64 = 0\n    for c in s do\n        if c >= 'A' &&\
    \ c <= 'Z' then\n            sum += c - 'A' + 1\n        else\n            sum\
    \ += c\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.3>\n\
    digitSum(\"helloE\") => 69\n</cell>\n<text>\nExercise\nWrite a function that takes\
    \ a string as input and returns the sum of the digits only'\n    ASCII codes.",
  "    digitSum = 0\n    for c in s \n        if c.isUpper() \n            digitSum\
    \ += c.codePointAt(0)\n    return digitSum\nend", "    digitSum = 0\n    for c\
    \ in s\n        if isUpper(c)\n            digitSum += toUpper(c) - 'A' + 1\n\
    \        end\n    end\n    return digitSum\nend", "    sum::Int64 = 0\n    for\
    \ c in s do \n        if c >= 'A' && c <= 'Z' then \n            sum += c - 'A'\
    \ + 1\n        else \n            sum += c\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"woArBld\")\n</cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\"\
    )\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as input\
    \ and returns the number of characters in the string that are uppercase letters.",
  "    digitSum = foldl(\\accum -> accum + digit(accum), 0, s)\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string as input and returns the number of characters\
    \ in the string that are not digits. \nThe function should ignore the case of\
    \ the characters.", "    digitSum = foldl(\\accum -> accum + toUpper(accum), 0,\
    \ s)\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as\
    \ input and returns the number of characters in the string that are upper case.\
    \ \nThe function should ignore all other characters.", "    sum::Int64 = 0\n \
    \   for c in s \n        if ('A' <= c && c <= 'Z') \n            sum += c - 'A'\
    \ + 1\n        else \n            sum += c\n    return sum\nend", "    digitSum\
    \ = 0\n    for c in s do \n        if isUpper(c) then digitSum += toUpper(c) -\
    \ 'A' + 1 \n        else digitSum += toLower(c) - 'a' + 1 \n    end\n    return\
    \ digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a string as input and returns\
    \ the number of characters in the string that are uppercase letters.", "    digitSum\
    \ = sum( map( ord, s ) ) \nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    helloE\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string as\
    \ input and returns the sum of the digits of that string. \nThe digits are the\
    \ characters between the '0' and '9' characters.", "    sum::Int64 = 0\n    for\
    \ c in s \n        if c >= '0' && c <= '9' \n            sum += c - '0'\n    \
    \    else \n            sum += 0\n    return sum\nend", "    digitSum = 0\n  \
    \  for c in s\n        if ('A' <= c && c <= 'Z')\n            digitSum += c -\
    \ 'A' + 1\n        elseif ('a' <= c && c <= 'z')\n            digitSum += c -\
    \ 'a' + 1\n        else\n            digitSum += c\n    end\n    return digitSum\n\
    end\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\") => 69\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"woArBld\") => 131\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\") => 153\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a string as input and returns the number of characters in the string that\
    \ are uppercase letters.", "    digitSum = Int64(0)\n    for c in s do\n     \
    \   if c >= '0' && c <= '9' then\n            digitSum += c - '0'\n        end\n\
    \    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ as input and returns the number of characters in the string that are uppercase\
    \ letters.", "    sum::Int64 = 0\n    for c in s do\n        if c >= '0' && c\
    \ <= '9' then\n            sum += c - '0'\n        end\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.3>\ndigitSum(\"helloE\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string as input and returns the number\
    \ of characters in the string that are uppercase letters.", "    sum::Int64 =\
    \ 0\n    for c in s do \n        if c >= '0' && c <= '9' then \n            sum\
    \ += c - '0'\n        else \n            sum += c - 'A' + 10\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the number of characters in the string that are not digits. \nExamples:\n  \
    \  digitCount(\"\") => 0\n    digitCount(\"abAB\") => 2\n    digitCount(\"abcCd\"\
    ) => 3\n    digitCount(\"helloE\") => 5\n    digitCount(\"woArBld\") => 5\n  \
    \  digitCount(\"aAaaaXa\") => 5\n    digitCount(\"aAaaaXaXa\") => 5\n    digitCount(\"\
    aAaaaXaXaXaXa\") => 5\n    digitCount(\"aAaaaXaXaXaXaXa\") => 5\n    digitCount(\"\
    aAaaaXaXaXaXaXaXa\") => 5\n    digitCount(\"aAaaaXaXaXaXaXaXaXa\") => 5\n    digitCount(\"\
    aAaaaXaXaXaXaXaXaXaXa\") => 5\n    digitCount(\"aAaaaXaXaXaXaXaXaXaXaXa\") =>\
    \ 5\n    digitCount(\"aAaaaXaXaXaXaXaXaXaXaXaXa\") => 5\n    digitCount(\"aAaaaXaXaXaXaXaXaXaXaXaXaXa\"\
    ) => 5\n    digitCount(\"aAaaaXaXaXaXaXaXaXaXaXaXaXaXa\") => 5\n    digitCount(\"\
    aAaaaXaXaXaXaXaXaXaXaXaXaXaXaXa\") => 5\n    digitCount(\"aAaaaXaXaXaXaXaXaXaXaXaXaXaXaXaXa\"\
    ) => 5\n    digitCount(\"aAaaa", "    digitSum = 0\n    for c in s\n        if\
    \ c.isUpper\n            digitSum += c.codePointAt(0)\n        end\n    end\n\
    \    return digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\"\
    )\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as input\
    \ and returns the sum of the lower characters only'\n    ASCII codes.", "    digitSum\
    \ = foldl(\\accum -> accum + digit(accum), 0, s)\nend", "    digitSum = 0\n  \
    \  for c in s do\n        if c >= '0' && c <= '9' then digitSum += c - '0'\n \
    \   end\n    return digitSum\nend\n</cell>\n<code language=julia-1.3>\ndigitSum(\"\
    helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as\
    \ input and returns the number of characters in the string that are uppercase\
    \ letters.", "    digitSum = Int64(0) \n    for c in s \n        if ('A' <= c\
    \ && c <= 'Z') \n            digitSum = digitSum + Int64(c - 'A' + 1)\n      \
    \  else \n            digitSum = digitSum + Int64(c - 'a')\n    return digitSum\n\
    end\n</cell>\n<code language=julia-1.4>\ndigitSum(\"helloE\")\n</cell>\n<code\
    \ language=julia-1.4>\ndigitSum(\"woArBld\")\n</cell>\n<code language=julia-1.4>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the sum of the digits in that string.", "    digitSum\
    \ = 0\n    for c in s \n        if ('A' <= c && c <= 'Z') \n            digitSum\
    \ += c - 'A' + 1\n        else \n            digitSum += c - '0'\n    end\n  \
    \  return digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\"\
    )\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string as input\
    \ and returns the number of characters in the string that are uppercase letters.",
  "    digitSum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n         \
    \   digitSum += c - 'A' + 1\n        else if ('a' <= c && c <= 'z')\n        \
    \    digitSum += c - 'a' + 1\n        else if ('0' <= c && c <= '9')\n       \
    \     digitSum += c - '0'\n    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ not digits. \nThe function should ignore non-digit characters.", "    sum::Int64\
    \ = 0\n    for c in s\n        if c >= 'A' && c <= 'Z'\n            sum += c -\
    \ 'A' + 1\n        else\n            sum += c\n    end\n    return sum\nend",
  "    digitSum = foldl(\\accum -> accum + digitToInt(accum), 0, s)\nend\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string as input and returns the number of characters\
    \ in the string. \nThe function should ignore all non-alphabetic characters.",
  "    digitSum = 0\n    for c in s do\n        if c >= '0' && c <= '9' then digitSum\
    \ += c - '0'\n    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.", "    digitSum = 0\n    for c in s\n        if isUpper(c)\n\
    \            digitSum += toUpper(c) - 'A' + 1\n        end\n    end\n    return\
    \ digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\") # =>\
    \ 69\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as input\
    \ and returns the number of uppercase letters.", "    digitSum = foldl(\\accum\
    \ c -> accum + getCharCode(c), 0, s)\nend", "    digitSum = 0\n    for c in s\
    \ do\n        if c >= '0' && c <= '9' then digitSum += c - '0'\n    end\n    return\
    \ digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the sum of the digits only'\n    ASCII codes.", "    digitSum = foldl(\\accum\
    \ -> accum + digitToInt(accum), 0, s)\nend\n</cell>\n<code language=julia-1.4>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nTask\nWrite a function that takes a string\
    \ as input and returns the sum of the digits only'\n    ASCII codes.", "    digitSum\
    \ = 0\n    for c in s \n        if isUpper c \n            digitSum += toUpper\
    \ c \n        else \n            digitSum += toLower c \n    return digitSum \n\
    end", "    sum::Int64 = 0\n    for c in s do \n        if c >= '0' && c <= '9'\
    \ then \n            sum += c - '0'\n        else \n            sum += c - 'A'\
    \ + 10\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    helloE\")\n</cell>\n<code language=julia-1.5>\ndigitSum(\"woArBld\")\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string as input and returns the number of characters\
    \ in the string. \nIf the string has less than 10 characters, return 0.", "  \
    \  digitSum = 0\n    for c in s do \n        if c >= '0' && c <= '9' then digitSum\
    \ += c - '0' else digitSum += 10\n    end\n    return digitSum\nend\n</cell>\n\
    <code language=julia-1.0>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string as input and returns the sum of the digits\
    \ in that string.", "    digitSum = 0\n    for c in s\n        if c >= '0' &&\
    \ c <= '9'\n            digitSum += c - '0'\n        end\n    end\n    return\
    \ digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\") => 69\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string as input and\
    \ returns the number of characters in the string that are not upper case. For\
    \ example, the string \"helloE\" has 5 characters that are not upper case. Write\
    \ a function that takes a string as input and returns the number of characters\
    \ in the string that are not upper case. For example, the string \"helloE\" has\
    \ 5 characters that are not upper case. Write a function that takes a string as\
    \ input and returns the number of characters in the string that are not upper\
    \ case. For example, the string \"helloE\" has 5 characters that are not upper\
    \ case. Write a function that takes a string as input and returns the number of\
    \ characters in the string that are not upper case. For example, the string \"\
    helloE\" has 5 characters that are not upper case. Write a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ not upper case. For example, the string \"helloE\" has 5 characters that are\
    \ not upper case. Write a function that takes a string as input and returns the\
    \ number of characters in the string that are not upper case. For example, the\
    \ string \"helloE\" has 5 characters that are not upper case. Write a function\
    \ that takes a string as input and returns the number of characters in the string\
    \ that are not upper case. For example, the string \"helloE\" has 5 characters\
    \ that are not upper case. Write a function that takes a string as input and returns\
    \ the number of characters in the string that are not upper case. For example,\
    \ the string \"helloE\" has 5 characters that are not upper case. Write a function\
    \ that takes a string as input and returns the number of characters in the string\
    \ that are not upper case. For example, the string \"helloE\" has 5 characters\
    \ that are not upper case. Write a function that takes a string as input and returns\
    \ the number of characters in the string that are not upper case. For example,\
    \ the string \"helloE\" has 5 characters that are not upper case. Write a function\
    \ that takes a string as input and returns the number of characters in the string\
    \ that are not upper case. For example, the string \"helloE\" has 5 characters\
    \ that are not upper case. Write a function that takes a string as input and returns\
    \ the number of characters in the string that are not upper case. For example,\
    \ the string \"helloE\" has 5 characters that are not upper case. Write a function\
    \ that takes a string as input and returns the number of characters in the string\
    \ that are not upper case. For example, the string \"helloE\" has 5 characters\
    \ that are not upper case. Write a function that takes a string as input and returns\
    \ the number of characters in the string that are not upper case. For example,\
    \ the string \"helloE\" has 5 character", "    sum = 0\n    for c in s \n    \
    \    if ('A' <= c && c <= 'Z') \n            sum += c - 'A' + 1\n        else\
    \ \n            sum += c\n    return sum\nend", "    sum = 0\n    for c in s do\
    \ \n        if c >= 'A' && c <= 'Z' then \n            sum += (c - 'A' + 10)\n\
    \        else \n            sum += c\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"helloE\") => 69\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a string as input and returns the number of characters\
    \ in the string that are uppercase letters.", "    sum::Int64 = 0\n    for c in\
    \ s do \n        if ('A' <= c && c <= 'Z') then \n            sum += c - 'A' +\
    \ 1\n        else \n            sum += c - '0'\n    end\n    return sum\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a string as input and\
    \ returns the sum of the digits in that string.", "    digitSum = 0\n    for c\
    \ in s\n        if ('A' <= c && c <= 'Z')\n            digitSum += c - 'A' + 1\n\
    \        else if ('a' <= c && c <= 'z')\n            digitSum += c - 'a' + 1\n\
    \        else if ('0' <= c && c <= '9')\n            digitSum += c - '0'\n   \
    \ end\n    return digitSum\nend\n</cell>\n<code language=julia-1.0>\ndigitSum(\"\
    aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ as input and returns the number of occurrences of the character 'e' in the string.",
  "    digitSum = 0\n    for c in s\n        if isUpper c\n            digitSum +=\
    \ c - 'A' + 1\n        end\n    end\n    return digitSum\nend\n</cell>\n<code\
    \ language=julia-1.0>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a string as input and returns the number of characters\
    \ in the string that are uppercase letters.", "    digitSum = 0\n    for c in\
    \ s\n        if ('A' <= c && c <= 'Z')\n            digitSum += c - 'A' + 1\n\
    \        else\n            digitSum += c\n    end\n    return digitSum\nend\n\
    </cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"woArBld\")\n</cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\"\
    )\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as input\
    \ and returns the number of characters in the string that are uppercase letters.",
  "    digitSum = 0\n    for c in s do\n        if c >= '0' && c <= '9' then\n   \
    \         digitSum += c - '0'\n        end\n    end\n    return digitSum\nend",
  "    sum = 0\n    for c in s do \n        if c >= '0' && c <= '9' then \n      \
    \      sum += c - '0'\n        else \n            sum += 10\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the number of characters in the string that are uppercase letters.", "    sum::Int64\
    \ = 0\n    for c in s do\n        sum += (c - 'A' + 1)\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\") # => 69\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the number of characters in the string. \nThe function should ignore all non-alphabetic\
    \ characters and count the alphabetic characters.", "    sum = 0\n    for c in\
    \ s do \n        if c >= 'A' && c <= 'Z' then \n            sum += c - 'A' + 1\n\
    \        else \n            sum += c\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string as input and returns the number of characters\
    \ in the string that are uppercase letters.", "    digitSum = 0\n    for c in\
    \ s do\n        digitSum = digitSum + Int64(Char.digit(c))\n    end\n    return\
    \ digitSum\nend", "    sum = 0\n    for c in s \n        if ('A' <= c && c <=\
    \ 'Z') \n            sum += c - 'A' + 1\n        else \n            sum += c\n\
    \    return sum\nend", "    digitSum = foldl(\\accum -> accum + toUpper(accum),\
    \ 0, s)\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string\
    \ as input and returns the number of characters in the string that are uppercase\
    \ letters.", "    digitSum = 0\n    for c in s \n        if isUpper c \n     \
    \       digitSum += c - 'A' + 1\n        else \n            digitSum += c - 'a'\n\
    \    return digitSum\nend", "    digitSum = 0\n    for c in s do \n        if\
    \ c >= '0' && c <= '9' then digitSum += c - '0'\n    end\n    return digitSum\n\
    end\n</cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string as input and returns the number\
    \ of characters in the string that are uppercase letters.", "    sum = 0\n   \
    \ for c in s \n        if isUpper c \n            sum += toUpper c\n        else\
    \ \n            sum += toLower c\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of uppercase letters.", "    sum::Int64\
    \ = 0\n    for c in s\n        if c >= 'A' && c <= 'Z'\n            sum += c -\
    \ 'A' + 1\n        else\n            sum += c\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a string as input and returns the number of characters\
    \ in the string. \nThe function should ignore all non-alphanumeric characters.",
  "    digitSum = foldl(\\accum -> accum + digitToInt(accum), 0, s)\nend", "    digitSum\
    \ = foldl(\\accum -> accum + digitToInt(accum), 0, s)\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the sum of the lower characters only'\nASCII codes.",
  "    digitSum = foldl(add, 0, map(ord, s))\nend", "    sum::Int64 = 0\n    for c\
    \ in s \n        if ('A' <= c && c <= 'Z') \n            sum += c - 'A' + 1\n\
    \        else \n            sum += c\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.", "    sum = 0\n    for c in s\n        if isUpper(c)\n \
    \           sum += toUpper(c)\n        end\n    end\n    return sum\nend", " \
    \   digitSum = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n        \
    \    digitSum += c - 'A' + 1\n        else if ('a' <= c && c <= 'z')\n       \
    \     digitSum += c - 'a' + 1\n        else if ('0' <= c && c <= '9')\n      \
    \      digitSum += c - '0'\n    end\n    return digitSum\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string as input and returns the number of characters\
    \ in the string that are uppercase letters.", "    sum::Int64 = 0\n    for c in\
    \ s do\n        if c >= '0' && c <= '9' then\n            sum += c - '0'\n   \
    \     end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.4>\n\
    digitSum(\"helloE\") => 69\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a string as input and returns the number of characters in the string that\
    \ are uppercase letters.", "    sum = 0\n    for c in s do\n        if ('A' <=\
    \ c && c <= 'Z') || ('a' <= c && c <= 'z') then\n            sum = sum + c - 'A'\
    \ + 10\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"helloE\") => 69\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a string as input and returns the number of characters in the string that\
    \ are uppercase letters.", "    digitSum = 0\n    for c in s do\n        if c\
    \ >= '0' && c <= '9' then digitSum += c - '0'\n    end\n    return digitSum\n\
    end\n</cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string as input and returns the number\
    \ of digits in it.", "    digitSum = 0\n    for c in s do \n        if c >= '0'\
    \ && c <= '9' then digitSum += c - '0' \n        else digitSum += 10\n    end\n\
    \    return digitSum\nend\n</cell>\n<code language=julia-1.4>\ndigitSum(\"helloE\"\
    )\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as input\
    \ and returns the number of characters in the string that are uppercase letters.",
  "    sum = 0\n    for c in s do\n        sum += (ord(c) - ord('0'))\n    end\n \
    \   return sum\nend", "    digitSum = 0\n    for c in s do \n        if isUpper(c)\
    \ then digitSum += toUpper(c) - 'A' + 1 \n        else digitSum += toLower(c)\
    \ - 'a' + 1 \n    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string as input and returns the number of uppercase letters.", "    digitSum\
    \ = 0\n    for c in s\n        if ('A' <= c && c <= 'Z')\n            digitSum\
    \ += c - 'A' + 1\n        else\n            digitSum += c\n    end\n    return\
    \ digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\") => 69\n\
    </cell>\n<code language=julia-1.5>\ndigitSum(\"woArBld\") => 131\n</cell>\n<code\
    \ language=julia-1.5>\ndigitSum(\"aAaaaXa\") => 153\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a string as input and returns the number of uppercase\
    \ letters.", "    digitSum = 0\n    for c in s \n        if ('A' <= c && c <=\
    \ 'Z') \n            digitSum += c - 'A' + 1\n        else \n            digitSum\
    \ += c - 'a'\n    return digitSum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"\
    helloE\") => 69\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ as input and returns the number of characters in the string that are uppercase\
    \ letters.", "    digitSum = 0\n    for c in s do\n        if c >= '0' && c <=\
    \ '9' then digitSum += c - '0'\n    end\n    return digitSum\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string as input and returns the number of uppercase\
    \ letters.", "    digitSum = 0\n    for c in s\n        if isUpper c\n       \
    \     digitSum += c - 'A' + 1\n        end\n    end\n    return digitSum\nend\n\
    </cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a string as input and returns the sum of the\
    \ digits only'\n    ASCII codes.", "    sum::Int64 = 0\n    for c in s do\n  \
    \      if c >= 'A' and c <= 'Z' then\n            sum += c - 'A' + 1\n       \
    \ else\n            sum += c\n        end\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string as input and returns the number of characters\
    \ in the string that are upper case. For example, the string \"helloE\" has 5\
    \ characters that are upper case. Write a function that takes a string as input\
    \ and returns the number of characters in the string that are upper case. For\
    \ example, the string \"helloE\" has 5 characters that are upper case. Write a\
    \ function that takes a string as input and returns the number of characters in\
    \ the string that are upper case. For example, the string \"helloE\" has 5 characters\
    \ that are upper case. Write a function that takes a string as input and returns\
    \ the number of characters in the string that are upper case. For example, the\
    \ string \"helloE\" has 5 characters that are upper case. Write a function that\
    \ takes a string as input and returns the number of characters in the string that\
    \ are upper case. For example, the string \"helloE\" has 5 characters that are\
    \ upper case. Write a function that takes a string as input and returns the number\
    \ of characters in the string that are upper case. For example, the string \"\
    helloE\" has 5 characters that are upper case. Write a function that takes a string\
    \ as input and returns the number of characters in the string that are upper case.\
    \ For example, the string \"helloE\" has 5 characters that are upper case. Write\
    \ a function that takes a string as input and returns the number of characters\
    \ in the string that are upper case. For example, the string \"helloE\" has 5\
    \ characters that are upper case. Write a function that takes a string as input\
    \ and returns the number of characters in the string that are upper case. For\
    \ example, the string \"helloE\" has 5 characters that are upper case. Write a\
    \ function that takes a string as input and returns the number of characters in\
    \ the string that are upper case. For example, the string \"helloE\" has 5 characters\
    \ that are upper case. Write a function that takes a string as input and returns\
    \ the number of characters in the string that are upper case. For example, the\
    \ string \"helloE\" has 5 characters that are upper case. Write a function that\
    \ takes a string as input and returns the number of characters in the string that\
    \ are upper case. For example, the string \"helloE\" has 5 characters that are\
    \ upper case. Write a function that takes a string as input and returns the number\
    \ of characters in the string that are upper case. For example, the string \"\
    helloE\" has 5 characters that are upper case. Write a function that takes a string\
    \ as input and returns the number of characters in the string that are upper case.\
    \ For example, the string \"helloE\" has 5 characters that are upper case. Write\
    \ a function that takes a string as input and returns the number of characters\
    \ in the string that are upper case. For example", "    sum = 0\n    for c in\
    \ s do \n        if c >= '0' && c <= '9' then \n            sum = sum + c - '0'\n\
    \        else \n            sum = sum + c - 'A' + 10\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string as input and returns the number\
    \ of characters in the string. \nThe function should ignore all non-alphanumeric\
    \ characters. \nThe function should ignore all empty strings.", "    digitSum\
    \ = 0\n    for c in s\n        if c.isUpper\n            digitSum += c.codePointAt(0)\n\
    \        end\n    end\n    return digitSum\nend", "    digitSum = foldl(\\accum\
    \ c -> accum + digitToInt(c), 0, s)\nend", "    sum = 0\n    for c in s \n   \
    \     if ('A' <= c && c <= 'Z') \n            sum += c - 'A' + 1\n        else\
    \ \n            sum += c\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string. \nThe\
    \ function should ignore all non-alphanumeric characters and return 0 for the\
    \ empty string.", "    digitSum = 0\n    for c in s \n        if isUpper c then\
    \ digitSum += toUpper c else digitSum += toLower c \n    end\n    return digitSum\n\
    end\n</cell>\n<code language=julia-1.5>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a string as input and returns the number\
    \ of uppercase letters.", "    sum::Int64 = 0\n    for c in s do\n        if c\
    \ >= 'A' and c <= 'Z' then\n            sum += c - 'A' + 1\n        else\n   \
    \         sum += c\n        end\n    end\n    return sum\nend", "    sum = 0\n\
    \    for c in s do \n        if c >= 'A' && c <= 'Z' then \n            sum +=\
    \ c - 'A' + 1\n        else \n            sum += c\n    end\n    return sum\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string as input\
    \ and returns the number of characters in the string that are uppercase letters.",
  "    digitSum = 0\n    for c in s do\n        if c >= '0' && c <= '9' then digitSum\
    \ += c - '0'\n    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.4>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.", "    sum::Int64 = 0\n    for c in s do\n        if c >=\
    \ 'A' && c <= 'Z' then sum += c - 'A'\n        else sum += c\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string as input and returns\
    \ the number of characters in the string that are uppercase letters.", "    digitSum\
    \ = 0\n    for c in s\n        if c.isUpper\n            digitSum += c.codePointAt(0)\n\
    \        end\n    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.0>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of uppercase letters in the string.",
  "    digitSum = 0\n    for c in s do \n        if isUpper(c) then digitSum += toUpper(c)\
    \ - 'A' + 1 \n        else digitSum += toLower(c) - 'a' + 1 \n    end\n    return\
    \ digitSum\nend", "    sum = 0\n    for c in s \n        if ('A' <= c && c <=\
    \ 'Z') \n            sum += c - 'A' + 1\n        else \n            sum += c\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\"\
    )\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as input\
    \ and returns the number of characters in the string that are uppercase letters.",
  "    digitSum = 0\n    for c in s do \n        digitSum += digit(c)\n    end\n \
    \   return digitSum\nend", "    sum::Int64 = 0\n    for c in s do\n        if\
    \ c >= 'A' && c <= 'Z' then\n            sum += c - 'A' + 1\n        else\n  \
    \          sum += c\n        end\n    end\n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string as input and returns the sum of the digits in\
    \ that string.", "    sum = 0\n    for c in s do \n        if ('A' <= c && c <=\
    \ 'Z') then \n            sum += c - 'A' + 1\n        else \n            sum +=\
    \ c - '0'\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string as input and returns the number of characters in the string that are\
    \ uppercase letters.", "    digitSum = 0\n    for c in s\n        if ('A' <= c\
    \ && c <= 'Z')\n            digitSum += c - 'A' + 1\n        else if ('a' <= c\
    \ && c <= 'z')\n            digitSum += c - 'a' + 1\n        else if ('0' <= c\
    \ && c <= '9')\n            digitSum += c - '0'\n    end\n    return digitSum\n\
    end\n</cell>\n<code language=julia-1.4>\ndigitSum(\"helloE\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string as input and returns the sum\
    \ of the digits in that string.", "    digitSum = 0\n    for c in s \n       \
    \ if ('A' <= c && c <= 'Z') \n            digitSum += c - 'A' + 1\n        else\
    \ \n            digitSum += c - '0'\n    return digitSum\nend", "    sum::Int64\
    \ = 0\n    for c in s do \n        if c >= '0' && c <= '9' then \n           \
    \ sum += c - '0'\n        else \n            sum += c - 'A' + 10\n    end\n  \
    \  return sum\nend\n</cell>\n<code language=julia-1.5>\ndigitSum(\"helloE\")\n\
    </cell>\n<code language=julia-1.5>\ndigitSum(\"woArBld\")\n</cell>\n<code language=julia-1.5>\n\
    digitSum(\"aAaaaXa\")\n</cell>\n<text>\nExercise\nWrite a function that takes\
    \ a string as input and returns the sum of the digits only'\n    ASCII codes.",
  "    sum::Int64 = 0\n    for c in s\n        if c >= '0' && c <= '9'\n         \
    \   sum += c - '0'\n        end\n    end\n    return sum\nend", "    digitSum\
    \ = 0\n    for c in s do\n        digitSum += getCharCode(c)\n    end\n    return\
    \ digitSum\nend", "    sum::Int64 = 0\n    for c in s do\n        if c >= 'A'\
    \ and c <= 'Z' then\n            sum = sum + c - 'A' + 10\n        else\n    \
    \        sum = sum + c\n        end\n    end\n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.3>\ndigitSum(\"helloE\")\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string as input and returns the number of characters\
    \ in the string that are uppercase letters.", "    digitSum = 0\n    for c in\
    \ s\n        if c.isUpper\n            digitSum += c.codePointAt(0)\n        end\n\
    \    end\n    return digitSum\nend\n</cell>\n<code language=julia-1.0>\ndigitSum(\"\
    helloE\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string as\
    \ input and returns the number of uppercase letters.", "    digitSum = 0\n   \
    \ for c in s do \n        if isUpper(c) then digitSum += toUpper(c) - 'A' + 1\
    \ \n        else digitSum += toLower(c) - 'a' + 1 \n    end\n    return digitSum\n\
    end\n</cell>\n<code language=julia-1.0>\ndigitSum(\"aAaaaXa\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string as input and returns the number\
    \ of uppercase letters in the string."]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

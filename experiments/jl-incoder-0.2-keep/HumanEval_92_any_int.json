{
  "name": "HumanEval_92_any_int",
  "language": "julia",
  "prompt": "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum of the other two, and all numbers are integers.\n    Returns false in any other cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279e True\n    \n    any_int(3, 2, 2) \u279e False\n\n    any_int(3, -2, 1) \u279e True\n    \n    any_int(3.6, -2.2, 2) \u279e False\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool \n",
  "tests": "using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n",
  "completions": [
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if all numbers are positive, and all numbers are integers.\nReturns false in any other case.\nExamples\nall_positive(5, 2, 7) \u279e true\nall_positive(3, -2, 1) \u279e false\nall_positive(3.6, -2.2, 2) \u279e true",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are evenly divisible by 3.\nReturns false if any number is odd.\nReturn false if all numbers are integers.\nReturn false if any number is NaN.\nReturn false if any number is negative.\nReturn false if any number is zero.\nReturn false if any number is infinite.\nReturn false if any number is NaN.",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are positive.\nReturns false if any number is negative.\nReturns false if all numbers are zero.\nReturns true in all other cases.\n    \nExamples\npositive_all(5, 2, 7) \u279e true\npositive_all(3, 2, 2) \u279e false",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two.",
    "    if x == y+z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are even, and false if any number is odd.\nReturn false in any other case.\nExamples\nall_even(6, 4, 2) \u279e true\nall_even(6, 4, 3) \u279e false\nall_even(6, 4, -2) \u279e false\nall_even(6, 4, -1) \u279e false\nall_even(6, 4, 0) \u279e false\nall_even(6, 4, 1) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5) \u279e false\nall_even(6, 4, 1.5",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend",
    "    if x == y || x == z || y == z \n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_sum(5, 2, 7) \u279e True\nany_int_sum(3, 2, 2) \u279e False",
    "    if x == y+z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nWrite a function that takes 3 numbers and returns true if all numbers are integers.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are non-integers.\nWrite a function that takes 3 numbers and returns true if all numbers are non-integers.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are floats.\nWrite a function that takes 3 numbers and returns true if all numbers are floats.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are non-floats.\nWrite a function that takes 3 numbers and returns true if all numbers are non-floats.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are booleans.\nWrite a function that takes 3 numbers and returns true if all numbers are booleans.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are strings or symbols.\nWrite a function that takes 3 numbers and returns true if all numbers are strings or symbols.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are arrays.\nWrite a function that takes 3 numbers and returns true if all numbers are arrays.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are dictionaries.\nWrite a function that takes 3 numbers and returns true if all numbers are dictionaries.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are tuples.\nWrite a function that takes 3 numbers and returns true if all numbers are tuples.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are sets or frozensets.\nWrite a function that takes 3 numbers and returns true if all numbers are sets or frozensets.\nWrite a function that takes 3 numbers and returns true if any of ",
    "    if x == y+z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are even, and false otherwise.\nReturn false in any other case.\nExamples\neven_all(5, 2, 7) \u279e true\neven_all(3, 2, 2) \u279e false\neven_all(3, -2, 1) \u279e true\neven_all(3.6, -2.2, 2) \u279e false",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_sum(5, 2, 7) \u279e true",
    "    if x == y+z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if at least one of them is equal to the sum of the other two.",
    "    if x == y || x == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are positive, and all numbers are integers.\nReturns false in any other case.\nExamples\nall_positive(5, 2, 7) \u279e True\nall_positive(3, 2, 2) \u279e False",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes in 3 numbers and returns true if the sum of the numbers is equal to the product of the other two, and all numbers are integers.",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_or_false(5, 2, 7) \u279e true\nany_int_or_false(3, 2, 2) \u279e false",
    "    if x == y || x == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>",
    "    if x == y+z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns the sum of the numbers.\nThe function should return false if the numbers are not all integers.\nThe function should return false if the numbers are all integers.\nThe function should return true if the numbers are all integers and the sum is equal to the sum of the other two.\nThe function should return true if the numbers are all integers and the sum is not equal to the sum of the other two.\nThe function should return true if the numbers are all integers and the sum is equal to the sum of the other two and they are not equal.\nThe function should return true if the numbers are all integers and the sum is not equal to the sum of the other two and they are equal.\nThe function should return true if the numbers are all integers and the sum is equal to the sum of the other two and they are not equal and they are equal.\nThe function should return true if the numbers are all integers and the sum is not equal to the sum of the other two and they are equal and they are not equal.\nThe function should return true if the numbers are all integers and the sum is equal to the sum of the other two and they are not equal and they are equal and they are equal.\nThe function should return true if the numbers are all integers and the sum is not equal to the sum of the other two and they are equal and they are not equal and they are not equal.\nThe function should return true if the numbers are all integers and the sum is equal to the sum of the other two and they are not equal and they are equal and they are not equal and they are not equal.\nThe function should return true if the numbers are all integers and the sum is not equal to the sum of the other two and they are equal and they are not equal and they are not equal and they are not equal.\nThe function should return true if the numbers are all integers and the sum is equal to the sum of the other two and they are not equal and they are equal and they are not equal and they are not equal and they are not equal.\nThe function should return true if the numbers are all integers and the sum is not equal to the sum of the other two and they are equal and they are not equal and they are not equal and they are not equal and they are not equal.\nThe function should return true if the numbers are all integers and the sum is equal to the sum of the other two and they are not equal and they are equal and they are not equal and they are not equal and they are not equal and they are not equal.\nThe function should return true if the numbers are all integers and the sum is not equal to the sum of the other two and they are equal and they are not equal and they are not equal and they are not equal and they are not equal and they are not equal.\nThe function should return true if the numbers are all integers and the sum is equal to the sum of the other two and they are not equal and they are equal and they are not equal and they are not equal and they are not equal and they are not equal and they are not equal.\nThe function should return true if the numbers are all integers and the sum is not equal to the sum",
    "    if x == y || x == z || y == z \n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>",
    "    if x == y || x == z || y == z \n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes in a list of numbers and returns the number of positive numbers in the list.\nExamples\ncount_positive([5, 2, -4, 0, -3]) \u279e 3\ncount_positive([5, 2, -4, 0, -3, -5]) \u279e 5\ncount_positive([5, 2, -4, 0, -3, -5, -6, -7, -8]) \u279e 8\ncount_positive([5, 2, -4, 0, -3, -5, -6, -7, -8, 9]) \u279e 9\ncount_positive([5, 2, -4, 0, -3, -5, -6, -7, -8, -9, 10]) \u279e 10\ncount_positive([5, 2, -4, 0, -3, -5, -6, -7, -8, -9, 10, 11]) \u279e 11\ncount_positive([5, 2, -4, 0, -3, -5, -6, -7, -8, -9, 10, 11, 12]) \u279e 12\ncount_positive([5, 2, -4, 0, -3, -5, -6, -7, -8, -9, 10, 11, 12, 13]) \u279e 13\ncount_positive([5, 2, -4, 0, -3, -5, -6, -7, -8, -9, 10, 11, 12, 13, 14]) \u279e 14\ncount_positive([5, 2, -4, 0, -3, -5, -6, -7, -8, -9, 10, 11, 12, 13, 14, 15]) \u279e 15\ncount_positive([5, 2, -4, 0, -3, -5, -6, -7, -8, -9, 10, 11, 12, 13, 14, 15, 16]) \u279e 16\ncount_positive([5, 2, -4, 0, -3, -5, -6, -7, -8, -9, 10, 11, 12, 13, 14, 15, 16, 17]) \u279e 17\ncount_positive([5, 2, -4, 0, -3, -5, -6, -7, -8, -9, 10, 11, 12, 13, 14, 15, 16, 17, 18]) \u279e 18\ncount_positive([5, 2, -4, 0, -3, -5, -6, -7, -8, -9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]) \u279e 19\ncount_positive([5, 2, -4, 0, -3, -5, ",
    "    if x == y || x == z || y == z \n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_sum(5, 2, 7) \u279e True\nany_int_sum(3, 2, 2) \u279e False",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\n\u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f \u26a0\ufe0f",
    "    if x == y || x == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are even, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are odd, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is even, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is odd, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are positive, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are negative, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is positive, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is negative, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are positive, and all numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are negative, and all numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is positive, and all numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is negative, and all numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are positive, and any numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are negative, and any numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is positive, and all numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is negative, and all numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are positive, and any numbers are integers, and any numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are negative, and any numbers are integers, and any numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is positive, and all numbers are integers, and any numbers are integers, and any numbers are integer",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if all numbers are evenly divisible by 3.\nReturns false in any other case.\n    \n    Examples\n    evenly_divisible(5, 2, 7) \u279e true\n    evenly_divisible(3, 2, 2) \u279e false",
    "    if x == y+z\n    else false\nend\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if at least one of them is equal to the sum of the other two.",
    "    if x == y+z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are even, and false otherwise.",
    "    if x == y || x == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two.\nReturn false in any other case.",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are even, and false otherwise.",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<text>\nProblem 3\nWrite a function that takes two numbers and returns the sum of the two numbers.\nIf either of the numbers is negative, return 0.\nIf both numbers are 0, return 0.\nIf both numbers are positive, return the sum of the two numbers.\nIf either of the numbers is NaN, return 0.\nIf both numbers are NaN, return NaN.\nIf both numbers are Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.\nIf both numbers are -Inf, return 0.",
    "    if x == y || x == z || y == z \n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 10\nWrite a function that takes a number as input, and returns the square of the number.",
    "    if x == y || x == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturns false in any other cases.\nExamples\nany_int_sum(5, 2, 7) \u279e True\nany_int_sum(3, 2, 2) \u279e False",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend",
    "    if x == y || x == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum of the other two, and all numbers are integers.\n    Returns false in any other cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279e True\n    \n    any_int(3, 2, 2) \u279e False",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns the sum of the numbers.\nReturn false if the numbers are not all integers.\nReturn false if the sum of the numbers is zero.\nReturn true in any other case.",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nWrite a function that takes 3 numbers and returns true if all numbers are integers.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are not integers.\nWrite a function that takes 3 numbers and returns true if all numbers are not integers.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are not integers.\nWrite a function that takes 3 numbers and returns true if all numbers are not integers.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are not integers.\nWrite a function that takes 3 numbers and returns true if all numbers are not integers.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are not integers.\nWrite a function that takes 3 numbers and returns true if all numbers are not integers.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are not integers.\nWrite a function that takes 3 numbers and returns true if all numbers are not integers.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are not integers.\nWrite a function that takes 3 numbers and returns true if all numbers are not integers.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are not integers.\nWrite a function that takes 3 numbers and returns true if all numbers are not integers.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are not integers.\nWrite a function that takes 3 numbers and returns true if all numbers are not integers.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are not integers.\nWrite a function that takes 3 numbers and returns true if all numbers are not integers.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the ",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_sum(5, 2, 7) \u279e True\nany_int_sum(3, 2, 2) \u279e False",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector of numbers and returns a vector of booleans indicating which numbers are even and which are odd.",
    "    if x == y+z\n    else false\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are even, and false if any number is odd.",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes in 3 numbers and returns the sum of the numbers. If the numbers are integers, return their sum. Otherwise, return their average.",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum of the other two, and all numbers are integers.\n    Returns false in any other cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279e True\n    \n    any_int(3, 2, 2) \u279e False",
    "    if x == y || x == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if all numbers are positive, and all numbers are integers.\nReturn false in any other cases.\nExamples\npositive_int(5, 2, 7) \u279e true\npositive_int(3, 2, 2) \u279e true\npositive_int(3, -2, 1) \u279e true\npositive_int(3.6, -2.2, 2) \u279e false",
    "    if x == y || x == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are even, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are odd, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are positive, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are negative, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are floats, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers and all numbers are floats, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers and all numbers are floats, and at least one number is negative, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers and all numbers are floats, and at least one number is positive, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers and all numbers are floats, and at least one number is negative, and at least one number is positive, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers and all numbers are floats, and at least one number is negative, and at least one number is positive, and at least one number is even, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers and all numbers are floats, and at least one number is negative, and at least one number is positive, and at least one number is odd, and at least one number is even, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers and all numbers are floats, and at least one number is negative, and at least one number is positive, and at least one number is odd, and at least one number is even, and at least one number is odd, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers and all numbers are floats, and at least one number is negative, and at least one number is positive, and at least one number is odd, and at least one number is even, and at least one number is odd, and at least one number is even, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers and all numbers are floats, and at least one number is negative, and at least one number is positive, and at least one number is odd, and at least one number is even, and at least one number is odd, and at least one number is even, and at least one number is even, and at least one number is even, and false ",
    "    if x == y || x == z || y == z \n        true\n    else\n        false\n    end\nend",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and false otherwise.",
    "    if x == y+z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are positive, and all numbers are integers.\nReturn false in any other case.\nExamples\nall_positive(5, 2, 7) \u279e true\nall_positive(3, 2, 2) \u279e false\nall_positive(3, -2, 1) \u279e true\nall_positive(3.6, -2.2, 2) \u279e false",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>",
    "    if x == y || x == z || y == z \n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 10\nWrite a function that takes 3 numbers and returns true if at least one of them is equal to the sum of the other two.",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if at least one of the numbers is equal to the sum of the other two, and all numbers are integers.",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns the sum of the numbers.\nWrite a function that takes 3 numbers and returns the product of the numbers.\nWrite a function that takes 3 numbers and returns the maximum of the numbers.\nWrite a function that takes 3 numbers and returns the minimum of the numbers.\nWrite a function that takes 3 numbers and returns the sum of the squares of the numbers.\nWrite a function that takes 3 numbers and returns the product of the squares of the numbers.\nWrite a function that takes 3 numbers and returns the maximum of the squares of the numbers.\nWrite a function that takes 3 numbers and returns the minimum of the squares of the numbers.\nWrite a function that takes 3 numbers and returns the sum of the cubes of the numbers.\nWrite a function that takes 3 numbers and returns the product of the cubes of the numbers.\nWrite a function that takes 3 numbers and returns the maximum of the cubes of the numbers.\nWrite a function that takes 3 numbers and returns the minimum of the cubes of the numbers.\nWrite a function that takes 3 numbers and returns the sum of the reciprocals of the numbers.\nWrite a function that takes 3 numbers and returns the product of the reciprocals of the numbers.\nWrite a function that takes 3 numbers and returns the maximum of the reciprocals of the numbers.\nWrite a function that takes 3 numbers and returns the minimum of the reciprocals of the numbers.\nWrite a function that takes 3 numbers and returns the sum of the squares of the reciprocals of the numbers.\nWrite a function that takes 3 numbers and returns the product of the squares of the reciprocals of the numbers.\nWrite a function that takes 3 numbers and returns the maximum of the squares of the reciprocals of the numbers.\nWrite a function that takes 3 numbers and returns the minimum of the squares of the reciprocals of the numbers.\nWrite a function that takes 3 numbers and returns the sum of the cubes of the reciprocals of the numbers.\nWrite a function that takes 3 numbers and returns the product of the cubes of the reciprocals of the numbers.\nWrite a function that takes 3 numbers and returns the maximum of the cubes of the reciprocals of the numbers.\nWrite a function that takes 3 numbers and returns the minimum of the cubes of the reciprocals of the numbers.\nWrite a function that takes 3 numbers and returns the sum of the reciprocals of the squares of the numbers.\nWrite a function that takes 3 numbers and returns the product of the reciprocals of the squares of the numbers.\nWrite a function that takes 3 numbers and returns the maximum of the reci",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers and returns the number of unique elements in the array.",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>",
    "    if x == y+z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true if all numbers are equal to the sum of the other two, and all numbers are integers.\n    Returns false in any other cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279e True\n    \n    any_int(3, 2, 2) \u279e True",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are even, and false if any number is odd.\nReturn false in any other case.\nExamples\neven_or_odd(5, 2, 7) \u279e true\neven_or_odd(3, 2, 2) \u279e false",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are positive, and all numbers are integers.\nReturn false in any other case.\nExamples\npositive_int(5, 2, 7) \u279e True\npositive_int(3, 2, 2) \u279e False\npositive_int(3, -2, 1) \u279e True\npositive_int(3.6, -2.2, 2) \u279e False",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.6>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.6>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.6>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.6>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_or_sum(5, 2, 7) \u279e True\nany_int_or_sum(3, 2, 2) \u279e False",
    "    if x == y+z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<text>\nProblem 3\nWrite a function that takes an array of numbers and returns the sum of the numbers in the array.\nIf the array is empty, return 0.\nIf the array has only one number, return that number.\nIf the array has two numbers, return the sum of the numbers.\nIf the array has more than two numbers, return 0.",
    "    if x == y || x == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>",
    "    if x == y || x == z || y == z \n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a number as an argument and returns the square of that number.",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if at least one of the numbers is equal to the sum of the other two, and all numbers are integers.\nReturns false in any other cases.\n    \n    Examples\n    any_int_or_3(5, 2, 7) \u279e True\n    \n    any_int_or_3(3, 2, 2) \u279e True\n    \n    any_int_or_3(3, -2, 1) \u279e True\n    \n    any_int_or_3(3.6, -2.2, 2) \u279e True\n    \n    any_int_or_3(3.6, -2.2, 2.1) \u279e False\n    \n    any_int_or_3(3.6, -2.2, 2.1) \u279e False\n    \n    any_int_or_3(3.6, -2.2, 2.1) \u279e False\n    \n    any_int_or_3(3.6, -2.2, 2.1) \u279e False\n    \n    any_int_or_3(3.6, -2.2, 2.1) \u279e False\n    \n    any_int_or_3(3.6, -2.2, 2.1) \u279e False\n    \n    any_int_or_3(3.6, -2.2, 2.1) \u279e False\n    \n    any_int_or_3(3.6, -2.2, 2.1) \u279e False\n    \n    any_int_or_3(3.6, -2.2, 2.1) \u279e False\n    \n    any_int_or_3(3.6, -2.2, 2.1) \u279e False\n    \n    any_int_or_3(3.6, -2.2, 2.1) \u279e False\n    \n    any_int_or_3(3.6, -2.2, 2.1) \u279e False\n    \n    any_int_or_3(3.6, -2.2, 2.1) \u279e False\n    \n    any_int_or_3(3.6, -2.2, 2.1) \u279e False\n    \n    any_int_or_3(3.6, -2.2, 2.1) \u279e False\n    \n    any_int_or_3(3.6, -2.2, 2.1) \u279e False\n    \n    any_int_or_3(3.6, -2.2, 2.1) \u279e False\n    \n    any_int_or_3(3.6, -2.2, 2.1) \u279e False\n    \n    any_int_or_3(3.6, -2.2, 2.1) \u279e False\n    \n    any_int_or_3(3.6, -2.2, 2.1) \u279e False\n    \n",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if at least one of them is negative.",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if all numbers are even, and false otherwise.\nReturn false in any other case.\nExamples\nall_even(7, 2, 3) \u279e true\nall_even(7, 2, 4) \u279e false\nall_even(7, -2, 3) \u279e false\nall_even(7, -2, 4) \u279e true\nall_even(7, 2.5, 3) \u279e false\nall_even(7, 2.5, 4) \u279e false\nall_even(7, -2.5, 3) \u279e false\nall_even(7, -2.5, 4) \u279e false\nall_even(7, 2.5, -4.5) \u279e false\nall_even(7, 2.5, -4.6) \u279e false\nall_even(7, -2.5, -4.5) \u279e false\nall_even(7, -2.5, -4.6) \u279e false\nall_even(7, 2.5, -4.5) \u279e false\nall_even(7, 2.5, -4.6) \u279e false\nall_even(7, -2.5, -4.5) \u279e false\nall_even(7, -2.5, -4.6) \u279e false\nall_even(7, 2.5, -4.5) \u279e false\nall_even(7, 2.5, -4.6) \u279e false\nall_even(7, -2.5, -4.5) \u279e false\nall_even(7, -2.5, -4.6) \u279e false\nall_even(7, 2.5, -4.5) \u279e false\nall_even(7, 2.5, -4.6) \u279e false\nall_even(7, -2.5, -4.5) \u279e false\nall_even(7, -2.5, -4.6) \u279e false\nall_even(7, 2.5, -4.5) \u279e false\nall_even(7, 2.5, -4.6) \u279e false\nall_even(7, -2.5, -4.5) \u279e false\nall_even(7, -2.5, -4.6) \u279e false\nall_even(7, 2.5, -4.5) \u279e false\nall_even(7, 2.5, -4.6) \u279e false\nall_even(7, -2.5, -4.5) \u279e false\nall_even(7, -2.5, -4.6) \u279e false\nall_even(7, 2.5, -4.5) \u279e false\nall_even(7, 2.5, -4.6) \u279e false\nall_even(7, -2.5, -4.5) \u279e false\nall_even(7, -2.5, -4.6) \u279e false",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false otherwise.\nWrite a ",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_1(5, 2, 7) \u279e True\nany_int_1(3, 2, 2) \u279e False",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_sum(5, 2, 7) \u279e True\nany_int_sum(3, 2, 2) \u279e False",
    "    if x == y+z\n    else false\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are even, and false if any number is odd.",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_sum(5, 2, 7) \u279e True\nany_int_sum(3, 2, 2) \u279e False",
    "    if x == y+z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7) \u279e true\nany_int(3, 2, 2) \u279e false\nany_int(3, -2, 1) \u279e true\nany_int(3.6, -2.2, 2) \u279e false\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are even, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are odd, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are positive, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are negative, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are floats, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers and all numbers are floats, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers and all numbers are floats, and all numbers are positive, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers and all numbers are floats, and all numbers are negative, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers and all numbers are floats, and all numbers are integers and all numbers are floats, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers and all numbers are floats, and all numbers are integers and all numbers are floats, and all numbers are positive, and all numbers are negative, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers and all numbers are floats, and all numbers are integers and all numbers are floats, and all numbers are integers and all numbers are floats, and all numbers are positive, and all numbers are negative, and all numbers are positive, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers and all numbers are floats, and all numbers are integers and all numbers are floats, and all numbers are integers and all numbers are floats, and all numbers are integers and all numbers are floats, and all numbers are integers and all numbers are floats, and all numbers are integers and all numbers are floats, and all numbers are integers and all numbers are floats, and all numbers are integers and all numbers are floats, and all numbers are integers and all numbers are floats, and all numbers are integers and all numbers are floats, and all numbers are integers and all number",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if at least one of them is equal to the sum of the other two.\nReturn false in any other cases.\nExamples\nany_int_sum(5, 2, 7) \u279e true\nany_int_sum(3, 2, 2) \u279e false",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\n\u2705 Exercise: Write a function that takes in 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are even, and false otherwise.\nReturn false in any other case.\nExamples\neven_number(5, 2, 7) \u279e true\neven_number(3, 2, 2) \u279e false",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<text>\nExercise 10\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_sum(5, 2, 7) \u279e true\nany_int_sum(3, 2, 2) \u279e false",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\n\u2705 Exercise: Write a function that takes 3 numbers and returns true if all numbers are even, and false otherwise.",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the sum of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the product of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the product of the other two, and false otherwise.\nWrite a function that ",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_sum(5, 2, 7) \u279e True\nany_int_sum(3, 2, 2) \u279e False",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if at least one of them is negative.\nReturn false in any other case.\nExamples\nnegative_any(5, 2, 7) \u279e true\nnegative_any(3, 2, 2) \u279e false",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if at least one of them is equal to the sum of the other two.",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nProblem 7: any_int()\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturns false in any other cases.\n    \nExamples\nany_int(5, 2, 7) \u279e True\n    \nany_int(3, 2, 2) \u279e False",
    "    if x == y || x == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_sum(5, 2, 7) \u279e True\nany_int_sum(3, 2, 2) \u279e False",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if all numbers are integers. Return false if any number is not an integer.",
    "    if x == y+z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if at least one of them is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.",
    "    if x == y+z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if all numbers are evenly divisible by 3.\nReturn false in any other case.\nExamples\nall_evenly_divisible(5, 2, 7) \u279e true\nall_evenly_divisible(3, 2, 2) \u279e false",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true if all of the numbers are equal to the sum of the other two, and all numbers are integers.\n    Returns false in any other cases.\n    \n    Examples\n    all_int(5, 2, 7) \u279e True\n    \n    any_int(3, 2, 2) \u279e False",
    "    if x == y || x == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nProblem 7: any_int()\nWrite a function that takes a string and returns a boolean.\nThe string should contain only letters a-z and A-Z.\nThe string should contain no spaces.\nThe string should contain no punctuation.\nThe string should contain no numbers.\nThe string should contain no symbols.\nThe string should contain no uppercase letters.\nThe string should contain no lowercase letters.\nThe string should contain no digits.\nThe string should contain no special characters.\nThe string should contain no uppercase or lowercase letters.\nThe string should contain no digits.\nThe string should contain no symbols.\nThe string should contain no uppercase or lowercase letters.\nThe string should contain no digits.\nThe string should contain no symbols.\nThe string should contain no uppercase or lowercase letters.\nThe string should contain no digits.\nThe string should contain no symbols.\nThe string should contain no uppercase or lowercase letters.\nThe string should contain no digits.\nThe string should contain no symbols.\nThe string should contain no uppercase or lowercase letters.\nThe string should contain no digits.\nThe string should contain no symbols.\nThe string should contain no uppercase or lowercase letters.\nThe string should contain no digits.\nThe string should contain no symbols.\nThe string should contain no uppercase or lowercase letters.\nThe string should contain no digits.\nThe string should contain no symbols.\nThe string should contain no uppercase or lowercase letters.\nThe string should contain no digits.\nThe string should contain no symbols.\nThe string should contain no uppercase or lowercase letters.\nThe string should contain no digits.\nThe string should contain no symbols.\nThe string should contain no uppercase or lowercase letters.\nThe string should contain no digits.\nThe string should contain no symbols.\nThe string should contain no uppercase or lowercase letters.\nThe string should contain no digits.\nThe string should contain no symbols.\nThe string should contain no uppercase or lowercase letters.\nThe string should contain no digits.\nThe string should contain no symbols.\nThe string should contain no uppercase or lowercase letters.\nThe string should contain no digits.\nThe string should contain no symbols.\nThe string should contain no uppercase or lowercase letters.\nThe string should contain no digits.\nThe string should contain no symbols.\n",
    "    if x == y || x == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns the sum of the numbers.\nWrite a function that takes 3 numbers and returns the product of the numbers.\nWrite a function that takes 3 numbers and returns the maximum of the numbers.\nWrite a function that takes 3 numbers and returns the minimum of the numbers.\nWrite a function that takes 3 numbers and returns the absolute value of the numbers.\nWrite a function that takes 3 numbers and returns the square of the numbers.\nWrite a function that takes 3 numbers and returns the reciprocal of the numbers.\nWrite a function that takes 3 numbers and returns the absolute value of the reciprocal of the numbers.\nWrite a function that takes 3 numbers and returns the reciprocal of the square of the numbers.\nWrite a function that takes 3 numbers and returns the square of the reciprocal of the numbers.\nWrite a function that takes 3 numbers and returns the square of the reciprocal of the square of the numbers.\nWrite a function that takes 3 numbers and returns the reciprocal of the reciprocal of the numbers.\nWrite a function that takes 3 numbers and returns the reciprocal of the reciprocal of the square of the numbers.\nWrite a function that takes 3 numbers and returns the reciprocal of the reciprocal of the reciprocal of the numbers.\nWrite a function that takes 3 numbers and returns the reciprocal of the reciprocal of the reciprocal of the square of the numbers.\nWrite a function that takes 3 numbers and returns the reciprocal of the reciprocal of the reciprocal of the reciprocal of the numbers.\nWrite a function that takes 3 numbers and returns the reciprocal of the reciprocal of the reciprocal of the reciprocal of the square of the numbers.\nWrite a function that takes 3 numbers and returns the reciprocal of the reciprocal of the reciprocal of the reciprocal of the reciprocal of the numbers.\nWrite a function that takes 3 numbers and returns the reciprocal of the reciprocal of the reciprocal of the reciprocal of the reciprocal of the square of the numbers.\nWrite a function that takes 3 numbers and returns the reciprocal of the reciprocal of the reciprocal of the reciprocal of the reciprocal of the reciprocal of the numbers.\nWrite a function that takes 3 numbers and returns the reciprocal of the reciprocal of the reciprocal of the reciprocal of the reciprocal of the reciprocal of the ",
    "    if x == y+z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturns false in any other cases.\n    \n    Examples\n    any_int_or_sum(5, 2, 7) \u279e True\n    \n    any_int_or_sum(3, 2, 2) \u279e True",
    "    if x == y+z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>",
    "    if x == y || x == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.6>",
    "    if x == y || x == z || y == z \n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true if all numbers are integers.\n    Returns false in any other cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279e True\n    \n    any_int(3, 2, 2) \u279e False",
    "    if x == y+z\n    else false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two.\nReturn false in any other case.\nExamples\nany_int_sum(5, 2, 7) \u279e True\nany_int_sum(3, 2, 2) \u279e False",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_sum(5, 2, 7) \u279e True\nany_int_sum(3, 2, 2) \u279e False",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum of the other two, and all numbers are integers.\n    Returns false in any other cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279e True\n    \n    any_int(3, 2, 2) \u279e False",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are positive, and all numbers are integers.\nReturn false in any other case.\nExamples\npositive_int(5, 2, 7) \u279e True\npositive_int(3, 2, 2) \u279e False",
    "    if x == y || x == z || y == z \n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are positive, and false otherwise.\nExamples\nall_positive(5, 2, 7) \u279e true\nall_positive(3, 2, 2) \u279e false\nall_positive(3, -2, 1) \u279e true\nall_positive(3.6, -2.2, 2) \u279e false",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<text>\nProblem 4\nWrite a function that takes two numbers and returns the product of the two numbers.\nThe function should return 0 if the two numbers are equal.\nThe function should return Inf if the two numbers are both negative.\nThe function should return -Inf if the two numbers are both positive.\nThe function should return NaN if the two numbers are both non-integers.\nThe function should return Inf if the two numbers are both non-integers.\nThe function should return -Inf if the two numbers are both non-integers.\nThe function should return NaN if the two numbers are both non-integers.\nThe function should return Inf if the two numbers are both non-integers.\nThe function should return -Inf if the two numbers are both non-integers.\nThe function should return NaN if the two numbers are both non-integers.\nThe function should return Inf if the two numbers are both non-integers.\nThe function should return -Inf if the two numbers are both non-integers.\nThe function should return NaN if the two numbers are both non-integers.\nThe function should return Inf if the two numbers are both non-integers.\nThe function should return -Inf if the two numbers are both non-integers.\nThe function should return NaN if the two numbers are both non-integers.\nThe function should return Inf if the two numbers are both non-integers.\nThe function should return -Inf if the two numbers are both non-integers.\nThe function should return NaN if the two numbers are both non-integers.\nThe function should return Inf if the two numbers are both non-integers.\nThe function should return -Inf if the two numbers are both non-integers.\nThe function should return NaN if the two numbers are both non-integers.\nThe function should return Inf if the two numbers are both non-integers.\nThe function should return -Inf if the two numbers are both non-integers.\nThe function should return NaN if the two numbers are both non-integers.\nThe function should return Inf if the two numbers are both non-integers.\nThe function should return -Inf if the two numbers are both non-integers.\nThe function should return NaN if the two numbers are both non-integers.\nThe function should return Inf if the two numbers are both non-integers.\nThe function should return -Inf if the two numbers are both non-integers.\nThe function should return NaN if the two numbers are both non-integers.\nThe function should return Inf if the two number",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes in a list of numbers and returns the number of positive numbers in the list.",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are even, and false otherwise.",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if the sum of the other two numbers is equal to the product of the other two, and all numbers are integers.\nReturns false in any other cases.\n    \n    Examples\n    any_int_prod(5, 2, 7) \u279e True\n    \n    any_int_prod(3, 2, 2) \u279e False",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_or_false(5, 2, 7) \u279e True\nany_int_or_false(3, -2, 1) \u279e True\nany_int_or_false(3.6, -2.2, 2) \u279e False",
    "    if x == y || x == z\n        true\n    else\n        false\n    end\nend",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise: Write a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector as input, and returns the number of elements that are not equal to zero.\nFor example, if the input vector is [5, -2, 0, 3], the function should return 3.",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\n\u26a0\ufe0f Note: This code uses Julia's built-in function type. Julia's built-in function type returns a string that describes the type of the argument. For example, typeof(5) == Int64 or typeof(3.14) == Float64. Julia's built-in function type also works for other types like strings and arrays. For example, typeof(\"hello\") == String or typeof(Int64[4]) == Array{Int64,1}.",
    "    if x == y || x == z || y == z \n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 7\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_sum(5, 2, 7) \u279e true\nany_int_sum(3, 2, 2) \u279e false",
    "    if x == y || x == z || y == z \n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if all numbers are positive.\nReturn false if any number is negative.\nReturn false if any number is zero.\nReturn false if any number is NaN.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false if any number is infinite.\nReturn false ",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\n\u270d\ufe0f Write a function that takes 3 numbers and returns true if all numbers are even, and false if any number is odd.",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns the sum of the numbers.\nReturn false if the numbers are all integers or if one of the numbers is negative.\nReturn true in all other cases.",
    "    if x == y+z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if the sum of the numbers is equal to the product of the other two, and all numbers are integers.\nReturns false in any other case.\nExamples\nany_int_prod(5, 2, 7) \u279e True\nany_int_prod(3, 2, 2) \u279e False",
    "    if x == y+z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_any(5, 2, 7) \u279e true",
    "    if x == y+z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector of numbers and returns the sum of the numbers in the vector. \nWrite a function that takes a vector of numbers and returns the product of the numbers in the vector. \nWrite a function that takes a vector of numbers and returns the mean of the numbers in the vector. \nWrite a function that takes a vector of numbers and returns the median of the numbers in the vector. \nWrite a function that takes a vector of numbers and returns the mode of the numbers in the vector. ",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if all numbers are evenly divisible by 3.\nReturns false in any other case.\n    \nExamples\n    divisible(5, 2, 7) \u279e true\n    \n    divisible(3, 2, 2) \u279e false",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_sum(5, 2, 7) \u279e True\nany_int_sum(3, 2, 2) \u279e False",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if at least one of the numbers is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other case.\nExamples\nany_int_or_false(5, 2, 7) \u279e true\nany_int_or_false(3, 2, 2) \u279e false\nany_int_or_false(3, -2, 1) \u279e true\nany_int_or_false(3.6, -2.2, 2) \u279e false",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two.",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_sum(5, 2, 7) \u279e true\nany_int_sum(3, 2, 2) \u279e false\nany_int_sum(3, -2, 1) \u279e true\nany_int_sum(3.6, -2.2, 2) \u279e false",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if all numbers are positive.\nReturn false if any number is negative.\nReturn false if all numbers are zero.\nReturn false if all numbers are non-integers.\nReturn false if all numbers are non-positive.\nReturn false if all numbers are non-negative.\nReturn false if all numbers are non-zero.\nReturn false if all numbers are non-non-integers.\nReturn false if all numbers are non-non-positive.\nReturn false if all numbers are non-non-negative.\nReturn false if all numbers are non-non-zero.\nReturn false if all numbers are non-non-non-integers.\nReturn false if all numbers are non-non-non-positive.\nReturn false if all numbers are non-non-non-negative.\nReturn false if all numbers are non-non-non-zero.\nReturn false if all numbers are non-non-non-non-integers.\nReturn false if all numbers are non-non-non-non-positive.\nReturn false if all numbers are non-non-non-non-negative.\nReturn false if all numbers are non-non-non-non-zero.\nReturn false if all numbers are non-non-non-non-non-integers.\nReturn false if all numbers are non-non-non-non-non-positive.\nReturn false if all numbers are non-non-non-non-non-negative.\nReturn false if all numbers are non-non-non-non-non-zero.\nReturn false if all numbers are non-non-non-non-non-non-integers.\nReturn false if all numbers are non-non-non-non-non-non-positive.\nReturn false if all numbers are non-non-non-non-non-non-negative.\nReturn false if all numbers are non-non-non-non-non-non-zero.\nReturn false if all numbers are non-non-non-non-non-non-non-integers.\nReturn false if all numbers are non-non-non-non-non-non-non-positive.\nReturn false if all numbers are non-non-non-non-non-non-non-negative.\nReturn false if all numbers are non-non-non-non-non-non-non-zero.\nReturn false if all numbers are non-non-non-non-non-non-non-non-integers.\nReturn false if all numbers are non-non-non-non-",
    "    if x == y || x == z || y == z \n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise: Write a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_sum(5, 2, 7) \u279e True\nany_int_sum(3, 2, 2) \u279e False",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if all numbers are even, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are odd, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are positive, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are negative, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are floats, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are non-negative integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are non-negative floats, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are non-negative floats, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are non-negative floats, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are non-negative floats, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are non-negative floats, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are non-negative floats, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are non-negative floats, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are non-negative floats, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are non-negative floats, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are non-negative floats, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are non-negative floats, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are non-negative floats, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are non-negative floats, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are non-negative floats, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are non-negative floats, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are non-negative floats, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are non-negative floats, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are non-negative floats, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are non-negative floats, and false ",
    "    if x == y || x == z || y == z \n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nProblem 4\nWrite a function that takes 3 numbers and returns true if at least one of them is greater than the other.\nReturn false in any other case.\nExamples\nany_greater(5, 2, 7) \u279e true\nany_greater(3, 2, 2) \u279e false\nany_greater(3, -2, 1) \u279e true\nany_greater(3.6, -2.2, 2) \u279e false",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise: Write a function that takes 3 numbers and returns true if all numbers are even, and false otherwise.",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if they are all positive.",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend",
    "    if x == y || x == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the sum of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the sum of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the sum of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the sum of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the sum of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the sum of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the sum of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the sum of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the sum of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the sum of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is equal to the sum of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all number",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes in 3 numbers and returns the sum of the numbers. \nThe function should return false if any of the numbers is negative.\nThe function should return false if the sum of the numbers is zero.\nThe function should return true if the sum of the numbers is equal to the sum of the other two.\nThe function should return true in any other case.\nExamples\nany_int(5, 2, 7) \u279e 9\nany_int(3, 2, 2) \u279e false\nany_int(3, -2, 1) \u279e true\nany_int(3.6, -2.2, 2) \u279e false",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true if all numbers are integers.\n    Returns false in any other cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279e True\n    \n    any_int(3, 2, 2) \u279e False",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes in 3 numbers and returns true if the sum of the numbers is equal to the product of the other two, and all numbers are integers.\nReturns false in any other cases.\nExamples\nany_int_prod(5, 2, 7) \u279e True\nany_int_prod(3, 2, 2) \u279e False",
    "    if x == y+z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend",
    "    if x == y || x == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_sum(5, 2, 7) \u279e True\nany_int_sum(3, 2, 2) \u279e False",
    "    if x == y || x == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes in 3 numbers and returns the product of the numbers. \nThe function should return false if any of them is zero. \nThe function should return false if any of them is negative. \nThe function should return false if any of them is positive. \nThe function should return false if any of them is NaN. \nThe function should return false if any of them is Inf. \nThe function should return false if any of them is less than 0. \nThe function should return false if any of them is greater than 0. \nThe function should return false if any of them is equal to 0. \nThe function should return true if all numbers are positive. \nThe function should return true if all numbers are negative. \nThe function should return true if all numbers are zero. \nThe function should return true if all numbers are NaN. \nThe function should return true if all numbers are Inf. \nThe function should return true if any of them is less than 0. \nThe function should return true if any of them is greater than 0. \nThe function should return true if any of them is equal to 0. \nThe function should return true if all numbers are NaN. \nThe function should return true if all numbers are Inf. \nThe function should return true if any of them is less than 0. \nThe function should return true if any of them is greater than 0. \nThe function should return true if any of them is equal to 0. \nThe function should return true if all numbers are NaN. \nThe function should return true if all numbers are Inf. \nThe function should return true if any of them is less than 0. \nThe function should return true if any of them is greater than 0. \nThe function should return true if any of them is equal to 0. \nThe function should return true if all numbers are NaN. \nThe function should return true if all numbers are Inf. \nThe function should return true if any of them is less than 0. \nThe function should return true if any of them is greater than 0. \nThe function should return true if any of them is equal to 0. \nThe function should return true if all numbers are NaN. \nThe function should return true if all numbers are Inf. \nThe function should return true if any of them is less than 0. \nThe function should return true if any of them is greater than 0. \nThe function should return true if any of them is equal to 0. \nThe function should return true if all numbers are NaN. \nThe function should return true if all numbers are Inf. \nThe function should return true if any of them is less than 0. \nThe function should return true if any of them ",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are even, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are odd, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is even, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is odd, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are positive, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is positive, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are negative, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is negative, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are non-negative, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is non-negative, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are non-positive, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is non-positive, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are non-negative, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is non-negative, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are non-positive, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is non-positive, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are non-negative, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is non-negative, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are non-positive, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is non-positive, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are non-negative, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any number is non-negative, and false otherwise.\nWrite a function that takes 3 ",
    "    if x == y || x == z || y == z \n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if all numbers are positive, and all numbers are integers.\nReturns false in any other cases.\n    \nExamples\nall_positive(5, 2, 7) \u279e true",
    "    if x == y || x == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if the sum of the other two is equal to the first number, and false otherwise.",
    "    if x == y || x == z || y == z \n        true \n    else \n        false \n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_1(5, 2, 7) \u279e true\nany_int_1(3, 2, 2) \u279e false",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 10\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and false otherwise.",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<text>\nProblem 3\nWrite a function that takes 3 numbers and returns true if they are all integers. Return false if any of them are not integers.",
    "    if x == y || x == z || y == z \n        true\n    else\n        false\n    end\nend",
    "    if x == y || x == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a number as input, and returns its square root.\nThe function should raise an error if the input is not a number.\nThe function should raise an error if the input is negative.\nThe function should raise an error if the input is zero.\nThe function should raise an error if the input is greater than or equal to zero.\nThe function should raise an error if the input is less than or equal to zero.\nThe function should raise an error if the input is greater than or equal to 1.\nThe function should raise an error if the input is less than or equal to 0.\nThe function should raise an error if the input is greater than or equal to 0.\nThe function should raise an error if the input is less than or equal to 0.\nThe function should raise an error if the input is greater than or equal to 0.\nThe function should raise an error if the input is less than or equal to 0.\nThe function should raise an error if the input is greater than or equal to 0.\nThe function should raise an error if the input is less than or equal to 0.\nThe function should raise an error if the input is greater than or equal to 0.\nThe function should raise an error if the input is less than or equal to 0.\nThe function should raise an error if the input is greater than or equal to 0.\nThe function should raise an error if the input is less than or equal to 0.\nThe function should raise an error if the input is greater than or equal to 0.\nThe function should raise an error if the input is less than or equal to 0.\nThe function should raise an error if the input is greater than or equal to 0.\nThe function should raise an error if the input is less than or equal to 0.\nThe function should raise an error if the input is greater than or equal to 0.\nThe function should raise an error if the input is less than or equal to 0.\nThe function should raise an error if the input is greater than or equal to 0.\nThe function should raise an error if the input is less than or equal to 0.\nThe function should raise an error if the input is greater than or equal to 0.\nThe function should raise an error if the input is less than or equal to 0.\nThe function should raise an error if the input is greater than or equal to 0.\nThe function should raise an error if the input is less than or equal to 0.\nThe function should raise an error if the input is greater than or equal to 0.\nThe function should raise an error if the input is less than or equal to 0.\nThe function should raise an error if the input is greater than or equal to 0.\nThe function should raise an error if the input is less than or equal to 0.\nThe function should raise an error if the input is greater than or equal to 0.\nThe function should raise an error if the input is less than or equal to 0.\nThe function should raise an error if the input is greater than or equal to 0.\nThe function should raise an error if the input is less than or equal to 0.\nThe function should raise an error if the input is greater than or equal to 0.\nThe function should raise an error if the input is less than or equal to 0.\nThe function should raise an error if the input is greater than or ",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes in 3 numbers and returns true if any of them is equal to the sum of the other two.",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_sum(5, 2, 7) \u279e True\nany_int_sum(3, 2, 2) \u279e False",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nProblem 3\nWrite a function that takes 3 numbers and returns true if they are all integers, false if not.\nExamples\nall_ints(5, 2, 7) \u279e true\nall_ints(3, 2, 2) \u279e false",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_or_sum(5, 2, 7) \u279e True\nany_int_or_sum(3, 2, 2) \u279e True\nany_int_or_sum(3, -2, 1) \u279e True\nany_int_or_sum(3.6, -2.2, 2) \u279e True\nany_int_or_sum(3.6, -2.2, 3) \u279e False\nany_int_or_sum(3.6, -2.2, 3.6) \u279e False\nany_int_or_sum(3.6, -2.2, -3.6) \u279e False\nany_int_or_sum(3.6, -2.2, -3.6) \u279e False\nany_int_or_sum(3.6, -2.2, -3.6) \u279e False\nany_int_or_sum(3.6, -2.2, -3.6) \u279e False\nany_int_or_sum(3.6, -2.2, -3.6) \u279e False\nany_int_or_sum(3.6, -2.2, -3.6) \u279e False\nany_int_or_sum(3.6, -2.2, -3.6) \u279e False\nany_int_or_sum(3.6, -2.2, -3.6) \u279e False\nany_int_or_sum(3.6, -2.2, -3.6) \u279e False\nany_int_or_sum(3.6, -2.2, -3.6) \u279e False\nany_int_or_sum(3.6, -2.2, -3.6) \u279e False\nany_int_or_sum(3.6, -2.2, -3.6) \u279e False\nany_int_or_sum(3.6, -2.2, -3.6) \u279e False\nany_int_or_sum(3.6, -2.2, -3.6) \u279e False\nany_int_or_sum(3.6, -2.2, -3.6) \u279e False\nany_int_or_sum(3.6, -2.2, -3.6) \u279e False\nany_int_or_sum(3.6, -2.2, -3.6) \u279e False\nany_int_or_sum(3.6, -2.2, -3.6) \u279e False\nany_int_or_sum(3.6, -2.2, -3.6) ",
    "    if x == y || x == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and false otherwise.\nThe function should return false in any other case.\nThe function should return false if the numbers are all integers.\nThe function should return true if the numbers are all floats.\nThe function should return true if the numbers are all floats and all integers are equal.\nThe function should return true if the numbers are all floats and all integers are different.\nThe function should return true if the numbers are all floats and all integers are the same or different.\nThe function should return true if the numbers are all floats and all integers are the same or different but in different order.\nThe function should return true if the numbers are all floats and all integers are the same or different but in different order.\nThe function should return true if the numbers are all floats and all integers are the same or different but in different order.\nThe function should return true if the numbers are all floats and all integers are the same or different but in different order.\nThe function should return true if the numbers are all floats and all integers are the same or different but in different order.\nThe function should return true if the numbers are all floats and all integers are the same or different but in different order.\nThe function should return true if the numbers are all floats and all integers are the same or different but in different order.\nThe function should return true if the numbers are all floats and all integers are the same or different but in different order.\nThe function should return true if the numbers are all floats and all integers are the same or different but in different order.\nThe function should return true if the numbers are all floats and all integers are the same or different but in different order.\nThe function should return true if the numbers are all floats and all integers are the same or different but in different order.\nThe function should return true if the numbers are all floats and all integers are the same or different but in different order.\nThe function should return true if the numbers are all floats and all integers are the same or different but in different order.\nThe function should return true if the numbers are all floats and all integers are the same or different but in different order.\nThe function should return true if the numbers are all floats and all integers are the same or different but in different order.\nThe function should return true if the numbers are all floats and all integers are the same or different but in different order.\nThe function should return true if the numbers are all floats and all integers are the same or different but in different order.\nThe function should return true if the number",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns the sum of the numbers. \nWrite a function that takes 3 numbers and returns the product of the numbers. \nWrite a function that takes 3 numbers and returns the maximum of the numbers. \nWrite a function that takes 3 numbers and returns the minimum of the numbers. \nWrite a function that takes 3 numbers and returns the product of the numbers, times the sum of the numbers, and divides the product by the sum of the numbers. \nWrite a function that takes 3 numbers and returns the product of the numbers, times the sum of the numbers, and divides the product by the sum of the numbers, times the product of the numbers. \nWrite a function that takes 3 numbers and returns the product of the numbers, times the sum of the numbers, and divides the product by the sum of the numbers, times the product of the numbers, times the product of the numbers. \nWrite a function that takes 3 numbers and returns the product of the numbers, times the sum of the numbers, and divides the product by the sum of the numbers, times the product of the numbers, times the product of the numbers, times the product of the numbers. \nWrite a function that takes 3 numbers and returns the product of the numbers, times the sum of the numbers, and divides the product by the sum of the numbers, times the product of the numbers, times the product of the numbers, times the product of the numbers, times the product of the numbers. \nWrite a function that takes 3 numbers and returns the product of the numbers, times the sum of the numbers, and divides the product by the sum of the numbers, times the product of the numbers, times the product of the numbers, times the product of the numbers, times the product of the numbers, times the product of the numbers. \nWrite a function that takes 3 numbers and returns the product of the numbers, times the sum of the numbers, and divides the product by the sum of the numbers, times the product of the numbers, times the product of the numbers, times the product of the numbers, times the product of the numbers, times the product of the numbers, times the product of the numbers. \nWrite a function that takes 3 numbers and returns the product of the numbers, times the sum of the numbers, and divides the product by the sum of the numbers, times the product of the numbers, times the product of the numbers, times the product of the numbers, times the product of the ",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true if all numbers are integers.\n    Returns false in any other cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279e True\n    \n    any_int(3, 2, 2) \u279e False",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes in 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_or_false(5, 2, 7) \u279e true\nany_int_or_false(3, 2, 2) \u279e false",
    "    if x == y || x == z || y == z \n        true\n    else\n        false\n    end\nend",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are even, and false if any number is odd.\nReturn false if any number is NaN.\nReturn false if all numbers are negative.\nReturn false if all numbers are zero.\nReturn false if all numbers are positive.\nReturn false if any number is infinite.\nReturn false if any number is NaN.\nReturn false if all numbers are integers.\nReturn false if all numbers are floats.\nReturn false if all numbers are complex.\nReturn false if all numbers are infinity.\nReturn false if all numbers are NaN.\nReturn false if all numbers are non-integers.\nReturn false if all numbers are non-floats.\nReturn false if all numbers are non-complex.\nReturn false if all numbers are non-infinity.\nReturn false if all numbers are non-NaN.\nReturn false if all numbers are non-integers.\nReturn false if all numbers are non-floats.\nReturn false if all numbers are non-complex.\nReturn false if all numbers are non-infinity.\nReturn false if all numbers are non-NaN.\nReturn false if all numbers are non-integers.\nReturn false if all numbers are non-floats.\nReturn false if all numbers are non-complex.\nReturn false if all numbers are non-infinity.\nReturn false if all numbers are non-NaN.\nReturn false if all numbers are non-integers.\nReturn false if all numbers are non-floats.\nReturn false if all numbers are non-complex.\nReturn false if all numbers are non-infinity.\nReturn false if all numbers are non-NaN.\nReturn false if all numbers are non-integers.\nReturn false if all numbers are non-floats.\nReturn false if all numbers are non-complex.\nReturn false if all numbers are non-infinity.\nReturn false if all numbers are non-NaN.\nReturn false if all numbers are non-integers.\nReturn false if all numbers are non-floats.\nReturn false if all numbers are non-complex.\nReturn false if all numbers are non-infinity.\nReturn false ",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if at least one of them is equal to the sum of the other two.",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if at least one of the numbers is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_sum(5, 2, 7) \u279e true\nany_int_sum(3, 2, 2) \u279e false",
    "    if x == y || x == z || y == z \n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes 3 numbers and returns true if they are all integers, and false if not.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and false if not.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false if not.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false if not.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false if not.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false if not.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false if not.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false if not.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false if not.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false if not.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false if not.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false if not.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false if not.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false if not.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false if not.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false if not.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false if not.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false if not.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false if not.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false if not.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the product of the other two, and false if not.\nWrite a function that ",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\n\u2705 Exercise: Write a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.",
    "    if x == y || x == z || y == z \n        true\n    else\n        false\n    end\nend",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are positive, and all numbers are integers.\nReturn false in any other cases.\nExamples\npositive_int_all(5, 2, 7) \u279e true\npositive_int_all(3, 2, 2) \u279e false",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if at least one of them is greater than the other. Return false otherwise.",
    "    if x == y || x == z || y == z \n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns the sum of the numbers. \nWrite a function that takes 3 numbers and returns the product of the numbers. \nWrite a function that takes 3 numbers and returns the minimum of the numbers. \nWrite a function that takes 3 numbers and returns the maximum of the numbers. \nWrite a function that takes 3 numbers and returns the absolute value of the numbers. \nWrite a function that takes 3 numbers and returns the reciprocal of the numbers. \nWrite a function that takes 3 numbers and returns the square of the numbers. \nWrite a function that takes 3 numbers and returns the cube of the numbers. \nWrite a function that takes 3 numbers and returns the exponential of the numbers. \nWrite a function that takes 3 numbers and returns the logarithm of the numbers. \nWrite a function that takes 3 numbers and returns the sine of the numbers. \nWrite a function that takes 3 numbers and returns the cosine of the numbers. \nWrite a function that takes 3 numbers and returns the tangent of the numbers. \nWrite a function that takes 3 numbers and returns the arctangent of the numbers. \nWrite a function that takes 3 numbers and returns the hyperbolic sine of the numbers. \nWrite a function that takes 3 numbers and returns the hyperbolic cosine of the numbers. \nWrite a function that takes 3 numbers and returns the hyperbolic tangent of the numbers. \nWrite a function that takes 3 numbers and returns the arcsine of the numbers. \nWrite a function that takes 3 numbers and returns the arccosine of the numbers. \nWrite a function that takes 3 numbers and returns the arctangent of the numbers. \nWrite a function that takes 3 numbers and returns the hyperbolic arcsine of the numbers. \nWrite a function that takes 3 numbers and returns the hyperbolic arccosine of the numbers. \nWrite a function that takes 3 numbers and returns the hyperbolic arctangent of the numbers. \nWrite a function that takes 3 numbers and returns the square root of the numbers. \nWrite a function that takes 3 numbers and returns the square root of the numbers. \nWrite a function that takes 3 numbers and returns the square root of the numbers. \nWrite a function that takes 3 numbers and returns the square root of the numbers. \nWrite a function that takes 3 numbers and returns the square root of the numbers. \nWrite a function that ",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if at least one of the numbers is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_or_false(5, 2, 7) \u279e true\nany_int_or_false(3, -2, 1) \u279e true\nany_int_or_false(3.6, -2.2, 2) \u279e false\nany_int_or_false(3.6, -2.2, 2.2) \u279e false\nany_int_or_false(3.6, -2.2, 2.3) \u279e false\nany_int_or_false(3.6, -2.2, 2.4) \u279e false\nany_int_or_false(3.6, -2.2, 2.5) \u279e false\nany_int_or_false(3.6, -2.2, 2.6) \u279e false\nany_int_or_false(3.6, -2.2, 2.7) \u279e false\nany_int_or_false(3.6, -2.2, 2.8) \u279e false\nany_int_or_false(3.6, -2.2, 2.9) \u279e false\nany_int_or_false(3.6, -2.2, 2.10) \u279e false\nany_int_or_false(3.6, -2.2, 2.11) \u279e false\nany_int_or_false(3.6, -2.2, 2.12) \u279e false\nany_int_or_false(3.6, -2.2, 2.13) \u279e false\nany_int_or_false(3.6, -2.2, 2.14) \u279e false\nany_int_or_false(3.6, -2.2, 2.15) \u279e false\nany_int_or_false(3.6, -2.2, 2.16) \u279e false\nany_int_or_false(3.6, -2.2, 2.17) \u279e false\nany_int_or_false(3.6, -2.2, 2.18) \u279e false\nany_int_or_false(3.6, -2.2, 2.19) \u279e false\nany_int_or_false(3.6, -2.2, 2.20) \u279e false\nany_int_or_false(3.6, ",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_sum(5, 2, 7) \u279e true\nany_int_sum(3, 2, 2) \u279e false",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if all numbers are even, and false otherwise.",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and false otherwise.\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and at least one is equal to the sum of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and at least one is equal to the sum of the other two, and at least one is not equal to the sum of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and at least one is equal to the sum of the other two, and at least one is not equal to the sum of the other two, and at least one is not equal to the sum of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and at least one is equal to the sum of the other two, and at least one is not equal to the sum of the other two, and at least one is not equal to the sum of the other two, and at least one is not equal to the sum of the other two, and at least one is not equal to the sum of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and at least one is equal to the sum of the other two, and at least one is not equal to the sum of the other two, and at least one is not equal to the sum of the other two, and at least one is not equal to the sum of the other two, and at least one is not equal to the sum of the other two, and at least one is not equal to the sum of the other two, and at least one is not equal to the sum of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and at least one is equal to the sum of the other two, and at least one is not equal to the sum of the other two, and at least one is not equal to the sum of the other two, and at least one is not equal to the sum of the other two, and at least one is not equal to the sum of the other two, and at least one is not equal to the sum of the other two, and at least one is not equal to the sum of the other two, and at least one is not equal to the sum of the other two, and false otherwise.\nWrite a function that takes 3 numbers and returns true if all numbers are integers, and at least one is equal to the sum of the other two, and at least one is not equal to the sum of the other two, and at least one is not equal to the sum of the other two, and at least one is not equal to the sum of the other two, and at least one is not equal to the sum of the other two, and at least one is not equal to the sum of the other two, and at least one is not equal to the sum",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend",
    "    if x == y || x == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend",
    "    if x == y || x == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if at least one of the numbers is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_sum(5, 2, 7) \u279e true\nany_int_sum(3, 2, 2) \u279e false",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturns false in any other cases.\n    \n    Examples\n    any_int_or_sum(5, 2, 7) \u279e True\n    \n    any_int_or_sum(3, 2, 2) \u279e False",
    "    if x == y || x == z || y == z \n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise\nWrite a function that takes 3 numbers and returns true if at least one of them is equal to the sum of the other two.",
    "    if x == y || x == z || y == z \n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are positive, and all numbers are integers.\nReturns false in any other case.\nExamples\nall_positive(5, 2, 7) \u279e true\nall_positive(3, 2, 2) \u279e false",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_sum(5, 2, 7) \u279e true\nany_int_sum(3, 2, 2) \u279e false",
    "    if x == y+z\n        true\n    else\n        false\n    end\nend",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend",
    "    if x == y || x == z || y == z\n        return true\n    else\n        return false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are positive, and all numbers are integers.\nReturn false in any other cases.\nExamples\npositive_int(5, 2, 7) \u279e true",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if any of them is equal to the sum of the other two, and all numbers are integers.\nReturn false in any other cases.\nExamples\nany_int_sum(5, 2, 7) \u279e True\nany_int_sum(3, 2, 2) \u279e False",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if they are all integers. Return false if any of them are not integers.",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes 3 numbers and returns true if all numbers are positive, and all numbers are integers.\nReturns false in any other case.\nExamples\npositive_int(5, 2, 7) \u279e True\npositive_int(3, 2, 2) \u279e False",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if all numbers are even, and false if any number is odd.",
    "    if x == y || x == z\n        true\n    else\n        false\n    end\nend",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise\nWrite a function that takes 3 numbers and returns true if at least one of the numbers is equal to the sum of the other two, and all numbers are integers.",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend",
    "    if x == y || x == z || y == z\n        true\n    else\n        false\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes 3 numbers and returns true if all numbers are even, and false otherwise.\nReturn false in any other cases.\nExamples\nall_even(6, 4, 2) \u279e true",
    "    if x == y || x == z || y == z \n        true\n    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.5>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n</cell>\n<text>\nExercise 2\nWrite a function that takes 3 numbers and returns true if at least one of them is greater than the others."
  ],
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ]
}
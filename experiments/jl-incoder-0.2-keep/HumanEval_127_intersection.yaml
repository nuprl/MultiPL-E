name: HumanEval_127_intersection
language: julia
prompt: "\"\"\"You are given two intervals,\n    where each interval is a pair of\
  \ integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
  \ are closed which means that the interval (start, end)\n    includes both start\
  \ and end.\n    For each given interval, it is assumed that its start is less or\
  \ equal its end.\n    Your task is to determine whether the length of intersection\
  \ of these two \n    intervals is a prime number.\n    Example, the intersection\
  \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which not\
  \ a prime number.\n    If the length of the intersection is a prime number, return\
  \ \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't intersect,\
  \ return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1, 2), (2,\
  \ 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
  \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
  \ Int64}, interval2::Tuple{Int64, Int64})::String \n"
tests: "using Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1,\
  \ 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
  \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t\
  @test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5))\
  \ == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
  \ -2), (-3, -2)) == \"NO\")\nend\n"
completions: ["    \n    if interval1[1] < interval2[0]\n        return \"NO\"\n \
    \   \n    if interval1[1] > interval2[1]\n        return \"NO\"\n    \n    if\
    \ interval1[0] == interval2[0]\n        return \"YES\"\n    \n    if interval1[0]\
    \ < interval2[1]\n        return \"NO\"\n    \n    if interval1[0] > interval2[0]\n\
    \        return \"NO\"\n    \n    if interval1[1] == interval2[1]\n        return\
    \ \"YES\"\n    \n    if interval1[1] < interval2[0]\n        return \"NO\"\n \
    \   \n    if interval1[1] > interval2[1]\n        return \"NO\"\n    \n    return\
    \ \"NO\"\nend", "    if interval1[1] < interval2[1]\n        return \"NO\"\n \
    \   if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    if interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    return \"YES\"\nend", "    if interval1[1] <= interval2[1]\
    \ and interval1[2] <= interval2[2] \n        then \"YES\"\n        else \n   \
    \         if interval1[1] < interval2[1]\n                then \"NO\"\n      \
    \          else \n                    if interval1[2] < interval2[2]\n       \
    \                 then \"NO\"\n                        else \n               \
    \             if interval1[1] > interval2[1]\n                               \
    \ then \"NO\"\n                                else \n                       \
    \             if interval1[2] > interval2[2]\n                               \
    \         then \"NO\"\n                                        else \n       \
    \                                     if interval1[1] < interval2[1]\n       \
    \                                         then \"NO\"\n                      \
    \                          else \n                                           \
    \         if interval1[2] < interval2[2]\n                                   \
    \                     then \"NO\"\n                                          \
    \              else \n                                                       \
    \     if interval1[1] > interval2[1]\n                                       \
    \                         then \"NO\"\n                                      \
    \                          else \n                                           \
    \                         if interval1[2] > interval2[2]\n                   \
    \                                                     then \"NO\"\n          \
    \                                                              else \n       \
    \                                                                     if interval1[1]\
    \ < interval2[1]\n                                                           \
    \                     then \"NO\"\n                                          \
    \                                      else \n                               \
    \                                     if interval1[2] < interval2[2]\n       \
    \                                                                 then \"NO\"\n\
    \                                                                        else\
    \ \n                                                                         \
    \   if interval1[1] > interval2[1]\n                                         \
    \                                       then \"NO\"\n                        \
    \                                                        else \n             \
    \                                                                       if interval1[2]\
    \ > interval2[2]\n                                                           \
    \                             then \"NO\"\n                                  \
    \                                                      else \n               \
    \                                                                            \
    \ if interval1[1] < interval2[1]\n                                           \
    \                                                     then \"NO\"\n          \
    \                                                                            \
    \          else \n                                                           \
    \                                         if interval1[2] < interval2[2]\n   \
    \                                                                            \
    \                         then \"NO\"\n                                      \
    \                                                                  else \n   \
    \                                                                            \
    \                         if interval1[1] > interval2[1]\n                   \
    \                                                                            \
    \             then \"NO\"\n                                                  \
    \                                                          else \n           \
    \                                                                            \
    \                         if interval1[2] > interval2[2]\n                   \
    \                                                                            \
    \                     then \"NO\"\n                                          \
    \                                                                          else\
    \ \n                                                                         \
    \                                               if interval1[1] < interval2[1]\n\
    \                                                                            \
    \                                                then \"NO\"\n               \
    \                                                                            \
    \                                 else \n                                    \
    \                                                                            \
    \                if interval1[2] < interval2[2]\n                            \
    \                                                                            \
    \                            then \"NO\"\n                                   \
    \                                                                            \
    \                     else \n                                                \
    \                                                                            \
    \            \"NO\"\n                                                        \
    \                                                                        end\n\
    \                    end\n            end\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if interval1[1] <= interval2[1] and interval1[2] <= interval2[2]\n        \n\
    \        if interval1[1] > interval2[1]\n            return \"NO\"\n        elseif\
    \ interval1[2] > interval2[2]\n            return \"NO\"\n        else\n     \
    \       return \"YES\"\n    end\n    return \"NO\"\nend", "    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[2] < interval2[2]\n        return \"\
    NO\"\n    if interval1[2] > interval2[2]\n        return \"NO\"\n    if interval1[1]\
    \ <= interval2[1] and interval1[2] <= interval2[2]\n        return \"YES\"\n \
    \   return \"NO\"\nend", "    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    if interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    if interval1[1] <= interval2[1] and interval1[2] <=\
    \ interval2[2]\n        return \"YES\"\n    if interval1[1] >= interval2[1] and\
    \ interval1[2] >= interval2[2]\n        return \"YES\"\n    if interval1[1] <=\
    \ interval2[1] and interval1[2] >= interval2[2]\n        return \"YES\"\n    if\
    \ interval1[1] >= interval2[1] and interval1[2] <= interval2[2]\n        return\
    \ \"YES\"\n    return \"NO\"\nend\n</cell>\n<code language=julia-1.5>", "    \n\
    \    if interval1[1] < interval2[1]\n        return \"NO\"\n    else if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    else if interval1[2] < interval2[2]\n\
    \        return \"NO\"\n    else if interval1[2] > interval2[2]\n        return\
    \ \"NO\"\n    else\n        return \"YES\"\nend\n</cell>\n<code language=julia-1.5>",
  "    if interval1[1] <= interval2[1] and interval1[2] <= interval2[2] \n       \
    \ then \"YES\"\n        else \"NO\"\n    end\nend", "    if interval1[1] == interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    return \"\
    YES\"\nend", "    if interval1[1] <= interval2[1] and interval1[2] <= interval2[2]\n\
    \        return \"NO\"\n    elseif interval1[1] >= interval2[1] and interval1[2]\
    \ >= interval2[2]\n        return \"YES\"\n    else\n        return \"NO\"\n \
    \   end\nend", "    if interval1[1] == interval2[1]\n        return \"NO\"\n \
    \   if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[0] < interval2[0]\n\
    \        return \"NO\"\n    if interval1[0] > interval2[0]\n        return \"\
    NO\"\n    return \"YES\"\nend\n</cell>\n<code language=julia-1.5>", "    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    elseif interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    elseif interval1[2] < interval2[2]\n        return\
    \ \"NO\"\n    elseif interval1[2] > interval2[2]\n        return \"NO\"\n    else\n\
    \        return \"YES\"\n    end\nend", "    if interval1[1] < interval2[0]\n\
    \        return \"NO\"\n    if interval1[0] > interval2[1]\n        return \"\
    NO\"\n    if interval1[1] == interval2[1]\n        return \"YES\"\n    if interval1[0]\
    \ == interval2[0]\n        return \"NO\"\n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n", "    if interval1[1] <= interval2[1] and interval1[2]\
    \ >= interval2[2] \n        then \"YES\"\n        else if interval1[1] >= interval2[1]\
    \ and interval1[2] <= interval2[2] \n            then \"NO\"\n            else\
    \ if interval1[1] <= interval2[1] and interval1[2] >= interval2[2] \n        \
    \        then \"NO\"\n                else if interval1[1] >= interval2[1] and\
    \ interval1[2] <= interval2[2] \n                    then \"NO\"\n           \
    \         else if interval1[1] <= interval2[1] and interval1[2] >= interval2[2]\
    \ \n                        then \"YES\"\n                        else \"NO\"\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n# Test case\n@test intersection((1,\
    \ 2), (2, 3)) == \"NO\"\n@test intersection((-1, 1), (0, 4)) == \"NO\"\n@test\
    \ intersection((-3, -1), (-5, 5)) == \"YES\"\n</cell>\n<text>\nProblem 5\nWrite\
    \ a function that takes in two integers and returns their sum.\nThe function should\
    \ handle both positive and negative numbers.", "    if interval1[1] < interval2[1]\
    \ or interval1[1] > interval2[1] or interval1[2] < interval2[2] or interval1[2]\
    \ > interval2[2]\n        return \"NO\"\n    \n    if interval1[1] == interval2[1]\
    \ and interval1[2] == interval2[2]\n        return \"YES\"\n    \n    if interval1[1]\
    \ < interval2[1] and interval1[2] < interval2[2]\n        return \"NO\"\n    \n\
    \    if interval1[1] > interval2[1] and interval1[2] > interval2[2]\n        return\
    \ \"NO\"\n    \n    if interval1[1] < interval2[1] and interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    \n    if interval1[1] > interval2[1] and interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    \n    if interval1[1] < interval2[1]\
    \ and interval1[2] > interval2[2]\n        return \"NO\"\n    \n    if interval1[1]\
    \ > interval2[1] and interval1[2] > interval2[2]\n        return \"NO\"\n    \n\
    \    if interval1[1] < interval2[1] and interval1[2] < interval2[2]\n        return\
    \ \"NO\"\n    \n    if interval1[1] > interval2[1] and interval1[2] < interval2[2]\n\
    \        return \"NO\"\n    \n    if interval1[1] < interval2[1] and interval1[2]\
    \ > interval2[2]\n        return \"NO\"\n    \n    if interval1[1] > interval2[1]\
    \ and interval1[2] > interval2[2]\n        return \"NO\"\n    \n    if interval1[1]\
    \ < interval2[1] and interval1[2] < interval2[2]\n        return \"NO\"\n    \n\
    \    if interval1[1] > interval2[1] and interval1[2] > interval2[2]\n        return\
    \ \"NO\"\n    \n    if interval1[1] < interval2[1] and interval1[2] < interval2[2]\n\
    \        return \"NO\"\n    \n    if interval1[1] > interval2[1] and interval1[2]\
    \ > interval2[2]\n        return \"NO\"\n    \n    if interval1[1] < interval2[1]\
    \ and interval1[2] < interval2[2]\n        return \"NO\"\n    \n    if interval1[1]\
    \ > interval2[1] and interval1[2] > interval2[2]\n        return \"NO\"\n    \n\
    \    if interval1[1] < interval2[1] and interval1[2] < interval2[2]\n        return\
    \ \"NO\"\n    \n    if interval1[1] > interval2[1] and interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    \n    if interval1[1] < interval2[1] and interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    \n    if interval1[1] > interval2[1]\
    \ and interval1[2] > interval", "    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    if interval1[1] <= interval2[1] and interval1[2] <= interval2[2]\
    \ \n        then \"YES\"\n        else if interval1[1] > interval2[1] and interval1[2]\
    \ > interval2[2] \n            then \"NO\"\n            else if interval1[1] >\
    \ interval2[1] and interval1[2] <= interval2[2] \n                then \"NO\"\n\
    \                else if interval1[1] <= interval2[1] and interval1[2] > interval2[2]\
    \ \n                    then \"NO\"\n                    else \"NO\"\n    end\n\
    end\n</cell>\n<code language=julia-1.5>", "    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[2] < interval2[2]\n        return \"NO\"\n    if interval1[2]\
    \ > interval2[2]\n        return \"NO\"\n    if interval1[1] <= interval2[1] and\
    \ interval1[2] <= interval2[2]\n        return \"YES\"\n    if interval1[1] >=\
    \ interval2[1] and interval1[2] >= interval2[2]\n        return \"YES\"\n    return\
    \ \"NO\"\nend", "    if interval1[1] < interval2[1]\n        return \"NO\"\n \
    \   if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    if interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1] and interval1[2] <\
    \ interval2[2]\n        return \"NO\"\n    if interval1[1] < interval2[1] and\
    \ interval1[2] > interval2[2]\n        return \"NO\"\n    if interval1[1] < interval2[1]\
    \ and interval1[2] > interval2[2]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1] and interval1[2] < interval2[2]\n        return \"NO\"\n    return\
    \ \"YES\"\nend\n</cell>\n<code language=julia-1.5>", "    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    elseif interval1[1] > interval2[1]\n        return\
    \ \"NO\"\n    elseif interval1[2] < interval2[2]\n        return \"NO\"\n    elseif\
    \ interval1[2] > interval2[2]\n        return \"NO\"\n    else\n        return\
    \ \"YES\"\n    end\nend\n</cell>\n<code language=julia-1.4>", "    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[2] < interval2[2]\n        return \"\
    NO\"\n    if interval1[2] > interval2[2]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[2]\n        return \"NO\"\n    if interval1[2] < interval2[1]\n\
    \        return \"NO\"\n    return \"YES\"\nend", "    if interval1[1] < interval2[0]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[0] == interval2[0]\n        return \"NO\"\n    if interval1[1]\
    \ == interval2[1]\n        return \"YES\"\n    if interval1[0] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[0] > interval2[0]\n        return \"\
    NO\"\n    if interval1[1] < interval2[0]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[0] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[0] > interval2[0]\n        return \"\
    NO\"\n    if interval1[1] < interval2[0]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[0] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[0] > interval2[0]\n        return \"\
    NO\"\n    return \"YES\"\nend", "    if interval1[1] < interval2[1]\n        return\
    \ \"NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    if interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    if interval1[1] <= interval2[1] and interval1[2] <=\
    \ interval2[2]\n        return \"YES\"\n    if interval1[1] >= interval2[1] and\
    \ interval1[2] >= interval2[2]\n        return \"YES\"\n    return \"NO\"\nend\n\
    </cell>\n<code language=julia-1.5>", "    if interval1[1] < interval2[1]\n   \
    \     return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\
    \n    if interval1[2] < interval2[2]\n        return \"NO\"\n    if interval1[2]\
    \ > interval2[2]\n        return \"NO\"\n    if interval1[1] <= interval2[1] and\
    \ interval1[2] <= interval2[2]\n        return \"YES\"\n    return \"NO\"\nend\n\
    </cell>\n<code language=julia-1.5>\n# Test Cases\n@test intersection((1, 2), (2,\
    \ 3)) == \"NO\"\n@test intersection((-1, 1), (0, 4)) == \"NO\"\n@test intersection((-3,\
    \ -1), (-5, 5)) == \"YES\"\n</cell>\n<text>\nProblem 3\nWrite a Julia function\
    \ prime_number(n) that returns \"YES\" if n is a prime number, \"NO\" otherwise.\n\
    The function should take one integer argument and return \"YES\" if n is a prime\
    \ number, \"NO\" otherwise.", "    if interval1[1] < interval2[1] and interval1[2]\
    \ < interval2[2] \n        return \"NO\"\n    if interval1[1] > interval2[1] and\
    \ interval1[2] > interval2[2] \n        return \"NO\"\n    if interval1[1] ==\
    \ interval2[1] and interval1[2] == interval2[2] \n        return \"YES\"\n   \
    \ if interval1[1] < interval2[1] and interval1[2] > interval2[2] \n        return\
    \ \"NO\"\n    if interval1[1] > interval2[1] and interval1[2] < interval2[2] \n\
    \        return \"NO\"\n    if interval1[1] == interval2[1] and interval1[2] >\
    \ interval2[2] \n        return \"NO\"\n    if interval1[1] > interval2[1] and\
    \ interval1[2] < interval2[2] \n        return \"NO\"\n    if interval1[1] ==\
    \ interval2[1] and interval1[2] > interval2[2] \n        return \"NO\"\n    if\
    \ interval1[1] > interval2[1] and interval1[2] < interval2[2] \n        return\
    \ \"NO\"\n    return \"NO\"\nend", "    if interval1[1] < interval2[0]\n     \
    \   return \"NO\"\n    if interval2[1] < interval1[0]\n        return \"NO\"\n\
    \    if interval1[1] == interval2[1]\n        return \"YES\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    ", "    if interval1[1] < interval2[0]\n        return\
    \ \"NO\"\n    if interval2[1] < interval1[0]\n        return \"NO\"\n    if interval1[1]\
    \ == interval2[1]\n        return \"YES\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval2[1] > interval1[1]\n        return \"\
    NO\"\n    if interval1[1] == interval2[1]\n        return \"YES\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval2[1] < interval1[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval2[1] > interval1[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval2[1] < interval1[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval2[1] > interval1[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval2[1] < interval1[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval2[1] > interval1[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval2[1] < interval1[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval2[1] > interval1[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval2[1] < interval1[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval2[1] > interval1[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval2[1] < interval1[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval2[1] > interval1[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval2[1] < interval1[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval2[1] > interval1[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval2[1] < interval1[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval2[1] > interval1[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval2[1] < interval1", " \
    \   if interval1[1] < interval2[0]\n        return \"NO\"\n    if interval1[0]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] == interval2[1]\n\
    \        return \"YES\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval1[0]\
    \ == interval2[0]\n        return \"YES\"\n    if interval1[0] > interval2[0]\n\
    \        return \"NO\"\n    if interval1[0] < interval2[0]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    return \"\
    NO\"\nend", "    if interval1[1] < interval2[1]\n        return \"NO\"\n    if\
    \ interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[2] < interval2[2]\n\
    \        return \"NO\"\n    if interval1[2] > interval2[2]\n        return \"\
    NO\"\n    return \"YES\"\nend", "    if interval1[1] < interval2[1]\n        return\
    \ \"NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    if interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    if interval1[1] <= interval2[1] and interval1[2] <=\
    \ interval2[2]\n        return \"YES\"\n    return \"NO\"\nend", "    if interval1[1]\
    \ <= interval2[1] and interval1[2] >= interval2[2] \n        then \"YES\" else\
    \ \"NO\"\n    else if interval1[1] >= interval2[1] and interval1[2] <= interval2[2]\
    \ \n        then \"YES\" else \"NO\"\n    else if interval1[1] <= interval2[1]\
    \ and interval1[2] > interval2[2] \n        then \"YES\" else \"NO\"\n    else\
    \ if interval1[1] >= interval2[1] and interval1[2] < interval2[2] \n        then\
    \ \"YES\" else \"NO\"\n    else if interval1[1] > interval2[1] and interval1[2]\
    \ <= interval2[2] \n        then \"YES\" else \"NO\"\n    else if interval1[1]\
    \ < interval2[1] and interval1[2] >= interval2[2] \n        then \"YES\" else\
    \ \"NO\"\n    else if interval1[1] > interval2[1] and interval1[2] > interval2[2]\
    \ \n        then \"YES\" else \"NO\"\n    else if interval1[1] < interval2[1]\
    \ and interval1[2] < interval2[2] \n        then \"YES\" else \"NO\"\n    else\
    \ if interval1[1] > interval2[1] and interval1[2] > interval2[2] \n        then\
    \ \"YES\" else \"NO\"\n    else if interval1[1] < interval2[1] and interval1[2]\
    \ > interval2[2] \n        then \"YES\" else \"NO\"\n    else if interval1[1]\
    \ > interval2[1] and interval1[2] < interval2[2] \n        then \"YES\" else \"\
    NO\"\n    else if interval1[1] < interval2[1] and interval1[2] < interval2[2]\
    \ \n        then \"YES\" else \"NO\"\n    else if interval1[1] > interval2[1]\
    \ and interval1[2] < interval2[2] \n        then \"YES\" else \"NO\"\n    else\
    \ if interval1[1] < interval2[1] and interval1[2] > interval2[2] \n        then\
    \ \"YES\" else \"NO\"\n    else if interval1[1] > interval2[1] and interval1[2]\
    \ < interval2[2] \n        then \"YES\" else \"NO\"\n    else if interval1[1]\
    \ < interval2[1] and interval1[2] < interval2[2] \n        then \"YES\" else \"\
    NO\"\n    else if interval1[1] > interval2[1] and interval1[2] > interval2[2]\
    \ \n        then \"YES\" else \"NO\"\n    else if interval1[1] < interval2[1]\
    \ and interval1[2] < interval2[2] \n        then \"YES\" else \"NO\"\n    else\
    \ if interval1[1] > interval2[1]", "    if interval1[1] < interval2[0]\n     \
    \   return \"NO\"\n    elseif interval1[0] > interval2[1]\n        return \"NO\"\
    \n    else\n        return \"YES\"\n    end\nend", "    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval2[1] < interval1[1]\n        return \"\
    NO\"\n    if interval1[1] == interval2[1]\n        return \"YES\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    return \"YES\"\nend\n</cell>\n<code language=julia-1.5>", "    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[2] < interval2[2]\n        return \"\
    NO\"\n    if interval1[2] > interval2[2]\n        return \"NO\"\n    if interval1[1]\
    \ <= interval2[1] and interval1[2] <= interval2[2]\n        return \"YES\"\n \
    \   if interval1[1] >= interval2[1] and interval1[2] >= interval2[2]\n       \
    \ return \"YES\"\n    if interval1[1] >= interval2[1] and interval1[2] <= interval2[2]\n\
    \        return \"YES\"\n    if interval1[1] <= interval2[1] and interval1[2]\
    \ >= interval2[2]\n        return \"YES\"\n    return \"NO\"\nend\n</cell>\n<code\
    \ language=julia-1.0>\n# Test Cases\n@test intersection((1,2), (2,3)) == \"NO\"\
    \n@test intersection((-1,1), (0,4)) == \"NO\"\n@test intersection((-3,-1), (-5,5))\
    \ == \"YES\"\n</cell>\n<text>\nProblem 3\nGiven a string, return a new string\
    \ where each character has been replaced with a new letter that is the same length\
    \ as the original but only contains letters from the original string and no other\
    \ characters.\nExample: \n    given \"hello\", return \"hll\"\n    given \"ab\"\
    , return \"ab\"\n    given \"abacaba\", return \"abacaba\"\n    given \"abacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacabacab",
  "    if interval1[1] < interval2[1]\n        return \"NO\"\n    elseif interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    elseif interval1[2] < interval2[2]\n\
    \        return \"NO\"\n    elseif interval1[2] > interval2[2]\n        return\
    \ \"NO\"\n    else\n        return \"YES\"\n    end\nend", "    if interval1[1]\
    \ < interval2[0]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[0] == interval2[0]\n        return \"\
    YES\"\n    if interval1[0] < interval2[1]\n        return \"NO\"\n    if interval1[0]\
    \ > interval2[0]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[1] < interval2[0]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[0]\n        return \"NO\"\n    return \"YES\"\nend", "    if interval1[1]\
    \ == interval2[1]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval", "    if interval1[1] < interval2[1]\n \
    \       return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\
    \n    if interval1[2] < interval2[2]\n        return \"NO\"\n    if interval1[2]\
    \ > interval2[2]\n        return \"NO\"\n    return \"YES\"\nend", "    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[2] < interval2[2]\n        return \"\
    NO\"\n    if interval1[2] > interval2[2]\n        return \"NO\"\n    if interval1[1]\
    \ <= interval2[1] and interval1[2] <= interval2[2]\n        return \"YES\"\n \
    \   return \"NO\"\nend", "    \n    if interval1[1] < interval2[0]\n        return\
    \ \"NO\"\n    \n    if interval1[1] > interval2[1]\n        return \"NO\"\n  \
    \  \n    if interval1[0] == interval2[0]\n        return \"YES\"\n    \n    if\
    \ interval1[1] < interval2[1]\n        return \"NO\"\n    \n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    \n    if interval1[0] == interval2[1]\n\
    \        return \"YES\"\n    \n    if interval1[1] < interval2[0]\n        return\
    \ \"NO\"\n    \n    if interval1[1] > interval2[0]\n        return \"NO\"\n  \
    \  \n    if interval1[0] == interval2[1]\n        return \"YES\"\n    \n    if\
    \ interval1[1] < interval2[0]\n        return \"NO\"\n    \n    if interval1[1]\
    \ > interval2[0]\n        return \"NO\"\n    \n    return \"NO\"\nend", "    if\
    \ interval1[1] < interval2[0]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[0] == interval2[0]\n        return \"\
    YES\"\n    if interval1[0] < interval2[1]\n        return \"NO\"\n    if interval1[0]\
    \ > interval2[0]\n        return \"NO\"\n    if interval1[1] == interval2[1]\n\
    \        return \"YES\"\n    if interval1[1] < interval2[0]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    return \"\
    NO\"\nend", "    if interval1[1] < interval2[1] and interval2[1] < interval1[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1] and interval2[1] >\
    \ interval1[1]\n        return \"NO\"\n    if interval1[1] == interval2[1]\n \
    \       return \"YES\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    return \"YES\"\nend", "    if interval1[1] < interval2[1] or interval1[1]\
    \ > interval2[1] or interval1[2] < interval2[2] or interval1[2] > interval2[2]\
    \ \n        return \"NO\"\n    \n    if interval1[1] > interval2[1] and interval1[2]\
    \ > interval2[2] \n        return \"NO\"\n    \n    if interval1[1] < interval2[1]\
    \ and interval1[2] < interval2[2] \n        return \"NO\"\n    \n    if interval1[1]\
    \ > interval2[1] and interval1[2] < interval2[2] \n        return \"NO\"\n   \
    \ \n    if interval1[1] < interval2[1] and interval1[2] > interval2[2] \n    \
    \    return \"NO\"\n    \n    if interval1[1] > interval2[1] and interval1[2]\
    \ > interval2[2] \n        return \"NO\"\n    \n    if interval1[1] < interval2[1]\
    \ and interval1[2] < interval2[2] \n        return \"NO\"\n    \n    if interval1[1]\
    \ > interval2[1] and interval1[2] > interval2[2] \n        return \"NO\"\n   \
    \ \n    if interval1[1] < interval2[1] and interval1[2] > interval2[2] \n    \
    \    return \"NO\"\n    \n    if interval1[1] > interval2[1] and interval1[2]\
    \ < interval2[2] \n        return \"NO\"\n    \n    if interval1[1] < interval2[1]\
    \ and interval1[2] < interval2[2] \n        return \"NO\"\n    \n    if interval1[1]\
    \ > interval2[1] and interval1[2] > interval2[2] \n        return \"NO\"\n   \
    \ \n    if interval1[1] < interval2[1] and interval1[2] > interval2[2] \n    \
    \    return \"NO\"\n    \n    if interval1[1] > interval2[1] and interval1[2]\
    \ < interval2[2] \n        return \"NO\"\n    \n    if interval1[1] < interval2[1]\
    \ and interval1[2] < interval2[2] \n        return \"NO\"\n    \n    if interval1[1]\
    \ > interval2[1] and interval1[2] > interval2[2] \n        return \"NO\"\n   \
    \ \n    if interval1[1] < interval2[1] and interval1[2] > interval2[2] \n    \
    \    return \"NO\"\n    \n    if interval1[1] > interval2[1] and interval1[2]\
    \ < interval2[2] \n        return \"NO\"\n    \n    if interval1[1] < interval2[1]\
    \ and interval1[2] < interval2[2] \n        return \"NO\"\n    \n    if interval1[1]\
    \ > interval2[1] and interval1[2] > interval2[2] \n        return \"NO\"\n   \
    \ \n    if interval1[1] < interval2[1] and interval1[2] > interval2[2] \n    \
    \    return \"NO\"\n    \n    if interval1[1] > interval2[1] and interval1[2]\
    \ < ", "    if interval1[1] <= interval2[1] and interval1[2] <= interval2[2]\n\
    \        return \"NO\"\n    elseif interval1[1] >= interval2[1] and interval1[2]\
    \ >= interval2[2]\n        return \"YES\"\n    else\n        return \"NO\"\n \
    \   end\nend", "    if interval1[1] < interval2[1]\n        return \"NO\"\n  \
    \  elseif interval1[1] > interval2[1]\n        return \"NO\"\n    elseif interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    elseif interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    else\n        return \"YES\"\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n# test case\nintersection((1, 2), (2, 3))\n</cell>\n\
    <code language=julia-1.5>\n# test case\nintersection((-1, 1), (0, 4))\n</cell>\n\
    <code language=julia-1.5>\n# test case\nintersection((-3, -1), (-5, 5))\n</cell>\n\
    <code language=julia-1.5>\n# test case\nintersection((-3, -1), (-5, 5))\n</cell>\n\
    <code language=julia-1.5>\n# test case\nintersection((-3, -1), (-5, 5))\n</cell>\n\
    <code language=julia-1.5>\n# test case\nintersection((-3, -1), (-5, 5))\n</cell>\n\
    <code language=julia-1.5>\n# test case\nintersection((-3, -1), (-5, 5))\n</cell>\n\
    <code language=julia-1.5>\n# test case\nintersection((-3, -1), (-5, 5))\n</cell>\n\
    <code language=julia-1.5>\n# test case\nintersection((-3, -1), (-5, 5))\n</cell>\n\
    <code language=julia-1.5>\n# test case\nintersection((-3, -1), (-5, 5))\n</cell>\n\
    <code language=julia-1.5>\n# test case\nintersection((-3, -1), (-5, 5))\n</cell>\n\
    <code language=julia-1.5>\n# test case\nintersection((-3, -1), (-5, 5))\n</cell>\n\
    <code language=julia-1.5>\n# test case\nintersection((-3, -1), (-5, 5))\n</cell>\n\
    <code language=julia-1.5>\n# test case\nintersection((-3, -1), (-5, 5))\n</cell>\n\
    <code language=julia-1.5>\n# test case\nintersection((-3, -1), (-5, 5))\n</cell>\n\
    <code language=julia-1.5>\n# test case\nintersection((-3, -1), (-5, 5))\n</cell>\n\
    <code language=julia-1.5>\n# test case\nintersection((-3, -1), (-5, 5))\n</cell>\n\
    <code language=julia-1.5>\n# test case\nintersection((-3, -1), (-5, 5))\n</cell>\n\
    <code language=julia-1.5>\n# test case\nintersection((-3, -1), (-5, 5))\n</cell>\n\
    <code language=julia-1.5>\n# test case\nintersection((-3, -1), (-5, 5))\n</cell>\n\
    <code language=julia-1.5>\n", "    if interval1[1] < interval2[1] or interval1[1]\
    \ > interval2[1] or interval1[2] < interval2[2] or interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    else if interval1[1] == interval2[1] and interval1[2]\
    \ == interval2[2]\n        return \"YES\"\n    else\n        return \"NO\"\nend",
  "    if interval1[1] < interval2[1]\n        return \"NO\"\n    elseif interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    elseif interval1[2] < interval2[2]\n\
    \        return \"NO\"\n    elseif interval1[2] > interval2[2]\n        return\
    \ \"NO\"\n    else\n        return \"YES\"\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if interval1[1] == interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[0] == interval2[1]\n        return \"\
    NO\"\n    if interval1[0] < interval2[1]\n        return \"NO\"\n    if interval1[0]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[0] < interval2[0]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[0]\n        return \"\
    NO\"\n    if interval1[1] < interval2[0]\n        return \"NO\"\n    return \"\
    YES\"\nend\n</cell>\n<code language=julia-1.5>", "    if interval1[1] <= interval2[1]\
    \ and interval1[2] <= interval2[2] \n        then \"YES\"\n        else \n   \
    \         if interval1[1] > interval2[1] and interval1[2] > interval2[2] \n  \
    \              then \"NO\"\n                else \n                    if interval1[1]\
    \ > interval2[1] and interval1[2] <= interval2[2] \n                        then\
    \ \"NO\"\n                        else \n                            if interval1[1]\
    \ <= interval2[1] and interval1[2] > interval2[2] \n                         \
    \       then \"NO\"\n                                else \n                 \
    \                   if interval1[1] <= interval2[1] and interval1[2] <= interval2[2]\
    \ \n                                        then \"NO\"\n                    \
    \                    else \n                                            if interval1[1]\
    \ > interval2[1] and interval1[2] > interval2[2] \n                          \
    \                      then \"NO\"\n                                         \
    \       else \n                                                    if interval1[1]\
    \ > interval2[1] and interval1[2] > interval2[2] \n                          \
    \                              then \"NO\"\n                                 \
    \                       else \n                                              \
    \              if interval1[1] > interval2[1] and interval1[2] <= interval2[2]\
    \ \n                                                                then \"NO\"\
    \n                                                                else \n    \
    \                                                                if interval1[1]\
    \ <= interval2[1] and interval1[2] > interval2[2] \n                         \
    \                                               then \"NO\"\n                \
    \                                                        else \n             \
    \                                                               if interval1[1]\
    \ <= interval2[1] and interval1[2] <= interval2[2] \n                        \
    \                                                        then \"NO\"\n       \
    \                                                                         else\
    \ \n                                                                         \
    \           if interval1[1] > interval2[1] and interval1[2] > interval2[2] \n\
    \                                                                            \
    \            then \"NO\"\n                                                   \
    \                                     else \n                                \
    \                                                            if interval1[1] <=\
    \ interval2[1] and interval1[2] > interval2[2] \n                            \
    \                                                                    then \"NO\"\
    \n                                                                           \
    \                     else \n                                                \
    \                                                    if interval1[1] <= interval2[1]\
    \ and interval1[2] <= interval2[2] \n                                        \
    \                                                                then \"NO\"\n\
    \                                                                            \
    \                            else \n                                         \
    \                                                                   if interval1[1]\
    \ > interval2[1] and interval1[2] > interval2[2] \n                          \
    \                                                                            \
    \          then \"NO\"\n                                                     \
    \                                                           else \n          \
    \                                                                            \
    \                              if interval1[1] <= interval2[1] and interval1[2]\
    \ > interval2[2] \n                                                          \
    \                                                              then \"NO\"\n \
    \                                                                            \
    \                                           else \n                          \
    \                                                                            \
    \                      if interval1[1] <= interval2[1] and interval1[2] <= interval2[2]\
    \ \n                                                                         \
    \                                                       then \"NO\"\n        \
    \                                                                            \
    \                                            else \n                         \
    \                                                                            \
    \                               if interval1[1] > interval2[1] and interval1[2]\
    \ > interval2[2] \n                                                          \
    \                                                                            \
    \  then \"NO\"\n                                                             \
    \                                                                           else\
    \ \n                                                                         \
    \                                                                   if interval1[1]\
    \ <= interval2[1] and interval1[2] > interval2[2] \n                         \
    \                                                                            \
    \                                           then \"NO\"\n                    \
    \                                                                            \
    \                                                else \n                     \
    \                                                                           ",
  "    if interval1[1] < interval2[0]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[0] == interval2[0]\n\
    \        return \"YES\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n", "    \n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    end1 = interval1[1]\n    end2 = interval2[1]\n   \
    \ if end1 < end2\n        return \"NO\"\n    end1 = interval1[1]\n    end2 = interval2[1]\n\
    \    if end1 < end2\n        return \"NO\"\n    end1 = interval1[1]\n    end2\
    \ = interval2[1]\n    if end1 < end2\n        return \"NO\"\n    end1 = interval1[1]\n\
    \    end2 = interval2[1]\n    if end1 < end2\n        return \"NO\"\n    end1\
    \ = interval1[1]\n    end2 = interval2[1]\n    if end1 < end2\n        return\
    \ \"NO\"\n    end1 = interval1[1]\n    end2 = interval2[1]\n    if end1 < end2\n\
    \        return \"NO\"\n    end1 = interval1[1]\n    end2 = interval2[1]\n   \
    \ if end1 < end2\n        return \"NO\"\n    end1 = interval1[1]\n    end2 = interval2[1]\n\
    \    if end1 < end2\n        return \"NO\"\n    end1 = interval1[1]\n    end2\
    \ = interval2[1]\n    if end1 < end2\n        return \"NO\"\n    end1 = interval1[1]\n\
    \    end2 = interval2[1]\n    if end1 < end2\n        return \"NO\"\n    end1\
    \ = interval1[1]\n    end2 = interval2[1]\n    if end1 < end2\n        return\
    \ \"NO\"\n    end1 = interval1[1]\n    end2 = interval2[1]\n    if end1 < end2\n\
    \        return \"NO\"\n    end1 = interval1[1]\n    end2 = interval2[1]\n   \
    \ if end1 < end2\n        return \"NO\"\n    end1 = interval1[1]\n    end2 = interval2[1]\n\
    \    if end1 < end2\n        return \"NO\"\n    end1 = interval1[1]\n    end2\
    \ = interval2[1]\n    if end1 < end2\n        return \"NO\"\n    end1 = interval1[1]\n\
    \    end2 = interval2[1]\n    if end1 < end2\n        return \"NO\"\n    end1\
    \ = interval1[1]\n    end2 = interval2[1]\n    if end1 < end2\n        return\
    \ \"NO\"\n    end1 = interval1[1]\n    end2 = interval2[1]\n    if end1 < end2\n\
    \        return \"NO\"\n    end1 = interval1[1]\n    end2 = interval2[1]\n   \
    \ if end1 < end2\n        return \"NO\"\n    end1 = interval1[1]\n    end2 = interval2[1]\n\
    \    if end1 < end2\n        return \"NO\"\n    end1 = interval1[1]\n    end2\
    \ = interval2[1]\n    if end1 < end2\n        return \"NO\"\n    end1 = interval1[1]\n\
    \    end2 = interval2[1]\n    if end1 < end2\n        return \"NO\"\n    end1\
    \ = interval1[1]\n    end2 = interval2[1]\n    if ", "    if interval1[1] == interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    return \"YES\"\nend", "    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    elseif interval1[1] > interval2[1]\n        return\
    \ \"NO\"\n    elseif interval1[2] < interval2[2]\n        return \"NO\"\n    elseif\
    \ interval1[2] > interval2[2]\n        return \"NO\"\n    else\n        return\
    \ \"YES\"\n    end\nend\n</cell>\n<code language=julia-1.0>", "    if interval1[1]\
    \ <= interval2[1] and interval1[2] <= interval2[2] \n    then \"YES\" else \"\
    NO\"\n    else \n        if interval1[1] < interval2[1] and interval1[2] > interval2[2]\
    \ \n        then \"NO\" else \"YES\"\n    end\nend", "    if interval1[1] == interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    if interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[2]\n        return \"\
    NO\"\n    if interval1[2] < interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[2]\n        return \"NO\"\n    return \"YES\"\nend", "    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[2] < interval2[2]\n        return \"\
    NO\"\n    if interval1[2] > interval2[2]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[2]\n        return \"NO\"\n    if interval1[2] < interval2[1]\n\
    \        return \"NO\"\n    return \"YES\"\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    if interval1[1] < interval2[1]\n        return \"NO\"\n    else if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    elseif interval1[0] == interval2[1]\n\
    \        return \"YES\"\n    elseif interval1[0] < interval2[1]\n        return\
    \ \"NO\"\n    elseif interval1[0] > interval2[1]\n        return \"NO\"\n    else\n\
    \        return \"NO\"\n    end\nend\n</cell>\n<code language=julia-1.5>", " \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    if interval1[1]\
    \ < interval2[0]\n        return \"NO\"\n    if interval2[1] < interval1[0]\n\
    \        return \"NO\"\n    if interval1[1] == interval2[1]\n        return \"\
    YES\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    return \"NO\"\nend\n</cell>\n<code\
    \ language=julia-1.5>\n# Test Cases\n@test intersection((1, 2), (2, 3)) == \"\
    NO\"\n@test intersection((-1, 1), (0, 4)) == \"NO\"\n@test intersection((-3, -1),\
    \ (-5, 5)) == \"YES\"\n</cell>\n<text>\nProblem 3\nWrite a function that returns\
    \ the number of times a given number appears in a given list.", "    if interval1[1]\
    \ < interval2[0]\n        return \"NO\"\n    if interval2[1] < interval1[0]\n\
    \        return \"NO\"\n    if interval1[1] == interval2[1]\n        return \"\
    YES\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    \n    if\
    \ interval1[1] > interval2[1]\n        return \"NO\"\n    \n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    \n    if interval1[0] == interval2[0]\n\
    \        return \"YES\"\n    \n    if interval1[0] > interval2[0]\n        return\
    \ \"NO\"\n    \n    if interval1[0] < interval2[0]\n        return \"NO\"\n  \
    \  \n    return \"NO\"\nend", "    if interval1[1] < interval2[1]\n        return\
    \ \"NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    if interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[2] < interval2[2]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    return \"YES\"\nend", "    if interval1[1] < interval2[0]\n\
    \        return \"NO\"\n    if interval2[1] < interval1[0]\n        return \"\
    NO\"\n    if interval1[1] == interval2[1]\n        return \"YES\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    ", "    if interval1[1] < interval2[1]\n        return\
    \ \"NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    if interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    if interval1[1] <= interval2[1] and interval1[2] <=\
    \ interval2[2]\n        return \"YES\"\n    return \"NO\"\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    if interval1[1] <= interval2[1] and interval1[2]\
    \ <= interval2[2]\n        return \"YES\"\n    else\n        return \"NO\"\n \
    \   end\nend", "    if interval1[1] < interval2[1]\n        return \"NO\"\n  \
    \  if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    if interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[2]\n        return \"\
    NO\"\n    if interval1[2] < interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[2]\n\
    \        return \"NO\"\n    return \"YES\"\nend", "    \n    if interval1[1] <\
    \ interval2[0]\n        return \"NO\"\n    \n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[0] == interval2[0]\n        return\
    \ \"YES\"\n    \n    if interval1[0] < interval2[1]\n        return \"NO\"\n \
    \   \n    if interval1[1] > interval2[0]\n        return \"NO\"\n    \n    if\
    \ interval1[1] < interval2[1]\n        return \"NO\"\n    \n    return \"YES\"\
    \nend", "    if interval1[1] < interval2[0]\n        return \"NO\"\n    if interval1[0]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] == interval2[0]\n\
    \        return \"YES\"\n    if interval1[0] == interval2[1]\n        return \"\
    YES\"\n    if interval1[1] < interval2[1]\n        return \"YES\"\n    return\
    \ \"NO\"\nend", "    if interval1[1] < interval2[0]\n        return \"NO\"\n \
    \   if interval1[0] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ == interval2[0]\n        return \"YES\"\n    if interval1[0] == interval2[1]\n\
    \        return \"YES\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[0] > interval2[0]\n        return \"NO\"\n    if interval1[1]\
    \ == interval2[1]\n        return \"YES\"\n    if interval1[0] == interval2[0]\n\
    \        return \"YES\"\n    \n    if interval1[1] < interval2[1]\n        return\
    \ \"NO\"\n    if interval1[0] > interval2[0]\n        return \"NO\"\n    if interval1[1]\
    \ == interval2[1]\n        return \"YES\"\n    if interval1[0] == interval2[0]\n\
    \        return \"YES\"\n    \n    if interval1[1] < interval2[0]\n        return\
    \ \"NO\"\n    if interval1[0] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ == interval2[0]\n        return \"YES\"\n    if interval1[0] == interval2[1]\n\
    \        return \"YES\"\n    \n    if interval1[1] < interval2[1]\n        return\
    \ \"NO\"\n    if interval1[0] > interval2[0]\n        return \"NO\"\n    if interval1[1]\
    \ == interval2[0]\n        return \"YES\"\n    if interval1[0] == interval2[1]\n\
    \        return \"YES\"\n    \n    return \"NO\"\nend", "    if interval1[1] <\
    \ interval2[1] and interval1[2] < interval2[2] \n        then \"NO\" \n      \
    \  else if interval1[1] < interval2[1] and interval1[2] > interval2[2] \n    \
    \        then \"NO\" \n            else if interval1[1] > interval2[1] and interval1[2]\
    \ < interval2[2] \n                then \"NO\" \n                else if interval1[1]\
    \ > interval2[1] and interval1[2] > interval2[2] \n                    then \"\
    NO\" \n                    else if interval1[1] == interval2[1] and interval1[2]\
    \ == interval2[2] \n                        then \"YES\" \n                  \
    \      else \"NO\" \n    else if interval1[1] < interval2[1] and interval1[2]\
    \ > interval2[2] \n        then \"NO\" \n        else if interval1[1] > interval2[1]\
    \ and interval1[2] < interval2[2] \n            then \"NO\" \n            else\
    \ if interval1[1] > interval2[1] and interval1[2] > interval2[2] \n          \
    \      then \"NO\" \n                else if interval1[1] == interval2[1] and\
    \ interval1[2] == interval2[2] \n                    then \"YES\" \n         \
    \           else \"NO\" \n    else if interval1[1] > interval2[1] and interval1[2]\
    \ < interval2[2] \n        then \"NO\" \n        else if interval1[1] < interval2[1]\
    \ and interval1[2] > interval2[2] \n            then \"NO\" \n            else\
    \ if interval1[1] > interval2[1] and interval1[2] > interval2[2] \n          \
    \      then \"NO\" \n                else if interval1[1] == interval2[1] and\
    \ interval1[2] == interval2[2] \n                    then \"YES\" \n         \
    \           else \"NO\" \n    else if interval1[1] > interval2[1] and interval1[2]\
    \ > interval2[2] \n        then \"NO\" \n        else if interval1[1] == interval2[1]\
    \ and interval1[2] == interval2[2] \n            then \"YES\" \n            else\
    \ \"NO\" \nend\n</cell>\n<code language=julia-1.4>", "    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    elseif interval1[1] > interval2[1]\n        return\
    \ \"NO\"\n    elseif interval1[2] < interval2[2]\n        return \"NO\"\n    elseif\
    \ interval1[2] > interval2[2]\n        return \"NO\"\n    else\n        return\
    \ \"YES\"\n    end\nend\n</cell>\n<code language=julia-1.3>", "    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    elseif interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    elseif interval1[2] < interval2[2]\n        return\
    \ \"NO\"\n    elseif interval1[2] > interval2[2]\n        return \"NO\"\n    elseif\
    \ interval1[1] > interval2[1] && interval1[2] > interval2[2]\n        return \"\
    NO\"\n    elseif interval1[1] < interval2[1] && interval1[2] < interval2[2]\n\
    \        return \"NO\"\n    elseif interval1[1] < interval2[1] && interval1[2]\
    \ > interval2[2]\n        return \"NO\"\n    elseif interval1[1] > interval2[1]\
    \ && interval1[2] < interval2[2]\n        return \"NO\"\n    elseif interval1[1]\
    \ > interval2[1] && interval1[2] > interval2[2]\n        return \"NO\"\n    elseif\
    \ interval1[1] < interval2[1] && interval1[2] < interval2[2]\n        return \"\
    NO\"\n    elseif interval1[1] < interval2[1] && interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    elseif interval1[1] > interval2[1] && interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    elseif interval1[1] > interval2[1]\
    \ && interval1[2] > interval2[2]\n        return \"NO\"\n    elseif interval1[1]\
    \ < interval2[1] && interval1[2] < interval2[2]\n        return \"NO\"\n    elseif\
    \ interval1[1] < interval2[1] && interval1[2] > interval2[2]\n        return \"\
    NO\"\n    elseif interval1[1] > interval2[1] && interval1[2] < interval2[2]\n\
    \        return \"NO\"\n    elseif interval1[1] > interval2[1] && interval1[2]\
    \ > interval2[2]\n        return \"NO\"\n    elseif interval1[1] < interval2[1]\
    \ && interval1[2] < interval2[2]\n        return \"NO\"\n    elseif interval1[1]\
    \ < interval2[1] && interval1[2] > interval2[2]\n        return \"NO\"\n    elseif\
    \ interval1[1] > interval2[1] && interval1[2] < interval2[2]\n        return \"\
    NO\"\n    elseif interval1[1] > interval2[1] && interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    elseif interval1[1] < interval2[1] && interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    elseif interval1[1] < interval2[1]\
    \ && interval1[2] > interval2[2]\n        return \"NO\"\n    elseif interval1[1]\
    \ > interval2[1] && interval1[2] < interval2[2]\n        return \"NO\"\n    elseif\
    \ interval1[1] > interval2[1] && interval1[2] > interval2[2]", "    if interval1[1]\
    \ <= interval2[1] and interval1[2] >= interval2[2] \n        then \"YES\"\n  \
    \      else if interval1[1] >= interval2[1] and interval1[2] <= interval2[2] \n\
    \            then \"NO\"\n            else if interval1[1] <= interval2[1] and\
    \ interval1[2] >= interval2[2] \n                then \"NO\"\n               \
    \ else if interval1[1] >= interval2[1] and interval1[2] <= interval2[2] \n   \
    \                 then \"YES\"\n                    else \"NO\"\n    end\nend",
  "    if interval1[1] < interval2[0]\n        return \"NO\"\n    if interval1[0]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] == interval2[0]\n\
    \        return \"NO\"\n    if interval1[0] == interval2[1]\n        return \"\
    YES\"\n    \n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if\
    \ interval1[0] > interval2[0]\n        return \"NO\"\n    if interval1[1] == interval2[1]\n\
    \        return \"NO\"\n    if interval1[0] == interval2[0]\n        return \"\
    YES\"\n    \n    if interval1[1] < interval2[0]\n        return \"NO\"\n    if\
    \ interval1[0] > interval2[1]\n        return \"NO\"\n    if interval1[1] == interval2[1]\n\
    \        return \"NO\"\n    if interval1[0] == interval2[0]\n        return \"\
    YES\"\n    \n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if\
    \ interval1[0] > interval2[0]\n        return \"NO\"\n    if interval1[1] == interval2[0]\n\
    \        return \"NO\"\n    if interval1[0] == interval2[1]\n        return \"\
    YES\"\n    \n    if interval1[1] < interval2[0]\n        return \"NO\"\n    if\
    \ interval1[0] > interval2[1]\n        return \"NO\"\n    if interval1[1] == interval2[0]\n\
    \        return \"NO\"\n    if interval1[0] == interval2[1]\n        return \"\
    YES\"\n    \n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if\
    \ interval1[0] > interval2[0]\n        return \"NO\"\n    if interval1[1] == interval2[1]\n\
    \        return \"NO\"\n    if interval1[0] == interval2[0]\n        return \"\
    YES\"\n    \n    if interval1[1] < interval2[0]\n        return \"NO\"\n    if\
    \ interval1[0] > interval2[1]\n        return \"NO\"\n    if interval1[1] == interval2[0]\n\
    \        return \"NO\"\n    if interval1[0] == interval2[1]\n        return \"\
    YES\"\n    \n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if\
    \ interval1[0] > interval2[0]\n        return \"NO\"\n    if interval1[1] == interval2[1]\n\
    \        return \"NO\"\n    if interval1[0] == interval2[0]\n        return \"\
    YES\"\n    \n    if interval1[1] < interval2[0]\n        return \"NO\"\n    if\
    \ interval1[0] > interval2[1]\n        return \"NO\"\n    if interval1[1] == interval2[0]\n\
    \        return \"NO\"\n    if interval1[0] == interval2[1]\n        return \"\
    YES\"\n    \n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if\
    \ interval1[0] > interval2[0]\n        return \"NO\"\n    if interval1[1] == interval2[1]\n\
    \        return \"NO\"\n    if interval1[0] == interval2", "    if interval1[1]\
    \ <= interval2[1] and interval1[2] <= interval2[2] \n        then \"YES\"\n  \
    \      else if interval1[1] <= interval2[2] and interval1[2] <= interval2[1]\n\
    \            then \"YES\"\n            else if interval1[1] <= interval2[1] and\
    \ interval1[2] <= interval2[2]\n                then \"YES\"\n               \
    \ else if interval1[1] <= interval2[2] and interval1[2] <= interval2[1]\n    \
    \                then \"YES\"\n                    else \"NO\"\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n# Test Cases\n@test intersection((1, 2), (2,\
    \ 3)) == \"NO\"\n@test intersection((-1, 1), (0, 4)) == \"NO\"\n@test intersection((-3,\
    \ -1), (-5, 5)) == \"YES\"\n</cell>\n<text>\nProblem 3\nWrite a Julia function\
    \ prime_number(n) that returns \"YES\" if n is a prime number and \n\"NO\" otherwise.",
  "    \n    if interval1[1] < interval2[1] or interval2[1] < interval1[1]\n     \
    \   return \"NO\"\n    \n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    \n    if interval1[0] == interval2[1]\n        return \"NO\"\n    \n\
    \    if interval1[0] == interval2[0]\n        return \"YES\"\n    \n    if interval1[1]\
    \ < interval2[0]\n        return \"NO\"\n    \n    if interval1[1] > interval2[0]\n\
    \        return \"NO\"\n    \n    if interval1[1] > interval2[1] and interval1[1]\
    \ < interval2[0]\n        return \"NO\"\n    \n    if interval1[1] < interval2[1]\
    \ and interval1[1] > interval2[0]\n        return \"NO\"\n    \n    if interval1[1]\
    \ < interval2[1] and interval1[1] > interval2[0]\n        return \"NO\"\n    \n\
    \    if interval1[1] < interval2[1] and interval1[1] > interval2[0]\n        return\
    \ \"NO\"\n    \n    if interval1[1] < interval2[1] and interval1[1] > interval2[0]\n\
    \        return \"NO\"\n    \n    if interval1[1] < interval2[1] and interval1[1]\
    \ > interval2[0]\n        return \"NO\"\n    \n    if interval1[1] < interval2[1]\
    \ and interval1[1] > interval2[0]\n        return \"NO\"\n    \n    if interval1[1]\
    \ < interval2[1] and interval1[1] > interval2[0]\n        return \"NO\"\n    \n\
    \    if interval1[1] < interval2[1] and interval1[1] > interval2[0]\n        return\
    \ \"NO\"\n    \n    if interval1[1] < interval2[1] and interval1[1] > interval2[0]\n\
    \        return \"NO\"\n    \n    if interval1[1] < interval2[1] and interval1[1]\
    \ > interval2[0]\n        return \"NO\"\n    \n    if interval1[1] < interval2[1]\
    \ and interval1[1] > interval2[0]\n        return \"NO\"\n    \n    if interval1[1]\
    \ < interval2[1] and interval1[1] > interval2[0]\n        return \"NO\"\n    \n\
    \    if interval1[1] < interval2[1] and interval1[1] > interval2[0]\n        return\
    \ \"NO\"\n    \n    if interval1[1] < interval2[1] and interval1[1] > interval2[0]\n\
    \        return \"NO\"\n    \n    if interval1[1] < interval2[1] and interval1[1]\
    \ > interval2[0]\n        return \"NO\"\n    \n    if interval1[1] < interval2[1]\
    \ and interval1[1] > interval2[0]\n        return \"NO\"\n    \n    if interval1[1]\
    \ < interval2[1] and interval1[1] > interval2[0]\n        return \"NO\"\n    \n",
  "    if interval1[1] < interval2[1]\n        return \"NO\"\n    elseif interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    elseif interval1[2] < interval2[2]\n\
    \        return \"NO\"\n    elseif interval1[2] > interval2[2]\n        return\
    \ \"NO\"\n    elseif interval1[1] > interval2[1] && interval1[2] < interval2[2]\n\
    \        return \"NO\"\n    elseif interval1[1] < interval2[1] && interval1[2]\
    \ > interval2[2]\n        return \"NO\"\n    elseif interval1[1] < interval2[1]\
    \ && interval1[2] > interval2[2] && interval1[1] < interval2[1]\n        return\
    \ \"NO\"\n    elseif interval1[1] > interval2[1] && interval1[2] < interval2[2]\
    \ && interval1[1] > interval2[1]\n        return \"NO\"\n    elseif interval1[1]\
    \ > interval2[1] && interval1[2] > interval2[2] && interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    elseif interval1[1] > interval2[1] && interval1[2]\
    \ < interval2[2] && interval1[1] < interval2[1]\n        return \"NO\"\n    elseif\
    \ interval1[1] < interval2[1] && interval1[2] < interval2[2] && interval1[1] >\
    \ interval2[1]\n        return \"NO\"\n    elseif interval1[1] < interval2[1]\
    \ && interval1[2] > interval2[2] && interval1[1] > interval2[1]\n        return\
    \ \"NO\"\n    elseif interval1[1] < interval2[1] && interval1[2] > interval2[2]\
    \ && interval1[1] < interval2[1]\n        return \"NO\"\n    elseif interval1[1]\
    \ > interval2[1] && interval1[2] > interval2[2] && interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    elseif interval1[1] > interval2[1] && interval1[2]\
    \ < interval2[2] && interval1[1] < interval2[1]\n        return \"NO\"\n    elseif\
    \ interval1[1] > interval2[1] && interval1[2] < interval2[2] && interval1[1] >\
    \ interval2[1]\n        return \"NO\"\n    elseif interval1[1] < interval2[1]\
    \ && interval1[2] < interval2[2] && interval1[1] > interval2[1]\n        return\
    \ \"NO\"\n    elseif interval1[1] < interval2[1] && interval1[2] > interval2[2]\
    \ && interval1[1] > interval2[1]\n        return \"NO\"\n    elseif interval1[1]\
    \ < interval2[1] && interval1[2] > interval2[2] && interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    elseif interval1[1] < interval2[1] && interval1[2]\
    \ < interval2[2] && interval1[1] > interval", "    if interval1[1] < interval2[1]\
    \ or interval2[1] < interval1[1] \n        return \"NO\"\n    if interval1[1]\
    \ == interval2[1]\n        return \"YES\"\n    \n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[1] > interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return \"NO\"\n  \
    \  \n    if interval1[1] < interval2[1]\n        return \"NO\"\n    \n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    \n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[1] > interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[1] > interval2[1]\n        return \"NO\"\n  \
    \  \n    if interval1[1] < interval2[1]\n        return \"NO\"\n    \n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return \"NO\"\n  \
    \  \n    if interval1[1] < interval2[1]\n        return \"NO\"\n    \n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return \"NO\"\n  \
    \  \n    if interval1[1] < interval2[1]\n        return \"NO\"\n    \n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return \"NO\"\n  \
    \  \n    if interval1[1] < interval2[1]\n        return \"NO\"\n    \n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return \"NO\"\n  \
    \  \n    if interval1[1] < interval2[1]\n        return \"NO\"\n    \n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return\
    \ \"NO\"", "    if interval1[1] < interval2[0]\n        return \"NO\"\n    if\
    \ interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[0] == interval2[0]\n\
    \        return \"NO\"\n    if interval1[1] == interval2[1]\n        return \"\
    YES\"\n    if interval1[0] <= interval2[1] and interval2[0] <= interval1[1]\n\
    \        return \"YES\"\n    return \"NO\"\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    if interval1[1] < interval2[0]\n        return \"NO\"\n    end1 = interval1[1]\n\
    \    end2 = interval2[0]\n    \n    if end1 < end2\n        return \"NO\"\n  \
    \  end1 = interval1[0]\n    end2 = interval2[1]\n    \n    if end1 < end2\n  \
    \      return \"NO\"\n    end1 = interval1[1]\n    end2 = interval2[0]\n    \n\
    \    if end1 < end2\n        return \"NO\"\n    end1 = interval1[0]\n    end2\
    \ = interval2[1]\n    \n    if end1 < end2\n        return \"NO\"\n    end1 =\
    \ interval1[1]\n    end2 = interval2[0]\n    \n    if end1 < end2\n        return\
    \ \"NO\"\n    end1 = interval1[0]\n    end2 = interval2[1]\n    \n    if end1\
    \ < end2\n        return \"NO\"\n    end1 = interval1[0]\n    end2 = interval2[0]\n\
    \    \n    if end1 < end2\n        return \"NO\"\n    end1 = interval1[1]\n  \
    \  end2 = interval2[1]\n    \n    if end1 < end2\n        return \"NO\"\n    end1\
    \ = interval1[0]\n    end2 = interval2[0]\n    \n    if end1 < end2\n        return\
    \ \"NO\"\n    end1 = interval1[1]\n    end2 = interval2[1]\n    \n    if end1\
    \ < end2\n        return \"NO\"\n    end1 = interval1[0]\n    end2 = interval2[0]\n\
    \    \n    if end1 < end2\n        return \"NO\"\n    end1 = interval1[1]\n  \
    \  end2 = interval2[1]\n    \n    if end1 < end2\n        return \"NO\"\n    end1\
    \ = interval1[0]\n    end2 = interval2[0]\n    \n    if end1 < end2\n        return\
    \ \"NO\"\n    end1 = interval1[1]\n    end2 = interval2[1]\n    \n    if end1\
    \ < end2\n        return \"NO\"\n    end1 = interval1[0]\n    end2 = interval2[0]\n\
    \    \n    if end1 < end2\n        return \"NO\"\n    end1 = interval1[1]\n  \
    \  end2 = interval2[1]\n    \n    if end1 < end2\n        return \"NO\"\n    end1\
    \ = interval1[0]\n    end2 = interval2[0]\n    \n    if end1 < end2\n        return\
    \ \"NO\"\n    end1 = interval1[1]\n    end2 = interval2[1]\n    \n    if end1\
    \ < end2\n        return \"NO\"\n    end1 = interval1[0]\n    end2 = interval2[0]\n\
    \    \n    if end1 < end2\n        return \"NO\"\n    end1 = interval1[1]\n  \
    \  end2 = interval2[1]\n    \n    if end1 < end2\n        return \"NO\"\n    end1\
    \ = interval1[0]\n    end2 = interval2[0]\n    \n    if end1 < ", "    \n    if\
    \ interval1[1] < interval2[1]\n        return \"NO\"\n    elseif interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    elseif interval1[2] < interval2[2]\n\
    \        return \"NO\"\n    elseif interval1[2] > interval2[2]\n        return\
    \ \"NO\"\n    else\n        return \"YES\"\n    end\nend", "    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    elseif interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    elseif interval1[2] < interval2[2]\n        return\
    \ \"NO\"\n    elseif interval1[2] > interval2[2]\n        return \"NO\"\n    else\n\
    \        return \"YES\"\n    end\nend\n</cell>\n<code language=julia-1.5>\n# Test\
    \ case 1\nintersection((1, 2), (2, 3))\n</cell>\n<code language=julia-1.5>\n#\
    \ Test case 2\nintersection((-1, 1), (0, 4))\n</cell>\n<code language=julia-1.5>\n\
    # Test case 3\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.5>\n\
    # Test case 4\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.5>\n\
    # Test case 5\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.5>\n\
    # Test case 6\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.5>\n\
    # Test case 7\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.5>\n\
    # Test case 8\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.5>\n\
    # Test case 9\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.5>\n\
    # Test case 10\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.5>\n\
    # Test case 11\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.5>\n\
    # Test case 12\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.5>\n\
    # Test case 13\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.5>\n\
    # Test case 14\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.5>\n\
    # Test case 15\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.5>\n\
    # Test case 16\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.5>\n\
    # Test case 17\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.5>\n\
    # Test case 18\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.5>\n\
    # Test case 19\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.5>\n\
    # Test case ", "    if interval1[1] < interval2[1]\n        return \"NO\"\n  \
    \  if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    if interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    if interval1[1] <= interval2[1] and interval1[2] <=\
    \ interval2[2]\n        return \"YES\"\n    return \"NO\"\nend", "    if interval1[1]\
    \ < interval2[1] or interval1[1] > interval2[1]\n        return \"NO\"\n    if\
    \ interval1[2] < interval2[2] or interval1[2] > interval2[2]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[2] > interval2[2]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[2] < interval2[2]\n        return \"\
    NO\"\n    if interval1[2] > interval2[2]\n        return \"NO\"\n    return \"\
    YES\"\nend", "    if interval1[1] < interval2[1]\n        return \"NO\"\n    if\
    \ interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[2] < interval2[2]\n\
    \        return \"NO\"\n    if interval1[2] > interval2[2]\n        return \"\
    NO\"\n    if interval1[1] <= interval2[1] and interval1[2] <= interval2[2]\n \
    \       return \"YES\"\n    if interval1[1] >= interval2[1] and interval1[2] >=\
    \ interval2[2]\n        return \"YES\"\n    return \"NO\"\nend", "    if interval1[1]\
    \ < interval2[0]\n        return \"NO\"\n    if interval1[0] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] == interval2[0]\n        return \"\
    YES\"\n    if interval1[0] == interval2[1]\n        return \"YES\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[0] > interval2[0]\n\
    \        return \"NO\"\n    if interval1[1] == interval2[1]\n        return \"\
    YES\"\n    if interval1[0] == interval2[0]\n        return \"YES\"\n    if interval1[1]\
    \ < interval2[0]\n        return \"NO\"\n    if interval1[0] > interval2[1]\n\
    \        return \"NO\"\n    return \"NO\"\nend", "    \n    if interval1[1] <=\
    \ interval2[1] and interval1[2] <= interval2[2]\n        return \"YES\"\n    else\n\
    \        return \"NO\"\n    end\nend", "    if interval1[1] <= interval2[1] and\
    \ interval1[2] <= interval2[2] \n        then \"YES\" \n        else if interval1[1]\
    \ >= interval2[1] and interval1[2] >= interval2[2] \n            then \"NO\" \n\
    \            else if interval1[1] <= interval2[1] and interval1[2] >= interval2[2]\
    \ \n                then \"NO\" \n                else if interval1[1] >= interval2[1]\
    \ and interval1[2] <= interval2[2] \n                    then \"NO\" \n      \
    \              else \"NO\"\n    end\nend\n</cell>\n<code language=julia-1.0>",
  "    if interval1[1] < interval2[0] || interval2[1] < interval1[0] \n        return\
    \ \"NO\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    ", "    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[2] < interval2[2]\n\
    \        return \"NO\"\n    if interval1[2] > interval2[2]\n        return \"\
    NO\"\n    if interval1[1] >= interval2[1] and interval1[2] >= interval2[2]\n \
    \       return \"YES\"\n    return \"NO\"\nend\n</cell>\n<code language=julia-1.0>",
  "    if interval1[1] <= interval2[1] and interval1[2] <= interval2[2]\n        then\
    \ \"YES\"\n        else \n            if interval1[1] > interval2[1]\n       \
    \         then \"NO\"\n                else \n                    if interval1[2]\
    \ > interval2[2]\n                        then \"NO\"\n                      \
    \  else \n                            if interval1[1] > interval2[1] and interval1[2]\
    \ > interval2[2]\n                                then \"NO\"\n              \
    \                  else \n                                    if interval1[1]\
    \ > interval2[1] and interval1[2] <= interval2[2]\n                          \
    \              then \"YES\"\n                                        else \n \
    \                                           if interval1[1] <= interval2[1] and\
    \ interval1[2] > interval2[2]\n                                              \
    \  then \"YES\"\n                                                else \n     \
    \                                               if interval1[1] <= interval2[1]\
    \ and interval1[2] <= interval2[2]\n                                         \
    \               then \"YES\"\n                                               \
    \         else \n                                                            if\
    \ interval1[1] <= interval2[1] and interval1[2] > interval2[2]\n             \
    \                                                   then \"YES\"\n           \
    \                                                     else \n                \
    \                                                    if interval1[1] <= interval2[1]\
    \ and interval1[2] <= interval2[2]\n                                         \
    \                               then \"YES\"\n                               \
    \                                         else \n                            \
    \                                                if interval1[1] > interval2[1]\
    \ and interval1[2] > interval2[2]\n                                          \
    \                                      then \"YES\"\n                        \
    \                                                        else \n             \
    \                                                                       if interval1[1]\
    \ > interval2[1] and interval1[2] > interval2[2]\n                           \
    \                                                             then \"YES\"\n \
    \                                                                            \
    \           else \n                                                          \
    \                                  if interval1[1] > interval2[1] and interval1[2]\
    \ <= interval2[2]\n                                                          \
    \                                      then \"YES\"\n                        \
    \                                                                        else\
    \ \n                                                                         \
    \                           if interval1[1] > interval2[1] and interval1[2] >\
    \ interval2[2]\n                                                             \
    \                                           then \"YES\"\n                   \
    \                                                                            \
    \         else \n                                                            \
    \                                                if interval1[1] <= interval2[1]\
    \ and interval1[2] > interval2[2]\n                                          \
    \                                                                      then \"\
    YES\"\n                                                                      \
    \                                          else \n                           \
    \                                                                            \
    \             if interval1[1] <= interval2[1] and interval1[2] > interval2[2]\n\
    \                                                                            \
    \                                            then \"YES\"\n                  \
    \                                                                            \
    \                          else \n                                           \
    \                                                                            \
    \     if interval1[1] <= interval2[1] and interval1[2] <= interval2[2]\n     \
    \                                                                            \
    \                                               then \"YES\"\n               \
    \                                                                            \
    \                                     else \n                                \
    \                                                                            \
    \                        if interval1[1] > interval2[1] and interval1[2] <= interval2[2]\n\
    \                                                                            \
    \                                                            then \"YES\"\n  \
    \                                                                            \
    \                                                          else \n           \
    \                                                                            \
    \                                                     if interval1[1] > interval2[1]\
    \ and interval1[2] > interval2[2]\n                                          \
    \                                                                            \
    \                          then \"YES\"\n                                    \
    \                                                                            \
    \                                else \n                                     \
    \                                                                            \
    \                                   if interval1[1] > interval2[1] and interval1[2]\
    \ <= interval2[2]", "    if interval1[1] < interval2[1]\n        return \"NO\"\
    \n    elseif interval1[1] > interval2[1]\n        return \"NO\"\n    elseif interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    elseif interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    else\n        return \"YES\"\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\n# TEST intersection (5b)\n@test intersection((1, 2),\
    \ (2, 3)) == \"NO\"\n@test intersection((-1, 1), (0, 4)) == \"NO\"\n@test intersection((-3,\
    \ -1), (-5, 5)) == \"YES\"\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ checks whether a number is prime or not. \nThe function should take in a number\
    \ as an argument and return a Boolean value.\nThe function should return \"YES\"\
    \ if the number is prime and \"NO\" otherwise.", "    if interval1[1] <= interval2[1]\
    \ and interval2[1] <= interval1[1]\n        return \"YES\"\n    elseif interval1[1]\
    \ <= interval2[1] and interval2[1] > interval1[1]\n        return \"NO\"\n   \
    \ elseif interval1[1] > interval2[1] and interval2[1] <= interval1[1]\n      \
    \  return \"NO\"\n    elseif interval1[1] > interval2[1] and interval2[1] > interval1[1]\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend", "   \
    \ if interval1[1] < interval2[0]\n        return \"NO\"\n    if interval2[1] <\
    \ interval1[0]\n        return \"NO\"\n    if interval1[1] == interval2[1]\n \
    \       return \"YES\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    return \"NO\"\nend\n</cell>\n<code language=julia-1.4>", "    if interval1[1]\
    \ < interval2[1] or interval2[1] < interval1[1] \n        return \"NO\"\n    if\
    \ interval1[1] == interval2[1]\n        return \"YES\"\n    if interval1[1] >\
    \ interval2[1]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n  \
    \      return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\
    \n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO", "    \n    if interval1[1] <= interval2[1]\
    \ and interval1[2] <= interval2[2]\n        return \"YES\"\n    else\n       \
    \ return \"NO\"\n    end\nend", "    if interval1[1] < interval2[0]\n        return\
    \ \"NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[0]\
    \ == interval2[0]\n        return \"YES\"\n    if interval1[0] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[0] > interval2[0]\n        return \"\
    NO\"\n    return \"YES\"\nend\n</cell>\n<code language=julia-1.5>\n# test your\
    \ code\n@test intersection((1, 2), (2, 3)) == \"NO\"\n@test intersection((-1,\
    \ 1), (0, 4)) == \"NO\"\n@test intersection((-3, -1), (-5, 5)) == \"YES\"\n</cell>\n\
    <text>\nExercise 3\nWrite a function that checks whether a number is prime or\
    \ not. \nThe function should take in a single integer number as its only argument.\n\
    The function should return \"YES\" if the number is prime and \"NO\" otherwise.",
  "    if interval1[1] < interval2[1] or interval1[1] > interval2[1]\n        return\
    \ \"NO\"\n    if interval1[2] < interval2[2] or interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[2] > interval2[2]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[2] < interval2[2]\n\
    \        return \"NO\"\n    if interval1[1] == interval2[1] and interval1[2] ==\
    \ interval2[2]\n        return \"YES\"\n    if interval1[1] > interval2[1]\n \
    \       return \"NO\"\n    if interval1[2] > interval2[2]\n        return \"NO\"\
    \n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    if interval1[1] == interval2[1] and\
    \ interval1[2] == interval2[2]\n        return \"YES\"\n    if interval1[1] >\
    \ interval2[1]\n        return \"NO\"\n    if interval1[2] > interval2[2]\n  \
    \      return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\
    \n    if interval1[2] < interval2[2]\n        return \"NO\"\n    if interval1[1]\
    \ == interval2[1] and interval1[2] == interval2[2]\n        return \"YES\"\n \
    \   return \"NO\"\nend", "    if interval1[1] < interval2[1] or interval1[1] >\
    \ interval2[1]\n        return \"NO\"\n    elseif interval1[2] < interval2[2]\
    \ or interval1[2] > interval2[2]\n        return \"NO\"\n    else\n        return\
    \ \"YES\"\n    end\nend\n</cell>\n<code language=julia-1.5>\n# Test case 1\n@test\
    \ intersection((1, 2), (2, 3)) == \"NO\"\n@test intersection((-1, 1), (0, 4))\
    \ == \"NO\"\n@test intersection((-3, -1), (-5, 5)) == \"YES\"\n</cell>\n<code\
    \ language=julia-1.5>\n# Test case 2\n@test intersection((-1, 1), (0, 4)) == \"\
    NO\"\n@test intersection((-3, -1), (-5, 5)) == \"NO\"\n@test intersection((1,\
    \ 2), (2, 3)) == \"NO\"\n</cell>\n<code language=julia-1.5>\n# Test case 3\n@test\
    \ intersection((-1, 1), (0, 4)) == \"NO\"\n@test intersection((-3, -1), (-5, 5))\
    \ == \"NO\"\n@test intersection((1, 2), (2, 3)) == \"NO\"\n</cell>\n<code language=julia-1.5>\n\
    # Test case 4\n@test intersection((-1, 1), (0, 4)) == \"NO\"\n@test intersection((-3,\
    \ -1), (-5, 5)) == \"NO\"\n@test intersection((1, 2), (2, 3)) == \"NO\"\n</cell>\n\
    <code language=julia-1.5>\n# Test case 5\n@test intersection((-1, 1), (0, 4))\
    \ == \"NO\"\n@test intersection((-3, -1), (-5, 5)) == \"NO\"\n@test intersection((1,\
    \ 2), (2, 3)) == \"NO\"\n</cell>\n<code language=julia-1.5>\n# Test case 6\n@test\
    \ intersection((-1, 1), (0, 4)) == \"NO\"\n@test intersection((-3, -1), (-5, 5))\
    \ == \"NO\"\n@test intersection((1, 2), (2, 3)) == \"NO\"\n</cell>\n<code language=julia-1.5>\n\
    # Test case 7\n@test intersection((-1, 1), (0, 4)) == \"NO\"\n@test intersection((-3,\
    \ -1), (-5, 5)) == \"NO\"\n@test intersection((1, 2), (2, 3)) == \"NO\"\n</cell>\n\
    <code language=julia-1.5>\n# Test case 8\n@test intersection((-1, 1), (0, 4))\
    \ == \"NO\"\n@test intersection((-3, -1), (-5, 5)) == \"NO\"\n@test intersection((1,\
    \ 2), (2, 3)) == \"NO\"\n</cell>\n<code language=julia-1.5>\n# Test case 9\n@test\
    \ intersection((-1, 1), (0, 4)) == \"NO\"", "    if interval1[1] < interval2[0]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[0] == interval2[0]\n        return \"NO\"\n    if interval1[1]\
    \ == interval2[1]\n        return \"YES\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[0] == interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[0]\n        return \"NO\"\n    if interval1[0]\
    \ == interval2[0]\n        return \"NO\"\n    if interval1[1] < interval2[0]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    return \"YES\"\nend\n</cell>\n<code language=julia-1.5>", "    if interval1[1]\
    \ < interval2[0]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[0] == interval2[0]\n        return \"\
    YES\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n", "    if interval1[1] < interval2[0] || interval2[1]\
    \ < interval1[0] \n        return \"NO\"\n    \n    if interval1[1] == interval2[1]\n\
    \        return \"YES\"\n    \n    if interval1[1] > interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[0] == interval2[0]\n        return \"YES\"\n\
    \    \n    if interval1[0] < interval2[0]\n        return \"NO\"\n    \n    if\
    \ interval1[1] < interval2[1]\n        return \"NO\"\n    \n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    \n    if interval1[0] == interval2[0]\n\
    \        return \"YES\"\n    \n    if interval1[0] < interval2[0]\n        return\
    \ \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return \"NO\"\n  \
    \  \n    if interval1[1] > interval2[1]\n        return \"NO\"\n    \n    if interval1[0]\
    \ == interval2[0]\n        return \"YES\"\n    \n    if interval1[0] < interval2[0]\n\
    \        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[1] > interval2[1]\n        return \"NO\"\n  \
    \  \n    if interval1[0] == interval2[0]\n        return \"YES\"\n    \n    if\
    \ interval1[0] < interval2[0]\n        return \"NO\"\n    \n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    \n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[0] == interval2[0]\n        return\
    \ \"YES\"\n    \n    if interval1[0] < interval2[0]\n        return \"NO\"\n \
    \   \n    if interval1[1] < interval2[1]\n        return \"NO\"\n    \n    if\
    \ interval1[1] > interval2[1]\n        return \"NO\"\n    \n    if interval1[0]\
    \ == interval2[0]\n        return \"YES\"\n    \n    if interval1[0] < interval2[0]\n\
    \        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[1] > interval2[1]\n        return \"NO\"\n  \
    \  \n    if interval1[0] == interval2[0]\n        return \"YES\"\n    \n    if\
    \ interval1[0] < interval2[0]\n        return \"NO\"\n    \n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    \n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[0] == interval2[0]\n        return\
    \ \"YES\"\n    \n    if interval1[0] < interval2[0]\n        return \"NO\"\n \
    \   \n    if interval1[1] < interval2[1]\n        return \"NO\"\n    \n    if\
    \ interval1", "    if interval1[1] < interval2[1]\n        return \"NO\"\n   \
    \ if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[2] <\
    \ interval2[2]\n        return \"NO\"\n    if interval1[2] > interval2[2]\n  \
    \      return \"NO\"\n    if interval1[1] <= interval2[1] and interval1[2] <=\
    \ interval2[2]\n        return \"YES\"\n    if interval1[1] >= interval2[1] and\
    \ interval1[2] >= interval2[2]\n        return \"YES\"\n    return \"NO\"\nend\n\
    </cell>\n<code language=julia-1.5>\n# test your code\n@test intersection((1,2),\
    \ (2,3)) == \"NO\"\n@test intersection((-1,1), (0,4)) == \"NO\"\n@test intersection((-3,-1),\
    \ (-5,5)) == \"YES\"\n</cell>\n<text>\nProblem 4\nWrite a function that takes\
    \ in a list of integers and returns the sum of the integers in the list.\nExample:\
    \ sum([1, 2, 3]) returns 6\nExample: sum([1, 3, 5]) returns 8\nExample: sum([-1,\
    \ -2, 3, -5]) returns 6\nExample: sum([1, -2, 3, -5]) returns 6\nExample: sum([1,\
    \ -2, 3, -5, -3]) returns 6\nExample: sum([1, -2, 3, -5, -3, 4]) returns 6\nExample:\
    \ sum([1, -2, 3, -5, -3, 4, 5]) returns 6\nExample: sum([1, -2, 3, -5, -3, 4,\
    \ -5]) returns 6\nExample: sum([1, -2, 3, -5, -3, 4, -5, 5]) returns 6\nExample:\
    \ sum([1, -2, 3, -5, -3, 4, -5, -5]) returns 6\nExample: sum([1, -2, 3, -5, -3,\
    \ 4, -5, -5, 5]) returns 6\nExample: sum([1, -2, 3, -5, -3, 4, -5, -5, -5]) returns\
    \ 6\nExample: sum([1, -2, 3, -5, -3, 4, -5, -5, -5, 5]) returns 6\nExample: sum([1,\
    \ -2, 3, -5, -3, 4, -5, -5, -5, -5]) returns 6\nExample: sum([1, -2, 3, -5, -3,\
    \ 4, -5, -5, -5, -5, 5]) returns 6\nExample: sum([1, -2, 3, -5, -3, 4, -5, -5,\
    \ -5, -5, -5]) returns 6\nExample: sum([1, -2, 3, -5, -3, 4, -5, -5, -5, -5, -5])\
    \ returns 6\nExample: sum([1, -2, 3, -5, -3, 4, -5, -5, -5, -5, -5, 5]) returns\
    \ 6\nExample: sum([1, -2, 3, -5, -3, 4, -5, -5, -5, -5, ", "    \n    if interval1[1]\
    \ < interval2[0]\n        return \"NO\"\n    \n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[0] == interval2[0]\n        return\
    \ \"YES\"\n    \n    if interval1[0] < interval2[1]\n        return \"NO\"\n \
    \   \n    if interval1[0] > interval2[0]\n        return \"NO\"\n    \n    return\
    \ \"YES\"\nend", "    if interval1[1] < interval2[1]\n        return \"NO\"\n\
    \    if interval2[1] < interval1[1]\n        return \"NO\"\n    if interval1[1]\
    \ == interval2[1]\n        return \"YES\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval2[1] < interval1[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval2[1] < interval1[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval2[1] < interval1[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval2[1]\
    \ < interval1[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval2[1] < interval1[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval2[1] < interval1[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval2[1] < interval1[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval2[1]\
    \ < interval1[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval2[1] < interval1[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval2[1] < interval1[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval2[1] < interval1[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval2[1]\
    \ < interval1[1]\n        return \"NO\"\n    if interval1[1] > interval", "  \
    \  if interval1[1] <= interval2[1] and interval1[2] <= interval2[2] \n    then\
    \ \"YES\" \n    else \"NO\"\n    end\nend", "    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    elseif interval1[1] > interval2[1]\n        return\
    \ \"NO\"\n    elseif interval1[2] < interval2[2]\n        return \"NO\"\n    elseif\
    \ interval1[2] > interval2[2]\n        return \"NO\"\n    else\n        return\
    \ \"YES\"\n    end\nend\n</cell>\n<code language=julia-1.5>", "    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[2] < interval2[2]\n        return \"\
    NO\"\n    if interval1[2] > interval2[2]\n        return \"NO\"\n    if interval1[1]\
    \ <= interval2[1] and interval1[2] <= interval2[2]\n        return \"YES\"\n \
    \   return \"NO\"\nend\n</cell>\n<code language=julia-1.5>", "    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    elseif interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    elseif interval1[2] < interval2[2]\n        return\
    \ \"NO\"\n    elseif interval1[2] > interval2[2]\n        return \"NO\"\n    else\n\
    \        return \"YES\"\n    end\nend", "    if interval1[1] < interval2[1] and\
    \ interval1[1] < interval2[1]\n        return \"NO\"\n    elseif interval2[1]\
    \ < interval1[1] and interval2[1] < interval1[1]\n        return \"NO\"\n    elseif\
    \ interval1[1] == interval2[1]\n        return \"YES\"\n    elseif interval2[1]\
    \ > interval1[1] and interval2[1] > interval1[1]\n        return \"NO\"\n    elseif\
    \ interval1[1] > interval2[1] and interval1[1] > interval2[1]\n        return\
    \ \"NO\"\n    elseif interval1[1] < interval2[1] and interval2[1] > interval1[1]\n\
    \        return \"NO\"\n    elseif interval1[1] > interval2[1] and interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    elseif interval1[1] < interval2[1]\
    \ and interval2[1] < interval1[1]\n        return \"NO\"\n    elseif interval1[1]\
    \ > interval2[1] and interval1[1] > interval2[1]\n        return \"NO\"\n    elseif\
    \ interval1[1] < interval2[1] and interval2[1] < interval1[1]\n        return\
    \ \"NO\"\n    elseif interval1[1] > interval2[1] and interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    elseif interval1[1] < interval2[1] and interval2[1]\
    \ > interval1[1]\n        return \"NO\"\n    elseif interval1[1] > interval2[1]\
    \ and interval1[1] > interval2[1]\n        return \"NO\"\n    elseif interval1[1]\
    \ < interval2[1] and interval2[1] < interval1[1]\n        return \"NO\"\n    elseif\
    \ interval1[1] > interval2[1] and interval1[1] < interval2[1]\n        return\
    \ \"NO\"\n    elseif interval1[1] < interval2[1] and interval2[1] > interval1[1]\n\
    \        return \"NO\"\n    elseif interval1[1] > interval2[1] and interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    elseif interval1[1] < interval2[1]\
    \ and interval2[1] < interval1[1]\n        return \"NO\"\n    elseif interval1[1]\
    \ > interval2[1] and interval1[1] < interval2[1]\n        return \"NO\"\n    elseif\
    \ interval1[1] < interval2[1] and interval2[1] > interval1[1]\n        return\
    \ \"NO\"\n    elseif interval1[1] > interval2[1] and interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    elseif interval1[1] < interval2[1] and interval2[1]\
    \ < interval1[1]\n        return \"NO\"\n    elseif interval1[1] > interval2[1]\
    \ and interval1[1] < interval2[1]\n        return \"NO\"\n    elseif interval1[1]\
    \ < interval2[1] and interval2[1] > interval1", "    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[2] < interval2[2]\n        return \"NO\"\n    if interval1[2]\
    \ > interval2[2]\n        return \"NO\"\n    if interval1[1] < interval2[1] &&\
    \ interval1[2] < interval2[2]\n        return \"NO\"\n    if interval1[1] > interval2[1]\
    \ && interval1[2] > interval2[2]\n        return \"NO\"\n    if interval1[1] <\
    \ interval2[1] && interval1[2] > interval2[2]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1] && interval1[2] < interval2[2]\n        return \"NO\"\n    return\
    \ \"YES\"\nend", "    if interval1[1] < interval2[1]\n        return \"NO\"\n\
    \    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    if interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[2]\n        return \"\
    NO\"\n    if interval1[2] < interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[2]\n\
    \        return \"NO\"\n    return \"YES\"\nend\n</cell>\n<code language=julia-1.0>",
  "    \n    if interval1[1] < interval2[0]\n        return \"NO\"\n    \n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    \n    if interval1[0] == interval2[0]\n\
    \        return \"YES\"\n    \n    if interval1[0] == interval2[1]\n        return\
    \ \"YES\"\n    \n    if interval1[1] == interval2[0]\n        return \"YES\"\n\
    \    \n    if interval1[1] == interval2[1]\n        return \"YES\"\n    \n   \
    \ return \"NO\"\nend", "    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    if interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    if interval1[1] >= interval2[1] and interval1[2] >=\
    \ interval2[2]\n        return \"YES\"\n    return \"NO\"\nend", "    if interval1[1]\
    \ < interval2[0]\n        return \"NO\"\n    if interval1[0] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] == interval2[1]\n        return \"\
    YES\"\n    if interval1[0] == interval2[0]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[0] > interval2[0]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[1] < interval2[0]\n        return \"NO\"\n    if interval1[0]\
    \ < interval2[0]\n        return \"NO\"\n    if interval1[1] > interval2[0]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[0] > interval2[0]\n        return \"NO\"\n    return \"\
    YES\"\nend", "    if interval1[1] < interval2[0]\n        return \"NO\"\n    if\
    \ interval1[0] > interval2[1]\n        return \"NO\"\n    if interval1[1] == interval2[0]\n\
    \        return \"YES\"\n    if interval1[0] == interval2[1]\n        return \"\
    YES\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval1[0]\
    \ > interval2[0]\n        return \"NO\"\n    if interval1[1] == interval2[1]\n\
    \        return \"YES\"\n    if interval1[0] == interval2[0]\n        return \"\
    YES\"\n    if interval1[1] < interval2[0]\n        return \"NO\"\n    if interval1[0]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] == interval2[0]\n\
    \        return \"YES\"\n    if interval1[0] == interval2[1]\n        return \"\
    YES\"\n    return \"NO\"\nend\n</cell>\n<code language=julia-1.0>", "    if interval1[1]\
    \ <= interval2[1] and interval1[2] <= interval2[2] \n        then \"YES\" \n \
    \       else if interval1[1] > interval2[1] and interval1[2] > interval2[2] \n\
    \            then \"NO\" \n            else if interval1[1] < interval2[1] and\
    \ interval1[2] < interval2[2] \n                then \"NO\" \n               \
    \ else if interval1[1] < interval2[1] and interval1[2] > interval2[2] \n     \
    \               then \"NO\" \n                    else if interval1[1] > interval2[1]\
    \ and interval1[2] < interval2[2] \n                        then \"NO\" \n   \
    \                     else \"NO\" \n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    # test case\nintersection((1, 2), (2, 3))\n</cell>\n<code language=julia-1.4>\n\
    # test case\nintersection((-1, 1), (0, 4))\n</cell>\n<code language=julia-1.4>\n\
    # test case\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.4>\n\
    # test case\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.4>\n\
    # test case\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.4>\n\
    # test case\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.4>\n\
    # test case\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.4>\n\
    # test case\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.4>\n\
    # test case\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.4>\n\
    # test case\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.4>\n\
    # test case\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.4>\n\
    # test case\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.4>\n\
    # test case\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.4>\n\
    # test case\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.4>\n\
    # test case\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.4>\n\
    # test case\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.4>\n\
    # test case\nintersection((-3, -1), (-5, 5))\n</cell>\n<code language=julia-1.4>\n\
    # test ", "    if interval1[1] < interval2[0]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[0] == interval2[0]\n\
    \        return \"YES\"\n    if interval1[0] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[0]\n        return \"NO\"\n    if interval1[0]\
    \ == interval2[1]\n        return \"YES\"\n    if interval1[0] < interval2[0]\n\
    \        return \"NO\"\n    return \"NO\"\nend", "    if interval1[1] <= interval2[1]\
    \ and interval1[2] <= interval2[2]\n        return \"YES\"\n    else\n       \
    \ return \"NO\"\n    end\nend\n</cell>\n<code language=julia-1.5>", "    \n  \
    \  if interval1[1] <= interval2[1] and interval1[2] <= interval2[2]\n        return\
    \ \"YES\"\n    else if interval1[1] >= interval2[1] and interval1[2] >= interval2[2]\n\
    \        return \"NO\"\n    else\n        return \"NO\"\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n# Test your function with the above cases:\n@test intersection((1,\
    \ 2), (2, 3)) == \"NO\"\n@test intersection((-1, 1), (0, 4)) == \"NO\"\n@test\
    \ intersection((-3, -1), (-5, 5)) == \"YES\"\n</cell>\n<text>\nPart III. Prime\
    \ Numbers\nThe prime number theorem states that no prime number is a factor of\
    \ any number other than 1 and itself. \nFor example, the divisors of 7 are 1,\
    \ 2, 3, 5, 7, 11, 13 and 17.\nThe prime factors of 13195 are 5, 7, 11, 13 and\
    \ 17.\nIf 2 is a prime number, then 2 is called a prime number.\nIf any number\
    \ greater than 1 that has no positive divisors other than 1 and itself is prime,\
    \ \nthen that number is called a composite number.\nA composite number has at\
    \ least one positive divisor other than 1 and itself.", "    if interval1[1] <\
    \ interval2[0] || interval2[1] < interval1[0] \n        return \"NO\"\n    else\
    \ \n        return \"YES\"\nend", "    if interval1[1] < interval2[0]\n      \
    \  return \"NO\"\n    if interval2[1] < interval1[0]\n        return \"NO\"\n\
    \    if interval1[1] == interval2[1]\n        return \"YES\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[0] == interval2[0]\n\
    \        return \"NO\"\n    if interval1[0] < interval2[0]\n        return \"\
    NO\"\n    if interval1[0] > interval2[0]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[0] == interval2[0]\n        return \"\
    NO\"\n    if interval1[0] < interval2[0]\n        return \"NO\"\n    if interval1[0]\
    \ > interval2[0]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[0] == interval2[0]\n        return \"NO\"\n    if interval1[0]\
    \ < interval2[0]\n        return \"NO\"\n    if interval1[0] > interval2[0]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[0]\
    \ == interval2[0]\n        return \"NO\"\n    if interval1[0] < interval2[0]\n\
    \        return \"NO\"\n    if interval1[0] > interval2[0]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[0] == interval2[0]\n\
    \        return \"NO\"\n    if interval1[0] < interval2[0]\n        return \"\
    NO\"\n    if interval1[0] > interval2[0]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[0] == interval2[0]\n        return \"\
    NO\"\n    if interval1[0] < interval2[0]\n        return \"NO\"\n    if interval1[0]\
    \ > interval2[0]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[0] == interval2[0]\n        return \"NO\"\n    if interval1[0]\
    \ < interval2[0]\n        return \"NO\"\n    if interval1[0] > interval2[0]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[0]\
    \ == interval2[0]\n        return \"NO\"\n    if ", "    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    elseif interval1[1] > interval2[1]\n        return\
    \ \"NO\"\n    elseif interval1[2] < interval2[2]\n        return \"NO\"\n    elseif\
    \ interval1[2] > interval2[2]\n        return \"NO\"\n    elseif interval1[1]\
    \ > interval2[1] && interval1[2] < interval2[2]\n        return \"NO\"\n    elseif\
    \ interval1[1] > interval2[1] && interval1[2] > interval2[2]\n        return \"\
    NO\"\n    elseif interval1[1] < interval2[1] && interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    elseif interval1[1] < interval2[1] && interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    elseif interval1[1] > interval2[1]\
    \ && interval1[2] < interval2[2]\n        return \"NO\"\n    elseif interval1[1]\
    \ > interval2[1] && interval1[2] > interval2[2]\n        return \"NO\"\n    elseif\
    \ interval1[1] < interval2[1] && interval1[2] > interval2[2]\n        return \"\
    NO\"\n    elseif interval1[1] < interval2[1] && interval1[2] < interval2[2]\n\
    \        return \"NO\"\n    elseif interval1[1] > interval2[1] && interval1[2]\
    \ > interval2[2]\n        return \"NO\"\n    elseif interval1[1] < interval2[1]\
    \ && interval1[2] < interval2[2]\n        return \"NO\"\n    elseif interval1[1]\
    \ > interval2[1] && interval1[2] > interval2[2]\n        return \"NO\"\n    elseif\
    \ interval1[1] < interval2[1] && interval1[2] < interval2[2]\n        return \"\
    NO\"\n    elseif interval1[1] > interval2[1] && interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    elseif interval1[1] < interval2[1] && interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    elseif interval1[1] > interval2[1]\
    \ && interval1[2] > interval2[2]\n        return \"NO\"\n    elseif interval1[1]\
    \ < interval2[1] && interval1[2] < interval2[2]\n        return \"NO\"\n    elseif\
    \ interval1[1] > interval2[1] && interval1[2] > interval2[2]\n        return \"\
    NO\"\n    elseif interval1[1] < interval2[1] && interval1[2] < interval2[2]\n\
    \        return \"NO\"\n    elseif interval1[1] > interval2[1] && interval1[2]\
    \ > interval2[2]\n        return \"NO\"\n    elseif interval1[1] < interval2[1]\
    \ && interval1[2] < interval2[2]\n        return \"NO\"\n    elseif interval1[1]\
    \ > interval2[1] && interval1[2] > interval2[2]", "    if interval1[1] < interval2[1]\
    \ or interval2[1] < interval1[1] \n        return \"NO\"\n    \n    if interval1[1]\
    \ == interval2[1]\n        return \"YES\"\n    \n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[1] > interval2[1]\n        return \"NO\"\n  \
    \  \n    if interval1[1] < interval2[1]\n        return \"NO\"\n    \n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[1] > interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return \"NO\"\n  \
    \  \n    if interval1[1] > interval2[1]\n        return \"NO\"\n    \n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    \n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[1] > interval2[1]\n        return \"NO\"\n  \
    \  \n    if interval1[1] < interval2[1]\n        return \"NO\"\n    \n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[1] > interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return \"NO\"\n  \
    \  \n    if interval1[1] > interval2[1]\n        return \"NO\"\n    \n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    \n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[1] > interval2[1]\n        return \"NO\"\n  \
    \  \n    if interval1[1] < interval2[1]\n        return \"NO\"\n    \n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[1] > interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return \"NO\"\n  \
    \  \n    if interval1[1] > interval2[1]\n        return \"NO\"\n    \n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    \n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return\
    \ \"", "    if interval1[1] < interval2[0]\n        return \"NO\"\n    if interval1[0]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] == interval2[0]\n\
    \        return \"YES\"\n    if interval1[1] == interval2[1]\n        return \"\
    YES\"\n    if interval1[0] < interval2[1]\n        return \"NO\"\n    if interval1[0]\
    \ > interval2[0]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[0] < interval2[0]\n        return \"\
    NO\"\n    if interval1[1] > interval2[0]\n        return \"NO\"\n    return \"\
    YES\"\nend", "    if interval1[1] <= interval2[1] and interval1[2] <= interval2[2]\n\
    \    then \"YES\"\n    else \"NO\"\n    end\nend", "    if interval1[1] < interval2[0]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[0] == interval2[0]\n        return \"YES\"\n    if interval1[0]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[0]\n\
    \        return \"NO\"\n    if interval1[1] == interval2[1]\n        return \"\
    YES\"\n    if interval1[0] == interval2[1]\n        return \"YES\"\n    if interval1[1]\
    \ == interval2[0]\n        return \"YES\"\n    if interval1[0] == interval2[1]\n\
    \        return \"YES\"\n    if interval1[0] == interval2[0]\n        return \"\
    YES\"\n    return \"NO\"\nend\n</cell>\n<code language=julia-1.5>", "    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[2] < interval2[2]\n        return \"\
    NO\"\n    if interval1[2] > interval2[2]\n        return \"NO\"\n    if interval1[1]\
    \ >= interval2[1] and interval1[2] >= interval2[2]\n        return \"YES\"\n \
    \   return \"NO\"\nend", "    if interval1[1] < interval2[0]\n        return \"\
    NO\"\n    if interval1[0] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ == interval2[1]\n        return \"YES\"\n    if interval1[1] == interval2[0]\n\
    \        return \"YES\"\n    if interval1[0] == interval2[1]\n        return \"\
    YES\"\n    if interval1[0] == interval2[0]\n        return \"YES\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[0] > interval2[0]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[1] < interval2[0]\n        return \"NO\"\n    if interval1[0]\
    \ > interval2[0]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[0]\n        return \"\
    NO\"\n    if interval1[0] > interval2[0]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[0]\n        return \"NO\"\n    return \"NO\"\nend", "    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[2] < interval2[2]\n        return \"\
    NO\"\n    if interval1[2] > interval2[2]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[2]\n        return \"NO\"\n    if interval1[2] < interval2[1]\n\
    \        return \"NO\"\n    return \"YES\"\nend", "    \n    if interval1[1] <\
    \ interval2[1]\n        return \"NO\"\n    \n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[2] < interval2[2]\n        return\
    \ \"NO\"\n    \n    if interval1[2] > interval2[2]\n        return \"NO\"\n  \
    \  \n    return \"YES\"\nend", "    if interval1[1] == interval2[1]\n        return\
    \ \"NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    return \"YES\"\nend", "    if interval1[1]\
    \ < interval2[0]\n        return \"NO\"\n    if interval2[1] < interval1[0]\n\
    \        return \"NO\"\n    if interval1[1] == interval2[1]\n        return \"\
    YES\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[0] == interval2[0]\n        return \"\
    YES\"\n    if interval1[0] > interval2[0]\n        return \"NO\"\n    if interval1[0]\
    \ < interval2[0]\n        return \"NO\"\n    if interval1[0] == interval2[0]\n\
    \        return \"YES\"\n    if interval1[0] > interval2[0]\n        return \"\
    NO\"\n    if interval1[0] < interval2[0]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    return \"\
    NO\"\nend\n</cell>\n<code language=julia-1.0>", "    \n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    else if interval1[1] > interval2[1]\n        return\
    \ \"NO\"\n    elseif interval1[2] < interval2[2]\n        return \"NO\"\n    elseif\
    \ interval1[2] > interval2[2]\n        return \"NO\"\n    elseif interval1[1]\
    \ > interval2[1] and interval1[2] < interval2[2]\n        return \"NO\"\n    elseif\
    \ interval1[1] > interval2[1] and interval1[2] > interval2[2]\n        return\
    \ \"NO\"\n    elseif interval1[1] < interval2[1] and interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    elseif interval1[1] < interval2[1] and interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    else\n        return \"YES\"\n  \
    \  end\nend\n</cell>\n<code language=julia-1.5>", "    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[2] < interval2[2]\n        return \"NO\"\n    if interval1[2]\
    \ > interval2[2]\n        return \"NO\"\n    if interval1[1] > interval2[1] and\
    \ interval1[2] < interval2[2]\n        return \"NO\"\n    if interval1[1] > interval2[1]\
    \ and interval1[2] > interval2[2]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1] and interval1[2] > interval2[2]\n        return \"NO\"\n    if\
    \ interval1[1] < interval2[1] and interval1[2] < interval2[2]\n        return\
    \ \"NO\"\n    return \"YES\"\nend\n</cell>\n<code language=julia-1.5>", "    if\
    \ interval1[1] <= interval2[1] and interval1[2] <= interval2[2] \n        then\
    \ \"YES\" \n        else \n            if interval1[1] > interval2[1] and interval1[2]\
    \ > interval2[2] \n                then \"NO\" \n                else \n     \
    \               if interval1[1] > interval2[1] and interval1[2] <= interval2[2]\
    \ \n                        then \"NO\" \n                        else \n    \
    \                        if interval1[1] <= interval2[1] and interval1[2] > interval2[2]\
    \ \n                                then \"NO\" \n                           \
    \     else \n                                    if interval1[1] <= interval2[1]\
    \ and interval1[2] <= interval2[2] \n                                        then\
    \ \"YES\" \n                                        else \"NO\"\nend\n</cell>\n\
    <code language=julia-1.5>", "    if interval1[1] < interval2[0]\n        return\
    \ \"NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[0]\
    \ == interval2[0]\n        return \"YES\"\n    \n    \n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    \n    \n    if interval1[0] == interval2[1]\n    \
    \    return \"YES\"\n    \n    \n    if interval1[1] > interval2[0]\n        return\
    \ \"NO\"\n    \n    \n    if interval1[0] < interval2[0]\n        return \"NO\"\
    \n    \n    \n    if interval1[0] > interval2[1]\n        return \"NO\"\n    \n\
    \    \n    if interval1[0] == interval2[0]\n        return \"YES\"\n    \n   \
    \ \n    if interval1[1] < interval2[0]\n        return \"NO\"\n    \n    \n  \
    \  if interval1[1] > interval2[1]\n        return \"NO\"\n    \n    \n    if interval1[0]\
    \ == interval2[1]\n        return \"YES\"\n    \n    \n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    \n    \n    if interval1[0] == interval2[0]\n    \
    \    return \"YES\"\n    \n    \n    if interval1[1] > interval2[0]\n        return\
    \ \"NO\"\n    \n    \n    if interval1[0] < interval2[1]\n        return \"NO\"\
    \n    \n    \n    if interval1[0] > interval2[0]\n        return \"NO\"\n    \n\
    \    \n    if interval1[0] == interval2[1]\n        return \"YES\"\n    \n   \
    \ \n    if interval1[1] < interval2[0]\n        return \"NO\"\n    \n    \n  \
    \  if interval1[1] > interval2[1]\n        return \"NO\"\n    \n    \n    if interval1[0]\
    \ == interval2[0]\n        return \"YES\"\n    \n    \n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    \n    \n    if interval1[0] == interval2[1]\n    \
    \    return \"YES\"\n    \n    \n    if interval1[1] > interval2[0]\n        return\
    \ \"NO\"\n    \n    \n    if interval1[0] < interval2[0]\n        return \"NO\"\
    \n    \n    \n    if interval1[0] > interval2[1]\n        return \"NO\"\n    \n\
    \    \n    if interval1[0] == interval2[1]\n        return \"YES\"\n    \n   \
    \ \n    if interval1[1] < interval2[1]\n        return \"NO\"\n    \n    \n  \
    \  if interval1[0] == interval2[0]\n        return \"YES\"\n    \n    \n    if\
    \ interval1[1] > interval2[0]\n        return \"NO\"\n    \n    \n    if interval1[0]\
    \ < interval2[0]\n        return \"NO\"\n    \n    \n    if interval1", "    if\
    \ interval1[1] <= interval2[1] and interval1[2] <= interval2[2]\n    then \"YES\"\
    \n    else \"NO\"\n    end\nend", "    if interval1[1] < interval2[0] || interval2[1]\
    \ < interval1[0] \n        return \"NO\"\n    else \n        return \"YES\"\n\
    end", "    if interval1[1] < interval2[1]\n        return \"NO\"\n    elseif interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    elseif interval1[2] < interval2[2]\n\
    \        return \"NO\"\n    elseif interval1[2] > interval2[2]\n        return\
    \ \"NO\"\n    elseif interval1[1] <= interval2[1] && interval1[2] <= interval2[2]\n\
    \        return \"YES\"\n    elseif interval1[1] >= interval2[1] && interval1[2]\
    \ >= interval2[2]\n        return \"YES\"\n    elseif interval1[1] <= interval2[1]\
    \ && interval1[2] >= interval2[2]\n        return \"NO\"\n    elseif interval1[1]\
    \ >= interval2[1] && interval1[2] <= interval2[2]\n        return \"NO\"\n   \
    \ else\n        return \"NO\"\n    end\nend", "    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[2] < interval2[2]\n        return \"NO\"\n    if interval1[2]\
    \ > interval2[2]\n        return \"NO\"\n    return \"YES\"\nend", "    if interval1[1]\
    \ < interval2[0]\n        return \"NO\"\n    elseif interval1[0] > interval2[1]\n\
    \        return \"NO\"\n    elseif interval1[1] == interval2[1]\n        return\
    \ \"YES\"\n    elseif interval1[0] == interval2[0]\n        return \"NO\"\n  \
    \  else\n        return \"NO\"\n    end\nend", "    if interval1[1] < interval2[0]\n\
    \        return \"NO\"\n    elseif interval1[1] > interval2[1]\n        return\
    \ \"NO\"\n    elseif interval1[0] == interval2[0]\n        return \"YES\"\n  \
    \  else\n        return \"NO\"\n    end\nend", "    if interval1[1] < interval2[0]\n\
    \        return \"NO\"\n    if interval2[1] < interval1[0]\n        return \"\
    NO\"\n    if interval1[1] == interval2[1]\n        return \"YES\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval2[1] > interval1[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    return \"YES\"\nend", "    if interval1[1]\
    \ == interval2[1]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[0] == interval2[0]\n        return \"NO\"\n    if interval1[0]\
    \ < interval2[0]\n        return \"NO\"\n    if interval1[0] > interval2[0]\n\
    \        return \"NO\"\n    return \"YES\"\nend", "    \n    if interval1[1] <\
    \ interval2[1]\n        return \"NO\"\n    elseif interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    elseif interval1[2] < interval2[2]\n        return\
    \ \"NO\"\n    elseif interval1[2] > interval2[2]\n        return \"NO\"\n    else\n\
    \        return \"YES\"\n    end\nend", "    if interval1[1] < interval2[1] or\
    \ interval2[1] < interval1[1] \n        return \"NO\"\n    \n    if interval1[1]\
    \ == interval2[1]\n        return \"YES\"\n    \n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[1] > interval2[1]\n        return \"NO\"\n  \
    \  \n    if interval1[1] < interval2[1]\n        return \"NO\"\n    \n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[1] > interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return \"NO\"\n  \
    \  \n    if interval1[1] > interval2[1]\n        return \"NO\"\n    \n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    \n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[1] > interval2[1]\n        return \"NO\"\n  \
    \  \n    if interval1[1] < interval2[1]\n        return \"NO\"\n    \n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[1] > interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return \"NO\"\n  \
    \  \n    if interval1[1] > interval2[1]\n        return \"NO\"\n    \n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    \n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[1] > interval2[1]\n        return \"NO\"\n  \
    \  \n    if interval1[1] < interval2[1]\n        return \"NO\"\n    \n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[1] > interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return \"NO\"\n  \
    \  \n    if interval1[1] > interval2[1]\n        return \"NO\"\n    \n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    \n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return\
    \ \"", "    if interval1[1] == interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[0] == interval2[1]\n        return \"\
    NO\"\n    if interval1[0] < interval2[1]\n        return \"NO\"\n    if interval1[0]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[0] == interval2[0]\n\
    \        return \"YES\"\n    if interval1[0] < interval2[0]\n        return \"\
    NO\"\n    if interval1[0] > interval2[0]\n        return \"NO\"\n    return \"\
    YES\"\nend\n</cell>\n<code language=julia-1.5>", "    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[2] < interval2[2]\n        return \"NO\"\n    if interval1[2]\
    \ > interval2[2]\n        return \"NO\"\n    if interval1[1] <= interval2[1] and\
    \ interval1[2] <= interval2[2]\n        return \"YES\"\n    return \"NO\"\nend\n\
    </cell>\n<code language=julia-1.0>", "    if interval1[1] < interval2[1]\n   \
    \     return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\
    \n    if interval1[2] < interval2[2]\n        return \"NO\"\n    if interval1[2]\
    \ > interval2[2]\n        return \"NO\"\n    return \"YES\"\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    if interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    return \"YES\"\nend", "    if interval1[1] < interval2[0]\n\
    \        return \"NO\"\n    if interval2[1] < interval1[0]\n        return \"\
    NO\"\n    if interval1[1] == interval2[1]\n        return \"YES\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    return \"NO\"\nend", "    \n    if interval1[1] < interval2[0]\n   \
    \     return \"NO\"\n    \n    if interval1[1] > interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[0] == interval2[0]\n        return \"YES\"\n\
    \    \n    if interval1[0] < interval2[1]\n        return \"NO\"\n    \n    if\
    \ interval1[0] > interval2[0]\n        return \"NO\"\n    \n    return \"YES\"\
    \nend", "    if interval1[1] < interval2[1] or interval1[1] > interval2[1] or\
    \ interval1[2] < interval2[2] or interval1[2] > interval2[2]\n        return \"\
    NO\"\n    \n    if interval1[1] == interval2[1] and interval1[2] == interval2[2]\n\
    \        return \"YES\"\n    \n    if interval1[1] < interval2[1] and interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    \n    if interval1[1] > interval2[1]\
    \ and interval1[2] > interval2[2]\n        return \"NO\"\n    \n    if interval1[1]\
    \ < interval2[1] and interval1[2] > interval2[2]\n        return \"NO\"\n    \n\
    \    if interval1[1] > interval2[1] and interval1[2] < interval2[2]\n        return\
    \ \"NO\"\n    \n    if interval1[1] < interval2[1] and interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    \n    if interval1[1] > interval2[1] and interval1[2]\
    \ > interval2[2]\n        return \"NO\"\n    \n    if interval1[1] < interval2[1]\
    \ and interval1[2] < interval2[2]\n        return \"NO\"\n    \n    if interval1[1]\
    \ > interval2[1] and interval1[2] < interval2[2]\n        return \"NO\"\n    \n\
    \    if interval1[1] < interval2[1] and interval1[2] > interval2[2]\n        return\
    \ \"NO\"\n    \n    if interval1[1] > interval2[1] and interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    \n    if interval1[1] < interval2[1] and interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    \n    if interval1[1] > interval2[1]\
    \ and interval1[2] > interval2[2]\n        return \"NO\"\n    \n    if interval1[1]\
    \ < interval2[1] and interval1[2] < interval2[2]\n        return \"NO\"\n    \n\
    \    if interval1[1] > interval2[1] and interval1[2] > interval2[2]\n        return\
    \ \"NO\"\n    \n    if interval1[1] < interval2[1] and interval1[2] < interval2[2]\n\
    \        return \"NO\"\n    \n    if interval1[1] > interval2[1] and interval1[2]\
    \ > interval2[2]\n        return \"NO\"\n    \n    if interval1[1] < interval2[1]\
    \ and interval1[2] < interval2[2]\n        return \"NO\"\n    \n    if interval1[1]\
    \ > interval2[1] and interval1[2] > interval2[2]\n        return \"NO\"\n    \n\
    \    if interval1[1] < interval2[1] and interval1[2] < interval2[2]\n        return\
    \ \"NO\"\n    \n    if interval1[1] > interval2[1] and interval1[2] > interval",
  "    if interval1[1] < interval2[0]\n        return \"NO\"\n    if interval2[1]\
    \ < interval1[0]\n        return \"NO\"\n    if interval1[1] == interval2[1]\n\
    \        return \"YES\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[0] < interval2[0]\n        return \"NO\"\n    if interval2[0]\
    \ < interval1[0]\n        return \"NO\"\n    if interval1[0] == interval2[0]\n\
    \        return \"YES\"\n    if interval1[0] > interval2[0]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval2[1]\
    \ < interval1[1]\n        return \"NO\"\n    if interval1[1] == interval2[1]\n\
    \        return \"YES\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[0] < interval2[0]\n        return \"NO\"\n    if interval2[0]\
    \ < interval1[0]\n        return \"NO\"\n    if interval1[0] == interval2[0]\n\
    \        return \"YES\"\n    if interval1[0] > interval2[0]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval2[1]\
    \ < interval1[1]\n        return \"NO\"\n    if interval1[1] == interval2[1]\n\
    \        return \"YES\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[0] < interval2[0]\n        return \"NO\"\n    if interval2[0]\
    \ < interval1[0]\n        return \"NO\"\n    if interval1[0] == interval2[0]\n\
    \        return \"YES\"\n    if interval1[0] > interval2[0]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval2[1]\
    \ < interval1[1]\n        return \"NO\"\n    if interval1[1] == interval2[1]\n\
    \        return \"YES\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[0] < interval2[0]\n        return \"NO\"\n    if interval2[0]\
    \ < interval1[0]\n        return \"NO\"\n    if interval1[0] == interval2[0]\n\
    \        return \"YES\"\n    if interval1[0] > interval2[0]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval2[1]\
    \ < interval1[1]\n        return \"NO\"\n    if interval1[1] == interval2[1]\n\
    \        return \"YES\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[0] < interval2[0]\n        return \"NO\"\n    if interval2[0]\
    \ < interval1[0]\n        return \"NO\"\n    if interval1[0] == interval2[0]\n\
    \        return \"YES\"\n    if interval1[0] > interval2[0]\n        return \"\
    NO\"\n    if interval", "    if interval1[1] <= interval2[1] and interval1[2]\
    \ <= interval2[2] \n    then \"YES\" \n    else \"NO\" \n    end\nend", "    if\
    \ interval1[1] < interval2[0]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[0] == interval2[0]\n        return \"\
    YES\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n", "    if interval1[1] < interval2[1]\n        return\
    \ \"NO\"\n    elseif interval1[1] > interval2[1]\n        return \"NO\"\n    elseif\
    \ interval1[2] < interval2[2]\n        return \"NO\"\n    elseif interval1[2]\
    \ > interval2[2]\n        return \"NO\"\n    else\n        return \"YES\"\n  \
    \  end\nend", "    if interval1[1] < interval2[1]\n        return \"NO\"\n   \
    \ if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[2] <\
    \ interval2[2]\n        return \"NO\"\n    if interval1[2] > interval2[2]\n  \
    \      return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\
    \n    if interval1[2] < interval2[2]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[2] < interval2[2]\n        return \"NO\"\n    return \"\
    YES\"\nend\n</cell>\n<code language=julia-1.5>", "    if interval1[1] < interval2[1]\
    \ or interval2[1] < interval1[1]\n        return \"NO\"\n    \n    if interval1[1]\
    \ == interval2[1]\n        return \"YES\"\n    \n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n", "    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[2] < interval2[2]\n\
    \        return \"NO\"\n    if interval1[2] > interval2[2]\n        return \"\
    NO\"\n    if interval1[1] <= interval2[1] and interval1[2] <= interval2[2]\n \
    \       return \"YES\"\n    return \"NO\"\nend", "    if interval1[1] < interval2[0]\n\
    \        return \"NO\"\n    elseif interval1[0] < interval2[1]\n        return\
    \ \"NO\"\n    else\n        return \"YES\"\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    # Test Cases\n@test intersection((1, 2), (2, 3)) == \"NO\"\n@test intersection((-1,\
    \ 1), (0, 4)) == \"NO\"\n@test intersection((-3, -1), (-5, 5)) == \"YES\"\n</cell>\n\
    <text>\nProblem 3\nGiven a string, return \"YES\" if every character in the string\
    \ is a vowel, \n\"NO\" if every character in the string is a consonant, and \"\
    ERROR\" otherwise.\nThe vowels are \"a\", \"e\", \"i\", \"o\", and \"u\". \nThe\
    \ consonants are \"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\"\
    , \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\"\
    , \"z\".\nExample: \"aeiou\" -> \"YES\"\nExample: \"aeiouy\" -> \"NO\"\nExample:\
    \ \"aeiouay\" -> \"ERROR\"\nExample: \"a\" -> \"ERROR\"\nExample: \"ab\" -> \"\
    ERROR\"\nExample: \"abc\" -> \"YES\"\nExample: \"a\" -> \"YES\"\nExample: \"a\"\
    \ -> \"YES\"\nExample: \"ab\" -> \"YES\"\nExample: \"ab\" -> \"YES\"\nExample:\
    \ \"ab\" -> \"YES\"\nExample: \"ab\" -> \"YES\"\nExample: \"ab\" -> \"YES\"\n\
    Example: \"ab\" -> \"YES\"\nExample: \"ab\" -> \"YES\"\nExample: \"ab\" -> \"\
    YES\"\nExample: \"ab\" -> \"YES\"\nExample: \"ab\" -> \"YES\"\nExample: \"ab\"\
    \ -> \"YES\"\nExample: \"ab\" -> \"YES\"\nExample: \"ab\" -> \"YES\"\nExample:\
    \ \"ab\" -> \"YES\"\nExample: \"ab\" -> \"YES\"\nExample: \"ab\" -> \"YES\"\n\
    Example: \"ab\" -> \"YES\"\nExample: \"ab\" -> \"YES\"\nExample: \"ab\" -> \"\
    YES\"\nExample: \"ab\" -> \"YES\"\nExample: \"ab\" -> \"YES\"\nExample: \"ab\"\
    \ -> \"YES\"\nExample: \"ab\" -> \"YES\"\nExample: \"ab\" -> \"YES\"\nExample:\
    \ \"ab\" -> \"YES\"\nExample: \"ab\" -> \"YES\"\nExample: \"ab\" -> \"YES\"\n\
    Example: \"ab\" -> \"YES\"", "    if interval1[1] < interval2[0]\n        return\
    \ \"NO\"\n    if interval2[1] < interval1[0]\n        return \"NO\"\n    if interval1[1]\
    \ == interval2[1]\n        return \"YES\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[0] == interval2[0]\n        return \"\
    YES\"\n    if interval1[0] < interval2[0]\n        return \"NO\"\n    if interval1[0]\
    \ > interval2[0]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[0] == interval2[0]\n        return \"NO\"\n    if interval1[0]\
    \ < interval2[0]\n        return \"NO\"\n    if interval1[0] > interval2[0]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[0]\
    \ == interval2[0]\n        return \"NO\"\n    if interval1[0] < interval2[0]\n\
    \        return \"NO\"\n    if interval1[0] > interval2[0]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[0] == interval2[0]\n\
    \        return \"NO\"\n    if interval1[0] < interval2[0]\n        return \"\
    NO\"\n    if interval1[0] > interval2[0]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[0] == interval2[0]\n        return \"\
    NO\"\n    if interval1[0] < interval2[0]\n        return \"NO\"\n    if interval1[0]\
    \ > interval2[0]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[0] == interval2[0]\n        return \"NO\"\n    if interval1[0]\
    \ < interval2[0]\n        return \"NO\"\n    if interval1[0] > interval2[0]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[0]\
    \ == interval2[0]\n        return \"NO\"\n    if interval1[0] < interval2[0]\n\
    \        return \"NO\"\n    if interval1[0] > interval2[0]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[0] == interval2[0]\n\
    \        return \"NO\"\n    if ", "    if interval1[1] < interval2[0]\n      \
    \  return \"NO\"\n    elseif interval2[1] < interval1[0]\n        return \"NO\"\
    \n    else\n        return \"YES\"\n    end\nend", "    if interval1[1] < interval2[0]\n\
    \        return \"NO\"\n    if interval1[0] > interval2[1]\n        return \"\
    NO\"\n    if interval1[1] == interval2[1]\n        return \"YES\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[0] == interval2[0]\n\
    \        return \"YES\"\n    if interval1[0] < interval2[0]\n        return \"\
    NO\"\n    return \"NO\"\nend", "    \n    interval1_start = interval1[1]\n   \
    \ interval1_end = interval1[2]\n    interval2_start = interval2[1]\n    interval2_end\
    \ = interval2[2]\n    \n    if interval1_start <= interval2_start and interval1_end\
    \ >= interval2_end\n        return \"NO\"\n    \n    if interval1_start <= interval2_end\
    \ and interval1_end >= interval2_start\n        return \"NO\"\n    \n    if interval1_start\
    \ >= interval2_start and interval1_end <= interval2_end\n        return \"NO\"\
    \n    \n    if interval1_start >= interval2_end and interval1_end <= interval2_start\n\
    \        return \"NO\"\n    \n    if interval1_start <= interval2_start and interval1_end\
    \ >= interval2_end\n        return \"NO\"\n    \n    if interval1_start <= interval2_end\
    \ and interval1_end >= interval2_start\n        return \"NO\"\n    \n    if interval1_start\
    \ >= interval2_start and interval1_end <= interval2_end\n        return \"NO\"\
    \n    \n    if interval1_start >= interval2_end and interval1_end <= interval2_start\n\
    \        return \"NO\"\n    \n    if interval1_start <= interval2_start and interval1_end\
    \ >= interval2_end\n        return \"NO\"\n    \n    if interval1_start <= interval2_end\
    \ and interval1_end >= interval2_start\n        return \"NO\"\n    \n    if interval1_start\
    \ >= interval2_start and interval1_end <= interval2_end\n        return \"NO\"\
    \n    \n    if interval1_start >= interval2_end and interval1_end <= interval2_start\n\
    \        return \"NO\"\n    \n    if interval1_start <= interval2_start and interval1_end\
    \ >= interval2_end\n        return \"NO\"\n    \n    if interval1_start <= interval2_end\
    \ and interval1_end >= interval2_start\n        return \"NO\"\n    \n    if interval1_start\
    \ >= interval2_start and interval1_end <= interval2_end\n        return \"NO\"\
    \n    \n    if interval1_start >= interval2_end and interval1_end <= interval2_start\n\
    \        return \"NO\"\n    \n    if interval1_start <= interval2_start and interval1_end\
    \ >= interval2_end\n        return \"NO\"\n    \n    if interval1_start <= interval2_end\
    \ and interval1_end >= interval2_start\n        return \"NO\"\n    \n    if interval1_start\
    \ >= interval2_start and interval1_end <= interval2_end\n        return \"NO\"\
    \n    \n    if interval1_start >= interval2_end and interval1_end <= interval2_start\n\
    \        return \"NO\"\n    \n    if interval1_start <= interval2_start and interval1_end\
    \ >= interval2_end\n        return \"NO\"\n    \n    if interval1_start ", " \
    \   if interval1[1] < interval2[0]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[0] == interval2[0]\n\
    \        return \"YES\"\n    if interval1[0] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[0]\n        return \"NO\"\n    if interval1[0]\
    \ == interval2[1]\n        return \"YES\"\n    if interval1[1] < interval2[0]\n\
    \        return \"NO\"\n    if interval1[0] == interval2[1]\n        return \"\
    YES\"\n    if interval1[1] > interval2[0]\n        return \"NO\"\n    return \"\
    NO\"\nend", "    if interval1[1] < interval2[1]\n        return \"NO\"\n    elseif\
    \ interval1[1] > interval2[1]\n        return \"NO\"\n    elseif interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    elseif interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    else\n        return \"YES\"\n    end\nend", "   \
    \ if interval1[1] == interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    return \"\
    YES\"\nend", "    \n    if interval1[1] < interval2[1]\n        return \"NO\"\n\
    \    \n    if interval1[1] > interval2[1]\n        return \"NO\"\n    \n    if\
    \ interval1[2] < interval2[2]\n        return \"NO\"\n    \n    if interval1[2]\
    \ > interval2[2]\n        return \"NO\"\n    \n    return \"YES\"\nend", "   \
    \ if interval1[1] <= interval2[1] and interval2[1] <= interval1[1]\n        return\
    \ \"NO\"\n    if interval1[1] >= interval2[1] and interval2[1] >= interval1[1]\n\
    \        return \"NO\"\n    if interval1[1] >= interval2[1] and interval2[1] >=\
    \ interval1[1]\n        return \"NO\"\n    if interval1[1] <= interval2[1] and\
    \ interval2[1] >= interval1[1]\n        return \"NO\"\n    if interval1[1] <=\
    \ interval2[1] and interval2[1] >= interval1[1]\n        return \"NO\"\n    if\
    \ interval1[1] >= interval2[1] and interval2[1] >= interval1[1]\n        return\
    \ \"NO\"\n    if interval1[1] >= interval2[1] and interval2[1] >= interval1[1]\n\
    \        return \"NO\"\n    if interval1[1] >= interval2[1] and interval2[1] >=\
    \ interval1[1]\n        return \"NO\"\n    if interval1[1] >= interval2[1] and\
    \ interval2[1] >= interval1[1]\n        return \"NO\"\n    if interval1[1] >=\
    \ interval2[1] and interval2[1] >= interval1[1]\n        return \"NO\"\n    if\
    \ interval1[1] >= interval2[1] and interval2[1] >= interval1[1]\n        return\
    \ \"NO\"\n    if interval1[1] >= interval2[1] and interval2[1] >= interval1[1]\n\
    \        return \"NO\"\n    if interval1[1] >= interval2[1] and interval2[1] >=\
    \ interval1[1]\n        return \"NO\"\n    if interval1[1] >= interval2[1] and\
    \ interval2[1] >= interval1[1]\n        return \"NO\"\n    if interval1[1] >=\
    \ interval2[1] and interval2[1] >= interval1[1]\n        return \"NO\"\n    if\
    \ interval1[1] >= interval2[1] and interval2[1] >= interval1[1]\n        return\
    \ \"NO\"\n    if interval1[1] >= interval2[1] and interval2[1] >= interval1[1]\n\
    \        return \"NO\"\n    if interval1[1] >= interval2[1] and interval2[1] >=\
    \ interval1[1]\n        return \"NO\"\n    if interval1[1] >= interval2[1] and\
    \ interval2[1] >= interval1[1]\n        return \"NO\"\n    if interval1[1] >=\
    \ interval2[1] and interval2[1] >= interval1[1]\n        return \"NO\"\n    if\
    \ interval1[1] >= interval2[1] and interval2[1] >= interval1[1]\n        return\
    \ \"NO\"\n    if interval1[1] >= interval2[1] and interval2[1] >= interval1[1]\n\
    \        return \"NO\"\n    if interval1[1] >= interval2[1] and interval2[1] >=\
    \ interval1[1]\n        return \"NO\"\n    if interval1[1] >= interval2[1] and\
    \ interval2[1] >= interval1[1]\n        return \"NO\"\n    if interval1[1] >=\
    \ interval2[1]", "    if interval1[1] < interval2[0]\n        return \"NO\"\n\
    \    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[0]\
    \ == interval2[0]\n        return \"YES\"\n    if interval1[0] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[0] > interval2[0]\n        return \"\
    NO\"\n    return \"YES\"\nend", "    if interval1[1] < interval2[1]\n        return\
    \ \"NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    if interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    if interval1[1] <= interval2[1] and interval1[2] <=\
    \ interval2[2]\n        return \"YES\"\n    return \"NO\"\nend", "    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[2] < interval2[2]\n        return \"\
    NO\"\n    if interval1[2] > interval2[2]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[2] < interval2[2]\n        return \"\
    NO\"\n    if interval1[2] > interval2[2]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[2] < interval2[2]\n        return \"\
    NO\"\n    if interval1[2] > interval2[2]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[2] < interval2[2]\n        return \"\
    NO\"\n    if interval1[2] > interval2[2]\n        return \"NO\"\n    return \"\
    YES\"\nend", "    if interval1[1] < interval2[0]\n        return \"NO\"\n    if\
    \ interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[0] == interval2[0]\n\
    \        return \"YES\"\n    if interval1[0] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[0]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[0] == interval2[1]\n\
    \        return \"YES\"\n    if interval1[0] < interval2[0]\n        return \"\
    NO\"\n    if interval1[1] < interval2[0]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    return \"NO\"\nend", "    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    elseif interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    elseif interval1[2] < interval2[2]\n        return\
    \ \"NO\"\n    elseif interval1[2] > interval2[2]\n        return \"NO\"\n    else\n\
    \        return \"YES\"\n    end\nend\n</cell>\n<code language=julia-1.5>", " \
    \   if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[2] < interval2[2]\n\
    \        return \"NO\"\n    if interval1[2] > interval2[2]\n        return \"\
    NO\"\n    if interval1[1] <= interval2[1] and interval1[2] <= interval2[2]\n \
    \       return \"YES\"\n    if interval1[1] >= interval2[1] and interval1[2] >=\
    \ interval2[2]\n        return \"YES\"\n    return \"NO\"\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    if interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[2]\n        return \"\
    NO\"\n    if interval1[2] < interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[2]\n\
    \        return \"NO\"\n    return \"YES\"\nend\n</cell>\n<code language=julia-1.5>",
  "    if interval1[1] < interval2[1]\n        return \"NO\"\n    elseif interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    elseif interval1[2] < interval2[2]\n\
    \        return \"NO\"\n    elseif interval1[2] > interval2[2]\n        return\
    \ \"NO\"\n    elseif interval1[1] < interval2[1] && interval1[2] < interval2[2]\n\
    \        return \"NO\"\n    elseif interval1[1] > interval2[1] && interval1[2]\
    \ > interval2[2]\n        return \"NO\"\n    elseif interval1[1] < interval2[1]\
    \ && interval1[2] > interval2[2]\n        return \"NO\"\n    elseif interval1[1]\
    \ > interval2[1] && interval1[2] < interval2[2]\n        return \"NO\"\n    elseif\
    \ interval1[1] < interval2[1] && interval1[2] > interval2[2]\n        return \"\
    NO\"\n    elseif interval1[1] > interval2[1] && interval1[2] < interval2[2]\n\
    \        return \"NO\"\n    elseif interval1[1] < interval2[1] && interval1[2]\
    \ > interval2[2]\n        return \"NO\"\n    elseif interval1[1] > interval2[1]\
    \ && interval1[2] < interval2[2]\n        return \"NO\"\n    elseif interval1[1]\
    \ < interval2[1] && interval1[2] > interval2[2]\n        return \"NO\"\n    elseif\
    \ interval1[1] > interval2[1] && interval1[2] < interval2[2]\n        return \"\
    NO\"\n    elseif interval1[1] < interval2[1] && interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    elseif interval1[1] > interval2[1] && interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    elseif interval1[1] < interval2[1]\
    \ && interval1[2] > interval2[2]\n        return \"NO\"\n    elseif interval1[1]\
    \ > interval2[1] && interval1[2] < interval2[2]\n        return \"NO\"\n    elseif\
    \ interval1[1] < interval2[1] && interval1[2] > interval2[2]\n        return \"\
    NO\"\n    elseif interval1[1] > interval2[1] && interval1[2] < interval2[2]\n\
    \        return \"NO\"\n    elseif interval1[1] < interval2[1] && interval1[2]\
    \ > interval2[2]\n        return \"NO\"\n    elseif interval1[1] > interval2[1]\
    \ && interval1[2] < interval2[2]\n        return \"NO\"\n    elseif interval1[1]\
    \ < interval2[1] && interval1[2] > interval2[2]\n        return \"NO\"\n    elseif\
    \ interval1[1] > interval2[1] && interval1[2] < interval2[2]\n        return \"\
    NO\"\n    elseif interval1[1] < interval2[1] && interval1[2] > interval2[2]",
  "    if interval1[1] < interval2[0]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[0] == interval2[0]\n\
    \        return \"NO\"\n    if interval1[0] == interval2[1]\n        return \"\
    YES\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[0]\n        return \"NO\"\n    if interval1[0] == interval2[1]\n\
    \        return \"YES\"\n    if interval1[0] == interval2[0]\n        return \"\
    YES\"\n    if interval1[1] > interval2[0]\n        return \"YES\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"YES\"\n    return \"NO\"\nend", "    if interval1[1]\
    \ < interval2[0] || interval2[1] < interval1[0] \n        return \"NO\"\n    else\
    \ \n        return \"YES\"\nend", "    if interval1[1] < interval2[0]\n      \
    \  return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n\
    \    if interval1[0] == interval2[0]\n        return \"YES\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval1[0] == interval2[1]\n\
    \        return \"YES\"\n    if interval1[1] > interval2[0]\n        return \"\
    NO\"\n    if interval1[0] < interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[0]\n        return \"NO\"\n    if interval1[0] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[0] < interval2[0]\n        return \"\
    NO\"\n    return \"YES\"\nend", "    if interval1[1] < interval2[1]\n        return\
    \ \"NO\"\n    elseif interval1[1] > interval2[1]\n        return \"NO\"\n    elseif\
    \ interval1[2] < interval2[2]\n        return \"NO\"\n    elseif interval1[2]\
    \ > interval2[2]\n        return \"NO\"\n    else\n        return \"YES\"\n  \
    \  end\nend\n</cell>\n<code language=julia-1.5>", "    if interval1[1] < interval2[0]\n\
    \        return \"NO\"\n    if interval2[1] < interval1[0]\n        return \"\
    NO\"\n    if interval1[1] == interval2[1]\n        return \"YES\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    return \"NO\"\nend", "    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    elseif interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    elseif interval1[2] < interval2[2]\n        return\
    \ \"NO\"\n    elseif interval1[2] > interval2[2]\n        return \"NO\"\n    else\n\
    \        return \"YES\"\n    end\nend\n</cell>\n<code language=julia-1.5>", " \
    \   if interval1[1] <= interval2[1] and interval1[2] <= interval2[2] \n      \
    \  then \"YES\" \n        else if interval1[1] > interval2[1] and interval1[2]\
    \ > interval2[2] \n            then \"NO\" \n            else if interval1[1]\
    \ > interval2[1] and interval1[2] <= interval2[2] \n                then \"NO\"\
    \ \n                else if interval1[1] <= interval2[1] and interval1[2] > interval2[2]\
    \ \n                    then \"NO\" \n                    else \"NO\"\n    end\n\
    end\n</cell>\n<code language=julia-1.0>\n@test intersection((1, 2), (2, 3)) ==\
    \ \"NO\"\n@test intersection((-1, 1), (0, 4)) == \"NO\"\n@test intersection((-3,\
    \ -1), (-5, 5)) == \"YES\"\n</cell>\n<text>\nProblem 4\nWrite a Julia function\
    \ prime_number(n) that returns \"YES\" if n is a prime number\nand otherwise returns\
    \ \"NO\".\nThe function should take one argument n of type Int64.", "    \n  \
    \  if interval1[1] <= interval2[1] and interval1[2] >= interval2[2] \n    then\
    \ \"YES\" \n    else \"NO\"\nend\n</cell>\n<code language=julia-1.5>", "    if\
    \ interval1[1] < interval2[0]\n        return \"NO\"\n    elseif interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    elseif interval1[0] == interval2[0]\n\
    \        return \"YES\"\n    elseif interval1[0] == interval2[1]\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if interval1[1] < interval2[1] or interval2[1] < interval1[1]\n        return\
    \ \"NO\"\n    \n    if interval1[1] == interval2[1]\n        return \"YES\"\n\
    \    \n    if interval1[1] > interval2[1]\n        return \"NO\"\n    \n    if\
    \ interval1[1] < interval2[1]\n        return \"NO\"\n    \n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[1] > interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return \"NO\"\n  \
    \  \n    if interval1[1] > interval2[1]\n        return \"NO\"\n    \n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    \n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[1] > interval2[1]\n        return \"NO\"\n  \
    \  \n    if interval1[1] < interval2[1]\n        return \"NO\"\n    \n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[1] > interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return \"NO\"\n  \
    \  \n    if interval1[1] > interval2[1]\n        return \"NO\"\n    \n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    \n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[1] > interval2[1]\n        return \"NO\"\n  \
    \  \n    if interval1[1] < interval2[1]\n        return \"NO\"\n    \n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[1] > interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return \"NO\"\n  \
    \  \n    if interval1[1] > interval2[1]\n        return \"NO\"\n    \n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    \n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[1] < interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[1] > interval2[1]\n        return \"NO\"\n  \
    \  \n    if interval1[1] < interval2[1]\n        return \"", "    \n    \n   \
    \ if interval1[1] < interval2[1]\n        return \"NO\"\n    else if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    else if interval1[0] < interval2[0]\n\
    \        return \"NO\"\n    else if interval1[0] > interval2[0]\n        return\
    \ \"NO\"\n    else\n        return \"YES\"\n    end\nend", "    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    elseif interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    elseif interval1[2] < interval2[2]\n        return\
    \ \"NO\"\n    elseif interval1[2] > interval2[2]\n        return \"NO\"\n    else\n\
    \        return \"YES\"\n    end\nend", "    if interval1[1] < interval2[0]\n\
    \        return \"NO\"\n    if interval1[0] > interval2[1]\n        return \"\
    NO\"\n    if interval1[1] == interval2[1]\n        return \"YES\"\n    if interval1[1]\
    \ < interval2[0]\n        return \"NO\"\n    if interval1[0] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[0]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[0]\n        return \"NO\"\n    return \"YES\"\nend\n</cell>\n<code\
    \ language=julia-1.0>", "    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    if interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[2]\n        return \"\
    NO\"\n    if interval1[2] < interval2[1]\n        return \"NO\"\n    return \"\
    YES\"\nend", "    if interval1[1] <= interval2[1] and interval1[2] <= interval2[2]\
    \ \n        then \"YES\" \n        else \n            if interval1[1] > interval2[1]\
    \ and interval1[2] > interval2[2] \n                then \"NO\" \n           \
    \     else \n                    if interval1[1] > interval2[1] and interval1[2]\
    \ <= interval2[2] \n                        then \"NO\" \n                   \
    \     else \n                            if interval1[1] <= interval2[1] and interval1[2]\
    \ > interval2[2] \n                                then \"NO\" \n            \
    \                    else \n                                    if interval1[1]\
    \ <= interval2[1] and interval1[2] <= interval2[2] \n                        \
    \                then \"YES\" \n                                        else \n\
    \                                            if interval1[1] > interval2[1] and\
    \ interval1[2] > interval2[2] \n                                             \
    \   then \"NO\" \n                                                else \n    \
    \                                                if interval1[1] > interval2[1]\
    \ and interval1[2] > interval2[2] \n                                         \
    \               then \"YES\" \n                                              \
    \          else \"NO\"\n    end\nend\n</cell>\n<code language=julia-1.5>", " \
    \   \n    \n    if interval1[1] < interval2[0]\n        return \"NO\"\n    \n\
    \    if interval1[1] > interval2[1]\n        return \"NO\"\n    \n    if interval1[0]\
    \ == interval2[0]\n        return \"YES\"\n    \n    if interval1[0] < interval2[1]\n\
    \        return \"NO\"\n    \n    if interval1[0] > interval2[0]\n        return\
    \ \"NO\"\n    \n    return \"YES\"\nend", "    if interval1[1] == interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[2]\
    \ < interval2[2]\n        return \"NO\"\n    if interval1[2] > interval2[2]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[2]\n        return \"\
    NO\"\n    if interval1[2] < interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[2]\n        return \"NO\"\n    if interval1[2] > interval2[1]\n\
    \        return \"NO\"\n    return \"YES\"\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    if interval1[1] < interval2[0]\n        return \"NO\"\n    \n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    \n    if interval1[0] == interval2[0]\n\
    \        return \"YES\"\n    \n    if interval1[0] < interval2[1]\n        return\
    \ \"NO\"\n    \n    if interval1[0] > interval2[0]\n        return \"NO\"\n  \
    \  \n    if interval1[1] == interval2[1]\n        return \"YES\"\n    \n    if\
    \ interval1[1] < interval2[0]\n        return \"NO\"\n    \n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    \n    return \"NO\"\nend", "    if\
    \ interval1[1] < interval2[1]\n        return \"NO\"\n    elseif interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    elseif interval1[2] < interval2[2]\n\
    \        return \"NO\"\n    elseif interval1[2] > interval2[2]\n        return\
    \ \"NO\"\n    else\n        return \"YES\"\n    end\nend", "    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval2[1] < interval1[1]\n\
    \        return \"NO\"\n    if interval1[1] == interval2[1]\n        return \"\
    YES\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval2[1] < interval1[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval2[1]\
    \ < interval1[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval2[1] < interval1[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval2[1] < interval1[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval2[1] < interval1[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval2[1]\
    \ < interval1[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval2[1] < interval1[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval2[1] < interval1[1]\n        return \"\
    NO\"\n    if interval1[1] > interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ < interval2[1]\n        return \"NO\"\n    if interval2[1] < interval1[1]\n\
    \        return \"NO\"\n    if interval1[1] > interval2[1]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval2[1]\
    \ < interval1[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval2[1] < interval1[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] < interval2[1]\n\
    \        return \"NO\"\n    if interval2[1] < interval1[1]\n        return \"\
    NO\"\n    if interval1[1] > interval", "    if interval1[1] < interval2[0]\n \
    \       return \"NO\"\n    if interval2[1] < interval1[0]\n        return \"NO\"\
    \n    if interval1[1] == interval2[1]\n        return \"YES\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    if interval1[1]\
    \ > interval2[1]\n        return \"NO\"\n    if interval1[1] > interval2[1]\n\
    \        return \"NO\"\n    if interval1[1] < interval2[1]\n        return \"\
    NO\"\n    if interval1[1] < interval2[1]\n        return \"NO\"\n    return \"\
    NO\"\nend", "    if interval1[1] < interval2[1] or interval1[1] > interval2[1]\
    \ or interval1[2] < interval2[2] or interval1[2] > interval2[2]\n        return\
    \ \"NO\"\n    else\n        prime_length = prime_length(interval1[1], interval1[2],\
    \ interval2[1], interval2[2])\n        if prime_length == 1\n            return\
    \ \"YES\"\n        else\n            return \"NO\"\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\n# Test case 1\nprintln(intersection((1, 2), (2, 3)))\n\
    println(intersection((-1, 1), (0, 4)))\nprintln(intersection((-3, -1), (-5, 5)))\n\
    </cell>\n<code language=julia-1.5>\n# Test case 2\nprintln(intersection((1, 3),\
    \ (2, 4)))\nprintln(intersection((-1, 1), (0, 4)))\nprintln(intersection((-3,\
    \ -1), (-5, 5)))\n</cell>\n<code language=julia-1.5>\n# Test case 3\nprintln(intersection((1,\
    \ 3), (2, 4)))\nprintln(intersection((-1, 1), (0, 4)))\nprintln(intersection((-3,\
    \ -1), (-5, 5)))\n</cell>\n<code language=julia-1.5>\n# Test case 4\nprintln(intersection((1,\
    \ 3), (2, 4)))\nprintln(intersection((-1, 1), (0, 4)))\nprintln(intersection((-3,\
    \ -1), (-5, 5)))\n</cell>\n<code language=julia-1.5>\n# Test case 5\nprintln(intersection((1,\
    \ 3), (2, 4)))\nprintln(intersection((-1, 1), (0, 4)))\nprintln(intersection((-3,\
    \ -1), (-5, 5)))\n</cell>\n<code language=julia-1.5>\n# Test case 6\nprintln(intersection((1,\
    \ 3), (2, 4)))\nprintln(intersection((-1, 1), (0, 4)))\nprintln(intersection((-3,\
    \ -1), (-5, 5)))\n</cell>\n<code language=julia-1.5>\n# Test case 7\nprintln(intersection((1,\
    \ 3), (2, 4)))\nprintln(intersection((-1, 1), (0, 4)))\nprintln(intersection((-3,\
    \ -1), (-5, 5)))\n</cell>\n<code language=julia-1.5>\n# Test case 8\nprintln(intersection((1,\
    \ 3), (2, 4)))\nprintln(intersection((-1, 1), (0, 4)))\nprintln(intersection((-3,\
    \ -1), (-5, 5)))\n</cell>\n<code language=julia-1.5>\n# Test case 9\nprintln(intersection((1,\
    \ 3), (2, 4)))\nprintln(intersection((-1, 1), (0, 4)))\nprintln(intersection((-3,\
    \ -1), (-5, 5)))\n</cell>\n<code language=julia-1.5>\n# Test case 10\nprintln(intersection((1,\
    \ 3), (2, 4)))\nprintln(intersection((-1, "]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

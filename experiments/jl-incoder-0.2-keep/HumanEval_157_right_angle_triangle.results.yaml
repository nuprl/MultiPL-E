name: HumanEval_157_right_angle_triangle
language: julia
results:
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==0 || b==0 || c==0 \n        then return\
    \ true\n    else if a==b || b==c || c==a\n        then return true\n    else if\
    \ a==c || b==c || c==a\n        then return true\n    else if a==b || b==a ||\
    \ c==a\n        then return true\n    else if a==c || b==c || c==b\n        then\
    \ return true\n    else return false\nend\n</code>\n<|/ a tags=julia,if-statement\
    \ |>\n<| c |>\nThis doesn't work if `a==b==c` because `a==b` will evaluate to\
    \ `true` but `a==c` will evaluate to `false`\n<|/ c |>\n<| c |>\nThanks for pointing\
    \ that out. I've fixed the answer.\n<|/ c |>\n<| a dscore=2 |>\nI like to use\
    \ this pattern for simple cases like this:\n<code>\nusing Test\n\n@testset begin\n\
    \ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1,\
    \ 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t@test(candidate(2,\
    \ 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t@test(candidate(10,\
    \ 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t@test(candidate(15,\
    \ 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t@test(candidate(1,\
    \ 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpg32zqnke.jl:12\nin expression starting at /tmp/tmpg32zqnke.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c \n        then return\
    \ true\n    else \n        right_angle_triangle(a-1, b, c) or right_angle_triangle(a,\
    \ b-1, c) or right_angle_triangle(a, b, c-1)\n    end\nend\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3)\
    \ == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpv0278tq_.jl:11\nin expression starting at /tmp/tmpv0278tq_.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == 0 || b == 0 || c == 0 \n        then\
    \ return false \n    else \n        if b > a && b > c \n            then return\
    \ true \n        else if c > a && c > b \n            then return true \n    \
    \    else if b > c \n            then return true \n        else if c > b \n \
    \           then return true \n        else \n            return false \nend \n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1,\
    \ 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5jepl7o_.jl:12\nin expression starting at /tmp/tmp5jepl7o_.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return true\n \
    \   else if a>b and a>c then return true\n    else if b>a and b>c then return\
    \ true\n    else return false\nend\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvijd3iy5.jl:11\nin expression starting at /tmp/tmpvijd3iy5.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return true\n \
    \   else return false\nend\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpt2bvqoh3.jl:11\nin expression starting at /tmp/tmpt2bvqoh3.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b and b==c then return true\n    else\
    \ if a==c then return false\n    else if b==c then return false\n    else if a==b\
    \ then return false\n    else return true\nend\n</code>\n<|/ a dscore=0 |>\n<|\
    \ a dscore=0 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"b\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyzqzx7j0.jl:11\nin expression starting at /tmp/tmpyzqzx7j0.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then \n        true\n\
    \    elseif b > c \n    then \n        true\n    elseif c > a \n    then \n  \
    \      true\n    else\n        false\n    end\nend\n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplklp1ote.jl:11\nin expression starting at /tmp/tmplklp1ote.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\nend\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9whu4ftg.jl:11\nin expression starting at /tmp/tmp9whu4ftg.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == b or a == c or b == c then return True\
    \ else return False \n    else return (a + b > c and a + c > b and b + c > a)\
    \ \nend\n\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\
    \t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t\
    @test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t\
    @test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t\
    @test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t\
    @test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbs4bvcdd.jl:11\nin expression starting at /tmp/tmpbs4bvcdd.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else return false\n    end\nend\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1,\
    \ 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbscsqici.jl:11\nin expression starting at /tmp/tmpbscsqici.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n        then return True\n\
    \    else if b > a and b > c \n        then return True\n    else if c > a and\
    \ c > b \n        then return True\n    else return False\nend\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3)\
    \ == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmph9w9bq6t.jl:11\nin expression starting at /tmp/tmph9w9bq6t.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c then return true\n    if\
    \ b > c and b > a then return true\n    if c > a and c > b then return true\n\
    \    return false\nend\n\"\"\"\n    Given the lengths of the three sides of a\
    \ triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaz16ngl2.jl:11\nin expression starting at /tmp/tmpaz16ngl2.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c then return true\n    if\
    \ b > c and b > a then return true\n    if c > a and c > b then return true\n\
    \    return false\nend\n</code>\n<|/ a tags=julia |>\n<| c |>\nThanks for your\
    \ answer. I am not familiar with Julia so I did not know how to do this. I appreciate\
    \ your help.\n<|/ c |>\n<| c |>\nNo problem. Julia is really cool and I love it.\
    \ I hope you enjoy Julia!\n<|/ c |>\n<| a tags=julia |>\n<code>\nusing Test\n\n\
    @testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5)\
    \ == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6, 8)\
    \ == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25)\
    \ == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13)\
    \ == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73)\
    \ == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpq5ni5q2y.jl:11\nin expression starting at /tmp/tmpq5ni5q2y.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return True else\
    \ return False\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the\
    \ lengths of the three sides of a triangle. Return True if the three\n    sides\
    \ form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3)\
    \ == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgo8lkbwj.jl:11\nin expression starting at /tmp/tmpgo8lkbwj.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == 0 || b == 0 || c == 0 \n    then return\
    \ false\n    else if b > a && b > c \n    then return true\n    else if c > a\
    \ && c > b \n    then return true\n    else if b > c \n    then return false\n\
    \    else if c > b \n    then return false\n    else return true\n    end\nend\n\
    </code>\n<|/ a tags=julia |>\n<| a tags=julia |>\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\
    \t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t\
    @test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t\
    @test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t\
    @test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t\
    @test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxeouwkbh.jl:12\nin expression starting at /tmp/tmpxeouwkbh.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if b == c \n        then return true\n    else\
    \ if b > c \n        then return false\n    else if b < c \n        then return\
    \ false\n    else if b == c \n        then return true\n    else if b > c \n \
    \       then return false\n    else if b < c \n        then return false\n   \
    \ else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return \nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3mjqns7w.jl:12\nin expression starting at /tmp/tmp3mjqns7w.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c then return true\n    if\
    \ b > c and b > a then return true\n    if c > a and c > b then return true\n\
    \    return false\nend\n\"\"\"\n    Given the lengths of the three sides of a\
    \ triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptp2c0y08.jl:11\nin expression starting at /tmp/tmptp2c0y08.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == b or a == c or b == c \n        then\
    \ return true\n    else \n        return false\nend\n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsulddndd.jl:11\nin expression starting at /tmp/tmpsulddndd.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c then return true\n    if\
    \ b > c and b > a then return true\n    if c > a and c > b then return true\n\
    \    return false\nend\n\"\"\"\n    Given the lengths of the three sides of a\
    \ triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp80or0wox.jl:11\nin expression starting at /tmp/tmp80or0wox.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c then \n        if b > c then\
    \ \n            true\n        else \n            false\n    else \n        if\
    \ b > c then \n            false\n        else \n            true\nend\n\"\"\"\
    \n    Given the lengths of the three sides of a triangle. Return True if the three\n\
    \    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1,\
    \ 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5atorwqb.jl:11\nin expression starting at /tmp/tmp5atorwqb.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if b > a && b > c \n    then return true\n \
    \   else if c > a && c > b \n    then return true\n    else return false\nend\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1,\
    \ 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp692vjm35.jl:12\nin expression starting at /tmp/tmp692vjm35.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == b or a == c or b == c then return true\n\
    \    else return false\nend\n\"\"\"\n    Given the lengths of the three sides\
    \ of a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplyroxoay.jl:11\nin expression starting at /tmp/tmplyroxoay.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n        then return true\n\
    \    else if b > c and b > a \n        then return true\n    else if c > a and\
    \ c > b \n        then return true\n    else return false\nend\n</code>\n<|/ a\
    \ tags=julia,if-statement |>\n<| c |>\nThis doesn't seem to work. `right_angle_triangle(3,\
    \ 4, 5)` returns `true` but `right_angle_triangle(1, 2, 3)` returns `false`.\n\
    <|/ c |>\n<| c |>\nYes, I missed the case where `a`, `b` and `c` are equal. I\
    \ added a version that handles that.\n<|/ c |>\n<| c |>\nI added a version that\
    \ handles equal lengths.\n<|/ c |>\n<| a tags=julia,if-statement |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnzkirrm9.jl:11\nin expression starting at /tmp/tmpnzkirrm9.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == 0 || b == 0 || c == 0 \n    then return\
    \ false \n    else if b > a && b > c \n    then return true \n    else if c >\
    \ a && c > b \n    then return true \n    else if b == c \n    then return true\
    \ \n    else if b > c \n    then return false \n    else if c > b \n    then return\
    \ false \n    else return right_angle_triangle(a-1, b, c-1) == true || right_angle_triangle(a-1,\
    \ c, b-1) == true || right_angle_triangle(a-1, b, c+1) == true || right_angle_triangle(a-1,\
    \ c, b+1) == true \nend\n</code>\n<|/ a dscore=2 |>\n<| a tags=julia,trigonometry\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsd0_sjpu.jl:12\nin expression starting at /tmp/tmpsd0_sjpu.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==0 || b==0 || c==0 \n        then return\
    \ false\n    else \n        if a>b and a>c \n            then return true\n  \
    \      else if b>a and b>c \n            then return true\n        else if c>a\
    \ and c>b \n            then return true\n        else return false\nend\n</code>\n\
    <|/ a tags=julia |>\n<| a tags=julia |>\nThe function right_angle_triangle(a,\
    \ b, c) can be written as \n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1,\
    \ 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t@test(candidate(2,\
    \ 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t@test(candidate(10,\
    \ 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t@test(candidate(15,\
    \ 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t@test(candidate(1,\
    \ 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaz728y_w.jl:12\nin expression starting at /tmp/tmpaz728y_w.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\n    end\nend\n\"\"\"\n    Given the lengths of\
    \ the three sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4a5ulnup.jl:11\nin expression starting at /tmp/tmp4a5ulnup.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return true else\
    \ return false \nend \n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\
    \t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t\
    @test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t\
    @test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t\
    @test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t\
    @test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprk8shsc1.jl:11\nin expression starting at /tmp/tmprk8shsc1.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\nend\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwz5ny0fw.jl:11\nin expression starting at /tmp/tmpwz5ny0fw.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return false \n\
    \    else if a==c then return true \n    else if b==c then return true \n    else\
    \ return right_angle_triangle(a+1, b, c) or right_angle_triangle(a, b+1, c) \n\
    end\n</cell>\n<code language=julia-1.3>\nright_angle_triangle(3, 4, 5)\n</cell>\n\
    <code language=julia-1.3>\nright_angle_triangle(1, 2, 3)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that checks if a triangle is equilateral or not.\nExample:\
    \ \n    equilateral_triangle(3, 4, 5) == True\n    equilateral_triangle(1, 2,\
    \ 3) == False\n    equilateral_triangle(2, 2, 2) == True\n    equilateral_triangle(2,\
    \ 1, 1) == False\n    equilateral_triangle(2, 2, 3) == False\n    equilateral_triangle(2,\
    \ 3, 1) == False\n    equilateral_triangle(2, 3, 2) == False\n    equilateral_triangle(2,\
    \ 3, 3) == True\n    equilateral_triangle(2, 4, 1) == False\n    equilateral_triangle(2,\
    \ 4, 2) == False\n    equilateral_triangle(2, 4, 3) == False\n    equilateral_triangle(2,\
    \ 4, 4) == True\n    equilateral_triangle(2, 5, 1) == False\n    equilateral_triangle(2,\
    \ 5, 2) == False\n    equilateral_triangle(2, 5, 3) == False\n    equilateral_triangle(2,\
    \ 5, 4) == False\n    equilateral_triangle(2, 5, 5) == True\n    equilateral_triangle(2,\
    \ 6, 1) == False\n    equilateral_triangle(2, 6, 2) == False\n    equilateral_triangle(2,\
    \ 6, 3) == False\n    equilateral_triangle(2, 6, 4) == False\n    equilateral_triangle(2,\
    \ 6, 5) == False\n    equilateral_triangle(2, 6, 6) == True\n    equilateral_triangle(3,\
    \ 6, 1) == False\n    equilateral_triangle(3, 6, 2) == False\n    equilateral_triangle(3,\
    \ 6, 3) == False\n    equilateral_triangle(3, 6, 4) == False\n    equilateral_triangle(3,\
    \ 6, 5) == False\n    equilateral_triangle(3, 6, 6) == False\n    equilateral_triangle(4,\
    \ 6, 1) == False\n    equilateral_triangle(4, 6, 2) == False\n    equilateral_triangle(4,\
    \ 6, 3) == False\n    equilateral_triangle(4, 6, 4) == False\n    equilateral_triangle\n\
    using Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpahxc7w0j.jl:11\nin expression starting at /tmp/tmpahxc7w0j.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\nend\n</code>\n<|/ a tags=julia |>\n<| c |>\nThis\
    \ answer would be more useful if it included an explanation of how it works.\n\
    <|/ c |>\n<| c |>\nI added an explanation.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnrpbmdfs.jl:11\nin expression starting at /tmp/tmpnrpbmdfs.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==0 || b==0 || c==0 \n        then return\
    \ false \n    else \n        if abs(a-b) == abs(b-c) \n            then return\
    \ true \n        else \n            if abs(a-c) == abs(c-b) \n               \
    \ then return true \n            else \n                if abs(b-c) == abs(c-a)\
    \ \n                    then return true \n                else \n           \
    \         return false \nend \n</cell>\n<code language=julia-1.5>\n\"\"\"\n  \
    \  Given the lengths of the three sides of a triangle. Return True if the three\n\
    \    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1,\
    \ 2, 3) == False\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpr9vd7jt1.jl:12\nin expression starting at /tmp/tmpr9vd7jt1.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c then return true\n    if\
    \ b > c and b > a then return true\n    if c > a and c > b then return true\n\
    \    return false\nend\n\"\"\"\n    Given the lengths of the three sides of a\
    \ triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm7d3ne3l.jl:11\nin expression starting at /tmp/tmpm7d3ne3l.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\nend\n</code>\n<|/ a |>\n<| a tags=julia,if-statement\
    \ |>\nThe shortest way is to use comprehensions:\n<code>\njulia> [a > b for a\
    \ in 1:3, b in 1:3, c in 1:3]\n3-element Array{Bool,1}:\n true\n false\n true\n\
    </code>\n<|/ a dscore=3 |>\n<| a dscore=3 |>\nIn Julia 1.5 you can also use comprehensions:\n\
    <code>\njulia> [a > b for a in 1:3, b in 1:3, c in 1:3]\n3-element Array{Bool,1}:\n\
    \ true\n false\n true\n</code>\n<|/ a tags=julia,if-statement |>\n<| a dscore=2\
    \ |>\nIn Julia 1.5 you can also use comprehensions:\n<code>\njulia> [a > b for\
    \ a in 1:3, b in 1:3, c in 1:3]\n3-element Array{Bool,1}:\n true\n false\n true\n\
    </code>\n<|/ a tags=julia,if-statement |>\n<| a tags=julia,if-statement |>\nIn\
    \ Julia 1.5 you can also use comprehensions:\n<code>\njulia> [a > b for a in 1:3,\
    \ b in 1:3, c in 1:3]\n3-element Array{Bool,1}:\n true\n false\n true\n</code>\n\
    <|/ a dscore=2 |>\n<| a tags=julia,if-statement |>\nIn Julia 1.5 you can also\
    \ use comprehensions:\n<code>\njulia> [a > b for a in 1:3, b in 1:3, c in 1:3]\n\
    3-element Array{Bool,1}:\n true\n false\n true\n</code>\n<|/ a dscore=2 |>\n<|\
    \ a dscore=1 |>\nIn Julia 1.5 you can also use comprehensions:\n<code>\njulia>\
    \ [a > b for a in 1:3, b in 1:3, c in 1:3]\n3-element Array{Bool,1}:\n true\n\
    \ false\n true\n</code>\n<|/ a tags=julia,if-statement |>\n<| a tags=julia,if-statement\
    \ |>\nIn Julia 1.5 you can also use comprehensions:\n<code>\njulia> [a > b for\
    \ a in 1:3, b in \nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzdm7xf5k.jl:11\nin expression starting at /tmp/tmpzdm7xf5k.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n        then return true\n\
    \    else if b > a and b > c \n        then return true\n    else if c > a and\
    \ c > b \n        then return true\n    else return false\nend\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3)\
    \ == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpd7vequ6l.jl:11\nin expression starting at /tmp/tmpd7vequ6l.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return true\n \
    \   else if a==c then return false\n    else if b==c then return false\n    else\
    \ if a==b then return false\n    else return true\nend\n\"\"\"\n    Given the\
    \ lengths of the three sides of a triangle. Return True if the three\n    sides\
    \ form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3)\
    \ == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8avh0qpd.jl:11\nin expression starting at /tmp/tmp8avh0qpd.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return true\n \
    \   else if a==b+c or b==c+a or c==a+b then return true\n    else return false\n\
    end\n\"\"\"\n    Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n    sides form a right-angled triangle, False otherwise.\n   \
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    \    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n   \
    \ right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1,\
    \ 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t@test(candidate(2,\
    \ 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t@test(candidate(10,\
    \ 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t@test(candidate(15,\
    \ 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t@test(candidate(1,\
    \ 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpa01zzy9k.jl:11\nin expression starting at /tmp/tmpa01zzy9k.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return true\n \
    \   else return false\nend\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp56mo95af.jl:11\nin expression starting at /tmp/tmp56mo95af.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\n    end\nend\n\"\"\"\n    Given the lengths of\
    \ the three sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc0lrlug0.jl:11\nin expression starting at /tmp/tmpc0lrlug0.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if b == c \n        then return true\n    else\
    \ if b > c \n        then return false\n    else \n        right_angle_triangle(b,\
    \ c, a) or right_angle_triangle(b, a, c)\nend\n</code>\n<|/ a tags=julia |>\n\
    <| a tags=julia |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp67n6cta0.jl:12\nin expression starting at /tmp/tmp67n6cta0.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==0 || b==0 || c==0 \n        then return\
    \ false\n    else if a==b || b==c || c==a\n        then return true\n    else\
    \ if a==c || c==b || b==a\n        then return true\n    else if a==b+c || b==c+a\
    \ || c==a+b\n        then return true\n    else if a==b+c || b==c-a || c==a-b\n\
    \        then return true\n    else if a==c-b || c==b-a || b==a-c\n        then\
    \ return true\n    else if a==c-b || c==a+a || b==a-c\n        then return true\n\
    \    else if a==c-b || c==a-a || b==a+c\n        then return true\n    else if\
    \ a==c-b || c==a+a || b==a-c\n        then return true\n    else if a==c-b ||\
    \ c==a-a || b==a-c\n        then return true\n    else if a==c-b || c==a-a ||\
    \ b==a+c\n        then return true\n    else if a==c-b || c==a-a || b==a-c\n \
    \       then return true\n    else if a==c-b || c==a+a || b==a-c\n        then\
    \ return true\n    else if a==c-b || c==a-a || b==a+c\n        then return true\n\
    \    else if a==c-b || c==a-a || b==a-c\n        then return true\n    else if\
    \ a==c-b || c==a+a || b==a-c\n        then return true\n    else if a==c-b ||\
    \ c==a-a || b==a+c\n        then return true\n    else if a==c-b || c==a-a ||\
    \ b==a-c\n        then return true\n    else if a==c-b || c==a+a || b==a-c\n \
    \       then return true\n    else if a==c-b || c==a-a || b==a+c\n        then\
    \ return true\n    else if a==c-b || c==a-a || b==a-c\n        then return true\n\
    \    else if a==c-b || c==a+a || b==a-c\n        then return true\n    else if\
    \ a==c-b || c==a-a || b==a+\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgxc0oyln.jl:12\nin expression starting at /tmp/tmpgxc0oyln.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if b > c \n        then return False\n    else\
    \ if b < c \n        then return False\n    else if b == c \n        then return\
    \ True\n    else \n        right_angle_triangle(a + 1, b, c) or right_angle_triangle(a,\
    \ b + 1, c) or right_angle_triangle(a, b, c + 1)\nend\n</cell>\n<code language=julia-1.0>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1,\
    \ 2, 3) == False\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpudw93e4l.jl:12\nin expression starting at /tmp/tmpudw93e4l.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return false \n\
    \    else if a==c then return true \n    else if b==c then return true \n    else\
    \ if a==b then return true \n    else return false \nend \n\"\"\"\nGiven the lengths\
    \ of the three sides of a triangle. Return True if the three\nsides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphy3r9ma_.jl:11\nin expression starting at /tmp/tmphy3r9ma_.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if b == c \n        then return true\n    else\
    \ if b > c \n        then return false\n    else if b < c \n        then return\
    \ false\n    else if b == c \n        then return true\n    else if b > c \n \
    \       then return false\n    else if b < c \n        then return false\n   \
    \ else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return \nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpq0z3jxm7.jl:12\nin expression starting at /tmp/tmpq0z3jxm7.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return false \n\
    \    else return true\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3)\
    \ == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3i3cznux.jl:11\nin expression starting at /tmp/tmp3i3cznux.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c then return True\n    if\
    \ b > c and b > a then return True\n    if c > a and c > b then return True\n\
    \    return false\nend\n\"\"\"\n    Given the lengths of the three sides of a\
    \ triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxf7xirhj.jl:11\nin expression starting at /tmp/tmpxf7xirhj.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return True else\
    \ return False\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool\n    \n    Check if three sides of a triangle form\
    \ a right-angled triangle. \n    \n    Arguments:\n    a: length of side a\n \
    \   b: length of side b\n    c: length of side c\n    \n    Returns:\n    True\
    \ if the three sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1,\
    \ 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc38n6i6j.jl:11\nin expression starting at /tmp/tmpc38n6i6j.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == 0 || b == 0 || c == 0 \n        then\
    \ return False\n    else if a + b > c \n        then return False\n    else if\
    \ b + c > a \n        then return False\n    else if c + a > b \n        then\
    \ return False\n    else return True\nend\n\"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp70sz2mrz.jl:12\nin expression starting at /tmp/tmp70sz2mrz.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n        then return true\n\
    \    else if b > c and b > a \n        then return true\n    else if c > a and\
    \ c > b \n        then return true\n    else return false\nend\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3)\
    \ == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpo2e8io58.jl:11\nin expression starting at /tmp/tmpo2e8io58.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==0 || b==0 || c==0 \n        then return\
    \ false\n    else if a==b\n        then return c==b\n    else if b==c\n      \
    \  then return a==b\n    else if a==c\n        then return b==c\n    else return\
    \ false\nend\n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\
    \t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t\
    @test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t\
    @test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t\
    @test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t\
    @test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9op943ln.jl:12\nin expression starting at /tmp/tmp9op943ln.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c and b > a \n    then return true\n    else if c > a and c >\
    \ b \n    then return true\n    else return false\nend\n</code>\n<|/ a tags=julia\
    \ |>\n<| c |>\nI believe this should be `return true` instead of `return true`\
    \ at the end of each `if` statement.\n<|/ c |>\n<| c |>\nThanks, I fixed it.\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1,\
    \ 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t@test(candidate(2,\
    \ 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t@test(candidate(10,\
    \ 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t@test(candidate(15,\
    \ 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t@test(candidate(1,\
    \ 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdznl2_ic.jl:11\nin expression starting at /tmp/tmpdznl2_ic.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c then return true\n    if\
    \ b > c and b > a then return true\n    if c > a and c > b then return true\n\
    \    return false\nend\n\"\"\"\n    Given the lengths of the three sides of a\
    \ triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwuujogjy.jl:11\nin expression starting at /tmp/tmpwuujogjy.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return true\n \
    \   else if a>b and a>c then return false\n    else if b>a and b>c then return\
    \ false\n    else if c>a and c>b then return false\n    else return true\nend\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1,\
    \ 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpslmb9tfc.jl:11\nin expression starting at /tmp/tmpslmb9tfc.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==0 || b==0 || c==0 \n        then return\
    \ false\n    else if a==b\n        then return c==b\n    else if a==c\n      \
    \  then return b==c\n    else if b==c\n        then return a==c\n    else if a==b+c\n\
    \        then return true\n    else if a==b+c+1 \n        then return false\n\
    \    else if b==c+1 \n        then return false\n    else if b==c+2 \n       \
    \ then return true\n    else if a==b+c+2\n        then return true\n    else return\
    \ false\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not provide an answer\
    \ to the question. To critique or request clarification from an author, leave\
    \ a comment below their post. - [From Review](/review/low-quality-posts/26818005)\n\
    <|/ c |>\n<| c |>\nThe question was \"Given the lengths of the three sides of\
    \ a triangle. Return True if the three sides form a right-angled triangle, False\
    \ otherwise. A right-angled triangle is a triangle in which one angle is right\
    \ angle or 90 degree.\" The code does exactly that. How does it not answer the\
    \ question?\n<|/ c |>\n<| c |>\nThe code does not answer the question. Your code\
    \ does not answer the question. Your code does not answer the question. Your code\
    \ does not answer the question. Your code does not answer the question. Your code\
    \ does not answer the question. Your code does not answer the question. Your code\
    \ does not answer the question. Your code does not answer the question. Your code\
    \ does not answer the question. Your code does not answer the question. Your code\
    \ does not answer the question. Your code does not answer the question. Your code\
    \ does not answer the question. Your code does not answer the question. Your code\
    \ does not answer the question. Your code does not answer the question. Your code\
    \ does not answer the question. Your code does not answer the question. Your code\
    \ does not answer the question. Your code does not answer the question. Your code\
    \ does not answer the question. Your code does not answer the question. Your code\
    \ does not answer the question. Your code does not answer the question. Your code\
    \ does not answer the question. Your code does not answer the question. Your code\
    \ does not answer the question. Your code does not answer the question. Your code\
    \ does not answer the question. Your code does not answer the question. Your code\
    \ does not answer the question. Your code does not answer the \nusing Test\n\n\
    @testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5)\
    \ == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6, 8)\
    \ == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25)\
    \ == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13)\
    \ == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73)\
    \ == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4r0990ue.jl:12\nin expression starting at /tmp/tmp4r0990ue.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if b == c \n        then return true\n    else\
    \ if b > c \n        then return false\n    else \n        right_angle_triangle(b,\
    \ c, a) \n    end\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not provide\
    \ an answer to the question. Once you have sufficient [reputation](https://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\
    \ - [From Review](/review/low-quality-posts/29670778)\n<|/ c |>\n<| c |>\nI agree\
    \ with you, my answer was a comment on another answer. My answer was to help the\
    \ OP understand how to solve the problem and to help him understand recursion.\
    \ My answer was to help him understand recursion and to help him understand recursion.\
    \ My answer was to help him understand recursion and to help him understand recursion.\
    \ My answer was to help him understand recursion and to help him understand recursion.\
    \ My answer was to help him understand recursion and to help him understand recursion.\n\
    <|/ c |>\n<| c |>\nI understand recursion and I understand recursion. I understand\
    \ recursion and I understand recursion. I understand recursion and I understand\
    \ recursion. I understand recursion and I understand recursion. I understand recursion\
    \ and I understand recursion. I understand recursion and I understand recursion.\
    \ I understand recursion and I understand recursion. I understand recursion and\
    \ I understand recursion. I understand recursion and I understand recursion. I\
    \ understand recursion and I understand recursion. I understand recursion and\
    \ I understand recursion. I understand recursion and I understand recursion. I\
    \ understand recursion and I understand recursion. I understand recursion and\
    \ I understand recursion. I understand recursion and I understand recursion. I\
    \ understand recursion and I understand recursion. I understand recursion and\
    \ I understand recursion. I understand recursion and I understand recursion. I\
    \ understand recursion and I understand recursion. I understand recursion and\
    \ I understand recursion. I understand recursion and I understand recursion. I\
    \ understand recursion and I understand recursion. I understand recursion and\
    \ I understand recursion. I understand recursion and I understand recursion. I\
    \ understand recursion and I understand recursion. I understand recursion and\
    \ I understand recursion. I understand recursion and I understand recursion. I\
    \ understand recursion and I understand recursion. I understand recursion and\
    \ I understand recursion. I understand recursion and I understand recursion. I\
    \ understand recursion and I understand recursion. I understand recursion and\
    \ I understand recursion. I understand recursion\nusing Test\n\n@testset begin\n\
    \ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1,\
    \ 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t@test(candidate(2,\
    \ 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t@test(candidate(10,\
    \ 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t@test(candidate(15,\
    \ 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t@test(candidate(1,\
    \ 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpenucglyw.jl:12\nin expression starting at /tmp/tmpenucglyw.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == 0 || b == 0 || c == 0 \n        then\
    \ return False\n    else if b > a && b > c \n        then return False\n    else\
    \ if c > a && c > b \n        then return False\n    else if b == c \n       \
    \ then return True\n    else if b > c \n        then return right_angle_triangle(a,\
    \ c - b, c)\n    else if c > b \n        then return right_angle_triangle(a, c\
    \ - b, c)\n    else return right_angle_triangle(a - b, c - b, c)\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n\"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4,\
    \ 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6,\
    \ 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpux6xt98q.jl:12\nin expression starting at /tmp/tmpux6xt98q.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c then \n        true\n   \
    \ elseif b > c and b > a then \n        true\n    elseif c > a and c > b then\
    \ \n        true\n    else\n        false\n    end\nend\n\"\"\"\n    Given the\
    \ lengths of the three sides of a triangle. Return True if the three\n    sides\
    \ form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3)\
    \ == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpv3hfvq05.jl:11\nin expression starting at /tmp/tmpv3hfvq05.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n        then return true\n\
    \    else if a < b and a < c \n        then return false\n    else if b < c and\
    \ b < a \n        then return true\n    else if c < a and c < b \n        then\
    \ return false\n    else return false\nend\n\"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpztya3pee.jl:11\nin expression starting at /tmp/tmpztya3pee.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b and b==c then return true\n    else\
    \ if a==c then return false\n    else if b==c then return false\n    else if a==b\
    \ then return false\n    else return true\nend\n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"b\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbz5p2u9d.jl:11\nin expression starting at /tmp/tmpbz5p2u9d.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c then return True\n    if\
    \ b > c and b > a then return True\n    if c > a and c > b then return True\n\
    \    return false\nend\n\"\"\"\n    Given the lengths of the three sides of a\
    \ triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpv43lmghj.jl:11\nin expression starting at /tmp/tmpv43lmghj.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return false \n\
    \    else return (abs(a-b)==abs(b-c)) and (abs(a-c)==abs(c-a)) \nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n\"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4,\
    \ 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6,\
    \ 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp99v8s8sw.jl:11\nin expression starting at /tmp/tmp99v8s8sw.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == 0 || b == 0 || c == 0 \n    then return\
    \ False \n    else if b > a && b > c \n    then return False \n    else if c >\
    \ a && c > b \n    then return False \n    else if b == c \n    then return True\
    \ \n    else if b > c \n    then return right_angle_triangle(a, c, b) \n    else\
    \ if c > b \n    then return right_angle_triangle(a, c, b) \n    else return right_angle_triangle(a,\
    \ b, c) \nend\n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\
    \t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t\
    @test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t\
    @test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t\
    @test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t\
    @test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpos2yjkps.jl:12\nin expression starting at /tmp/tmpos2yjkps.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==0 || b==0 || c==0 \n        then return\
    \ false \n    else \n        if a>b and a>c \n            then return true \n\
    \        else if b>a and b>c \n            then return true \n        else if\
    \ c>a and c>b \n            then return true \n        else \n            return\
    \ false \nend\n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\
    \t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t\
    @test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t\
    @test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t\
    @test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t\
    @test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2szdgmjr.jl:12\nin expression starting at /tmp/tmp2szdgmjr.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if b == c && b == a \n        then return true\n\
    \    else if b == c && b != a \n        then return false\n    else if b != c\
    \ && b == a \n        then return false\n    else if b != c && b != a \n     \
    \   then return true\n    else return false\nend\n</code>\n<|/ a tags=julia,if-statement\
    \ |>\n<| c |>\nThis does not provide an answer to the question. To critique or\
    \ request clarification from an author, leave a comment below their post. - [From\
    \ Review](/review/low-quality-posts/27826394)\n<|/ c |>\n<| c |>\nThis does provide\
    \ an answer to the question. He asked how to write an if statement that checks\
    \ if three sides of a triangle are right angles. He also asked how to write an\
    \ if statement that checks if three sides of a triangle are right angles. He also\
    \ asked how to write an if statement that checks if three sides of a triangle\
    \ are right angles. He also asked how to write an if statement that checks if\
    \ three sides of a triangle are right angles. He also asked how to write an if\
    \ statement that checks if three sides of a triangle are right angles. He also\
    \ asked how to write an if statement that checks if three sides of a triangle\
    \ are right angles. He also asked how to write an if statement that checks if\
    \ three sides of a triangle are right angles. He also asked how to write an if\
    \ statement that checks if three sides of a triangle are right angles. He also\
    \ asked how to write an if statement that checks if three sides of a triangle\
    \ are right angles. He also asked how to write an if statement that checks if\
    \ three sides of a triangle are right angles. He also asked how to write an if\
    \ statement that checks if three sides of a triangle are right angles. He also\
    \ asked how to write an if statement that checks if three sides of a triangle\
    \ are right angles. He also asked how to write an if statement that checks if\
    \ three sides of a triangle are right angles. He also asked how to write an if\
    \ statement that checks if three sides of a triangle are right angles. He also\
    \ asked how to write an if statement that checks if three sides of a triangle\
    \ are right angles. He also asked how to write an if statement that checks if\
    \ three sides of a triangle are right angles. He also asked how to write an if\
    \ \nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpg8beovzl.jl:12\nin expression starting at /tmp/tmpg8beovzl.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n        then return true\n\
    \    else if b > c \n        then return false\n    else if c > a \n        then\
    \ return false\n    else return true\nend\n</code>\n<|/ a tags=julia,if-statement,conditional-statements\
    \ |>\n<| c |>\nThis answer doesn't seem to answer the question. How does this\
    \ answer the question?\n<|/ c |>\n<| c |>\nThe question was \"Given the lengths\
    \ of the three sides of a triangle. Return True if the three sides form a right-angled\
    \ triangle, False otherwise.\"\n<|/ c |>\n<| a tags=julia,if-statement,conditional-statements\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpg6x6i15l.jl:11\nin expression starting at /tmp/tmpg6x6i15l.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a < b and a < c and b < c \n        then\
    \ return true\n    else return false\nend\n\"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphhm5wfx5.jl:11\nin expression starting at /tmp/tmphhm5wfx5.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c then return true\n    else\
    \ if b > c and b > a then return true\n    else if c > a and c > b then return\
    \ true\n    else return false\nend\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0h874ndy.jl:11\nin expression starting at /tmp/tmp0h874ndy.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n        then return true\n\
    \    else if b > c \n        then return false\n    else if c > a \n        then\
    \ return false\n    else return true\nend\n\"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp47sys5es.jl:11\nin expression starting at /tmp/tmp47sys5es.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n        then return True\n\
    \    else if b > c \n        then return True\n    else if c > a \n        then\
    \ return True\n    else return False\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1,\
    \ 2, 3) == False\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcaof8vma.jl:11\nin expression starting at /tmp/tmpcaof8vma.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a < b and a < c and a > 0 and b > 0 and c\
    \ > 0 \n    then \n        right_angle_triangle(b, c) == True \n    else \n  \
    \      right_angle_triangle(a, b) == True \n    end \nend \n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1,\
    \ 2, 3) == False\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0j62nvlo.jl:11\nin expression starting at /tmp/tmp0j62nvlo.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\n    end\nend\n\"\"\"\n    Given the lengths of\
    \ the three sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwkuyvy1s.jl:11\nin expression starting at /tmp/tmpwkuyvy1s.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == b or a == c or b == c \n        then\
    \ return true\n    else \n        right_angle_triangle(a+1, b, c) or right_angle_triangle(a,\
    \ b+1, c) or right_angle_triangle(a, b, c+1)\n    end\nend\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3)\
    \ == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpx96gl_6s.jl:11\nin expression starting at /tmp/tmpx96gl_6s.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == 0 || b == 0 || c == 0 \n    then return\
    \ false \n    else \n        if b > a && c > a \n        then return true \n \
    \       else if b > c \n        then return right_angle_triangle(a, c, b) \n \
    \       else if c > b \n        then return right_angle_triangle(a, b, c) \n \
    \       else return false \nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n\
    \    Given the lengths of the three sides of a triangle. Return True if the three\n\
    \    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1,\
    \ 2, 3) == False\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwcwdgka4.jl:12\nin expression starting at /tmp/tmpwcwdgka4.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return True else\
    \ return False \nend \n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\
    \t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t\
    @test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t\
    @test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t\
    @test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t\
    @test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2980m21l.jl:11\nin expression starting at /tmp/tmp2980m21l.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return true else\
    \ return false \nend \n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\
    \t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t\
    @test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t\
    @test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t\
    @test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t\
    @test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpw0o4bclz.jl:11\nin expression starting at /tmp/tmpw0o4bclz.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return true else\
    \ return false \nend\n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\
    \t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t\
    @test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t\
    @test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t\
    @test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t\
    @test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2zgd92kq.jl:11\nin expression starting at /tmp/tmp2zgd92kq.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == 0 || b == 0 || c == 0 \n        then\
    \ return False\n    else if b == c \n        then return True\n    else if b >\
    \ c \n        then return right_angle_triangle(a, b, c) \n        else return\
    \ right_angle_triangle(a, c, b)\nend\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbwdq0p1_.jl:12\nin expression starting at /tmp/tmpbwdq0p1_.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c then \n        if b > c then\
    \ \n            return true\n        else \n            return false\n    else\
    \ \n        if b > c then \n            return false\n        else \n        \
    \    return true\nend\n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\
    \t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t\
    @test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t\
    @test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t\
    @test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t\
    @test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1bcjr0hx.jl:11\nin expression starting at /tmp/tmp1bcjr0hx.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if b > c \n        then return False\n    else\
    \ if b < c \n        then return False\n    else if b == c \n        then return\
    \ True\n    else \n        right_angle_triangle(a - 1, b, c) or right_angle_triangle(a,\
    \ b - 1, c) or right_angle_triangle(a, b, c-1)\nend\n</cell>\n<code language=julia-1.5>\n\
    right_angle_triangle(3, 4, 5)\n</cell>\n<code language=julia-1.5>\nright_angle_triangle(1,\
    \ 2, 3)\n</cell>\n<text>\nExercise 2\nWrite a function that checks if a triangle\
    \ is equilateral or not.\nExample: \n    equilateral_triangle(3, 4, 5) == True\n\
    \    equilateral_triangle(1, 2, 3) == False\n    equilateral_triangle(1, 4, 3)\
    \ == False\n    equilateral_triangle(1, 2, 4) == False\n    equilateral_triangle(1,\
    \ 3, 2) == False\n    equilateral_triangle(4, 3, 2) == False\n    equilateral_triangle(4,\
    \ 1, 3) == False\n    equilateral_triangle(4, 2, 1) == False\n    equilateral_triangle(4,\
    \ 2, 3) == False\n    equilateral_triangle(4, 3, 1) == False\n    equilateral_triangle(4,\
    \ 1, 2) == False\n    equilateral_triangle(4, 2, 2) == False\n    equilateral_triangle(4,\
    \ 2, 4) == False\n    equilateral_triangle(4, 4, 1) == False\n    equilateral_triangle(4,\
    \ 4, 2) == False\n    equilateral_triangle(4, 4, 3) == False\n    equilateral_triangle(4,\
    \ 4, 4) == False\n    equilateral_triangle(4, 4, 5) == False\n    equilateral_triangle(4,\
    \ 5, 4) == False\n    equilateral_triangle(4, 5, 5) == False\n    equilateral_triangle(5,\
    \ 4, 4) == False\n    equilateral_triangle(5, 5, 4) == False\n    equilateral_triangle(5,\
    \ 5, 5) == False\n    equilateral_triangle(5, 6, 4) == False\n    equilateral_triangle(5,\
    \ 6, 6) == False\n    equilateral_triangle(5, 6, 7) == False\n    equilateral_triangle(5,\
    \ 7, 6) == False\n    equilateral_triangle(5, 7, 7) == False\n    equilateral_triangle(6,\
    \ 5, 4) == False\n    equilateral_triangle(6, 5, 5) == False\n    equilateral_triangle(6,\
    \ 5, 6) == False\n    equilateral_triangle(6, 5, 7) == False\n    equilateral_\n\
    using Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprly8yzgt.jl:12\nin expression starting at /tmp/tmprly8yzgt.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == 0 || b == 0 || c == 0 \n        then\
    \ return False \n    else \n        if b > a \n            then return right_angle_triangle(b,\
    \ a, c) \n        else if c > b \n            then return right_angle_triangle(a,\
    \ b, c) \n        else \n            if a == b \n                then return right_angle_triangle(a,\
    \ b, c) \n            else if a == c \n                then return right_angle_triangle(a,\
    \ b, c) \n            else \n                if b == c \n                    then\
    \ return right_angle_triangle(a, b, c) \n                else \n             \
    \       if a > b \n                        then return right_angle_triangle(a,\
    \ b, c) \n                    else if b > c \n                        then return\
    \ right_angle_triangle(a, b, c) \n                    else \n                \
    \        if a > c \n                            then return right_angle_triangle(a,\
    \ b, c) \n                        else return False \n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwb7d0eif.jl:12\nin expression starting at /tmp/tmpwb7d0eif.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if b == c \n        then return true\n    else\
    \ if b > c \n        then return false\n    else \n        right_angle_triangle(b,\
    \ c-1, a-1) == true || right_angle_triangle(b, c-1, a-1) == false\nend\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis does not provide an answer to the question. To\
    \ critique or request clarification from an author, leave a comment below their\
    \ post. - [From Review](/review/low-quality-posts/28336150)\n<|/ c |>\n<| c |>\n\
    I believe this does answer the question. He asked how to check if a triangle is\
    \ right angled, not how to check if a triangle is right angled using recursion.\n\
    <|/ c |>\n<| c |>\nThis does not provide an answer to the question. To critique\
    \ or request clarification from an author, leave a comment below their post. -\
    \ [From Review](/review/low-quality-posts/28336150)\n<|/ c |>\n<| c |>\nI believe\
    \ this does answer the question. He asked how to check if a triangle is right\
    \ angled, not how to check if a triangle is right angled using recursion.\n<|/\
    \ c |>\n<| c |>\nThis does not provide an answer to the question. To critique\
    \ or request clarification from an author, leave a comment below their post. -\
    \ [From Review](/review/low-quality-posts/28336150)\n<|/ c |>\n<| a tags=julia,recursion\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6vkqzgni.jl:12\nin expression starting at /tmp/tmp6vkqzgni.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == 0 || b == 0 || c == 0 \n        then\
    \ return false \n    else \n        if abs(b * b - 4 * a * c) >= 0 \n        \
    \    then return true \n        else return false \nend \n</cell>\n<code language=julia-1.0>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1,\
    \ 2, 3) == False\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmb8hl7d2.jl:12\nin expression starting at /tmp/tmpmb8hl7d2.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n        then return true\n\
    \    else if b > c \n        then return false\n    else if c > a \n        then\
    \ return false\n    else \n        right_angle_triangle(a - 1, b - 1, c - 1)\n\
    \    end\nend\n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\
    \t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t\
    @test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t\
    @test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t\
    @test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t\
    @test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpo6n6qfo0.jl:11\nin expression starting at /tmp/tmpo6n6qfo0.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == b or a == c or b == c then return True\
    \ else return False\n</code>\n<|/ a tags=julia |>\n<| a dscore=1 |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpo8wgkuy9.jl:11\nin expression starting at /tmp/tmpo8wgkuy9.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return true\n \
    \   else return false\nend\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpktjzkzlq.jl:11\nin expression starting at /tmp/tmpktjzkzlq.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\nend\n</code>\n<|/ a tags=julia,if-statement |>\n\
    <| a dscore=1 |>\nI believe that this is what you are looking for:\n<code>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp11_cqf5_.jl:11\nin expression starting at /tmp/tmp11_cqf5_.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c then \n        if b > c then\
    \ \n            return true\n        else \n            return false\n    else\
    \ \n        if b > c then \n            return false\n        else \n        \
    \    return true\nend\n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\
    \t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t\
    @test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t\
    @test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t\
    @test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t\
    @test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpe27g2cfi.jl:11\nin expression starting at /tmp/tmpe27g2cfi.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\n    end\nend\n\"\"\"\n    Given the lengths of\
    \ the three sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpe0y5avbu.jl:11\nin expression starting at /tmp/tmpe0y5avbu.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if b == c && b == a \n        then return true\
    \ \n    else if b == c \n        then return false \n    else if b == a \n   \
    \     then return false \n    else if c == a \n        then return false \n  \
    \  else \n        right_angle_triangle(b, c) \n        right_angle_triangle(a,\
    \ c) \n        right_angle_triangle(a, b) \n        right_angle_triangle(a, a)\
    \ \n        right_angle_triangle(b, b) \n        right_angle_triangle(c, c) \n\
    \        right_angle_triangle(c, a) \n        right_angle_triangle(c, b) \n  \
    \      right_angle_triangle(c, c) \n        right_angle_triangle(a, c) \n    \
    \    right_angle_triangle(b, c) \n        right_angle_triangle(c, c) \n      \
    \  right_angle_triangle(c, a) \n        right_angle_triangle(c, b) \n        right_angle_triangle(c,\
    \ c) \n        right_angle_triangle(a, c) \n        right_angle_triangle(b, c)\
    \ \n        right_angle_triangle(c, c) \n        right_angle_triangle(c, a) \n\
    \        right_angle_triangle(c, b) \n        right_angle_triangle(c, c) \n  \
    \      right_angle_triangle(a, c) \n        right_angle_triangle(b, c) \n    \
    \    right_angle_triangle(c, c) \n        right_angle_triangle(c, a) \n      \
    \  right_angle_triangle(c, b) \n        right_angle_triangle(c, c) \n        right_angle_triangle(a,\
    \ c) \n        right_angle_triangle(b, c) \n        right_angle_triangle(c, c)\
    \ \n        right_angle_triangle(c, a) \n        right_angle_triangle(c, b) \n\
    \        right_angle_triangle(c, c) \n        right_angle_triangle(a, c) \n  \
    \      right_angle_triangle(b, c) \n        right_angle_triangle(c, c) \n    \
    \    right_angle_triangle(c, a) \n        right_angle_triangle(c, b) \n      \
    \  right_angle_triangle(c, c) \n        right_angle_triangle(a, c) \n        right_angle_triangle(b,\
    \ c) \n        right_angle_triangle(c, c) \n        right_angle_triangle(a, c)\
    \ \n        right_angle_triangle(b, c) \n        right_angle_triangle(c, c) \n\
    \        right_angle_triangle(a, c) \n        right_angle_triangle(b, c) \n  \
    \      right_angle_triangle(c, c) \n        right_angle_triangle(a, c) \n    \
    \    right_angle_triangle(b, c) \n        right_angle_triangle(c, c) \n      \
    \  right_angle_triangle(a, c) \n        right_angle_triangle(b, c) \n        right_angle_triangle(c,\
    \ c) \n        right_angle_triangle(a, c) \n        right_angle_triangle(b, c)\
    \ \n        right_angle_triangle(c, c) \n        right_angle_triangle(a, \nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpeib_kkwk.jl:12\nin expression starting at /tmp/tmpeib_kkwk.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b and b==c then return true\n    if a==c\
    \ then return false\n    if b==c then return false\n    if a==b or b==c then return\
    \ false\n    if a==c or c==a then return false\n    if a==b or b==c or c==a then\
    \ return true\n    else return false\nend\n\"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"b\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp765h4gc0.jl:11\nin expression starting at /tmp/tmp765h4gc0.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b and a==c then return true\n    if a==c\
    \ then return false\n    if b==c then return false\n    if a>b and a>c then return\
    \ true\n    if b>c then return false\n    if a<b and a<c then return true\n  \
    \  if c<a then return false\n    if a==b or a==c or b==c then return false\n \
    \   if a==b or b==c or c==a then return false\n    if a==b or b==c or c==a or\
    \ c==b then return true\n    if a==b or b==c or c==a or c==b or b==c then return\
    \ true\n    if a==b or b==c or c==a or c==b or b==c or c==a then return true\n\
    \    if a==b or b==c or c==a or c==b or b==c or c==a or a==b then return true\n\
    \    if a==b or b==c or c==a or c==b or b==c or c==a or a==b or b==c then return\
    \ true\n    if a==b or b==c or c==a or c==b or b==c or c==a or a==b or b==c or\
    \ c==a then return true\n    if a==b or b==c or c==a or c==b or b==c or c==a or\
    \ a==b or b==c or c==a or a==b or b==c or c==a then return true\n    if a==b or\
    \ b==c or c==a or c==b or b==c or c==a or a==b or b==c or c==a or a==b or b==c\
    \ or c==a or a==b or b==c or c==a then return true\n    if a==b or b==c or c==a\
    \ or c==b or b==c or c==a or a==b or b==c or c==a or a==b or b==c or c==a or a==b\
    \ or b==c or c==a then return true\n    if a==b or b==c or c==a or c==b or b==c\
    \ or c==a or a==b or b==c or c==a or a==b or b==c or c==a or a==b or \nusing Test\n\
    \n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4,\
    \ 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6,\
    \ 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmparjoxjyr.jl:11\nin expression starting at /tmp/tmparjoxjyr.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b and b==c then return true\n    if a==c\
    \ then return false\n    if b==c then return false\n    else return (a+b > c)\
    \ or (a+c > b) or (b+c > a)\nend\n\"\"\"\n    Given the lengths of the three sides\
    \ of a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"b\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaykddoda.jl:11\nin expression starting at /tmp/tmpaykddoda.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if b == c \n        then return true\n    else\
    \ if b > c \n        then return false\n    else if b < c \n        then return\
    \ false\n    else if b == c \n        then return true\n    else if b > c \n \
    \       then return false\n    else if b < c \n        then return false\n   \
    \ else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return \nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkgf1vywc.jl:12\nin expression starting at /tmp/tmpkgf1vywc.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n        then return true\n\
    \    else if b > c \n        then return false\n    else if c > a \n        then\
    \ return false\n    else \n        right_angle_triangle(a+1, b+1, c+1)\nend\n\
    </code>\n<|/ a tags=julia |>\n<| c |>\nThis does not answer the question. OP wants\
    \ to know if three sides form a right angled triangle, not if they form a right\
    \ angled triangle with one side longer than the other.\n<|/ c |>\n<| c |>\nI edited\
    \ the answer to include a solution that checks for that.\n<|/ c |>\n<| a dscore=1\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5ta9r27x.jl:11\nin expression starting at /tmp/tmp5ta9r27x.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c \n        then return\
    \ true\n    else \n        then return false\nend\n</code>\n<|/ a tags=julia,if-statement\
    \ |>\n<| c |>\nI believe this should be `return a==b or a==c or b==c`\n<|/ c |>\n\
    <| c |>\nThanks, I fixed it.\n<|/ c |>\n<| a tags=julia,if-statement |>\nI believe\
    \ this should be return a==b or a==c or b==c\n<|/ a dscore=2 |>\n<| a tags=julia,if-statement\
    \ |>\nI believe this should be return a==b or a==c or b==c\n<|/ a dscore=2 |>\n\
    <| a tags=julia,if-statement |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1,\
    \ 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t@test(candidate(2,\
    \ 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t@test(candidate(10,\
    \ 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t@test(candidate(15,\
    \ 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t@test(candidate(1,\
    \ 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_7gfcuc6.jl:11\nin expression starting at /tmp/tmp_7gfcuc6.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a < b and b < c and c < a then \n       \
    \ true\n    else\n        false\n    end\nend\n\"\"\"\n    Given the lengths of\
    \ the three sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"b\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmv5kl7i1.jl:11\nin expression starting at /tmp/tmpmv5kl7i1.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == 0 || b == 0 || c == 0 \n    then return\
    \ false \n    else if b > a && b > c \n    then return true \n    else if c >\
    \ a && c > b \n    then return true \n    else if b == c \n    then return true\
    \ \n    else if b > c \n    then return false \n    else if c > b \n    then return\
    \ false \n    else return right_angle_triangle(b,c,a) == true \nend\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nThis does not provide an answer to the question. To\
    \ critique or request clarification from an author, leave a comment below their\
    \ post. - [From Review](/review/low-quality-posts/27859039)\n<|/ c |>\n<| c |>\n\
    This does not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/27859039)\n\
    <|/ c |>\n<| c |>\nThis does not provide an answer to the question. To critique\
    \ or request clarification from an author, leave a comment below their post. -\
    \ [From Review](/review/low-quality-posts/27859039)\n<|/ c |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/27859039)\n\
    <|/ c |>\n<| a dscore=1 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1,\
    \ 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t@test(candidate(2,\
    \ 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t@test(candidate(10,\
    \ 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t@test(candidate(15,\
    \ 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t@test(candidate(1,\
    \ 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptkrs6ik4.jl:12\nin expression starting at /tmp/tmptkrs6ik4.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a < b and b < c and c < a then return true\
    \ \n    else return false \nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n\
    \    Given the lengths of the three sides of a triangle. Return True if the three\n\
    \    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1,\
    \ 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"b\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7hh2bpv1.jl:11\nin expression starting at /tmp/tmp7hh2bpv1.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return true\n    else if c > a \n    then return\
    \ true\n    else return false\nend\n</cell>\n<code language=julia-1.5>\nright_angle_triangle(3,\
    \ 4, 5)\n</cell>\n<code language=julia-1.5>\nright_angle_triangle(1, 2, 3)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes in three points and returns the\
    \ area of a triangle formed by those three points.\nusing Test\n\n@testset begin\n\
    \ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1,\
    \ 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t@test(candidate(2,\
    \ 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t@test(candidate(10,\
    \ 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t@test(candidate(15,\
    \ 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t@test(candidate(1,\
    \ 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_kshz0ts.jl:11\nin expression starting at /tmp/tmp_kshz0ts.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n        then return true\n\
    \    else if b > c \n        then return true\n    else if c > a \n        then\
    \ return true\n    else return false\nend\n\"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp31kpsk9u.jl:11\nin expression starting at /tmp/tmp31kpsk9u.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\n    end\nend\n\"\"\"\n    Given the lengths of\
    \ the three sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpz6i7olpb.jl:11\nin expression starting at /tmp/tmpz6i7olpb.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == 0 || b == 0 || c == 0 \n        then\
    \ return false\n    else if b > a && b > c \n        then return true\n    else\
    \ if c > a && c > b \n        then return true\n    else if b == c \n        then\
    \ return true\n    else if b > c \n        then return false\n    else if c >\
    \ b \n        then return false\n    else if b == c \n        then return true\n\
    \    else if b > c \n        then return false\n    else if c > b \n        then\
    \ return false\n    else if b > a && c > a \n        then return true\n    else\
    \ if b > a && c > b \n        then return true\n    else if b > a && c > c \n\
    \        then return true\n    else if b > a && a > c \n        then return true\n\
    \    else if b > a && a > b \n        then return true\n    else if b > a && a\
    \ > c \n        then return true\n    else if b > a && a > b \n        then return\
    \ true\n    else if b > a && a > c \n        then return true\n    else if b >\
    \ a && a > b \n        then return true\n    else if b > a && a > c \n       \
    \ then return true\n    else if b > a && a > b \n        then return true\n  \
    \  else if b > a && a > c \n        then return true\n    else if b > a && a >\
    \ b \n        then return true\n    else if b > a && a > c \n        then return\
    \ true\n    else if b > a && a > b \n        then return true\n    else if b >\
    \ a && a > c \n        then return true\n    else if b > a && a > b \n       \
    \ then return true\n    else if b > a && a > c \n        then return true\n  \
    \  else if b > a && a > b \n        then return true\n    else if b > a && a >\
    \ c \n        then return true\n    else if b > a && a > b \n        then return\
    \ true\n    else if b > a && a > c \n        then return true\n    else if b >\
    \ a && a > b \n        then return true\n    else if b > a && a > c \n       \
    \ then return true\n    else if b > a && a > b \nusing Test\n\n@testset begin\n\
    \ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1,\
    \ 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t@test(candidate(2,\
    \ 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t@test(candidate(10,\
    \ 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t@test(candidate(15,\
    \ 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t@test(candidate(1,\
    \ 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptlme4ulz.jl:12\nin expression starting at /tmp/tmptlme4ulz.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\nend\n</code>\n<|/ a tags=julia,if-statement |>\n\
    <| c |>\nThis doesn't work if you pass it negative numbers. For example, right_angle_triangle(-3,\
    \ 4, 5) == true\n<|/ c |>\n<| c |>\nYes, I agree with you. My answer was meant\
    \ as an example to show how it works. I didn't want to give the full solution.\
    \ Thanks for pointing it out.\n<|/ c |>\n<| a dscore=2 |>\n<code>\nusing Test\n\
    \n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4,\
    \ 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6,\
    \ 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvzph71w4.jl:11\nin expression starting at /tmp/tmpvzph71w4.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if b == c \n        then return true\n    else\
    \ if b > c \n        then return false\n    else \n        right_angle_triangle(a\
    \ - 1, b, c) or right_angle_triangle(a, b - 1, c) or right_angle_triangle(a, b,\
    \ c-1)\nend\n</code>\n<|/ a dscore=0 |>\n<| a tags=julia,recursion,function |>\n\
    <code>\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t\
    @test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqjx6fge5.jl:12\nin expression starting at /tmp/tmpqjx6fge5.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return true else\
    \ return false \nend\n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\
    \t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t\
    @test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t\
    @test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t\
    @test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t\
    @test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpu5g3ie29.jl:11\nin expression starting at /tmp/tmpu5g3ie29.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c and b > a \n    then return true\n    else if c > a and c >\
    \ b \n    then return true\n    else return false\nend\n\"\"\"\n    Given the\
    \ lengths of the three sides of a triangle. Return True if the three\n    sides\
    \ form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3)\
    \ == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpi8kk3fxl.jl:11\nin expression starting at /tmp/tmpi8kk3fxl.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\nend\n</cell>\n<code language=julia-1.5>\nright_angle_triangle(3,\
    \ 4, 5)\n</cell>\n<code language=julia-1.5>\nright_angle_triangle(1, 2, 3)\n</cell>\n\
    <text>\nExercise 5\nWrite a function that returns the area of a triangle given\
    \ its lengths. \nThe triangle is defined by three lengths a, b and c. \nThe area\
    \ is $\\sqrt{s(s-a)(s-b)(s-c)}$, where $s$ is the hypotenuse. \nThe function should\
    \ return $NaN$ if any of the lengths are $NaN$. \nExample: \ntriangle(3, 4, 5)\
    \ == 5.5\ntriangle(3, 4, 5) == NaN\ntriangle(1, 2, 3) == NaN\ntriangle(1, 2, 3)\
    \ == NaN\ntriangle(NaN, NaN, NaN) == NaN\ntriangle(NaN, NaN, NaN) == NaN\ntriangle(NaN,\
    \ NaN, NaN) == NaN\ntriangle(NaN, NaN, NaN) == NaN\ntriangle(NaN, NaN, NaN) ==\
    \ NaN\ntriangle(NaN, NaN, NaN) == NaN\ntriangle(NaN, NaN, NaN) == NaN\ntriangle(NaN,\
    \ NaN, NaN) == NaN\ntriangle(NaN, NaN, NaN) == NaN\ntriangle(NaN, NaN, NaN) ==\
    \ NaN\ntriangle(NaN, NaN, NaN) == NaN\ntriangle(NaN, NaN, NaN) == NaN\ntriangle(NaN,\
    \ NaN, NaN) == NaN\ntriangle(NaN, NaN, NaN) == NaN\ntriangle(NaN, NaN, NaN) ==\
    \ NaN\ntriangle(NaN, NaN, NaN) == NaN\ntriangle(NaN, NaN, NaN) == NaN\ntriangle(NaN,\
    \ NaN, NaN) == NaN\ntriangle(NaN, NaN, NaN) == NaN\ntriangle(NaN, NaN, NaN) ==\
    \ NaN\ntriangle(NaN, NaN, NaN) == NaN\ntriangle(NaN, NaN, NaN) == NaN\ntriangle(NaN,\
    \ NaN, NaN) == NaN\ntriangle(NaN, NaN, NaN) == NaN\ntriangle(NaN, NaN, NaN) ==\
    \ NaN\ntriangle(NaN, NaN, NaN) == NaN\ntriangle(NaN, NaN, NaN) == NaN\ntriangle(NaN,\
    \ NaN, NaN) == NaN\ntriangle(NaN, NaN, NaN) == NaN\ntriangle(NaN, NaN, NaN) ==\
    \ NaN\ntriangle(NaN, NaN, NaN) == NaN\ntriangle(NaN, NaN, NaN) == NaN\ntriangle(NaN,\
    \ NaN, \nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t\
    @test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_c2u39vd.jl:11\nin expression starting at /tmp/tmp_c2u39vd.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == 0 || b == 0 || c == 0 \n        then\
    \ return False\n    else if b > a && b > c \n        then return True\n    else\
    \ if c > a && c > b \n        then return True\n    else if b == c \n        then\
    \ return True\n    else if b > c \n        then return False\n    else if c >\
    \ b \n        then return False\n    else return False\nend\n</cell>\n<code language=julia-1.5>\n\
    right_angle_triangle(3, 4, 5)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ determines whether a triangle is equilateral or not.\nA triangle is equilateral\
    \ if all three sides are equal, i.e. the area of the triangle is equal to the\
    \ sum of its sides.\nExample: \n    equilateral_triangle(3, 4, 5) == True\n  \
    \  equilateral_triangle(1, 2, 3) == False\n    equilateral_triangle(2, 3, 1) ==\
    \ False\n    equilateral_triangle(2, 3, 2) == True\n    equilateral_triangle(2,\
    \ 3, 3) == False\n    equilateral_triangle(2, 3, 4) == False\n    equilateral_triangle(2,\
    \ 3, 5) == False\n    equilateral_triangle(2, 3, 6) == False\n    equilateral_triangle(2,\
    \ 3, 7) == False\n    equilateral_triangle(2, 3, 8) == False\n    equilateral_triangle(2,\
    \ 3, 9) == False\n    equilateral_triangle(2, 3, 10) == False\n    equilateral_triangle(2,\
    \ 3, 11) == False\n    equilateral_triangle(2, 3, 12) == False\n    equilateral_triangle(2,\
    \ 3, 13) == False\n    equilateral_triangle(2, 3, 14) == False\n    equilateral_triangle(2,\
    \ 3, 15) == False\n    equilateral_triangle(2, 3, 16) == False\n    equilateral_triangle(2,\
    \ 3, 17) == False\n    equilateral_triangle(2, 3, 18) == False\n    equilateral_triangle(2,\
    \ 3, 19) == False\n    equilateral_triangle(2, 3, 20) == False\n    equilateral_triangle(2,\
    \ 3, 21) == False\n    equilateral_triangle(2, 3, 22) == False\n    equilateral_triangle(2,\
    \ 3, 23) == False\n    equilateral_triangle(2, 3, 24) == False\n    equilateral_triangle(2,\
    \ 3, 25) == False\n    equilateral_triangle(2, 3, 26) == False\n    equilateral_triangle(2,\
    \ 3, 27) == False\n    equilateral_\nusing Test\n\n@testset begin\n\ncandidate\
    \ = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1,\
    \ 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t@test(candidate(2,\
    \ 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t@test(candidate(10,\
    \ 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t@test(candidate(15,\
    \ 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t@test(candidate(1,\
    \ 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpiz_praiq.jl:12\nin expression starting at /tmp/tmpiz_praiq.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b and b==c then return true\n    if a==b\
    \ or a==c or b==c then return false\n    else return (abs(a-b)==abs(a-c)) or (abs(b-c)==abs(a-c))\n\
    end\n\"\"\"\n    Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n    sides form a right-angled triangle, False otherwise.\n   \
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    \    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n   \
    \ right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1,\
    \ 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t@test(candidate(2,\
    \ 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t@test(candidate(10,\
    \ 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t@test(candidate(15,\
    \ 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t@test(candidate(1,\
    \ 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"b\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplnsyov0l.jl:11\nin expression starting at /tmp/tmplnsyov0l.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if b == c \n        then return true\n    else\
    \ if b > c \n        then return false\n    else if b < c \n        then return\
    \ false\n    else if b == c \n        then return true\n    else if b > c \n \
    \       then return false\n    else if b < c \n        then return false\n   \
    \ else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return \nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9eyh4gc5.jl:12\nin expression starting at /tmp/tmp9eyh4gc5.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b and a==c then return true\n    else\
    \ if a==c then return false\n    else if b==c then return false\n    else if a==b\
    \ or b==c then return false\n    else return true\nend\n\"\"\"\n    Given the\
    \ lengths of the three sides of a triangle. Return True if the three\n    sides\
    \ form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3)\
    \ == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbtx916fg.jl:11\nin expression starting at /tmp/tmpbtx916fg.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n        then return true\n\
    \    else if b > c \n        then return false\n    else if c > a \n        then\
    \ return false\n    else return true\nend\n\"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsy4dlkhg.jl:11\nin expression starting at /tmp/tmpsy4dlkhg.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == 0 || b == 0 || c == 0 \n    then return\
    \ False\n    else if b > a && b > c \n    then return False\n    else if c > a\
    \ && c > b \n    then return False\n    else if b == c \n    then return True\n\
    \    else if b > c \n    then return right_angle_triangle(a, c - b, c)\n    else\
    \ if c > b \n    then return right_angle_triangle(a - b, c, b)\n    else return\
    \ False\nend\n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\
    \t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t\
    @test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t\
    @test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t\
    @test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t\
    @test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1f_mnltm.jl:12\nin expression starting at /tmp/tmp1f_mnltm.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if b == c \n        then return true\n    else\
    \ if b > c \n        then return false\n    else \n        right_angle_triangle(b,\
    \ c, a) or right_angle_triangle(b, a, c)\nend\n</code>\n<|/ a dscore=0 |>\n<|\
    \ a tags=julia,recursion,function |>\n<code>\nusing Test\n\n@testset begin\n\n\
    candidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1,\
    \ 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t@test(candidate(2,\
    \ 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t@test(candidate(10,\
    \ 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t@test(candidate(15,\
    \ 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t@test(candidate(1,\
    \ 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfyyz68dt.jl:12\nin expression starting at /tmp/tmpfyyz68dt.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return false \n\
    \    else if a==c then return true \n    else if b==c then return true \n    else\
    \ return right_angle_triangle(a+1, b, c) or right_angle_triangle(a, b+1, c) or\
    \ right_angle_triangle(a, b, c1+1)\nend\n</code>\n<|/ a tags=julia |>\n<| a dscore=0\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm_tivect.jl:11\nin expression starting at /tmp/tmpm_tivect.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if b == c \n        then return true\n    else\
    \ if b == 0 \n        then return false\n    else if c == 0 \n        then return\
    \ false\n    else if b > c \n        then return false\n    else if b < c \n \
    \       then return false\n    else if b == c \n        then return true\n   \
    \ else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0uo4u_lq.jl:12\nin expression starting at /tmp/tmp0uo4u_lq.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n        then return true\n\
    \    else if b > c and b > a\n        then return true\n    else if c > a and\
    \ c > b\n        then return true\n    else return false\nend\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3)\
    \ == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9_sqxl1g.jl:11\nin expression starting at /tmp/tmp9_sqxl1g.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n        then return true\n\
    \    else if b > c \n        then return false\n    else if c > a \n        then\
    \ return false\n    else \n        right_angle_triangle(a - 1, b - 1, c) \n  \
    \      right_angle_triangle(a, b - 1, c - 1)\n        right_angle_triangle(a -\
    \ 1, c - 1, b)\n        right_angle_triangle(a - 1, b, c - 1)\n        right_angle_triangle(a,\
    \ b - 1, c - 1)\n        right_angle_triangle(a - 1, c - 1, b)\n        right_angle_triangle(a,\
    \ b - 1, c - 1)\n        right_angle_triangle(a - 1, b, c - 1)\n        right_angle_triangle(a,\
    \ b - 1, c - 1)\n        right_angle_triangle(a - 1, b, c - 1)\n        right_angle_triangle(a,\
    \ b - 1, c - 1)\n        right_angle_triangle(a - 1, b, c - 1)\n        right_angle_triangle(a,\
    \ b - 1, c - 1)\n        right_angle_triangle(a - 1, b, c - 1)\n        right_angle_triangle(a,\
    \ b - 1, c - 1)\n        right_angle_triangle(a - 1, b, c - 1)\n        right_angle_triangle(a,\
    \ b - 1, c - 1)\n        right_angle_triangle(a - 1, b, c - 1)\n        right_angle_triangle(a,\
    \ b - 1, c - 1)\n        right_angle_triangle(a - 1, b, c - 1)\n        right_angle_triangle(a,\
    \ b - 1, c - 1)\n        right_angle_triangle(a - 1, b, c - 1)\n        right_angle_triangle(a,\
    \ b - 1, c - 1)\n        right_angle_triangle(a - 1, b, c - 1)\n        right_angle_triangle(a,\
    \ b - 1, c - 1)\n        right_angle_triangle(a - 1, b, c - 1)\n        right_angle_triangle(a,\
    \ b - 1, c - 1)\n        right_angle_triangle(a - 1, b, c - 1)\n        right_angle_triangle(a,\
    \ b - 1, c - 1)\n        right_angle_triangle(a - 1, b, c - 1)\n        right_angle_triangle(a,\
    \ b - 1, c - 1)\n        right_angle_triangle(a - 1, b, c - 1)\n        right_angle_triangle(a,\
    \ b - 1, c - 1)\n        right_angle_triangle(a - 1, b, c - 1)\n        right_angle_triangle(a,\
    \ b - 1, c - 1)\n        right_angle_triangle(a - 1, b, c - 1)\n        right_angle_triangle(a,\
    \ b - 1, c - 1)\n        right_angle_triangle(a - 1, b, c - 1)\n        right_angle_triangle(a,\
    \ b - 1, c - 1)\n        right_angle_triangle(a - 1, b, c - 1)\n        right_angle_triangle(a,\
    \ b - 1, c - 1)\n        right_angle_triangle(a - 1, b, c - 1)\n        right_angle_triangle(a,\
    \ b - 1, c - 1)\n        right_angle_triangle(a - 1, b, c - 1)\n        right_angle_triangle(a,\
    \ b - 1, \nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptqiqv7p2.jl:11\nin expression starting at /tmp/tmptqiqv7p2.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == b or a == c or b == c \n        then\
    \ return true\n    else \n        right_angle_triangle(a + 1, b, c) or \n    \
    \    right_angle_triangle(a, b + 1, c) or \n        right_angle_triangle(a, b,\
    \ c + 1)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3)\
    \ == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_5ekbi1b.jl:11\nin expression starting at /tmp/tmp_5ekbi1b.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n        then return true\n\
    \    else if b > c \n        then return false\n    else if c > a \n        then\
    \ return false\n    else return true\nend\n\"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpv3d_b32i.jl:11\nin expression starting at /tmp/tmpv3d_b32i.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == 0 || b == 0 || c == 0 \n        then\
    \ return false \n    else \n        if abs(b * b - 4 * a * c) >= 0 \n        \
    \    then return true \n        else \n            if a > c \n               \
    \ then return right_angle_triangle(a - 1, b, c) \n            else \n        \
    \        if b > c \n                    then return right_angle_triangle(a, b\
    \ - 1, c) \n                else \n                    if a > b \n           \
    \             then return right_angle_triangle(a, b, c-1) \n                 \
    \   else \n                        return false \n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ equilateral triangle, False otherwise.\n    A equilateral triangle is a triangle\
    \ in which one angle is equal or \n    180 degree.\n    Example:\n    equilateral_triangle(3,\
    \ 4, 5) == True\n    equilateral_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpp4qmn8rd.jl:12\nin expression starting at /tmp/tmpp4qmn8rd.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then \n        right_angle_triangle(b,c,a)\
    \ \n    else \n        right_angle_triangle(a,b,c) \n    end \nend \n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpngquc20j.jl:11\nin expression starting at /tmp/tmpngquc20j.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n        then return true\n\
    \    else if a < b and a < c \n        then return false\n    else if b > a and\
    \ b > c \n        then return true\n    else if b < a and b < c \n        then\
    \ return false\n    else if c > a and c > b \n        then return true\n    else\
    \ if c < a and c < b \n        then return false\n    else return false\nend\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1,\
    \ 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpz1fq70uj.jl:11\nin expression starting at /tmp/tmpz1fq70uj.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\n    end\nend\n\"\"\"\n    Given the lengths of\
    \ the three sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9g6zfyl6.jl:11\nin expression starting at /tmp/tmp9g6zfyl6.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == b or a == c or b == c \n        then\
    \ return true\n    else \n        right_angle_triangle(a+1, b, c) or right_angle_triangle(a,\
    \ b+1, c) or right_angle_triangle(a, b, c+1)\nend\n</code>\n<|/ a tags=julia |>\n\
    <| a tags=julia |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8_81_13j.jl:11\nin expression starting at /tmp/tmp8_81_13j.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if b == c && b == a \n        then return true\n\
    \    else if b == a && c == a \n        then return true\n    else if b == c &&\
    \ c == a \n        then return true\n    else if b == a && a == c \n        then\
    \ return true\n    else if c == a && a == c \n        then return true\n    else\
    \ if c == a && b == c \n        then return true\n    else return false\nend\n\
    </code>\n<|/ a tags=julia |>\n<| c |>\nThis is not an answer to the question.\
    \ OP asked for Julia code, not Python code.\n<|/ c |>\n<| c |>\nI agree with you.\
    \ However I wanted to share my experience with Julia so I wrote this answer with\
    \ Julia code. However I agree with you that my answer is not an answer to OP's\
    \ question. However I wanted to share my experience with Julia so I wrote this\
    \ answer with Julia code. However I agree with you that my answer is not an answer\
    \ to OP's question. However I wanted to share my experience with Julia so I wrote\
    \ this answer with Julia code. However I agree with you that my answer is not\
    \ an answer to OP's question. However I wanted to share my experience with Julia\
    \ so I wrote this answer with Julia code. However I agree with you that my answer\
    \ is not an answer to OP's question. However I wanted to share my experience with\
    \ Julia so I wrote this answer with Julia code.\n<|/ c |>\n<| c |>\nI agree with\
    \ you. However I wanted to share my experience with Julia so I wrote this answer\
    \ with Julia code. However I agree with you that my answer is not an answer to\
    \ OP's question. However I wanted to share my experience with Julia so I wrote\
    \ this answer with Julia code. However I agree with you that my answer is not\
    \ an answer to OP's question. However I wanted to share my experience with Julia\
    \ so I wrote this answer with Julia code. However I agree with you that my answer\
    \ is not an answer to OP's question. However I wanted to share my experience with\
    \ Julia so I wrote this answer with Julia code.\n<|/ c |>\n<| c |>\nI agree with\
    \ you. However I wanted to share my experience with Julia so I wrote this answer\
    \ with Julia code. However I agree with you that my answer is not an answer to\
    \ OP's question. However I wanted to share my experience with Julia \nusing Test\n\
    \n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4,\
    \ 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6,\
    \ 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbpxf2pn2.jl:12\nin expression starting at /tmp/tmpbpxf2pn2.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == 0 || b == 0 || c == 0 \n    then return\
    \ False\n    else if a + b > c \n    then return False\n    else if b + c > a\
    \ \n    then return False\n    else if c + a > b \n    then return False\n   \
    \ else return True\nend\n\"\"\"\n    Given the lengths of the three sides of a\
    \ triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbpli0iwj.jl:12\nin expression starting at /tmp/tmpbpli0iwj.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return false \n\
    \    else if a>c then return right_angle_triangle(b, c, a) else return right_angle_triangle(a,\
    \ c, b) \nend\n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\
    \t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t\
    @test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t\
    @test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t\
    @test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t\
    @test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbym0zny6.jl:11\nin expression starting at /tmp/tmpbym0zny6.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if b == c || b == a || c == a \n        then\
    \ return true\n    else \n        right_angle_triangle(a + 1, b, c) || right_angle_triangle(a,\
    \ b + 1, c) || right_angle_triangle(a, b, c+1)\n    end\nend\n</code>\n<|/ a |>\n\
    <| c |>\nThis doesn't work. Try it with `right_angle_triangle(3, 4, 5)`.\n<|/\
    \ c |>\n<| c |>\nI see what you mean. I've updated my answer to fix the problem.\n\
    <|/ c |>\n<| c |>\nThis doesn't work. Try it with `right_angle_triangle(3, 4,\
    \ 5)`.\n<|/ c |>\n<| c |>\nI see what you mean. I've updated my answer to fix\
    \ the problem.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nusing Test\n\n@testset begin\n\
    \ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1,\
    \ 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t@test(candidate(2,\
    \ 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t@test(candidate(10,\
    \ 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t@test(candidate(15,\
    \ 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t@test(candidate(1,\
    \ 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8ul73hbz.jl:12\nin expression starting at /tmp/tmp8ul73hbz.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return true else\
    \ return false \nend \n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\
    \t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t\
    @test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t\
    @test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t\
    @test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t\
    @test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8duo7g_h.jl:11\nin expression starting at /tmp/tmp8duo7g_h.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == b or a == c or b == c then return true\n\
    \    else return false\nend\n\"\"\"\n    Given the lengths of the three sides\
    \ of a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqrsgwtxt.jl:11\nin expression starting at /tmp/tmpqrsgwtxt.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a < b and b < c and c < a then \n       \
    \ return true\n    else \n        return false\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1,\
    \ 2, 3) == False\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"b\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcdypeitd.jl:11\nin expression starting at /tmp/tmpcdypeitd.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return True else\
    \ return False\n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\
    \t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t\
    @test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t\
    @test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t\
    @test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t\
    @test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpr16hkdzs.jl:11\nin expression starting at /tmp/tmpr16hkdzs.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==0 || b==0 || c==0 \n        then return\
    \ False\n    else if a==b || b==c || c==a \n        then return True\n    else\
    \ if a==c || b==c || c==a \n        then return False\n    else if a==b || b==a\
    \ || c==a \n        then return False\n    else if a==c || b==a || c==b \n   \
    \     then return False\n    else if a==b || b==c || c==b \n        then return\
    \ False\n    else if a==c || b==c || c==a \n        then return False\n    else\
    \ return False\nend\n\"\"\"\nGiven the lengths of the three sides of a triangle.\
    \ Return True if the three\nsides form a right-angled triangle, False otherwise.\n\
    A right-angled triangle is a triangle in which one angle is right angle or \n\
    90 degree.\nExample: \nright_angle_triangle(3, 4, 5) == True\nright_angle_triangle(1,\
    \ 2, 3) == False\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkxvgbdt6.jl:12\nin expression starting at /tmp/tmpkxvgbdt6.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n        then return True\n\
    \    else if b > c and b > a \n        then return True\n    else if c > a and\
    \ c > b \n        then return True\n    else return False\nend\n</cell>\n<code\
    \ language=julia-1.5>\nright_angle_triangle(3, 4, 5)\n</cell>\n<code language=julia-1.5>\n\
    right_angle_triangle(1, 2, 3)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ checks if a triangle is equilateral or not.\nA triangle is equilateral if all\
    \ three sides are equal\nExample: \nequilateral_triangle(3, 4, 5) == True\nequilateral_triangle(1,\
    \ 2, 3) == False\nequilateral_triangle(2, 4, 6) == True\nequilateral_triangle(2,\
    \ 4, 5) == False\nequilateral_triangle(3, 4, 5) == True\nequilateral_triangle(2,\
    \ 3, 5) == False\nequilateral_triangle(2, 3, 6) == True\nequilateral_triangle(2,\
    \ 3, 7) == False\nequilateral_triangle(2, 4, 6) == True\nequilateral_triangle(2,\
    \ 4, 5) == False\nequilateral_triangle(3, 4, 5) == True\nequilateral_triangle(2,\
    \ 3, 5) == False\nequilateral_triangle(2, 3, 6) == True\nequilateral_triangle(2,\
    \ 3, 7) == False\nequilateral_triangle(2, 4, 6) == True\nequilateral_triangle(2,\
    \ 4, 5) == False\nequilateral_triangle(3, 4, 5) == True\nequilateral_triangle(2,\
    \ 3, 5) == False\nequilateral_triangle(2, 3, 6) == True\nequilateral_triangle(2,\
    \ 3, 7) == False\nequilateral_triangle(2, 4, 6) == True\nequilateral_triangle(2,\
    \ 4, 5) == False\nequilateral_triangle(3, 4, 5) == True\nequilateral_triangle(2,\
    \ 3, 5) == False\nequilateral_triangle(2, 3, 6) == True\nequilateral_triangle(2,\
    \ 3, 7) == False\nequilateral_triangle(2, 4, 6) == True\nequilateral_triangle(2,\
    \ 4, 5) == False\nequilateral_triangle(3, 4, 5) == True\nequilateral_triangle(2,\
    \ 3, 5) == False\nequilateral_triangle(2, 3, 6) == True\nequilateral_triangle(2,\
    \ 3, 7) == False\nequilateral_triangle(2, 4, 6) == True\nequilateral_triangle(2,\
    \ 4, 5) == False\nequilateral_triangle(3, 4, 5) == True\nequ\nusing Test\n\n@testset\
    \ begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\
    \t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t\
    @test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t\
    @test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t\
    @test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t\
    @test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp17ayozcw.jl:11\nin expression starting at /tmp/tmp17ayozcw.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c then \n        return true\n\
    \    else if b > a and b > c then \n        return true\n    else if c > a and\
    \ c > b then \n        return true\n    else \n        return false\nend\n\"\"\
    \"\n    Given the lengths of the three sides of a triangle. Return True if the\
    \ three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1,\
    \ 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpf8q278m8.jl:11\nin expression starting at /tmp/tmpf8q278m8.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n        then return true\n\
    \    else if a < b and a < c \n        then return false\n    else if b > c and\
    \ b > c \n        then return true\n    else if b < c and b < c \n        then\
    \ return false\n    else if c > a and c > a \n        then return true\n    else\
    \ if c < a and c < a \n        then return false\n    else return false\nend\n\
    </code>\n<|/ a tags=julia,if-statement |>\n<| c |>\nThis doesn't work if `a`,\
    \ `b` and `c` are equal\n<|/ c |>\n<| c |>\nI believe that this is what OP wants.\
    \ I added a comment to his question to clarify this.\n<|/ c |>\n<| a tags=julia,if-statement\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphn1c06sp.jl:11\nin expression starting at /tmp/tmphn1c06sp.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\nend\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpst26c3cp.jl:11\nin expression starting at /tmp/tmpst26c3cp.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n        then return true\n\
    \    else if a < b and a < c \n        then return false\n    else if b > a and\
    \ b > c \n        then return false\n    else if b < a and b < c \n        then\
    \ return true\n    else if c > a and c > b \n        then return true\n    else\
    \ if c < a and c < b \n        then return false\n    else return false\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n\"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4,\
    \ 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6,\
    \ 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgh22fug9.jl:11\nin expression starting at /tmp/tmpgh22fug9.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a < b and a < c and a < b \n    then return\
    \ true\n    else if b < c \n    then return false\n    else if c < a \n    then\
    \ return false\n    else return true\nend\n\"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp16ifuj37.jl:11\nin expression starting at /tmp/tmp16ifuj37.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return True else\
    \ return False \nend \n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\
    \t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t\
    @test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t\
    @test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t\
    @test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t\
    @test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmbbjz6f2.jl:11\nin expression starting at /tmp/tmpmbbjz6f2.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c then \n        if b > c then\
    \ \n            return true\n        else \n            return false\n    else\
    \ \n        if b > c then \n            return false\n        else \n        \
    \    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the\
    \ lengths of the three sides of a triangle. Return True if the three\n    sides\
    \ form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3)\
    \ == False\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpr_s07wka.jl:11\nin expression starting at /tmp/tmpr_s07wka.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n        then return true\n\
    \    else if b > c and b > a \n        then return true\n    else if c > a and\
    \ c > b \n        then return true\n    else return false\nend\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3)\
    \ == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp10sur74t.jl:11\nin expression starting at /tmp/tmp10sur74t.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == b or a == c or b == c \n        then\
    \ return true\n    else \n        return false\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1,\
    \ 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_1aethv3.jl:11\nin expression starting at /tmp/tmp_1aethv3.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return false \n\
    \    else return (a>b and a>c) or (b>a and b>c) or (c>a and c>b) \nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4t21ifxr.jl:11\nin expression starting at /tmp/tmp4t21ifxr.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a < b and a < c \n        then return true\n\
    \    else if b < c \n        then return false\n    else if c < a \n        then\
    \ return false\n    else return true\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1,\
    \ 2, 3) == False\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpouw_67uc.jl:11\nin expression starting at /tmp/tmpouw_67uc.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return True else\
    \ return False\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the\
    \ lengths of the three sides of a triangle. Return True if the three\n    sides\
    \ form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3)\
    \ == False\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7xnxzrvy.jl:11\nin expression starting at /tmp/tmp7xnxzrvy.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if b == c && b == a \n        return true \n\
    \    else \n        return false \nend\n</cell>\n<text>\nProblem 4\nWrite a function\
    \ that checks if a triangle is equilateral or not.\nA triangle is equilateral\
    \ if all three sides are equal\nExample: \nequilateral_triangle(3, 4, 5) == True\n\
    equilateral_triangle(1, 2, 3) == False\nequilateral_triangle(2, 3, 1) == False\n\
    equilateral_triangle(2, 3, 2) == False\nequilateral_triangle(2, 3, 3) == True\n\
    equilateral_triangle(2, 3, 4) == False\nequilateral_triangle(2, 3, 5) == False\n\
    equilateral_triangle(2, 3, 6) == False\nequilateral_triangle(2, 3, 7) == False\n\
    equilateral_triangle(2, 3, 8) == False\nequilateral_triangle(2, 3, 9) == False\n\
    equilateral_triangle(2, 3, 10) == False\nequilateral_triangle(2, 3, 11) == False\n\
    equilateral_triangle(2, 3, 12) == False\nequilateral_triangle(2, 3, 13) == False\n\
    equilateral_triangle(2, 3, 14) == False\nequilateral_triangle(2, 3, 15) == False\n\
    equilateral_triangle(2, 3, 16) == False\nequilateral_triangle(2, 3, 17) == False\n\
    equilateral_triangle(2, 3, 18) == False\nequilateral_triangle(2, 3, 19) == False\n\
    equilateral_triangle(2, 3, 20) == False\nequilateral_triangle(2, 3, 21) == False\n\
    equilateral_triangle(2, 3, 22) == False\nequilateral_triangle(2, 3, 23) == False\n\
    equilateral_triangle(2, 3, 24) == False\nequilateral_triangle(2, 3, 25) == False\n\
    equilateral_triangle(2, 3, 26) == False\nequilateral_triangle(2, 3, 27) == False\n\
    equilateral_triangle(2, 3, 28) == False\nequilateral_triangle(2, 3, 29) == False\n\
    equilateral_triangle(2, 3, 30) == False\nequilateral_triangle(2, 3, 31) == False\n\
    equilateral_triangle(2, 3, 32) == False\nequilateral_triangle(2, 3, 33) == False\n\
    equilateral_triangle(2, 3, 34) == False\nequilateral_triangle(2, 3, 35) == False\n\
    equilateral_triangle(2, 3, 36) == False\nequilateral_triangle(2, 3, 37) == False\n\
    equilateral_triangle(2, 3, 38) == False\nequilateral_triangle(2, 3, 39) == False\n\
    equil\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppmacmtj9.jl:16\nin expression starting at\
    \ /tmp/tmppmacmtj9.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\n    end\nend\n\"\"\"\n    Given the lengths of\
    \ the three sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn8oj0hno.jl:11\nin expression starting at /tmp/tmpn8oj0hno.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c then return true\n    if\
    \ b > c and b > a then return true\n    if c > a and c > b then return true\n\
    \    return false\nend\n</code>\n<|/ a tags=julia |>\n<| a tags=julia |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2wvsjnxc.jl:11\nin expression starting at /tmp/tmp2wvsjnxc.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c then \n        if b > c then\
    \ \n            true\n        else \n            false\n    else \n        if\
    \ b > c then \n            false\n        else \n            true\nend\n\"\"\"\
    \n    Given the lengths of the three sides of a triangle. Return True if the three\n\
    \    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1,\
    \ 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9m7yfhwk.jl:11\nin expression starting at /tmp/tmp9m7yfhwk.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return false \n\
    \    else if a==c then return true \n    else if b==c then return true \n    else\
    \ if a>b and a>c then return true \n    else if b>a and b>c then return true \n\
    \    else if a>b and b>c then return true \n    else if b>a and a>c then return\
    \ true \n    else if a>b and b>c then return true \n    else return false \nend\
    \ \n\"\"\"\n    Given the lengths of the three sides of a triangle. Return True\
    \ if the three\n    sides form a right-angled triangle, False otherwise.\n   \
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    \    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n   \
    \ right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1,\
    \ 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t@test(candidate(2,\
    \ 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t@test(candidate(10,\
    \ 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t@test(candidate(15,\
    \ 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t@test(candidate(1,\
    \ 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptu485f3z.jl:11\nin expression starting at /tmp/tmptu485f3z.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c and b > a \n    then return true\n    else if c > a and c >\
    \ b \n    then return true\n    else return false\nend\n\"\"\"\n    Given the\
    \ lengths of the three sides of a triangle. Return True if the three\n    sides\
    \ form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3)\
    \ == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpu_ssknew.jl:11\nin expression starting at /tmp/tmpu_ssknew.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c then \n        if b > c then\
    \ \n            return true\n        else \n            return false\n    else\
    \ \n        if b > c then \n            return false\n        else \n        \
    \    return true\nend\n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\
    \t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t\
    @test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t\
    @test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t\
    @test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t\
    @test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9a9a4sk_.jl:11\nin expression starting at /tmp/tmp9a9a4sk_.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == 0 || b == 0 || c == 0 \n        then\
    \ return false\n    else \n        if b > c \n            then return right_angle_triangle(a\
    \ - 1, b, c) \n        else \n            if a > c \n                then return\
    \ right_angle_triangle(a, b - 1, c) \n            else \n                if a\
    \ > b \n                    then return right_angle_triangle(a, b, c-1) \n   \
    \             else \n                    return true\n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3s96_sbt.jl:12\nin expression starting at /tmp/tmp3s96_sbt.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == b or a == c or b == c \n        then\
    \ return true\n    else \n        right_angle_triangle(a+1, b, c) or right_angle_triangle(a,\
    \ b+1, c) or right_angle_triangle(a, b, c+1)\n    end\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpl_4sjsqm.jl:11\nin expression starting at /tmp/tmpl_4sjsqm.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if b == c \n        then return true\n    else\
    \ if b > c \n        then return false\n    else if b < c \n        then return\
    \ false\n    else if b == c \n        then return true\n    else if b > c \n \
    \       then return false\n    else if b < c \n        then return false\n   \
    \ else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return \nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnhn8kok7.jl:12\nin expression starting at /tmp/tmpnhn8kok7.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n        then return true\n\
    \    else if b > c \n        then return true\n    else if c > a \n        then\
    \ return true\n    else return false\nend\n\"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn27llr_n.jl:11\nin expression starting at /tmp/tmpn27llr_n.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n        then return true\n\
    \    else if b > a and b > c \n        then return true\n    else if c > a and\
    \ c > b \n        then return true\n    else return false\nend\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3)\
    \ == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpt_cp7b6r.jl:11\nin expression starting at /tmp/tmpt_cp7b6r.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return True else\
    \ return False \nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given the\
    \ lengths of the three sides of a triangle. Return True if the three\n    sides\
    \ form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3)\
    \ == False\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphvqarg8i.jl:11\nin expression starting at /tmp/tmphvqarg8i.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if b == c && b == a \n        then return true\n\
    \    else if b == c \n        then return false\n    else if b == a \n       \
    \ then return false\n    else if c == a \n        then return false\n    else\
    \ \n        right_angle_triangle(b, c, a) || right_angle_triangle(b, a, c) ||\
    \ right_angle_triangle(a, c, b)\nend\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis\
    \ does not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/26814007)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He asked how to check\
    \ if a triangle is right angled, not how to check if a triangle is equilateral.\
    \ He also asked how to check if a triangle is right angled, not how to check if\
    \ a triangle is equilateral. He also asked how to check if a triangle is right\
    \ angled, not how to check if a triangle is equilateral. He also asked how to\
    \ check if a triangle is right angled, not how to check if a triangle is equilateral.\
    \ He also asked how to check if a triangle is right angled, not how to check if\
    \ a triangle is equilateral. He also asked how to check if a triangle is right\
    \ angled, not how to check if a triangle is equilateral. He also asked how to\
    \ check if a triangle is right angled, not how to check if a triangle is equilateral.\
    \ He also asked how to check if a triangle is right angled, not how to check if\
    \ a triangle is equilateral. He also asked how to check if a triangle is right\
    \ angled, not how to check if a triangle is equilateral. He also asked how to\
    \ check if a triangle is right angled, not how to check if a triangle is equilateral.\
    \ He also asked how to check if a triangle is right angled, not how to check if\
    \ a triangle is equilateral. He also asked how to check if a triangle is right\
    \ angled, not how to check if a triangle is equilateral. He also asked how to\
    \ check if a triangle is right angled, not how to check if a triangle is equilateral.\
    \ He also asked how to check if a triangle is right angled, not how to check if\
    \ a tri\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t\
    @test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7zz6i3ir.jl:12\nin expression starting at /tmp/tmp7zz6i3ir.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c then return true\n    if\
    \ b > c and b > a then return true\n    if c > a and c > b then return true\n\
    \    return false\nend\n\"\"\"\n    Given the lengths of the three sides of a\
    \ triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9h0tbf_i.jl:11\nin expression starting at /tmp/tmp9h0tbf_i.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\nend\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprr1s23g9.jl:11\nin expression starting at /tmp/tmprr1s23g9.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == 0 || b == 0 || c == 0 \n    then return\
    \ false \n    else if a + b > c \n    then return right_angle_triangle(b, a, c)\
    \ \n    else if b + c > a \n    then return right_angle_triangle(a, b, c) \n \
    \   else if c + a > b \n    then return right_angle_triangle(a, b, a) \n    else\
    \ return true \nend \n\"\"\"\n    Given the lengths of the three sides of a triangle.\
    \ Return True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\
    \t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t\
    @test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t\
    @test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t\
    @test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t\
    @test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpa0q5gp49.jl:12\nin expression starting at /tmp/tmpa0q5gp49.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if b == c \n        then return true\n    else\
    \ if b > c \n        then return false\n    else if b < c \n        then return\
    \ false\n    else if b == c \n        then return true\n    else if b > c \n \
    \       then return false\n    else if b < c \n        then return false\n   \
    \ else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return \nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp74e0o3ao.jl:12\nin expression starting at /tmp/tmp74e0o3ao.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c then return true\n    else\
    \ if b > a and b > c then return true\n    else if c > a and c > b then return\
    \ true\n    else return false\nend\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpw66307rl.jl:11\nin expression starting at /tmp/tmpw66307rl.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c then \n        if b > c then\
    \ \n            true\n        else \n            false\n    else \n        if\
    \ b > c then \n            false\n        else \n            true\nend\n\"\"\"\
    \n    Given the lengths of the three sides of a triangle. Return True if the three\n\
    \    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1,\
    \ 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1ss06wsc.jl:11\nin expression starting at /tmp/tmp1ss06wsc.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return true\n \
    \   else if a==b+c then return true\n    else if b==c+a then return true\n   \
    \ else return false\nend\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyf65cu2k.jl:11\nin expression starting at /tmp/tmpyf65cu2k.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if b == c \n        then return true\n    else\
    \ if b > c \n        then return false\n    else if b < c \n        then return\
    \ false\n    else \n        right_angle_triangle(a+1, b, c) or right_angle_triangle(a,\
    \ c+1, b)\nend\n</code>\n<|/ a tags=julia |>\n<| c |>\nThis code does not work.\
    \ `right_angle_triangle(3, 4, 5)` returns `true` while it should return `false`.\n\
    <|/ c |>\n<| c |>\nI fixed the code. Thanks for pointing it out.\n<|/ c |>\n<|\
    \ a dscore=2 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpo91i5mfn.jl:12\nin expression starting at /tmp/tmpo91i5mfn.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b and b==c then return true\n    else\
    \ if a==c then return false\n    else if b==c then return false\n    else if a==b\
    \ then return false\n    else if a==c then return true\n    else if b==c then\
    \ return true\n    else if a==b then return true\n    else return false\nend\n\
    </code>\n<|/ a tags=julia,if-statement |>\n<| c |>\nI like the `if` statement\
    \ version better, since it avoids having to write `else` after every `if` statement.\
    \ Also, you can write `if a==b || a==c || b==c || a==b || a==c || b==c` instead\
    \ of `if a==b || a==c || b==c || a==b || a==c || b==c`.\n<|/ c |>\n<| c |>\nI\
    \ agree with you, it's more elegant, but my point was that you can write `if a==b\
    \ || a==c || b==c || a==b || a==c || b==c` instead of `if a==b || a==c || b==c\
    \ || a==b || a==c || b==c` because `a==b || a==c || b==c || a==b || a==c || b==c`\
    \ will evaluate to `true` only if `a==b` is `true`, which is not the case for\
    \ `a==c`.\n<|/ c |>\n<| c |>\nI agree with you, it's more elegant, but my point\
    \ was that you can write `if a==b || a==c || b==c || a==b || a==c || b==c` instead\
    \ of `if a==b || a==c || b==c || a==b || a==c || b==c` because `a==b || a==c ||\
    \ b==c || a==b || a==c || b==c` will evaluate to `true` only if `a==b` is `true`,\
    \ which is not the case for `a==c`.\n<|/ c |>\n<| c |>\nI agree with you, it's\
    \ more elegant, but my point was that you can write `if a==b || a==c || b==c ||\
    \ a==b || a==c || b==c` instead of `if a==b || a==c || b==c || a==b \nusing Test\n\
    \n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4,\
    \ 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6,\
    \ 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"b\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxygy98qw.jl:11\nin expression starting at /tmp/tmpxygy98qw.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if b == c \n        then return true\n    else\
    \ if b > c \n        then return false\n    else if b < c \n        then return\
    \ false\n    else \n        right_angle_triangle(b, c-1, a-1) == true || right_angle_triangle(b,\
    \ c-1, a) == true || right_angle_triangle(b, c-1, a+1) == true\nend\n</code>\n\
    <|/ a tags=julia,recursion |>\n<| c |>\nThis doesn't work for me. `right_angle_triangle(3,\
    \ 4, 5)` returns `true`, but `right_angle_triangle(1, 2, 3)` returns `false`.\
    \ Also, `right_angle_triangle(3, 4, 5)` returns `true` but `right_angle_triangle(3,\
    \ 4, 4)` returns `false`.\n<|/ c |>\n<| c |>\nI fixed the bug. Sorry for the mistake.\n\
    <|/ c |>\n<| c |>\nI fixed the bug. Sorry for the mistake.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbpxsh9i9.jl:12\nin expression starting at /tmp/tmpbpxsh9i9.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == b or a == c or b == c then return True\
    \ else return False \n    else return right_angle_triangle(a-1, b, c) or right_angle_triangle(a,\
    \ b-1, c) or right_angle_triangle(a, b, c-1) \nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1,\
    \ 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpiufjw3mr.jl:11\nin expression starting at /tmp/tmpiufjw3mr.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\nend\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbc9d7z5t.jl:11\nin expression starting at /tmp/tmpbc9d7z5t.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if b == c \n        then return true\n    else\
    \ \n        then return false\n    end\nend\n\"\"\"\n    Given the lengths of\
    \ the three sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzrsbdxct.jl:12\nin expression starting at /tmp/tmpzrsbdxct.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then \n        true\n\
    \    elseif b > c \n    then \n        true\n    elseif c > a \n    then \n  \
    \      true\n    else\n        false\n    end\nend\n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9e04gjbz.jl:11\nin expression starting at /tmp/tmp9e04gjbz.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c and b > a \n    then return true\n    else if c > a and c >\
    \ b \n    then return true\n    else return false\n    end\nend\n</code>\n<|/\
    \ a dscore=0 |>\n<| a tags=julia |>\n<code>\nusing Test\n\n@testset begin\n\n\
    candidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1,\
    \ 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t@test(candidate(2,\
    \ 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t@test(candidate(10,\
    \ 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t@test(candidate(15,\
    \ 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t@test(candidate(1,\
    \ 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2xpdsbf0.jl:11\nin expression starting at /tmp/tmp2xpdsbf0.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\nend\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphwz2w6fo.jl:11\nin expression starting at /tmp/tmphwz2w6fo.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c then return true\n    if\
    \ b > c and b > a then return true\n    if c > a and c > b then return true\n\
    \    return false\nend\n\"\"\"\n    Given the lengths of the three sides of a\
    \ triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3a4ra70r.jl:11\nin expression starting at /tmp/tmp3a4ra70r.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\nend\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3yk6lr7s.jl:11\nin expression starting at /tmp/tmp3yk6lr7s.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if b == c \n        then return true\n    else\
    \ if b > c \n        then return false\n    else if b < c \n        then return\
    \ false\n    else if b == c \n        then return true\n    else if b > c \n \
    \       then return false\n    else if b < c \n        then return false\n   \
    \ else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return \nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjikv1j24.jl:12\nin expression starting at /tmp/tmpjikv1j24.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then \n        true\n\
    \    elseif b > c \n    then \n        true\n    elseif c > a \n    then \n  \
    \      true\n    else\n        false\n    end\nend\n\"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj54mbc7z.jl:11\nin expression starting at /tmp/tmpj54mbc7z.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return false \n\
    \    else return (a+b+c) == (sqrt(a^2 + b^2 + c^2))\nend\n</cell>\n<code language=julia-1.5>\n\
    right_angle_triangle(3, 4, 5)\n</cell>\n<code language=julia-1.5>\nright_angle_triangle(1,\
    \ 2, 3)\n</cell>\n<text>\nExercise 3\nWrite a function that determines whether\
    \ a triangle is equilateral or not.\nA triangle is equilateral if all three sides\
    \ are equal, i.e. the area of the triangle is equal to its perimeter. \nExample:\
    \ \ntriangle_equilateral(3, 4, 5) == True\ntriangle_equilateral(3, 4, 5) == False\n\
    triangle_equilateral(1, 2, 3) == False\ntriangle_equilateral(1, 2, 3) == True\n\
    Hint: \nThe area of a triangle can be calculated using the formula: $\\pi a^2\
    \ b^2 = \\pi a^2 + \\pi b^2 + \\pi c^2$\nThe perimeter of a triangle can be calculated\
    \ using the formula: $\\pi a^2 + \\pi b^2 + \\pi c^2 = \\pi a^2 + \\pi b^2 + \\\
    pi c^2 + \\pi a^2 + \\pi b^2 + \\pi c^2$\nThe equilateral triangle is one in which\
    \ all three sides are equal, i.e. the area is equal to the perimeter.\nusing Test\n\
    \n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4,\
    \ 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6,\
    \ 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpevwh83tl.jl:11\nin expression starting at /tmp/tmpevwh83tl.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return true\n \
    \   else return false\nend\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpp5_wwtj0.jl:11\nin expression starting at /tmp/tmpp5_wwtj0.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c \n    then return true\n\
    \    else \n        right_angle_triangle(a+1, b, c) or right_angle_triangle(a,\
    \ b+1, c) or right_angle_triangle(a, b, \n        c+1)\n    end\nend\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it with `right_angle_triangle(3,\
    \ 4, 5)`.\n<|/ c |>\n<| c |>\nI tested it and it works. I used Julia 0.6.2\n<|/\
    \ c |>\n<| c |>\nI tested it and it works. I used Julia 0.6.2\n<|/ c |>\n<| c\
    \ |>\nI tested it and it works. I used Julia 0.6.2\n<|/ c |>\n<| c |>\nI tested\
    \ it and it works. I used Julia 0.6.2\n<|/ c |>\n<| a dscore=0 |>\n<code>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzmmavwxc.jl:11\nin expression starting at /tmp/tmpzmmavwxc.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == b or a == c or b == c then return true\n\
    \    else return false\nend\n\"\"\"\n    Given the lengths of the three sides\
    \ of a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpie06xvx1.jl:11\nin expression starting at /tmp/tmpie06xvx1.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == b or a == c or b == c then return true\n\
    \    else return false\nend\n\"\"\"\n    Given the lengths of the three sides\
    \ of a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp04i2vnj6.jl:11\nin expression starting at /tmp/tmp04i2vnj6.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\nend\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpiuarlcok.jl:11\nin expression starting at /tmp/tmpiuarlcok.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else if c > a \n    then return\
    \ false\n    else return true\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"\
    \n    Given the lengths of the three sides of a triangle. Return True if the three\n\
    \    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1,\
    \ 2, 3) == False\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbksvbo37.jl:11\nin expression starting at /tmp/tmpbksvbo37.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return False \n\
    \    else if a>b then return right_angle_triangle(b,c,a) else return right_angle_triangle(a,c,b)\
    \ \nend \n\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\
    \t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t\
    @test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t\
    @test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t\
    @test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t\
    @test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn9a9ne5p.jl:11\nin expression starting at /tmp/tmpn9a9ne5p.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == b and b == c \n        then return true\n\
    \    else if b == c \n        then return false\n    else if c == a \n       \
    \ then return false\n    else if b > c \n        then return false\n    else if\
    \ b < c \n        then return true\n    else if b == c \n        then return true\n\
    \    else if b > c \n        then return true\n    else if b < c \n        then\
    \ return false\n    else return false\nend\n\"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"b\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpox8m0tlm.jl:11\nin expression starting at /tmp/tmpox8m0tlm.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n        then return true\n\
    \    else if b > c and b > a \n        then return true\n    else if c > a and\
    \ c > b \n        then return true\n    else return false\nend\n\"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return True if the three\n   \
    \ sides form a right-angled triangle, False otherwise.\n    A right-angled triangle\
    \ is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n\
    \    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3)\
    \ == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpogokfnoq.jl:11\nin expression starting at /tmp/tmpogokfnoq.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c \n    then return true\n\
    \    else if b > c \n    then return false\n    else return false\n    end\nend\n\
    \"\"\"\n    Given the lengths of the three sides of a triangle. Return True if\
    \ the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n    90 degree.\n\
    \    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1,\
    \ 2, 3) == False\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpt_a29bo7.jl:11\nin expression starting at /tmp/tmpt_a29bo7.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==0 || b==0 || c==0 \n        then return\
    \ false \n    else \n        if abs(a-b)==abs(a-c) \n            then return true\
    \ \n        else \n            if abs(b-c)==abs(a-b) \n                then return\
    \ true \n            else \n                if abs(c-a)==abs(a-c) \n         \
    \           then return true \n                else \n                    return\
    \ false \n\"\"\"\nGiven the lengths of the three sides of a triangle. Return True\
    \ if the three\nsides form a equilateral triangle, False otherwise.\nAn equilateral\
    \ triangle is a triangle in which all angles are equal\nExample: \nequilateral_triangle(3,\
    \ 4, 5) == True\nequilateral_triangle(1, 2, 3) == False\n\"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5)\
    \ == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6, 8)\
    \ == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25)\
    \ == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13)\
    \ == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73)\
    \ == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10)\
    \ == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqob77yut.jl:12\nin expression starting at /tmp/tmpqob77yut.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==0 || b==0 || c==0 \n        then return\
    \ false\n    else \n        if a>b and a>c \n            then return true\n  \
    \      else if b>a and b>c \n            then return true\n        else if c>a\
    \ and c>b \n            then return true\n        else return false\nend\n</code>\n\
    <|/ a tags=julia,if-statement |>\n<| c |>\nThis doesn't answer the question. OP\
    \ asked how to write an `if` statement that checks if three sides of a triangle\
    \ are right angles.\n<|/ c |>\n<| c |>\nI added a code snippet that does exactly\
    \ that. Hope it helps.\n<|/ c |>\n<| c |>\nI added a code snippet that does exactly\
    \ that. Hope it helps.\n<|/ c |>\n<| c |>\nI added a code snippet that does exactly\
    \ that. Hope it helps.\n<|/ c |>\n<| c |>\nI added a code snippet that does exactly\
    \ that. Hope it helps.\n<|/ c |>\n<| a dscore=2 |>\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\
    \t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t\
    @test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t\
    @test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t\
    @test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t\
    @test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_xhv0dxm.jl:12\nin expression starting at /tmp/tmp_xhv0dxm.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == 0 || b == 0 || c == 0 \n        then\
    \ return false\n    else if a + b > c \n        then return true\n    else if\
    \ b + c > a \n        then return true\n    else if c + a > b \n        then return\
    \ true\n    else return false\nend\n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8xcci7o0.jl:12\nin expression starting at /tmp/tmp8xcci7o0.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if b == c \n        then return true\n    else\
    \ if b > c \n        then return false\n    else if b < c \n        then return\
    \ false\n    else if b == c \n        then return true\n    else if b > c \n \
    \       then return false\n    else if b < c \n        then return false\n   \
    \ else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return false\n    else if b < c \n        then return false\n    else if b >\
    \ c \n        then return false\n    else if b < c \n        then return false\n\
    \    else if b > c \n        then return false\n    else if b < c \n        then\
    \ return false\n    else if b > c \n        then return false\n    else if b <\
    \ c \n        then return false\n    else if b > c \n        then return false\n\
    \    else if b < c \n        then return false\n    else if b > c \n        then\
    \ return \nusing Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\
    \t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t\
    @test(candidate(10, 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7,\
    \ 24, 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5,\
    \ 12, 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48,\
    \ 55, 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2,\
    \ 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfi5ifu_x.jl:12\nin expression starting at /tmp/tmpfi5ifu_x.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return false \n\
    \    else if a==c then return true \n    else if b==c then return true \n    else\
    \ return right_angle_triangle(a-1, b, c) or right_angle_triangle(a, b-1, c) or\
    \ right_angle_triangle(a, b, c-1) \nend\n\"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgo1mfex2.jl:11\nin expression starting at /tmp/tmpgo1mfex2.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a == b or a == c or b == c \n    then return\
    \ true \n    else return false \nend \n\"\"\"\n    Given the lengths of the three\
    \ sides of a triangle. Return True if the three\n    sides form a right-angled\
    \ triangle, False otherwise.\n    A right-angled triangle is a triangle in which\
    \ one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0o28u7w1.jl:11\nin expression starting at /tmp/tmp0o28u7w1.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c then return true\n    if\
    \ b > c and b > a then return true\n    if c > a and c > b then return true\n\
    \    return false\nend\n\"\"\"\n    Given the lengths of the three sides of a\
    \ triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpe3x85_83.jl:11\nin expression starting at /tmp/tmpe3x85_83.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a==b or a==c or b==c then return true\n \
    \   else return false\nend\n\"\"\"\n    Given the lengths of the three sides of\
    \ a triangle. Return True if the three\n    sides form a right-angled triangle,\
    \ False otherwise.\n    A right-angled triangle is a triangle in which one angle\
    \ is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3,\
    \ 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = right_angle_triangle;\n\t@test(candidate(3,\
    \ 4, 5) == true)\n\t@test(candidate(1, 2, 3) == false)\n\t@test(candidate(10,\
    \ 6, 8) == true)\n\t@test(candidate(2, 2, 2) == false)\n\t@test(candidate(7, 24,\
    \ 25) == true)\n\t@test(candidate(10, 5, 7) == false)\n\t@test(candidate(5, 12,\
    \ 13) == true)\n\t@test(candidate(15, 8, 17) == true)\n\t@test(candidate(48, 55,\
    \ 73) == true)\n\t@test(candidate(1, 1, 1) == false)\n\t@test(candidate(2, 2,\
    \ 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp56n76iij.jl:11\nin expression starting at /tmp/tmp56n76iij.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n    sides form a right-angled triangle, False otherwise.\n\
    \    A right-angled triangle is a triangle in which one angle is right angle or\
    \ \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n\
    \    right_angle_triangle(1, 2, 3) == False\n    \"\"\"\nfunction right_angle_triangle(a::Int64,\
    \ b::Int64, c::Int64)::Bool \n    if a > b and a > c then return true\n    if\
    \ b > c and b > a then return true\n    if c > a and c > b then return true\n\
    \    return false\nend\n\"\"\"\n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \nusing Test\n\n@testset begin\n\
    \ncandidate = right_angle_triangle;\n\t@test(candidate(3, 4, 5) == true)\n\t@test(candidate(1,\
    \ 2, 3) == false)\n\t@test(candidate(10, 6, 8) == true)\n\t@test(candidate(2,\
    \ 2, 2) == false)\n\t@test(candidate(7, 24, 25) == true)\n\t@test(candidate(10,\
    \ 5, 7) == false)\n\t@test(candidate(5, 12, 13) == true)\n\t@test(candidate(15,\
    \ 8, 17) == true)\n\t@test(candidate(48, 55, 73) == true)\n\t@test(candidate(1,\
    \ 1, 1) == false)\n\t@test(candidate(2, 2, 10) == false)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphyxbc9ua.jl:11\nin expression starting at /tmp/tmphyxbc9ua.jl:11\n"
  exit_code: 1
  status: SyntaxError

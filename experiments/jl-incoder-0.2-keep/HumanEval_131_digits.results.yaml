name: HumanEval_131_digits
language: julia
results:
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then 0 else n % 10 * digits(n / 10)\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ You can use the function digits to get the individual digits of a number.\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsoanf_b1.jl:9\nin expression starting at /tmp/tmpsoanf_b1.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        if n % 2 == 0 \n            digits(n\
    \ / 2)\n        else\n            digits(n / 2) * 3\n        end\n    end\nend\n\
    </cell>\n<code language=julia-1.0>\ndigits(1)\n</cell>\n<code language=julia-1.0>\n\
    digits(4)\n</cell>\n<code language=julia-1.0>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    For example:\ndigits(123)  == 6\ndigits(-23) == 3\ndigits(0)   == 0\ndigits(-0)\
    \  == 0\ndigits(12)  == 1\ndigits(-2)  == 1\ndigits(1234) == 5\ndigits(-1234)\
    \ == 4\ndigits(123)  == 6\ndigits(-23) == 3\ndigits(0)   == 0\ndigits(-0)  ==\
    \ 0\ndigits(12)  == 1\ndigits(-2)  == 1\ndigits(1234) == 5\ndigits(-1234) == 4\n\
    digits(123)  == 6\ndigits(-23) == 3\ndigits(0)   == 0\ndigits(-0)  == 0\ndigits(12)\
    \  == 1\ndigits(-2)  == 1\ndigits(1234) == 5\ndigits(-1234) == 4\ndigits(123)\
    \  == 6\ndigits(-23) == 3\ndigits(0)   == 0\ndigits(-0)  == 0\ndigits(12)  ==\
    \ 1\ndigits(-2)  == 1\ndigits(1234) == 5\ndigits(-1234) == 4\ndigits(123)  ==\
    \ 6\ndigits(-23) == 3\ndigits(0)   == 0\ndigits(-0)  == 0\ndigits(12)  == 1\n\
    digits(-2)  == 1\ndigits(1234) == 5\ndigits(-1234) == 4\ndigits(123)  == 6\ndigits(-23)\
    \ == 3\ndigits(0)   == 0\ndigits(-0)  == 0\ndigits(12)  == 1\ndigits(-2)  == 1\n\
    digits(1234) == 5\ndigits(-1234) == 4\ndigits(123)  == 6\ndigits(-23) == 3\ndigits(0)\
    \   == 0\ndigits(-0)  == 0\ndigits(12)  == 1\ndigits(-2)  == 1\ndigits(1234) ==\
    \ 5\ndigits(-1234) == 4\ndigits(12\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb9efzcy8.jl:19\nin expression starting at\
    \ /tmp/tmpb9efzcy8.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n-1)*(n%10+digits(n//10))\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr0yhxcaw.jl:14\nin expression starting at\
    \ /tmp/tmpr0yhxcaw.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    else if n==1 then return 1\n    else if n%2==0\
    \ then return n*digits(n/2)\n    else return n*digits(n-1)\nend\n</cell>\n<code\
    \ language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n\
    </cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the sum of the digits of an integer.\nFor example,\
    \ digits(123) = 1 + 2 + 3 = 6\nHint: You can use the function digits to solve\
    \ this problem!\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptppbwkuk.jl:9\nin expression starting at /tmp/tmptppbwkuk.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then 0 else digits(n-1)*(n%2)*(n%2)\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example:\n    digits(123)  == 6\n    digits(-23)\
    \ == 3\n    digits(0)   == 0\n    digits(-0)  == 0\n    digits(12)  == 1\n   \
    \ digits(-2)  == 1\n    digits(1234) == 5\n    digits(-1234) == 4\n    digits(-123)\
    \ == 3\n    digits(12345)  == 9\n    digits(-12345)  == 8\n    digits(-12345)\
    \ == 8\n    digits(123456789) == 45\n    digits(-123456789) == 44\n    digits(-123456789)\
    \ == 44\n    digits(1234567890) == 987\n    digits(-1234567890) == 987\n    digits(12345678901)\
    \ == 765\n    digits(-12345678901) == 765\n    digits(123456789012) == 9876\n\
    \    digits(-123456789012) == 9876\n    digits(1234567890123) == 7665\n    digits(-1234567890123)\
    \ == 7665\n    digits(12345678901234) == 987654\n    digits(-12345678901234) ==\
    \ 987654\n    digits(123456789012345) == 766543\n    digits(-123456789012345)\
    \ == 766543\n    digits(1234567890123456) == 9876543\n    digits(-1234567890123456)\
    \ == 9876543\n    digits(1234567890123456789) == 456789012\n    digits(-1234567890123456789)\
    \ == 456789012\n    digits(12345678901234567890) == 987654321\n    digits(-12345678901234567890)\
    \ == 987654321\n    digits(123456789012345678901) == 7653412\n    digits(-123456789012345678901)\
    \ == 7653412\n    digits(1234567890123456789012) == 9876543210\n    digits(-1234567890123456789012)\
    \ == 9876543210\n    digits(12345678901234567890123) == 765341235\n    digits(-12345678901234567890123)\
    \ == 765341235\n\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcmktc53k.jl:9\nin expression starting at /tmp/tmpcmktc53k.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n\
    <code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the sum of the digits\
    \ of an integer.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzmm_lxmd.jl:14\nin expression starting at\
    \ /tmp/tmpzmm_lxmd.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0 \n        error(\"n must be positive\")\n    else if n == 0 \n\
    \        1\n    else \n        digits(n//2)*(n % 2 == 0 ? 1 : 0)\nend\n</cell>\n\
    <code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n\
    </cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the product of the even digits in a given number.\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqzr35bby.jl:11\nin expression starting at\
    \ /tmp/tmpqzr35bby.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n\
    <code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n\
    </cell>\n<text>\nExercise: Write a function that returns the product of the even\
    \ digits in a given number.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppgxnb9iz.jl:14\nin expression starting at\
    \ /tmp/tmppgxnb9iz.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    else if n%2==0 then return n*digits(n/2)\n\
    \    else return digits(n/2)*digits(n/2)\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(12345) = 1 + 2 + 3 + 4 + 5\
    \ = 10.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnfkfd0ps.jl:9\nin expression starting at /tmp/tmpnfkfd0ps.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        digits(n / 10) * 10 + n % 10\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<code language=julia-1.5>\n\
    digits(235000)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ Use a recursive function.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmponb6w2z2.jl:14\nin expression starting at\
    \ /tmp/tmponb6w2z2.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n<0 \n        return 0 \n    else if n==0 \n        return 1 \n   \
    \ else \n        return digits(n//10)*10 + digits(n%10)\nend\n</cell>\n<code language=julia-1.4>\n\
    digits(1)\n</cell>\n<code language=julia-1.4>\ndigits(4)\n</cell>\n<code language=julia-1.4>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the product\
    \ of the even digits in a given number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp19k2w8ll.jl:11\nin expression starting at\
    \ /tmp/tmp19k2w8ll.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then 0 else n % 10 * digits(n / 10)\nend\n</cell>\n<code language=julia-1.0>\n\
    digits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum\
    \ of the digits of its input. For example:\n    digits(123)  == 6\n    digits(-23)\
    \ == 3\n    digits(0)   == 0\n    digits(-0)  == 0\n    digits(-45) == 5\n   \
    \ digits(-99) == 9\n    digits(-999) == 9\n    digits(-9999) == 9\n    digits(-99999)\
    \ == 9\n    digits(-999999) == 9\n    digits(-9999999) == 9\n    digits(-99999999)\
    \ == 9\n    digits(-99999999999) == 9\n    digits(-999999999999) == 9\n    digits(-999999999999999)\
    \ == 9\n    digits(-9999999999999999) == 9\n    digits(-9999999999999999999) ==\
    \ 9\n    digits(-99999999999999999999) == 9\n    digits(-99999999999999999999999)\
    \ == 9\n    digits(-999999999999999999999999) == 9\n    digits(-999999999999999999999999999)\
    \ == 9\n    digits(-9999999999999999999999999999) == 9\n    digits(-9999999999999999999999999999999)\
    \ == 9\n    digits(-99999999999999999999999999999999) == 9\n    digits(-99999999999999999999999999999999999)\
    \ == 9\n    digits(-999999999999999999999999999999999999) == 9\n    digits(-999999999999999999999999999999999999999)\
    \ == 9\n    digits(-9999999999999999999999999999999999999999) == 9\n    digits(-9999999999999999999999999999999999999999999)\
    \ == 9\n    digits(-99999999999999999999999999999999999999999999) == 9\n    digits(-99999999999999999999999999999999999999999999999)\
    \ == 9\n    digits(-999999999999999999999999999999999999999999999999) == 9\n \
    \   digits(-999999999999999999999999999999999999999999999999999) == 9\n    digits(-9999999999999999999999999999999999999999999999999999)\
    \ == \nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpuwx1cs80.jl:9\nin expression starting at /tmp/tmpuwx1cs80.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    else if n%2==1 then return n*digits(n/2)\n\
    \    else return digits(n/2)*digits(n/2)\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the product\
    \ of the even digits in a number.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqv_bfapw.jl:9\nin expression starting at /tmp/tmpqv_bfapw.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n\
    <code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise: Write a function that returns the sum of the digits\
    \ of an integer.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnw8yvdqv.jl:14\nin expression starting at\
    \ /tmp/tmpnw8yvdqv.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n<0 \n        return 0 \n    else if n==0 \n        return 1 \n   \
    \ else if n%2==0 \n        return digits(n/2) \n    else \n        return digits(n-1)*3+1\n\
    end\n</cell>\n<code language=julia-1.4>\ndigits(1)\n</cell>\n<code language=julia-1.4>\n\
    digits(4)\n</cell>\n<code language=julia-1.4>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpylrkbny7.jl:11\nin expression starting at\
    \ /tmp/tmpylrkbny7.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    else if n%2==0 then return n*digits(n/2)\n\
    \    else return digits(n/2)*digits(n/2)\nend\n</cell>\n<code language=julia-1.0>\n\
    digits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ You can use the function digits to solve this problem!\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphj6yi8z9.jl:9\nin expression starting at /tmp/tmphj6yi8z9.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    elseif n % 2 == 0 \n        digits(n / 2)\n\
    \    else\n        digits(n / 2) * 3\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvimqo7e_.jl:17\nin expression starting at\
    \ /tmp/tmpvimqo7e_.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        digits(n / 10) * 10 + n % 10\n\
    end\n</cell>\n<code language=julia-1.4>\ndigits(1)\n</cell>\n<code language=julia-1.4>\n\
    digits(4)\n</cell>\n<code language=julia-1.4>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the factorial of a given number. \nFor\
    \ example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfdh2q18t.jl:14\nin expression starting at\
    \ /tmp/tmpfdh2q18t.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n/10)*10+n % 10\nend\n</cell>\n\
    <code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n\
    </cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\nExercise 2\n\
    Write a function digits_sum(n::Int64)::Int64 which returns the sum of the digits\
    \ in the number n.\nFor example, digits_sum(123) = 1 + 2 + 3 = 6\nHint: use digits(n)\
    \ to get the digits of n\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7zny0nnl.jl:14\nin expression starting at\
    \ /tmp/tmp7zny0nnl.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else \n        digits(n / 10) * 10 + n % 10\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(12345) = 1 + 2 + 3 + 4 + 5 = 15.\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprwifw7y7.jl:14\nin expression starting at\
    \ /tmp/tmprwifw7y7.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        if n % 2 == 0 \n            digits(n\
    \ / 2)\n        else\n            digits(n / 2) * 3\nend\n</cell>\n<code language=julia-1.0>\n\
    digits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(12345) = 1 + 2 + 3 + 4 + 5\
    \ = 15\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph6t26hre.jl:17\nin expression starting at\
    \ /tmp/tmph6t26hre.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0 \n        error(\"n must be positive\")\n    else if n < 10 \n\
    \        return n\n    else if n % 2 == 0 \n        return digits(n / 2)\n   \
    \ else \n        return digits(n / 2) * 3 + 1\nend\n</cell>\n<code language=julia-1.4>\n\
    digits(1)\n</cell>\n<code language=julia-1.4>\ndigits(4)\n</cell>\n<code language=julia-1.4>\n\
    digits(235)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum\
    \ of the digits of its argument. For example:\n    digits(123)  == [1, 2, 3]\n\
    \    digits(-23) == [3, 2]\n    digits(0)   == [0]\n    digits(-0)  == [0]\n \
    \   digits(-45) == [4, 5]\n    digits(-99) == [9, 8, 9]\n    digits(-999) == [9,\
    \ 8, 9, 9]\n    digits(-9999) == [9, 8, 9, 9, 9]\n    digits(-99999) == [9, 8,\
    \ 9, 9, 9, 9]\n    digits(-999999) == [9, 8, 9, 9, 9, 9, 9]\n    digits(-9999999)\
    \ == [9, 8, 9, 9, 9, 9, 9, 9]\n    digits(-99999999) == [9, 8, 9, 9, 9, 9, 9,\
    \ 9, 9]\n    digits(-999999999999) == [9, 8, 9, 9, 9, 9, 9, 9, 9, 9]\n    digits(-999999999999999)\
    \ == [9, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9]\n    digits(-9999999999999999999) == [9,\
    \ 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]\n    digits(-99999999999999999999999) == [9,\
    \ 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]\n    digits(-999999999999999999999999999)\
    \ == [9, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]\n    digits(-9999999999999999999999999999999)\
    \ == [9, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]\n    digits(-99999999999999999999999999999999999)\
    \ == [9, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]\n    digits(-999999999999999999999999999999999999999)\
    \ == [9, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]\n    digits(-9999999999999999999999999999999999999999999)\
    \ == [9, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]\n    digits(-99999999999999999999999999999999999999999999999)\
    \ == [9, 8, 9, \nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdu1i0ei7.jl:11\nin expression starting at\
    \ /tmp/tmpdu1i0ei7.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0 \n        error(\"n must be positive\")\n    else if n == 0 \n\
    \        0\n    else if n % 2 == 0 \n        digits(n/2)\n    else \n        digits(n/2)*3\
    \ + 1\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the sum of the digits of an integer.\n\
    For example, digits(1234) == 1 + 2 + 3 + 4 = 10.\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1ngz7fdy.jl:11\nin expression starting at\
    \ /tmp/tmp1ngz7fdy.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n/10)*10 + n % 10\nend\n\
    </cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nHint: use the function digits to get\
    \ the individual digits.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo655ljj4.jl:14\nin expression starting at\
    \ /tmp/tmpo655ljj4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0 \n        error(\"n must be positive\")\n    else if n == 0 \n\
    \        0\n    else if n % 2 == 0 \n        digits(n / 2)\n    else \n      \
    \  digits(n / 2) * 3 + 1\nend\n</cell>\n<code language=julia-1.4>\ndigits(-4)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the digits\
    \ of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint: You can use\
    \ the function digits(n) to get the digits of n.\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphqv9y7d7.jl:11\nin expression starting at\
    \ /tmp/tmphqv9y7d7.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n%2==1 then return n*digits(n/2)\n    else\
    \ return digits(n/2)*digits(n/2)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n\
    </cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function called digits_sum that\
    \ returns the sum of the odd digits in a given number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphtkq9qgj.jl:9\nin expression starting at /tmp/tmphtkq9qgj.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then 0 else n % 10 * digits(n / 10)\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_y6cd3o_.jl:9\nin expression starting at /tmp/tmp_y6cd3o_.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        digits(n-1) * n % 10\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function digits_sum(n::Int64)::Int64 which returns the sum\
    \ of the digits of the number n.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpasrntd3z.jl:15\nin expression starting at\
    \ /tmp/tmpasrntd3z.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    elseif n % 2 == 1 \n        digits(n / 2)\n\
    \    else\n        digits(n / 2) * 3\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the product\
    \ of the even digits in a number.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxq6du2et.jl:17\nin expression starting at\
    \ /tmp/tmpxq6du2et.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n<0 \n        error(\"n must be positive\")\n    else if n==0 \n  \
    \      1\n    else if n==1 \n        1\n    else if n==2 \n        2\n    else\
    \ if n==3 \n        6\n    else if n==4 \n        24\n    else if n==5 \n    \
    \    120\n    else if n==6 \n        720\n    else if n==7 \n        5040\n  \
    \  else if n==8 \n        40320\n    else if n==9 \n        362880\n    else if\
    \ n==10 \n        3628800\n    else if n==11 \n        39916800\n    else if n==12\
    \ \n        479001600\n    else if n==13 \n        6227020800\n    else if n==14\
    \ \n        87178291200\n    else if n==15 \n        1307674368000\n    else if\
    \ n==16 \n        20922789888000\n    else if n==17 \n        355687428096000\n\
    \    else if n==18 \n        6402373705728000\n    else if n==19 \n        121645100408832000\n\
    \    else if n==20 \n        2432902008176640000\n    else if n==21 \n       \
    \ 51090942171709440000\n    else if n==22 \n        1124000727777607680000\n \
    \   else if n==23 \n        25852016738884976640000\n    else if n==24 \n    \
    \    620448401733239439360000\n    else if n==25 \n        15511210043330985984000000\n\
    \    else if n==26 \n        403291461126605635584000000\n    else if n==27 \n\
    \        10888869450418352160768000000\n    else if n==28 \n        304183006262674187267568000000\n\
    \    else if n==29 \n        8841761993739701954543616000000\n    else if n==30\
    \ \n        265252859812191058636308480000000\n    else if n==31 \n        8222838654177922817725562880000000\n\
    \    else if n==32 \n        263130836933693530167218012160000000\n    else \n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7k781639.jl:11\nin expression starting at\
    \ /tmp/tmp7k781639.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then 0 else n%10*digits(n/10)\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ You can use the function digits to solve this exercise.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1o5xxkmf.jl:9\nin expression starting at /tmp/tmp1o5xxkmf.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0 \n        error(\"n must be positive\")\n    else if n == 0 \n\
    \        0\n    else if n % 2 == 1 \n        0\n    else \n        digits(n /\
    \ 2) * digits(n / 2)\nend\n</cell>\n<code language=julia-1.4>\ndigits(1)\n</cell>\n\
    <code language=julia-1.4>\ndigits(4)\n</cell>\n<code language=julia-1.4>\ndigits(235)\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the sum of the digits\
    \ of an integer.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfknm35f9.jl:11\nin expression starting at\
    \ /tmp/tmpfknm35f9.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then 0 else n%10*digits(n/10)\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the digits of an integer.\n    For example, digits(123) = 1 + 2 + 3 = 6\n\
    \    digits(-3) = 1 + 2 + 3 = 6\n    digits(0) = 0\n    digits(-0) = 0\n    digits(123)\
    \ = 1 + 2 + 3 = 6\n    digits(-123) = 1 + 2 + 3 = 6\n    digits(123) = 1 + 2 +\
    \ 3 = 6\n    digits(-123) = 1 + 2 + 3 = 6\n    digits(0) = 0\n    digits(-0) =\
    \ 0\n    digits(123) = 1 + 2 + 3 = 6\n    digits(-123) = 1 + 2 + 3 = 6\n    digits(123)\
    \ = 1 + 2 + 3 = 6\n    digits(-123) = 1 + 2 + 3 = 6\n    digits(0) = 0\n    digits(-0)\
    \ = 0\n    digits(123) = 1 + 2 + 3 = 6\n    digits(-123) = 1 + 2 + 3 = 6\n   \
    \ digits(123) = 1 + 2 + 3 = 6\n    digits(-123) = 1 + 2 + 3 = 6\n    digits(0)\
    \ = 0\n    digits(-0) = 0\n    digits(123) = 1 + 2 + 3 = 6\n    digits(-123) =\
    \ 1 + 2 + 3 = 6\n    digits(123) = 1 + 2 + 3 = 6\n    digits(-123) = 1 + 2 + 3\
    \ = 6\n    digits(0) = 0\n    digits(-0) = 0\n    digits(123) = 1 + 2 + 3 = 6\n\
    \    digits(-123) = 1 + 2 + 3 = 6\n    digits(123) = 1 + 2 + 3 = 6\n    digits(-123)\
    \ = 1 + 2 + 3 = 6\n    digits(0) = 0\n    digits(-0) = 0\n    digits(123) = 1\
    \ + 2 + 3 = 6\n    digits(-123) = 1 + 2 + 3 = 6\n    digits(123) = 1 + 2 + 3 =\
    \ 6\n    digits(-123) = 1 + 2 + 3 = 6\n    digits(0) = 0\n    digits(-0) = 0\n\
    \    digits(123) = 1 + 2 + 3 = 6\n    digits(-123) = 1 + 2 + 3 = 6\n    digits(123)\
    \ = 1 + 2 + 3 = 6\n    digits(-123) = 1 + 2 + 3 = 6\n    digits(0) = 0\n    digits(-\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgiflk0m_.jl:9\nin expression starting at /tmp/tmpgiflk0m_.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0 \n        error(\"n must be positive\")\n    else if n < 10 \n\
    \        return n\n    else if n % 2 == 0 \n        return digits(n / 2)\n   \
    \ else \n        return digits(n / 2) * 3 + 1\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ use the function digits()\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfqqnbm9e.jl:11\nin expression starting at\
    \ /tmp/tmpfqqnbm9e.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        return 0 \n    else if n%2 == 1 \n        return n*digits(n/2)\
    \ \n    else \n        return n*digits(n-1)\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ You can use the function digits(n) to get the digits of an integer.\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxxtgx53v.jl:11\nin expression starting at\
    \ /tmp/tmpxxtgx53v.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        digits(n / 10) * 10 + n % 10\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the digits of an integer.\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjupcgj0k.jl:14\nin expression starting at\
    \ /tmp/tmpjupcgj0k.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        digits(n / 10) * 10 + n % 10\n\
    end\n</cell>\n<code language=julia-1.4>\ndigits(1)\n</cell>\n<code language=julia-1.4>\n\
    digits(4)\n</cell>\n<code language=julia-1.4>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nHint: use the function digits()\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxqh3sin2.jl:14\nin expression starting at\
    \ /tmp/tmpxqh3sin2.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n-1)*(n%10^((n-1)%10))\n\
    end\n</cell>\n<code language=julia-1.4>\ndigits(1)\n</cell>\n<code language=julia-1.4>\n\
    digits(4)\n</cell>\n<code language=julia-1.4>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the sum of the digits of an integer.\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmw42u6rw.jl:14\nin expression starting at\
    \ /tmp/tmpmw42u6rw.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then 0 else digits(n-1)*(n%2)*(n%2)*(n%2)\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n\
    </cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the sum of all even digits in a given number.\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfsp3x9o5.jl:9\nin expression starting at /tmp/tmpfsp3x9o5.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n\
    <code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise: Write a function that returns the sum of the digits\
    \ of an integer.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6obcoloe.jl:14\nin expression starting at\
    \ /tmp/tmp6obcoloe.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else if n % 2 == 0 \n        digits(n / 2)\n\
    \    else\n        digits(n / 2) * 3\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the digits of an integer.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzr6e4tec.jl:11\nin expression starting at\
    \ /tmp/tmpzr6e4tec.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n<0 \n        error(\"n must be positive\")\n    else if n==0 \n  \
    \      1\n    else \n        digits(n//2)*(n % 2)\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(-2)\n</cell>\n<code language=julia-1.3>\ndigits(0)\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<code language=julia-1.3>\ndigits(235\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbr71yk96.jl:11\nin expression starting at\
    \ /tmp/tmpbr71yk96.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    elseif n==1 \n        1\n    elseif n%2==0 \n\
    \        digits(n/2)\n    else\n        digits(n/2)*3\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the product\
    \ of the even digits in a given number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7utas7ub.jl:18\nin expression starting at\
    \ /tmp/tmp7utas7ub.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n\
    <code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the digits\
    \ of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint: use the function\
    \ digits(n) to get the digits of n.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsq57r5pz.jl:14\nin expression starting at\
    \ /tmp/tmpsq57r5pz.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n\
    <code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise: Write a function that returns the product of the even\
    \ digits in a given number.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppcvkhijf.jl:14\nin expression starting at\
    \ /tmp/tmppcvkhijf.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else \n        digits(n / 10) * 10 + n % 10\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nHint: You can use the function digits\
    \ to solve this exercise.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp63oqlp2_.jl:14\nin expression starting at\
    \ /tmp/tmp63oqlp2_.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n\
    <code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the digits\
    \ of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint: use the function\
    \ digits to get the individual digits.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp8sdaang.jl:14\nin expression starting at\
    \ /tmp/tmpp8sdaang.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        if n % 2 == 0 \n            digits(n\
    \ / 2)\n        else\n            digits(n / 2) * 3\n        end\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<code language=julia-1.5>\n\
    digits(235) == 15\n</cell>\n<text>\nExercise 2\nWrite a function digits(n::Int64)\
    \ which returns the product of the digits of the number n.\nFor example, digits(1234)\
    \ == 1 * 2 * 3 * 4\nHint: use digits(n) recursively.\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe0neavce.jl:19\nin expression starting at\
    \ /tmp/tmpe0neavce.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        if n%2==0 \n            digits(n/2)\n\
    \        else\n            digits(n/2)*3\n        end\n    end\nend\n</cell>\n\
    <code language=julia-1.1>\ndigits(1)\n</cell>\n<code language=julia-1.1>\ndigits(4)\n\
    </cell>\n<code language=julia-1.1>\ndigits(235)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the sum of the digits of an integer.\nFor example,\
    \ digits(123) = 1 + 2 + 3 = 6\nHint: use the function digits(n) to get the digits\
    \ of n.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5vrtw5ar.jl:19\nin expression starting at\
    \ /tmp/tmp5vrtw5ar.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n-1)*(n%2)*(n%2)\nend\n\
    </cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the digits of an integer.\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2romh12_.jl:14\nin expression starting at\
    \ /tmp/tmp2romh12_.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n\
    <code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ given positive integer.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4kkc0zmk.jl:14\nin expression starting at\
    \ /tmp/tmp4kkc0zmk.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        if n % 2 == 1 \n            digits(n\
    \ / 2)\n        else\n            digits(n / 2) * digits(n / 2)\nend\n</cell>\n\
    <code language=julia-1.0>\ndigits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n\
    </cell>\n<code language=julia-1.0>\ndigits(235)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the sum of the digits of an integer.\nFor example,\
    \ digits(123) = 1 + 2 + 3 = 6\nHint: You can use the function digits to solve\
    \ this exercise.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpefknd67k.jl:17\nin expression starting at\
    \ /tmp/tmpefknd67k.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n-1)*(n%10+digits(n//10))\n\
    end\n</cell>\n<code language=julia-1.0>\ndigits(1)\n</cell>\n<code language=julia-1.0>\n\
    digits(4)\n</cell>\n<code language=julia-1.0>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of all even digits in a given\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph3_xuc3h.jl:14\nin expression starting at\
    \ /tmp/tmph3_xuc3h.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else \n        digits(n / 10) * 10 + n % 10\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the sum of the digits of an integer.\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdrt_mp3x.jl:14\nin expression starting at\
    \ /tmp/tmpdrt_mp3x.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then 0 else n%10*digits(n/10)\nend\n</cell>\n<code language=julia-1.0>\n\
    digits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the digits of an integer.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp87mjcbfj.jl:9\nin expression starting at /tmp/tmp87mjcbfj.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n-1)*(n%10^((n-1)%2))\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nHint: You can use the function digits(n)\
    \ to get the digits of n.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpluugf7b2.jl:14\nin expression starting at\
    \ /tmp/tmpluugf7b2.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n\
    <code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ given number. \nFor example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1\n\
    Hint: use the factorial function defined above.\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2f4euio3.jl:14\nin expression starting at\
    \ /tmp/tmp2f4euio3.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    elseif n==1 \n        1\n    elseif n%2==0 \n\
    \        digits(n/2)\n    else\n        digits(n-1)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.4>\ndigits(1)\n</cell>\n<code language=julia-1.4>\ndigits(4)\n\
    </cell>\n<code language=julia-1.4>\ndigits(235)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the sum of the digits of an integer.\nFor example,\
    \ digits(12345) = 1 + 2 + 3 + 4 + 5 = 15.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkg92e359.jl:19\nin expression starting at\
    \ /tmp/tmpkg92e359.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else \n        digits(n-1) * n % 10\n    end\n\
    end\n</cell>\n<code language=julia-1.1>\ndigits(1)\n</cell>\n<code language=julia-1.1>\n\
    digits(4)\n</cell>\n<code language=julia-1.1>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nHint: use the function digits(n) to\
    \ get the digits of n.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6vnytr7j.jl:15\nin expression starting at\
    \ /tmp/tmp6vnytr7j.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        digits(n / 10) * 10 + n % 10\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nHint: use the function digits()\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5667hy3f.jl:14\nin expression starting at\
    \ /tmp/tmp5667hy3f.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n\
    <code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the digits\
    \ of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint: use the function\
    \ digits()\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp8ek63hn.jl:14\nin expression starting at\
    \ /tmp/tmpp8ek63hn.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0 \n        error(\"n must be positive\")\n    else if n == 0 \n\
    \        0\n    else if n % 2 == 0 \n        digits(n / 2)\n    else \n      \
    \  digits(n / 2) * digits(n / 2)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n\
    </cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ use the function digits(n) to get the digits of n.\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpswj1ii6l.jl:11\nin expression starting at\
    \ /tmp/tmpswj1ii6l.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        digits(n / 10) * 10 + n % 10\n\
    end\n</cell>\n<code language=julia-1.4>\ndigits(1)\n</cell>\n<code language=julia-1.4>\n\
    digits(4)\n</cell>\n<code language=julia-1.4>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the sum of the digits of an integer.\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp48rza3zl.jl:14\nin expression starting at\
    \ /tmp/tmp48rza3zl.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n\
    <code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n\
    </cell>\n<text>\nExercise 3\nWrite a function digits_sum(n::Int64)::Int64 which\
    \ returns the sum of all the odd digits in n.\nFor example:\ndigits_sum(123) \
    \ == 6\ndigits_sum(1234) == 5\ndigits_sum(12345) == 6\ndigits_sum(123456) == 7\n\
    digits_sum(1234567) == 8\ndigits_sum(12345678) == 9\ndigits_sum(123456789) ==\
    \ 10\ndigits_sum(1234567890) == 11\ndigits_sum(12345678901) == 12\ndigits_sum(123456789012)\
    \ == 13\ndigits_sum(1234567890123) == 14\ndigits_sum(12345678901234) == 15\ndigits_sum(123456789012345)\
    \ == 16\ndigits_sum(1234567890123456) == 17\ndigits_sum(12345678901234567) ==\
    \ 18\ndigits_sum(123456789012345678) == 19\ndigits_sum(1234567890123456789) ==\
    \ 20\ndigits_sum(12345678901234567890) == 21\ndigits_sum(123456789012345678901)\
    \ == 22\ndigits_sum(1234567890123456789012) == 23\ndigits_sum(12345678901234567890123)\
    \ == 24\ndigits_sum(123456789012345678901234) == 25\ndigits_sum(1234567890123456789012345)\
    \ == 26\ndigits_sum(12345678901234567890123456) == 27\ndigits_sum(123456789012345678901234567)\
    \ == 28\ndigits_sum(1234567890123456789012345678) == 29\ndigits_sum(12345678901234567890123456789)\
    \ == 30\ndigits_sum(123456789012345678901234567890) == 31\ndigits_sum(1234567890123456789012345678901)\
    \ == 32\ndigits_sum(12345678901234567890123456789012) == 33\ndigits_sum(123456789012345678901234567890123)\
    \ == 34\ndigits_sum(1234567890123456789012345678901234) == 35\ndigits_sum(12345678901234567890123456789012345)\
    \ == 36\ndigits_sum(123456789012345678901234567890123456) == 37\ndigits_sum(1234567890123456789012345678901234567)\
    \ == 38\ndigits_sum(12345678901234567890123456789012345678) == 39\ndigits_sum(123456789012345678901234567890123456789)\
    \ == 40\ndigits_sum(1234567890123456789012345678901234567890) == 41\ndigits_sum(12345678901234567890123456789012345678901)\
    \ == 42\ndigits_sum(123456789012345678901234567890123456789012) == 43\ndigits_sum(1234567890123456789012345678901234567890123)\
    \ == 44\ndigits_sum(12345678901234567890123456789012345678901234) == 45\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt06v5bz9.jl:14\nin expression starting at\
    \ /tmp/tmpt06v5bz9.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else \n        digits(n-1) * n / 10\nend\n\
    </cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvymkekop.jl:14\nin expression starting at\
    \ /tmp/tmpvymkekop.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then 0 else n % 10 * digits(n / 10)\nend\n</cell>\n<code language=julia-1.0>\n\
    digits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function digitsum(n) that returns\
    \ the sum of the digits of n.\nFor example, digitsum(1234) == 10.\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2ybxmgmx.jl:9\nin expression starting at /tmp/tmp2ybxmgmx.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    else if n%2==1 then return n*digits(n/2)\n\
    \    else return digits(n/2)\nend\n</cell>\n<code language=julia-1.0>\ndigits(1)\n\
    </cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the digits of an integer.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4kc2hv4s.jl:9\nin expression starting at /tmp/tmp4kc2hv4s.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n-1)*(n%10^2)\nend\n</cell>\n\
    <code language=julia-1.4>\ndigits(1)\n</cell>\n<code language=julia-1.4>\ndigits(4)\n\
    </cell>\n<code language=julia-1.4>\ndigits(235)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the sum of the digits of an integer.\nFor example,\
    \ digits(123) = 1 + 2 + 3 = 6\nHint: You can use the function digits to solve\
    \ this problem\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgjbc381m.jl:14\nin expression starting at\
    \ /tmp/tmpgjbc381m.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else \n        digits(n / 10) * 10 + n % 10\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe6ojgx2r.jl:14\nin expression starting at\
    \ /tmp/tmpe6ojgx2r.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n//2)*(n%2)*3\nend\n</cell>\n\
    <code language=julia-1.0>\ndigits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n\
    </cell>\n<code language=julia-1.0>\ndigits(235)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the product of the even digits in a number.\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk8yi5ybp.jl:14\nin expression starting at\
    \ /tmp/tmpk8yi5ybp.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n\
    <code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise: Write a function that returns the sum of the digits\
    \ of an integer.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm3_w47zg.jl:14\nin expression starting at\
    \ /tmp/tmpm3_w47zg.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n-1)*(n%10^(n-1))\nend\n\
    </cell>\n<code language=julia-1.0>\ndigits(1)\n</cell>\n<code language=julia-1.0>\n\
    digits(4)\n</cell>\n<code language=julia-1.0>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nHint: You can use the function digits\
    \ to get the individual digits of an integer.\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp36x_tmgg.jl:14\nin expression starting at\
    \ /tmp/tmp36x_tmgg.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else \n        if n % 2 == 1 \n           \
    \ digits(n / 2)\n        else \n            digits(n / 2) * 3\nend\n</cell>\n\
    <code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n\
    </cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the product of the digits of an integer.\nFor example,\
    \ digits(123) = 123, and digits(-3) = -3.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwe365pc9.jl:17\nin expression starting at\
    \ /tmp/tmpwe365pc9.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n-1)*(2*n+1)\nend\n</cell>\n\
    <code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n\
    </cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\nExercise 3\n\
    Write a function named digits_sum that returns the sum of the odd digits of its\
    \ input. For example:\ndigits_sum(12345)  == 15\ndigits_sum(123)    == 0\ndigits_sum(0)\
    \      == 0\ndigits_sum(1234)   == 0\ndigits_sum(12345)  == 15\ndigits_sum(12345)\
    \  == 15\ndigits_sum(12345)  == 15\ndigits_sum(12345)  == 15\ndigits_sum(12345)\
    \  == 15\ndigits_sum(12345)  == 15\ndigits_sum(12345)  == 15\ndigits_sum(12345)\
    \  == 15\ndigits_sum(12345)  == 15\ndigits_sum(12345)  == 15\ndigits_sum(12345)\
    \  == 15\ndigits_sum(12345)  == 15\ndigits_sum(12345)  == 15\ndigits_sum(12345)\
    \  == 15\ndigits_sum(12345)  == 15\ndigits_sum(12345)  == 15\ndigits_sum(12345)\
    \  == 15\ndigits_sum(12345)  == 15\ndigits_sum(12345)  == 15\ndigits_sum(12345)\
    \  == 15\ndigits_sum(12345)  == 15\ndigits_sum(12345)  == 15\ndigits_sum(12345)\
    \  == 15\ndigits_sum(12345)  == 15\ndigits_sum(12345)  == 15\ndigits_sum(12345)\
    \  == 15\ndigits_sum(12345)  == 15\ndigits_sum(12345)  == 15\ndigits_sum(12345)\
    \  == 15\ndigits_sum(12345)  == 15\ndigits_sum(12345)  == 15\ndigits_sum(12345)\
    \  == 15\ndigits_sum(12345)  == 15\ndigits_sum(12345)  == 15\ndigits_sum(12345)\
    \  == 15\ndigits_sum(12345)  == 15\ndigits_sum(12345)  == 15\ndigits_sum(12345)\
    \  == 15\ndigits_sum(12345)  == 15\ndigits_sum(12345)  == 15\ndigits_sum(12345)\
    \  == 15\ndigits_sum(12345)  == 15\ndigits_sum(12345)  \nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe_syeiz3.jl:14\nin expression starting at\
    \ /tmp/tmpe_syeiz3.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n-1)*(n%10%2)+(n%10%2)\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nHint: use the function digits to get\
    \ the digits of an integer.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf7e5fjfx.jl:14\nin expression starting at\
    \ /tmp/tmpf7e5fjfx.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else \n        digits(n / 10) * 10 + n % 10\n\
    end\n</cell>\n<code language=julia-1.0>\ndigits(1)\n</cell>\n<code language=julia-1.0>\n\
    digits(4)\n</cell>\n<code language=julia-1.0>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the product of the even digits in a number.\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0jkm6xja.jl:14\nin expression starting at\
    \ /tmp/tmp0jkm6xja.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n-1)*(n%10%2)+(n%10%2)\n\
    end\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of all the digits in an integer.\n\
    For example, digits(1245) == 1 + 2 + 4 + 5 = 14.\nHint: You can use the function\
    \ digits to solve this problem.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3_839zd8.jl:14\nin expression starting at\
    \ /tmp/tmp3_839zd8.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    elseif n % 2 == 0 \n        digits(n / 2)\n\
    \    else\n        digits(n / 2) * 3\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the factorial\
    \ of a given number. \nFor example, factorial(5) == 120.\nHint: use the factorial\
    \ function from the math package.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbfabfqi3.jl:17\nin expression starting at\
    \ /tmp/tmpbfabfqi3.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0 \n        error(\"n must be positive\")\n    else if n == 0 \n\
    \        0\n    else \n        digits(n//2)*(n % 2 == 1 ? 1 : 0)\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the sum of the digits of an\
    \ integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint: You can use the function\
    \ digits to solve this exercise.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptxfk775t.jl:11\nin expression starting at\
    \ /tmp/tmptxfk775t.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n\
    <code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n\
    </cell>\n<text>\nExercise: Write a function that returns the product of the even\
    \ digits in a given number.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwzku__u4.jl:14\nin expression starting at\
    \ /tmp/tmpwzku__u4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n\
    <code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the digits\
    \ of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint: You can use\
    \ the function digits to do this.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpalerrazw.jl:14\nin expression starting at\
    \ /tmp/tmpalerrazw.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then 0 else n % 10 * digits(n/10)\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of all even digits in a given number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvryv85qp.jl:9\nin expression starting at /tmp/tmpvryv85qp.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then 0 else n % 10 * digits(n / 10)\nend\n</cell>\n<code language=julia-1.0>\n\
    digits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the product\
    \ of the even digits in a number.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3frcovxb.jl:9\nin expression starting at /tmp/tmp3frcovxb.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n\
    <code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the digits\
    \ of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint: You can use\
    \ the function digits to solve this exercise.\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvq2tnqyg.jl:14\nin expression starting at\
    \ /tmp/tmpvq2tnqyg.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n<0 \n        error(\"n must be positive\")\n    else if n==0 \n  \
    \      1\n    else \n        digits(n//10)*10+n%10\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(12345) = 1 + 2 + 3 + 4 + 5\
    \ = 15.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdgiw9b33.jl:11\nin expression starting at\
    \ /tmp/tmpdgiw9b33.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then 0 else n%10*digits(n/10)\nend\n</cell>\n<code language=julia-1.0>\n\
    digits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(12345) = 1 + 2 + 3 + 4 + 5\
    \ = 15.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj3a1ke5q.jl:9\nin expression starting at /tmp/tmpj3a1ke5q.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then 0 else n % 10 * digits(n / 10)\nend\n</cell>\n<code language=julia-1.0>\n\
    digits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ use the function digits()\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpanrcqoog.jl:9\nin expression starting at /tmp/tmpanrcqoog.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n-1)*(n%2)*(n%2)\nend\n\
    </cell>\n<code language=julia-1.0>\ndigits(1)\n</cell>\n<code language=julia-1.0>\n\
    digits(4)\n</cell>\n<code language=julia-1.0>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nHint: You can use the function digits\
    \ to solve this problem.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps044frg1.jl:14\nin expression starting at\
    \ /tmp/tmps044frg1.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    elseif n % 2 == 0 \n        digits(n / 2)\n\
    \    else\n        digits(n / 2) * 3 + 1\nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the sum of the digits of an integer.\nFor example, digits(123)\
    \ = 1 + 2 + 3 = 6\nHint: You can use the function digits to solve this exercise.\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfvbz6oyf.jl:16\nin expression starting at\
    \ /tmp/tmpfvbz6oyf.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n\
    <code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the digits\
    \ of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint: You can use\
    \ the function digits to solve this problem.\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppjltnf_i.jl:14\nin expression starting at\
    \ /tmp/tmppjltnf_i.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        if n % 2 == 0 \n            digits(n\
    \ / 2)\n        else\n            digits(n / 2) * 3\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise 3\nWrite a function digits_sum(n::Int64)::Int64\
    \ that returns the sum of the digits of n.\nFor example:\ndigits_sum(123)  ==\
    \ 6\ndigits_sum(1234) == 10\ndigits_sum(12345) == 15\ndigits_sum(123456) == 21\n\
    digits_sum(1234567) == 24\ndigits_sum(12345678) == 30\ndigits_sum(123456789) ==\
    \ 36\ndigits_sum(1234567890) == 42\ndigits_sum(12345678901) == 47\ndigits_sum(123456789012)\
    \ == 52\ndigits_sum(1234567890123) == 57\ndigits_sum(12345678901234) == 61\ndigits_sum(123456789012345)\
    \ == 66\ndigits_sum(1234567890123456) == 71\ndigits_sum(12345678901234567) ==\
    \ 76\ndigits_sum(123456789012345678) == 81\ndigits_sum(1234567890123456789) ==\
    \ 86\ndigits_sum(12345678901234567890) == 90\ndigits_sum(123456789012345678901)\
    \ == 96\ndigits_sum(1234567890123456789012) == 101\ndigits_sum(12345678901234567890123)\
    \ == 106\ndigits_sum(123456789012345678901234) == 112\ndigits_sum(1234567890123456789012345)\
    \ == 117\ndigits_sum(12345678901234567890123456) == 121\ndigits_sum(123456789012345678901234567)\
    \ == 126\ndigits_sum(1234567890123456789012345678) == 131\ndigits_sum(12345678901234567890123456789)\
    \ == 136\ndigits_sum(123456789012345678901234567890) == 141\ndigits_sum(1234567890123456789012345678901)\
    \ == 146\ndigits_sum(12345678901234567890123456789012) == 151\ndigits_sum(123456789012345678901234567890123)\
    \ == 156\ndigits_sum(1234567890123456789012345678901234) == 161\ndigits_sum(12345678901234567890123456789012345)\
    \ == 166\ndigits_sum(123456789012345678901234567890123456) == 171\ndigits_sum(1234567890123456789012345678901234567)\
    \ == 176\ndigits_sum(12345678901234567890123456789012345678) == 181\ndigits_sum(123456789012345678901234567890123456789)\
    \ == 186\ndigits_sum(1234567890123456789012345678901234567890) == 191\ndigits_sum(12345678901234567890123456789012345678901)\
    \ == 196\ndigits_sum(123456789012345678901234567890123456789012) == 201\ndigits_sum(1234567890123456789012345678901234567890123)\
    \ == 206\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgt83imtb.jl:17\nin expression starting at\
    \ /tmp/tmpgt83imtb.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n\
    <code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise: Write a function that returns the sum of the digits\
    \ of an integer.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsq912y2z.jl:14\nin expression starting at\
    \ /tmp/tmpsq912y2z.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n\
    <code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise 3\nWrite a function digits_sum(n::Int64)::Int64 that\
    \ returns the sum of the digits of n.\nFor example, digits_sum(123) = 1 + 2 +\
    \ 3 = 6\nHint: use the function digits(n::Int64)::Int64\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppfqkgqha.jl:14\nin expression starting at\
    \ /tmp/tmppfqkgqha.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then 0 else n % 10 * digits(n / 10)\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ use the function digits()\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4cwtrnjq.jl:9\nin expression starting at /tmp/tmp4cwtrnjq.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then 0 else digits(n/10)*10 + n % 10\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the factorial\
    \ of a given number. \nThe factorial of a number $n$ is defined as:\n$$\nn! =\
    \ n \\times n-1 \\times n-2 \\times ...\\times 2 \\times 1\n$$\nFor example,\n\
    $$\n5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\n$$\nWrite a function\
    \ that returns the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as:\n$$\nn! = n \\times n-1 \\times n-2 \\times ...\\times 2 \\times\
    \ 1\n$$\nFor example,\n$$\n5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\n\
    $$\nWrite a function that returns the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\n$$\nn! = n \\times n-1 \\times n-2 \\times ...\\\
    times 2 \\times 1\n$$\nFor example,\n$$\n5! = 5 \\times 4 \\times 3 \\times 2\
    \ \\times 1 = 120\n$$\nWrite a function that returns the factorial of a given\
    \ number. \nThe factorial of a number $n$ is defined as:\n$$\nn! = n \\times n-1\
    \ \\times n-2 \\times ...\\times 2 \\times 1\n$$\nFor example,\n$$\n5! = 5 \\\
    times 4 \\times 3 \\times 2 \\times 1 = 120\n$$\nWrite a function that returns\
    \ the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as:\n$$\nn! = n \\times n-1 \\times n-2 \\times ...\\times 2 \\times 1\n$$\n\
    For example,\n$$\n5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\n$$\nWrite\
    \ a function that returns the factorial of a given number. \nThe factorial of\
    \ a number $n$ is defined as:\n$$\nn! = n \\times n-1 \\times n-2 \\times ...\\\
    times 2 \\times 1\n$$\nFor example,\n$$\n5! = 5 \\times 4 \\times 3 \\times 2\
    \ \\times 1 = 120\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj6gk41xl.jl:9\nin expression starting at /tmp/tmpj6gk41xl.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else if n==1 \n        1\n    else if n%2==0\
    \ \n        digits(n/2)\n    else \n        digits(n-1)\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the product\
    \ of the even digits in a number.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpso9npeqc.jl:11\nin expression starting at\
    \ /tmp/tmpso9npeqc.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n/10)*10+n%10\nend\n</cell>\n\
    <code language=julia-1.0>\ndigits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n\
    </cell>\n<code language=julia-1.0>\ndigits(235)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the sum of the digits of an integer.\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1o_22hcx.jl:14\nin expression starting at\
    \ /tmp/tmp1o_22hcx.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n\
    <code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the digits\
    \ of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint: use the function\
    \ digits(n) to get the digits of n.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr97nzfd4.jl:14\nin expression starting at\
    \ /tmp/tmpr97nzfd4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then return 0 \n    else if n%2==1 then return n*digits(n/2) \n\
    \    else return n*digits(n-1)\nend\n</cell>\n<code language=julia-1.0>\ndigits(1)\n\
    </cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ use the function digits(n) to get the digits of n.\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplgxhfr1q.jl:9\nin expression starting at /tmp/tmplgxhfr1q.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n<0 \n        error(\"n must be positive\")\n    else if n==0 \n  \
    \      1\n    else \n        digits(n//2)*(n % 2 == 0 ? 1 : 0)\nend\n</cell>\n\
    <code language=julia-1.0>\ndigits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n\
    </cell>\n<code language=julia-1.0>\ndigits(235)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the sum of the digits of an integer.\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpct_1g6mo.jl:11\nin expression starting at\
    \ /tmp/tmpct_1g6mo.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        digits(n / 10) * 10 + n % 10\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nHint: You can use the function digits\
    \ to get the individual digits of a number.\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfgdx88bp.jl:14\nin expression starting at\
    \ /tmp/tmpfgdx88bp.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n\
    <code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n\
    </cell>\n<text>\nExercise: Write a function that returns the sum of the digits\
    \ of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint: Use a recursive\
    \ function.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd5okeq35.jl:14\nin expression starting at\
    \ /tmp/tmpd5okeq35.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        digits(n/10) * 10 + n % 10\n\
    end\n</cell>\n<code language=julia-1.0>\ndigits(1)\n</cell>\n<code language=julia-1.0>\n\
    digits(4)\n</cell>\n<code language=julia-1.0>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(12345) = 1 + 2 + 3 + 4 + 5 = 15\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppo150d62.jl:14\nin expression starting at\
    \ /tmp/tmppo150d62.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    else if n%2==1 then return n*digits(n/2)\n\
    \    else return n*digits(n-1)\nend\n</cell>\n<code language=julia-1.0>\ndigits(1)\n\
    </cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdtwyp6kj.jl:9\nin expression starting at /tmp/tmpdtwyp6kj.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n<0 \n        error(\"n must be positive\")\n    else if n==0 \n  \
    \      1\n    else if n==1 \n        1\n    else if n==2 \n        2\n    else\
    \ if n<10 \n        digits(n/10)*10+n%10\n    else \n        digits(n/10)*10+n%10*10+n%10\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the product of the even digits in a number.\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_lmot_32.jl:11\nin expression starting at\
    \ /tmp/tmp_lmot_32.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n-1)*(n%10^(n-1)%2)\nend\n\
    </cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nHint: You can use the function digits\
    \ to solve this exercise.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz4tquhcv.jl:14\nin expression starting at\
    \ /tmp/tmpz4tquhcv.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.4>\ndigits(10)\n</cell>\n\
    <text>\nExercise 2\nWrite a function called digits_sum that takes a positive integer\
    \ n and returns the sum of the odd digits. For example:\ndigits_sum(123)  == 6\n\
    digits_sum(1234) == 5\ndigits_sum(12345) == 6\ndigits_sum(123456) == 7\ndigits_sum(1234567)\
    \ == 8\ndigits_sum(12345678) == 9\ndigits_sum(123456789) == 10\ndigits_sum(1234567890)\
    \ == 10\ndigits_sum(12345678901) == 11\ndigits_sum(123456789012) == 12\ndigits_sum(1234567890123)\
    \ == 13\ndigits_sum(12345678901234) == 14\ndigits_sum(123456789012345) == 15\n\
    digits_sum(1234567890123456) == 16\ndigits_sum(1234567890123456789) == 16\ndigits_sum(12345678901234567890)\
    \ == 16\ndigits_sum(123456789012345678901) == 17\ndigits_sum(1234567890123456789012)\
    \ == 18\ndigits_sum(12345678901234567890123) == 19\ndigits_sum(123456789012345678901234)\
    \ == 20\ndigits_sum(1234567890123456789012345) == 21\ndigits_sum(12345678901234567890123456)\
    \ == 22\ndigits_sum(12345678901234567890123456789) == 22\ndigits_sum(123456789012345678901234567890)\
    \ == 22\ndigits_sum(1234567890123456789012345678901) == 23\ndigits_sum(12345678901234567890123456789012)\
    \ == 24\ndigits_sum(123456789012345678901234567890123) == 25\ndigits_sum(1234567890123456789012345678901234)\
    \ == 26\ndigits_sum(12345678901234567890123456789012345) == 27\ndigits_sum(123456789012345678901234567890123456)\
    \ == 28\ndigits_sum(123456789012345678901234567890123456789) == 28\ndigits_sum(1234567890123456789012345678901234567890)\
    \ == 28\ndigits_sum(12345678901234567890123456789012345678901) == 29\ndigits_sum(123456789012345678901234567890123456789012)\
    \ == 30\ndigits_sum(1234567890123456789012345678901234567890123) == 31\ndigits_sum(12345678901234567890123456789012345678901234)\
    \ == 32\ndigits_sum(123456789012345678901234567890123456789012345) == 33\ndigits_sum(1234567890123456789012345678901234567890123456)\
    \ == 34\ndigits_sum(1234567890123456789012345678901234567890123456789) == 34\n\
    digits_sum(12345678901234567890123456789012345678901234567890) == 34\ndigits_sum(123456789012345678901234567890123456789012345678901)\
    \ == 35\ndigits_sum(1234567890123456789012345678901234567890123456789012) == 36\n\
    digits_sum(12345678901234567890123456789012345678901234567890123) == 37\ndigits_sum(123456789012345678901234567890123456789012345678901234)\
    \ == 38\n\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd4jz1mk6.jl:14\nin expression starting at\
    \ /tmp/tmpd4jz1mk6.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.1>\ndigits(1)\n</cell>\n\
    <code language=julia-1.1>\ndigits(4)\n</cell>\n<code language=julia-1.1>\ndigits(235)\n\
    </cell>\n<text>\nExercise 2\nWrite a function named digits_sum that returns the\
    \ sum of the digits of the number n.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvcxjm4hr.jl:14\nin expression starting at\
    \ /tmp/tmpvcxjm4hr.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n%2==0 then return\
    \ n*digits(n-1)\n    return n*digits(n-1)\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the product\
    \ of the even digits in a number.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_w_ustzz.jl:9\nin expression starting at /tmp/tmp_w_ustzz.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n\
    <code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the digits\
    \ of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint: You can use\
    \ the function digits to get the individual digits of a number.\nusing Test\n\n\
    @testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpffkxlyd4.jl:14\nin expression starting at\
    \ /tmp/tmpffkxlyd4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        digits(n / 10) * 10 + n % 10\n\
    end\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of all even digits in a given\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm_c96m_h.jl:14\nin expression starting at\
    \ /tmp/tmpm_c96m_h.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else \n        if n % 2 == 1 \n           \
    \ digits(n/2)\n        else \n            digits(n/2)*3\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy50c48wj.jl:17\nin expression starting at\
    \ /tmp/tmpy50c48wj.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0 \n        error(\"n must be positive\")\n    else if n == 0 \n\
    \        0\n    else if n % 2 == 1 \n        0\n    else if n % 2 == 0 \n    \
    \    digits(n / 2)\n    else\n        digits(n / 2) * digits(n / 2)\nend\n</cell>\n\
    <code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n\
    </cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the sum of the digits of an integer.\nusing Test\n\n\
    @testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4bpidpvz.jl:11\nin expression starting at\
    \ /tmp/tmp4bpidpvz.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0 \n        error(\"n must be positive\")\n    else if n == 0 \n\
    \        0\n    else \n        digits(n / 10) * 10 + n % 10\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n\
    </cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the sum of the digits of an integer.\nusing Test\n\n\
    @testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphlnjy82g.jl:11\nin expression starting at\
    \ /tmp/tmphlnjy82g.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n-1)*(n%10%2)+(n%10)\nend\n\
    </cell>\n<code language=julia-1.0>\ndigits(1)\n</cell>\n<code language=julia-1.0>\n\
    digits(4)\n</cell>\n<code language=julia-1.0>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvqet9bc7.jl:14\nin expression starting at\
    \ /tmp/tmpvqet9bc7.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n/10)*10 + n % 10\nend\n\
    </cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nHint: use the function digits to get\
    \ the individual digits.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsn3e485e.jl:14\nin expression starting at\
    \ /tmp/tmpsn3e485e.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else if n % 2 == 0 \n        digits(n / 2)\
    \ * digits(n / 2)\n    else \n        digits(n / 2) * digits(n / 2) + digits(n\
    \ / 2)\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(12345) = 1 + 2 + 3 + 4 + 5 = 15.\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2ibcmq5n.jl:11\nin expression starting at\
    \ /tmp/tmp2ibcmq5n.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else if n % 2 == 0 \n        digits(n / 2)\n\
    \    else \n        digits(n / 2) * 3 + 1\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function digits_sum(n::Int64)\
    \ that returns the sum of the digits of n.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz77spbj1.jl:11\nin expression starting at\
    \ /tmp/tmpz77spbj1.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n-1)*(n%10%2)+(n%10%2)\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nHint: use the function digits(n) to\
    \ get the digits of the number n.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_ty29exb.jl:14\nin expression starting at\
    \ /tmp/tmp_ty29exb.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n/10)*10 + n % 10\nend\n\
    </cell>\n<code language=julia-1.4>\ndigits(1)\n</cell>\n<code language=julia-1.4>\n\
    digits(4)\n</cell>\n<code language=julia-1.4>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nHint: You can use the function digits\
    \ to get the individual digits of a number.\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv1n0rren.jl:14\nin expression starting at\
    \ /tmp/tmpv1n0rren.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n/10) * 10 + n % 10\nend\n\
    </cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the product of the even digits in a number.\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw4r8zcv_.jl:14\nin expression starting at\
    \ /tmp/tmpw4r8zcv_.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then 0 else n % 10 * digits(n / 10)\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ use the function digits(n) to get the digits of the integer\nusing Test\n\n\
    @testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjqqjyrln.jl:9\nin expression starting at /tmp/tmpjqqjyrln.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n<0 \n        error(\"n must be positive\")\n    else if n==0 \n  \
    \      1\n    else if n==1 \n        1\n    else if n%2==0 \n        digits(n/2)\n\
    \    else \n        digits(n/2)*3\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n\
    </cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ use the function digits(n) to get the digits of n.\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzco9i1nw.jl:11\nin expression starting at\
    \ /tmp/tmpzco9i1nw.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n\
    <code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the digits\
    \ of an integer.\nFor example:\ndigits(123)  == 6\ndigits(-45) == 3\ndigits(0)\
    \   == 0\ndigits(-0)  == 0\ndigits(10^100) == 10^100\ndigits(-10)  == 10\ndigits(-100)\
    \  == 100\ndigits(-1000) ==  0\ndigits(-1001) == -1\ndigits(-10^100) == 10^100\n\
    Hint: Use a recursive function.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfzkk9vtq.jl:14\nin expression starting at\
    \ /tmp/tmpfzkk9vtq.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0 \n        error(\"n must be positive\")\n    else if n == 0 \n\
    \        0\n    else \n        digits(n-1) * digits(n-2) * digits(n-3)\nend\n\
    </cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the product of the even digits in a number.\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxy29a7iv.jl:11\nin expression starting at\
    \ /tmp/tmpxy29a7iv.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n\
    <code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n\
    </cell>\n<text>\nExercise 3\nWrite a function digits_sum(n::Int64) which returns\
    \ the sum of the digits of n.\nFor example:\ndigits_sum(123)  == 6\ndigits_sum(1234)\
    \ == 10\ndigits_sum(12345) == 15\ndigits_sum(123456) == 20\ndigits_sum(1234567)\
    \ == 30\ndigits_sum(12345678) == 45\ndigits_sum(123456789) == 60\ndigits_sum(1234567890)\
    \ == 75\ndigits_sum(12345678901) == 90\ndigits_sum(123456789012) == 100\ndigits_sum(1234567890123)\
    \ == 120\ndigits_sum(12345678901234) == 150\ndigits_sum(123456789012345) == 180\n\
    digits_sum(1234567890123456) == 210\ndigits_sum(12345678901234567) == 240\ndigits_sum(123456789012345678)\
    \ == 270\ndigits_sum(1234567890123456789) == 300\ndigits_sum(12345678901234567890)\
    \ == 330\ndigits_sum(123456789012345678901) == 360\ndigits_sum(1234567890123456789012)\
    \ == 390\ndigits_sum(12345678901234567890123) == 420\ndigits_sum(123456789012345678901234)\
    \ == 450\ndigits_sum(1234567890123456789012345) == 480\ndigits_sum(12345678901234567890123456)\
    \ == 510\ndigits_sum(123456789012345678901234567) == 540\ndigits_sum(1234567890123456789012345678)\
    \ == 570\ndigits_sum(12345678901234567890123456789) == 600\ndigits_sum(123456789012345678901234567890)\
    \ == 620\ndigits_sum(1234567890123456789012345678901) == 640\ndigits_sum(12345678901234567890123456789012)\
    \ == 650\ndigits_sum(123456789012345678901234567890123) == 660\ndigits_sum(1234567890123456789012345678901234)\
    \ == 670\ndigits_sum(12345678901234567890123456789012345) == 680\ndigits_sum(123456789012345678901234567890123456)\
    \ == 690\ndigits_sum(1234567890123456789012345678901234567) == 700\ndigits_sum(12345678901234567890123456789012345678)\
    \ == 720\ndigits_sum(123456789012345678901234567890123456789) == 740\ndigits_sum(1234567890123456789012345678901234567890)\
    \ == 750\ndigits_sum(12345678901234567890123456789012345678901) == 760\ndigits_sum(123456789012345678901234567890123456789012)\
    \ == 770\ndigits_sum(1234567890123456789012345678901234567890123) == 780\ndigits_sum(1234567890123456789\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpchf07lm7.jl:14\nin expression starting at\
    \ /tmp/tmpchf07lm7.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n-1)*(2*n+1)\nend\n</cell>\n\
    <code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n\
    </cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the sum of the digits of an integer.\nFor example:\n\
    \    digits(123)  == 6\n    digits(-23) == 3\n    digits(0)   == 0\n    digits(-0)\
    \  == 0\n    digits(12)  == 1\n    digits(-2)  == 1\n    digits(123)  == 6\n \
    \   digits(-23) == 3\n    digits(0)   == 0\n    digits(-0)  == 0\n    digits(12)\
    \  == 1\n    digits(-2)  == 1\n    digits(123)  == 6\n    digits(-23) == 3\n \
    \   digits(0)   == 0\n    digits(-0)  == 0\n    digits(12)  == 1\n    digits(-2)\
    \  == 1\n    digits(123)  == 6\n    digits(-23) == 3\n    digits(0)   == 0\n \
    \   digits(-0)  == 0\n    digits(12)  == 1\n    digits(-2)  == 1\n    digits(123)\
    \  == 6\n    digits(-23) == 3\n    digits(0)   == 0\n    digits(-0)  == 0\n  \
    \  digits(12)  == 1\n    digits(-2)  == 1\n    digits(123)  == 6\n    digits(-23)\
    \ == 3\n    digits(0)   == 0\n    digits(-0)  == 0\n    digits(12)  == 1\n   \
    \ digits(-2)  == 1\n    digits(123)  == 6\n    digits(-23) == 3\n    digits(0)\
    \   == 0\n    digits(-0)  == 0\n    digits(12)  == 1\n    digits(-2)  == 1\n \
    \   digits(123)  == 6\n    digits(-23) == 3\n    digits(0)   == 0\n    digits(-0)\
    \  == 0\n    digits(12)  == 1\n    digits(-2)  == 1\n    digits(123)  == 6\n \
    \   digits(-23) == 3\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpufi0sj81.jl:14\nin expression starting at\
    \ /tmp/tmpufi0sj81.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n/10)*10 + n % 10\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the digits\
    \ of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint: You can use\
    \ the function digits to solve this exercise.\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqgkuik10.jl:14\nin expression starting at\
    \ /tmp/tmpqgkuik10.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n<0 \n        error(\"n must be positive\")\n    else if n==0 \n  \
    \      1\n    else \n        digits(n//2)*(n % 2 == 0) + 1\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n\
    </cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the sum of the digits of an integer.\nFor example,\
    \ digits(123) = 1 + 2 + 3 = 6\nHint: use the function digits to get the digits\
    \ of a number\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsnmsj9gb.jl:11\nin expression starting at\
    \ /tmp/tmpsnmsj9gb.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n/10)*10 + n % 10\nend\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the sum of the digits\
    \ of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint: use the function\
    \ digits()\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppskyvld5.jl:14\nin expression starting at\
    \ /tmp/tmppskyvld5.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else \n        digits(n / 10) * 10 + n % 10\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(1234) == 4.\nAssume that the integer does not contain any\
    \ leading zeroes.\nAssume that n is positive.\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmpbf277t.jl:14\nin expression starting at\
    \ /tmp/tmpmpbf277t.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    else if n%2==1 then return n*digits(n/2)\n\
    \    else return n*digits(n-1)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n\
    </cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(12345) = 1 + 2 + 3 + 4 + 5\
    \ = 15.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpa3a2ysrz.jl:9\nin expression starting at /tmp/tmpa3a2ysrz.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n\
    <code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n\
    </cell>\n<text>\nExercise: Write a function that returns the factorial of a given\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw4pex9ty.jl:14\nin expression starting at\
    \ /tmp/tmpw4pex9ty.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then 0 else n % 10 * digits(n / 10)\nend\n</cell>\n<code language=julia-1.0>\n\
    digits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function named digits_sum that\
    \ returns the sum of the digits of the number n.\nFor example, digits_sum(123)\
    \ = 1 + 2 + 3 = 6\nHint: Use digits(n) to get the digits of n.\nusing Test\n\n\
    @testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxrb6ml6c.jl:9\nin expression starting at /tmp/tmpxrb6ml6c.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    digits(n-1)\n  \
    \  digits(n//10)*10\nend\n</cell>\n<code language=julia-1.4>\ndigits(1)\n</cell>\n\
    <code language=julia-1.4>\ndigits(4)\n</cell>\n<code language=julia-1.4>\ndigits(235)\n\
    </cell>\n<text>\nExercise 2\nWrite a function digits_sum(n::Int64)::Int64 which\
    \ returns the sum of all the odd digits in the number n.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjnhei2g9.jl:9\nin expression starting at /tmp/tmpjnhei2g9.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n-1)*(n%10+digits(n//10))\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(10)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function digits_sum(n::Int64)::Int64 that returns the sum of all\
    \ digits in n.\nFor example:\ndigits_sum(123)  == 6\ndigits_sum(1234) == 10\n\
    digits_sum(12345) == 15\ndigits_sum(123456) == 21\ndigits_sum(1234567) == 24\n\
    digits_sum(12345678) == 30\ndigits_sum(123456789) == 36\ndigits_sum(1234567890)\
    \ == 45\ndigits_sum(12345678901) == 50\ndigits_sum(123456789012) == 55\ndigits_sum(1234567890123)\
    \ == 60\ndigits_sum(12345678901234) == 65\ndigits_sum(123456789012345) == 70\n\
    digits_sum(1234567890123456) == 75\ndigits_sum(12345678901234567) == 80\ndigits_sum(123456789012345678)\
    \ == 85\ndigits_sum(1234567890123456789) == 90\ndigits_sum(12345678901234567890)\
    \ == 95\ndigits_sum(123456789012345678901) == 100\ndigits_sum(1234567890123456789012)\
    \ == 105\ndigits_sum(12345678901234567890123) == 110\ndigits_sum(123456789012345678901234)\
    \ == 115\ndigits_sum(1234567890123456789012345) == 120\ndigits_sum(12345678901234567890123456)\
    \ == 125\ndigits_sum(123456789012345678901234567) == 130\ndigits_sum(1234567890123456789012345678)\
    \ == 135\ndigits_sum(12345678901234567890123456789) == 140\ndigits_sum(123456789012345678901234567890)\
    \ == 145\ndigits_sum(1234567890123456789012345678901) == 150\ndigits_sum(12345678901234567890123456789012)\
    \ == 155\ndigits_sum(123456789012345678901234567890123) == 160\ndigits_sum(1234567890123456789012345678901234)\
    \ == 165\ndigits_sum(12345678901234567890123456789012345) == 170\ndigits_sum(123456789012345678901234567890123456)\
    \ == 175\ndigits_sum(1234567890123456789012345678901234567) == 180\ndigits_sum(12345678901234567890123456789012345678)\
    \ == 185\ndigits_sum(123456789012345678901234567890123456789) == 190\ndigits_sum(1234567890123456789012345678901234567890)\
    \ == 195\ndigits_sum(12345678901234567890123456789012345678901) == 200\ndigits_sum(123456789012345678901234567890123456789012)\
    \ == 205\ndigits_sum(1234567890123456789012345678901234567890123) == 210\ndigits_sum(12345678901234567890123456789012345678901234)\
    \ == 215\ndigits_sum(123456789012345678901234567890123456789012345) == 220\ndigits_sum(1234567890123456789012345678901234567890123456)\
    \ == 225\ndigits_sum(1234567890123456789\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4pfk3_st.jl:14\nin expression starting at\
    \ /tmp/tmp4pfk3_st.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n<0 \n        error(\"n must be positive\")\n    else if n==0 \n  \
    \      0\n    else if n==1 \n        1\n    else \n        digits(n/10) * 10 +\
    \ digits(n%10)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n\
    <code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of all the\
    \ digits in an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint: use digits(n)\
    \ to get the digits of the integer\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvzw6am6x.jl:11\nin expression starting at\
    \ /tmp/tmpvzw6am6x.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n<0 \n        error(\"n must be positive\")\n    else if n==0 \n  \
    \      1\n    else if n==1 \n        1\n    else if n%2==0 \n        digits(n/2)\n\
    \    else \n        digits(n/2)*3\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n\
    </cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the digits of an integer.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkbcnhdup.jl:11\nin expression starting at\
    \ /tmp/tmpkbcnhdup.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then 0 else n % 10 * digits(n / 10)\nend\n</cell>\n<code language=julia-1.0>\n\
    digits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ You can use the function digits to get the individual digits of a number.\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnkkwpvsa.jl:9\nin expression starting at /tmp/tmpnkkwpvsa.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n<0 \n        error(\"n must be positive\")\n    else if n==0 \n  \
    \      1\n    else if n==1 \n        1\n    else if n==2 \n        2\n    else\
    \ if n<10 \n        digits(n/10)*10+digits(n%10)\n    else \n        digits(n/10)*10+digits(n%10)*10\n\
    end\n</cell>\n<code language=julia-1.0>\ndigits(1)\n</cell>\n<code language=julia-1.0>\n\
    digits(4)\n</cell>\n<code language=julia-1.0>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function digits_sum(n::Int64) which returns the sum of the\
    \ digits in the number n.\nFor example, digits_sum(123) = 1 + 2 + 3 = 6\nHint:\
    \ Use digits(n) to get the digits in the number n.\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu0h53pdc.jl:11\nin expression starting at\
    \ /tmp/tmpu0h53pdc.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        digits(n-1) * digits(n-2) * digits(n-3)\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that returns the factorial\
    \ of a given number. \nThe factorial of a number $n$ is defined as:\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0b6yk_69.jl:14\nin expression starting at\
    \ /tmp/tmp0b6yk_69.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n\
    <code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the digits\
    \ of its argument. For example:\n    digits(123)  == 6\n    digits(-45) == 3\n\
    \    digits(0)   == 0\n    digits(-0)  == 0\n    digits(-23) == -2\n    digits(-999)\
    \ == -999\n    digits(-9999) == -9999\n    digits(-1234) == -1234\n    digits(123456789)\
    \ == 123456789\n    digits(-123456789) == -123456789\n    digits(1234567890) ==\
    \ 1234567890\n    digits(-1234567890) == -1234567890\n    digits(12345678901)\
    \ == 12345678901\n    digits(-12345678901) == -12345678901\n    digits(123456789012)\
    \ == 123456789012\n    digits(-123456789012) == -123456789012\n    digits(1234567890123)\
    \ == 1234567890123\n    digits(-1234567890123) == -1234567890123\n    digits(12345678901234)\
    \ == 12345678901234\n    digits(-12345678901234) == -12345678901234\n    digits(123456789012345)\
    \ == 123456789012345\n    digits(-123456789012345) == -123456789012345\n    digits(1234567890123456)\
    \ == 1234567890123456\n    digits(-1234567890123456) == -1234567890123456\n  \
    \  digits(1234567890123456789) == 1234567890123456789\n    digits(-1234567890123456789)\
    \ == -1234567890123456789\n    digits(12345678901234567890) == 12345678901234567890\n\
    \    digits(-12345678901234567890) == -12345678901234567890\n    digits(123456789012345678901)\
    \ == 123456789012345678901\n    digits(-123456789012345678901) == -123456789012345678901\n\
    \    digits(1234567890123456789012) == 1234567890123456789012\n    digits(-1234567890123456789012)\
    \ == -1234567890123456789012\n    digits(12345678901234567890123) == 12345678901234567890123\n\
    \    digits(-12345678901234567890123) == -12345678901234567890123\n    digits(123456789012345678901234)\
    \ == 123456789012345678901234\n    digits(-123456789012345678901234) == \nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphwtujwok.jl:14\nin expression starting at\
    \ /tmp/tmphwtujwok.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then return 0 \n    else if n%2==0 then return n*digits(n/2) \n\
    \    else return n*digits(n-1)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n\
    </cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the digits of an integer.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0ifsbrks.jl:9\nin expression starting at /tmp/tmp0ifsbrks.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n<0 \n        error(\"n must be positive\")\n    else if n==0 \n  \
    \      1\n    else if n==1 \n        1\n    else if n==2 \n        2\n    else\
    \ if n==3 \n        3\n    else if n==4 \n        4\n    else if n==5 \n     \
    \   5\n    else if n==6 \n        6\n    else if n==7 \n        7\n    else if\
    \ n==8 \n        8\n    else if n==9 \n        9\n    else \n        digits(n-1)\n\
    end\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function digits_sum(n::Int64)::Int64 that returns the sum\
    \ of all the odd digits in the number n.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsr3g3a3z.jl:11\nin expression starting at\
    \ /tmp/tmpsr3g3a3z.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then 0 else n % 10 * digits(n/10)\nend\n</cell>\n<code language=julia-1.0>\n\
    digits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function named digits_sum that\
    \ returns the sum of the digits of an integer.\nFor example, digits_sum(123) =\
    \ 1 + 2 + 3 = 6\nHint: use the digits() function you wrote earlier.\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpp6amzk_2.jl:9\nin expression starting at /tmp/tmpp6amzk_2.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0 \n        error(\"n must be positive\")\n    else if n == 0 \n\
    \        0\n    else \n        digits(n//10) * 10 + n % 10\nend\n</cell>\n<code\
    \ language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n\
    </cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the sum of the digits of an integer.\nusing Test\n\n\
    @testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkrfw22su.jl:11\nin expression starting at\
    \ /tmp/tmpkrfw22su.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else \n        digits(n / 10) * 10 + n % 10\n\
    end\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfexg1vsq.jl:14\nin expression starting at\
    \ /tmp/tmpfexg1vsq.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n\
    <code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise 2\nWrite a function is_palindrome(n::Int64) which returns\
    \ true if the given number is a palindrome.\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp87dvtmhv.jl:14\nin expression starting at\
    \ /tmp/tmp87dvtmhv.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n\
    <code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the digits\
    \ of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint: use the function\
    \ digits()\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcj_06vzr.jl:14\nin expression starting at\
    \ /tmp/tmpcj_06vzr.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        digits(n / 10) * 10 + n % 10\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1yvzy2i2.jl:14\nin expression starting at\
    \ /tmp/tmp1yvzy2i2.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        if n%2==0 \n            digits(n/2)\n\
    \        else\n            digits(n-1)\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the digits of an integer.\n    For example, digits(123) = 1 + 2 + 3 = 6\n\
    \    digits(-3) = 1 + -2 + 3 = -6\n    digits(0) = 0\n    digits(-0) = 0\n   \
    \ digits(1234567890) = 1234567890\n    digits(-1234567890) = -1234567890\n   \
    \ digits(1234567890) = 1234567890\n    digits(-1234567890) = -1234567890\n   \
    \ digits(1234567890) = 1234567890\n    digits(-1234567890) = -1234567890\n   \
    \ digits(1234567890) = 1234567890\n    digits(-1234567890) = -1234567890\n   \
    \ digits(1234567890) = 1234567890\n    digits(-1234567890) = -1234567890\n   \
    \ digits(1234567890) = 1234567890\n    digits(-1234567890) = -1234567890\n   \
    \ digits(1234567890) = 1234567890\n    digits(-1234567890) = -1234567890\n   \
    \ digits(1234567890) = 1234567890\n    digits(-1234567890) = -1234567890\n   \
    \ digits(1234567890) = 1234567890\n    digits(-1234567890) = -1234567890\n   \
    \ digits(1234567890) = 1234567890\n    digits(-1234567890) = -1234567890\n   \
    \ digits(1234567890) = 1234567890\n    digits(-1234567890) = -1234567890\n   \
    \ digits(1234567890) = 1234567890\n    digits(-1234567890) = -1234567890\n   \
    \ digits(1234567890) = 1234567890\n    digits(-1234567890) = -1234567890\n   \
    \ digits(1234567890) = 1234567890\n    digits(-1234567890) = -1234567890\n   \
    \ digits(1234567890) = 1234567890\n    digits(-1234567890) = -1234567890\n   \
    \ digits(1234567890) = 1234567890\n    digits(-1234567890) = -1234567890\n   \
    \ digits(1234567890) = 1234567890\n    digits(-1234567890) = -1234567890\n   \
    \ digits(1234567890)\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t\
    @test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzk006wza.jl:17\nin expression starting at\
    \ /tmp/tmpzk006wza.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0 \n        error(\"n must be positive\")\n    else if n == 0 \n\
    \        0\n    else if n % 2 == 0 \n        digits(n / 2)\n    else \n      \
    \  digits(n / 2) * digits(n / 2)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n\
    </cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the product\
    \ of the even digits in a number.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp45g3l3e_.jl:11\nin expression starting at\
    \ /tmp/tmp45g3l3e_.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    else if n%2==0 then return n*digits(n/2)\n\
    \    else return digits(n/2)*digits(n/2)\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ use the function digits()\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbxbopewc.jl:9\nin expression starting at /tmp/tmpbxbopewc.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n<0 \n        error(\"n must be positive\")\n    else if n==0 \n  \
    \      1\n    else \n        digits(n-1)*(n%2)\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the digits of an integer.\n    For example, digits(123) = 1 + 2 + 3 = 6\n\
    \    digits(-3) = 1 + 0 = 1\n    digits(0) = 0\n    digits(-0) = 0\n    digits(-5)\
    \ = 1 + 5 = 6\n    digits(-10) = 1 + 0 = 1\n    digits(-100) = 1 + 0 = 1\n   \
    \ digits(-1000) = 1 + 0 = 1\n    digits(-10000) = 1 + 0 = 1\n    digits(-100000)\
    \ = 1 + 0 = 1\n    digits(-1000000) = 1 + 0 = 1\n    digits(-10000000) = 1 + 0\
    \ = 1\n    digits(-100000000) = 1 + 0 = 1\n    digits(-1000000000) = 1 + 0 = 1\n\
    \    digits(-10000000000) = 1 + 0 = 1\n    digits(-100000000000) = 1 + 0 = 1\n\
    \    digits(-1000000000000) = 1 + 0 = 1\n    digits(-10000000000000) = 1 + 0 =\
    \ 1\n    digits(-100000000000000) = 1 + 0 = 1\n    digits(-1000000000000000) =\
    \ 1 + 0 = 1\n    digits(-10000000000000000) = 1 + 0 = 1\n    digits(-100000000000000000)\
    \ = 1 + 0 = 1\n    digits(-1000000000000000000) = 1 + 0 = 1\n    digits(-10000000000000000000)\
    \ = 1 + 0 = 1\n    digits(-100000000000000000000) = 1 + 0 = 1\n    digits(-1000000000000000000000)\
    \ = 1 + 0 = 1\n    digits(-10000000000000000000000) = 1 + 0 = 1\n    digits(-100000000000000000000000)\
    \ = 1 + 0 = 1\n    digits(-1000000000000000000000000) = 1 + 0 = 1\n    digits(-10000000000000000000000000)\
    \ = 1 + 0 = 1\n    digits(-100000000000000000000000000) = 1 + 0 = 1\n    digits(-1000000000000000000000000000)\
    \ = 1 + 0 = 1\n    digits(-10000000000000000000000000000) = 1 + 0 = 1\n    digits(-100000000000000000000000000000)\
    \ = 1 + 0 = 1\n    digits(-1000000000000000000000000000000) = 1 + 0 = 1\n    digits(-10000000000000000000000000000000)\
    \ = 1 + 0 = 1\n    digits(-100000000000000000000000000000000) = 1 + 0 = 1\n  \
    \  digits(-1000000000000000000000000000000000)\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpan_592fp.jl:11\nin expression starting at\
    \ /tmp/tmpan_592fp.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n%2==0 then return\
    \ n*digits(n/2)\n    else return n*digits(n-1)\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nProblem 3\nWrite a function that returns the sum\
    \ of the digits in an integer.\nFor example:\ndigits(123)  == 6\ndigits(-23) ==\
    \ 3\ndigits(0)   == 0\ndigits(-0)  == 0\ndigits(12)  == 1\ndigits(-4)  == -1\n\
    digits(123)  == 6\ndigits(-23) == 3\ndigits(0)   == 0\ndigits(-0)  == 0\ndigits(12)\
    \  == 1\ndigits(-4)  == -1\ndigits(123)  == 6\ndigits(-23) == 3\ndigits(0)   ==\
    \ 0\ndigits(-0)  == 0\ndigits(12)  == 1\ndigits(-4)  == -1\ndigits(123)  == 6\n\
    digits(-23) == 3\ndigits(0)   == 0\ndigits(-0)  == 0\ndigits(12)  == 1\ndigits(-4)\
    \  == -1\ndigits(123)  == 6\ndigits(-23) == 3\ndigits(0)   == 0\ndigits(-0)  ==\
    \ 0\ndigits(12)  == 1\ndigits(-4)  == -1\ndigits(123)  == 6\ndigits(-23) == 3\n\
    digits(0)   == 0\ndigits(-0)  == 0\ndigits(12)  == 1\ndigits(-4)  == -1\ndigits(123)\
    \  == 6\ndigits(-23) == 3\ndigits(0)   == 0\ndigits(-0)  == 0\ndigits(12)  ==\
    \ 1\ndigits(-4)  == -1\ndigits(123)  == 6\ndigits(-23) == 3\ndigits(0)   == 0\n\
    digits(-0)  == 0\ndigits(12)  == 1\ndigits(-4)  == -1\ndigits(123)  == 6\ndigits(-23)\
    \ == 3\ndigits(0)   == 0\ndigits(-0)  == 0\ndigits(12)  == 1\ndigits(-4)  == -1\n\
    digit\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1s3yiqs7.jl:9\nin expression starting at /tmp/tmp1s3yiqs7.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        if n % 2 == 0 \n            digits(n\
    \ / 2)\n        else\n            digits(n / 2) * 3\n        end\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the sum of the digits of an integer.\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd4mwcnmr.jl:19\nin expression starting at\
    \ /tmp/tmpd4mwcnmr.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n<0 \n        return 0 \n    else if n==0 \n        return 1 \n   \
    \ else if n%2==0 \n        return digits(n/2) \n    else \n        return digits(n-1)*3+1\n\
    end\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(123) = 1 + 2 + 3 = 6\nHint: use the function digits()\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgc7w9j67.jl:11\nin expression starting at\
    \ /tmp/tmpgc7w9j67.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n\
    <code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the digits\
    \ of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint: use the function\
    \ digits to get the digits of an integer.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd40n8f9x.jl:14\nin expression starting at\
    \ /tmp/tmpd40n8f9x.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    elseif n==1 \n        1\n    elseif n==2 \n \
    \       2\n    elseif n==3 \n        3\n    elseif n==4 \n        4\n    elseif\
    \ n==5 \n        5\n    elseif n==6 \n        6\n    elseif n==7 \n        7\n\
    \    elseif n==8 \n        8\n    elseif n==9 \n        9\n    elseif n==10 \n\
    \        10\n    elseif n==11 \n        11\n    elseif n==12 \n        12\n  \
    \  elseif n==13 \n        13\n    elseif n==14 \n        14\n    elseif n==15\
    \ \n        15\n    elseif n==16 \n        16\n    elseif n==17 \n        17\n\
    \    elseif n==18 \n        18\n    elseif n==19 \n        19\n    elseif n==20\
    \ \n        20\n    elseif n==21 \n        21\n    elseif n==22 \n        22\n\
    \    elseif n==23 \n        23\n    elseif n==24 \n        24\n    elseif n==25\
    \ \n        25\n    elseif n==26 \n        26\n    elseif n==27 \n        27\n\
    \    elseif n==28 \n        28\n    elseif n==29 \n        29\n    elseif n==30\
    \ \n        30\n    elseif n==31 \n        31\n    elseif n==32 \n        32\n\
    \    elseif n==33 \n        33\n    elseif n==34 \n        34\n    elseif n==35\
    \ \n        35\n    elseif n==36 \n        36\n    elseif n==37 \n        37\n\
    \    elseif n==38 \n        38\n    elseif n==39 \n        39\n    elseif n==40\
    \ \n        40\n    elseif n==41 \n        41\n    elseif n==42 \n        42\n\
    \    elseif n==43 \n        43\n    elseif n==44 \n        44\n    elseif n==45\
    \ \n        45\n    elseif n==46 \n        46\n    elseif n==47 \n        47\n\
    \    elseif n==48 \n        48\n    elseif n==49 \n        49\n    elseif n==50\
    \ \n        50\n    elseif n==51 \n        51\n    elseif n==52 \n        52\n\
    \    elseif n==53 \n        53\n    elseif n==54 \n        54\n    elseif n==55\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppntpsup0.jl:1\nin expression starting at /tmp/tmppntpsup0.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n-1)*(n%2)*(n%2)\nend\n\
    </cell>\n<code language=julia-1.4>\ndigits(1)\n</cell>\n<code language=julia-1.4>\n\
    digits(4)\n</cell>\n<code language=julia-1.4>\ndigits(235)\n</cell>\n<code language=julia-1.4>\n\
    digits(235)==digits(235)\n</cell>\n<code language=julia-1.4>\ndigits(235)==digits(235)\n\
    </cell>\n<code language=julia-1.4>\ndigits(235)==digits(235)\n</cell>\n<code language=julia-1.4>\n\
    digits(235)==digits(235)\n</cell>\n<code language=julia-1.4>\ndigits(235)==digits(235)\n\
    </cell>\n<code language=julia-1.4>\ndigits(235)==digits(235)\n</cell>\n<code language=julia-1.4>\n\
    digits(235)==digits(235)\n</cell>\n<code language=julia-1.4>\ndigits(235)==digits(235)\n\
    </cell>\n<code language=julia-1.4>\ndigits(235)==digits(235)\n</cell>\n<code language=julia-1.4>\n\
    digits(235)==digits(235)\n</cell>\n<code language=julia-1.4>\ndigits(235)==digits(235)\n\
    </cell>\n<code language=julia-1.4>\ndigits(235)==digits(235)\n</cell>\n<code language=julia-1.4>\n\
    digits(235)==digits(235)\n</cell>\n<code language=julia-1.4>\ndigits(235)==digits(235)\n\
    </cell>\n<code language=julia-1.4>\ndigits(235)==digits(235)\n</cell>\n<code language=julia-1.4>\n\
    digits(235)==digits(235)\n</cell>\n<code language=julia-1.4>\ndigits(235)==digits(235)\n\
    </cell>\n<code language=julia-1.4>\ndigits(235)==digits(235)\n</cell>\n<code language=julia-1.4>\n\
    digits(235)==digits(235)\n</cell>\n<code language=julia-1.4>\ndigits(235)==digits(235)\n\
    </cell>\n<code language=julia-1.4>\ndigits(235)==digits(235)\n</cell>\n<code language=julia-1.4>\n\
    digits(235)==digits(235)\n</cell>\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpofjcnss4.jl:14\nin expression starting at\
    \ /tmp/tmpofjcnss4.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        digits(n / 10) * 10 + n % 10\n\
    end\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the product of the even digits in a number.\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3u9yat3c.jl:14\nin expression starting at\
    \ /tmp/tmp3u9yat3c.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0 \n        0\n    elseif n < 10 \n        n\n    elseif n % 2\
    \ == 0 \n        digits(n / 2) * digits(n / 2)\n    else\n        digits(n / 2)\
    \ * digits(n / 2) + digits(n / 2)\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n\
    </cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprvitorp2.jl:18\nin expression starting at\
    \ /tmp/tmprvitorp2.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n//10)*10 + n % 10\nend\n\
    </cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    For example:\n    digits(123)  == [1, 2, 3]\n    digits(-23) == [3, 2, 1]\n  \
    \  digits(0)   == [0]\n    digits(-0)  == [0]\n    digits(-5)  == [4, 3]\n   \
    \ digits(-10)  == [9, 8, 7, 6, 5, 4, 3, 2]\n    digits(-101) == [9, 8, 7, 6, 5,\
    \ 4, 3, 2, 1]\n    digits(-102) == [9, 8, 7, 6, 5, 4, 3, 2, 1]\n    digits(-103)\
    \ == [9, 8, 7, 6, 5, 4, 3, 2, 1]\n    digits(-104) == [9, 8, 7, 6, 5, 4, 3, 2,\
    \ 1]\n    digits(-105) == [9, 8, 7, 6, 5, 4, 3, 2, 1]\n    digits(-106) == [9,\
    \ 8, 7, 6, 5, 4, 3, 2, 1]\n    digits(-107) == [9, 8, 7, 6, 5, 4, 3, 2, 1]\n \
    \   digits(-108) == [9, 8, 7, 6, 5, 4, 3, 2, 1]\n    digits(-109) == [9, 8, 7,\
    \ 6, 5, 4, 3, 2, 1]\n    digits(-110) == [9, 8, 7, 6, 5, 4, 3, 2, 1]\n    digits(-111)\
    \ == [9, 8, 7, 6, 5, 4, 3, 2, 1]\n    digits(-112) == [9, 8, 7, 6, 5, 4, 3, 2,\
    \ 1]\n    digits(-113) == [9, 8, 7, 6, 5, 4, 3, 2, 1]\n    digits(-114) == [9,\
    \ 8, 7, 6, 5, 4, 3, 2, 1]\n    digits(-115) == [9, 8, 7, 6, 5, 4, 3, 2, 1]\n \
    \   digits(-116) == [9, 8, 7, 6, 5, 4, 3, 2, 1]\n    digits(-117) == [9, 8, 7,\
    \ 6, 5, 4, 3, 2, 1]\n    digits(-118) == [9, 8, 7, 6, 5, 4, 3, 2, 1]\n    digits(-119)\
    \ == [9, 8, 7, 6, 5, 4, 3, 2, 1]\n    digits(-120) == [9, 8, 7, 6, 5, 4, 3, 2,\
    \ 1]\n    digits(-121) == [9, 8, 7, 6, 5, 4, 3, 2, 1]\n    digits(-122) == [9,\
    \ 8, 7, 6, 5, 4, 3, 2, 1]\n    digits(-123) == [9, 8, 7, 6, 5, 4, 3, 2, 1]\n \
    \   digits(-124) == [9, 8, 7, 6, 5, 4, 3, 2, 1]\n    digits(-125) == [9, 8, 7,\
    \ 6, 5, 4, 3, 2, 1]\n    digits(-126) == [9, 8, 7, 6, 5, 4, 3, 2, 1]\n    digits(-127)\
    \ == [9, 8, 7, 6, 5, 4, 3, 2, 1]\n    digits(-128) == [9, 8, 7, 6, 5, 4, 3, 2,\
    \ 1]\n    digits(-129) == [9, 8, 7, 6, 5, 4, 3, 2, 1]\n    digits(-130) == [9,\
    \ 8, 7, 6, 5, 4, 3, 2, 1]\n    digits(-13\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptxvfiv5_.jl:14\nin expression starting at\
    \ /tmp/tmptxvfiv5_.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        if n % 2 == 0 \n            digits(n\
    \ / 2)\n        else\n            digits(n / 2) * 3\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ use the function digits(n) to get the digits of n.\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdjdqdbi_.jl:17\nin expression starting at\
    \ /tmp/tmpdjdqdbi_.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then 0 else n % 10 * digits(n/10)\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the digits of an integer.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp50f7es_y.jl:9\nin expression starting at /tmp/tmp50f7es_y.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n<0 \n        error(\"n must be positive\")\n    else if n==0 \n  \
    \      1\n    else if n==1 \n        1\n    else if n==2 \n        2\n    else\
    \ if n==3 \n        6\n    else if n==4 \n        24\n    else if n==5 \n    \
    \    120\n    else if n==6 \n        720\n    else if n==7 \n        5040\n  \
    \  else if n==8 \n        40320\n    else if n==9 \n        362880\n    else if\
    \ n==10 \n        3628800\n    else if n==11 \n        39916800\n    else if n==12\
    \ \n        479001600\n    else if n==13 \n        6227020800\n    else if n==14\
    \ \n        87178291200\n    else if n==15 \n        1307674368000\n    else if\
    \ n==16 \n        20922789888000\n    else if n==17 \n        355687428096000\n\
    \    else if n==18 \n        6402373705728000\n    else if n==19 \n        121645100408832000\n\
    \    else if n==20 \n        2432902008176640000\n    else if n==21 \n       \
    \ 51090942171709440000\n    else if n==22 \n        1124000727777607680000\n \
    \   else if n==23 \n        25852016738884976640000\n    else if n==24 \n    \
    \    620448401733239439360000\n    else if n==25 \n        15511210043330985984000000\n\
    \    else if n==26 \n        403291461126605635584000000\n    else if n==27 \n\
    \        10888869450418352160768000000\n    else if n==28 \n        304183006876380590794361120\n\
    \    else if n==29 \n        8841761993739701954543616\n    else if n==30 \n \
    \       26525285981219105863630848\n    else if n==31 \n        822283865417792281772556288\n\
    \    else if n==32 \n        175921860444168627042918368\n    else if n==33 \n\
    \nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) ==\
    \ 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptzbdck6j.jl:11\nin expression starting at\
    \ /tmp/tmptzbdck6j.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n<0 \n        return 0 \n    else if n==0 \n        return 1 \n   \
    \ else \n        return n*digits(n-1)\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ use the function digits to get the digits of an integer.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_f8u7lr_.jl:11\nin expression starting at\
    \ /tmp/tmp_f8u7lr_.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n/10)*10 + n % 10\n    end\n\
    end\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the sum of the digits of an integer.\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptr7vu0_w.jl:15\nin expression starting at\
    \ /tmp/tmptr7vu0_w.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0 \n        error(\"n must be positive\")\n    else if n == 0 \n\
    \        0\n    else \n        digits(n-1) * digits(n-2) * digits(n-3)\n    end\n\
    end\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the product of the even digits in a given\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6naxh4dt.jl:11\nin expression starting at\
    \ /tmp/tmp6naxh4dt.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    elseif n % 2 == 0 \n        digits(n / 2)\n\
    \    else\n        digits(n / 2) * 3 + 1\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the factorial\
    \ of a given positive integer n.\nFor example, factorial(5) = 5 * 4 * 3 * 2 *\
    \ 1 = 120.\nHint: use factorial and if.\nHint: use recursion.\nHint: use if.\n\
    Hint: use if.\nHint: use if.\nHint: use if.\nHint: use if.\nHint: use if.\nHint:\
    \ use if.\nHint: use if.\nHint: use if.\nHint: use if.\nHint: use if.\nHint: use\
    \ if.\nHint: use if.\nHint: use if.\nHint: use if.\nHint: use if.\nHint: use if.\n\
    Hint: use if.\nHint: use if.\nHint: use if.\nHint: use if.\nHint: use if.\nHint:\
    \ use if.\nHint: use if.\nHint: use if.\nHint: use if.\nHint: use if.\nHint: use\
    \ if.\nHint: use if.\nHint: use if.\nHint: use if.\nHint: use if.\nHint: use if.\n\
    Hint: use if.\nHint: use if.\nHint: use if.\nHint: use if.\nHint: use if.\nHint:\
    \ use if.\nHint: use if.\nHint: use if.\nHint: use if.\nHint: use if.\nHint: use\
    \ if.\nHint: use if.\nHint: use if.\nHint: use if.\nHint: use if.\nHint: use if.\n\
    Hint: use if.\nHint: use if.\nHint: use if.\nHint: use if.\nHint: use if.\nHint:\
    \ use if.\nHint: use if.\nHint: use if.\nHint: use if.\nHint: use if.\nHint: use\
    \ if.\nHint: use if.\nHint: use if.\nHint: use if.\nHint: use if.\nHint: \nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6da425lq.jl:16\nin expression starting at\
    \ /tmp/tmp6da425lq.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    elseif n==1 \n        1\n    elseif n%2==0 \n\
    \        digits(n/2)\n    else\n        digits(n/2)*3\n    end\nend\n</cell>\n\
    <code language=julia-1.0>\ndigits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n\
    </cell>\n<code language=julia-1.0>\ndigits(235)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the factorial of a given positive integer n.\nFor\
    \ example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120.\nHint: use the factorial function\
    \ defined above.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2m08e7ph.jl:19\nin expression starting at\
    \ /tmp/tmp2m08e7ph.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n\
    <code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise: Write a function that returns the sum of the digits\
    \ of an integer.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_23ye7w0.jl:14\nin expression starting at\
    \ /tmp/tmp_23ye7w0.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then 0 else n % 10 * digits(n/10)\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ use the function digits(n) to get the digits of n.\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj3ro26en.jl:9\nin expression starting at /tmp/tmpj3ro26en.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n/10)*10 + n % 10\nend\n\
    </cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(1245) == 1 + 2 + 4 + 5 = 13.\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7jt8aem6.jl:14\nin expression starting at\
    \ /tmp/tmp7jt8aem6.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then 0 else n % 10 * digits(n / 10)\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ You can use the function digits to solve this problem.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbogjd050.jl:9\nin expression starting at /tmp/tmpbogjd050.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        if n % 2 == 0 \n            digits(n\
    \ / 2)\n        else\n            digits(n / 2) * 3\n        end\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function named digits_sum that returns the sum of all the\
    \ odd digits in the number n.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpts482l8p.jl:19\nin expression starting at\
    \ /tmp/tmpts482l8p.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n\
    <code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the digits\
    \ of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint: You can use\
    \ the function digits to get the individual digits.\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmov9vbcu.jl:14\nin expression starting at\
    \ /tmp/tmpmov9vbcu.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        digits(n/10) * 10 + n % 10\nend\n\
    </cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the sum of the digits of an integer.\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbd8e8ccq.jl:14\nin expression starting at\
    \ /tmp/tmpbd8e8ccq.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else if n%2==0 \n        digits(n/2)\n    else\
    \ \n        digits(n/2)*3\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n\
    </cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ You can use the function digits to solve this problem\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4anl4bgb.jl:11\nin expression starting at\
    \ /tmp/tmp4anl4bgb.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    else if n%2==0 then return n*digits(n/2)\n\
    \    else return n*digits(n-1)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n\
    </cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function named digits_sum that\
    \ returns the sum of the odd digits of its input.\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3pxr7637.jl:9\nin expression starting at /tmp/tmp3pxr7637.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0 \n        error(\"n must be positive\")\n    else if n == 0 \n\
    \        0\n    else \n        digits(n / 10) * 10 + n % 10\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n\
    </cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the sum of the digits of an integer.\nFor example,\
    \ digits(123) = 1 + 2 + 3 = 6\nHint: use the function digits(n) to get the digits\
    \ of the number n.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy_lmtuke.jl:11\nin expression starting at\
    \ /tmp/tmpy_lmtuke.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else \n        digits(n / 10) * 10 + n % 10\n\
    end\n</cell>\n<code language=julia-1.0>\ndigits(1)\n</cell>\n<code language=julia-1.0>\n\
    digits(4)\n</cell>\n<code language=julia-1.0>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the product of the even digits in a given\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpden_1pxv.jl:14\nin expression starting at\
    \ /tmp/tmpden_1pxv.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0 \n        error(\"n must be positive\")\n    else if n == 0 \n\
    \        0\n    else if n % 2 == 0 \n        digits(n / 2)\n    else \n      \
    \  digits(n / 2) * digits(n / 2)\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n\
    </cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example:\ndigits(123)  == 6\ndigits(-23) ==\
    \ 3\ndigits(0)   == 0\ndigits(-0)  == 0\ndigits(12)  == 1\ndigits(-2)  == 1\n\
    digits(1234) == 5\ndigits(-1234) == 4\ndigits(123)  == 6\ndigits(-23) == 3\ndigits(0)\
    \   == 0\ndigits(-0)  == 0\ndigits(12)  == 1\ndigits(-2)  == 1\ndigits(1234) ==\
    \ 5\ndigits(-1234) == 4\ndigits(123)  == 6\ndigits(-23) == 3\ndigits(0)   == 0\n\
    digits(-0)  == 0\ndigits(12)  == 1\ndigits(-2)  == 1\ndigits(1234) == 5\ndigits(-1234)\
    \ == 4\ndigits(123)  == 6\ndigits(-23) == 3\ndigits(0)   == 0\ndigits(-0)  ==\
    \ 0\ndigits(12)  == 1\ndigits(-2)  == 1\ndigits(1234) == 5\ndigits(-1234) == 4\n\
    digits(123)  == 6\ndigits(-23) == 3\ndigits(0)   == 0\ndigits(-0)  == 0\ndigits(12)\
    \  == 1\ndigits(-2)  == 1\ndigits(1234) == 5\ndigits(-1234) == 4\ndigits(123)\
    \  == 6\ndigits(-23) == 3\ndigits(0)   == 0\ndigits(-0)  == 0\ndigits(12)  ==\
    \ 1\ndigits(-2)  == 1\ndigits(1234) == 5\ndigits(-1234) == 4\ndigits(123)  ==\
    \ 6\ndigits(-23) == 3\ndigits(0)   == 0\ndigits(-0)  == 0\ndigits(12)  == 1\n\
    digits(-2)  == 1\ndigits(\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg4ujemai.jl:11\nin expression starting at\
    \ /tmp/tmpg4ujemai.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n\
    <code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise: Write a function that returns the product of the even\
    \ digits in a given number.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm2l6n8e5.jl:14\nin expression starting at\
    \ /tmp/tmpm2l6n8e5.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0 \n        error(\"n must be positive\")\n    else if n == 0 \n\
    \        0\n    else if n % 2 == 0 \n        digits(n/2)\n    else \n        digits(n/2)*3\
    \ + 1\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the sum of all even digits in a given\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2j2mxcqp.jl:11\nin expression starting at\
    \ /tmp/tmp2j2mxcqp.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n<0 \n        return 0 \n    else if n==0 \n        return 1 \n   \
    \ else if n%2==0 \n        return digits(n/2) \n    else \n        return digits(n-1)*10\
    \ + digits(n%2) \nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n\
    <code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the digits\
    \ of an integer.\nFor example, digits(12345) = 1 + 2 + 3 + 4 + 5 = 10.\nAssume\
    \ that the integer is positive.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2eogw9me.jl:11\nin expression starting at\
    \ /tmp/tmp2eogw9me.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        digits(n / 10) * 10 + n % 10\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpahvnpr8v.jl:14\nin expression starting at\
    \ /tmp/tmpahvnpr8v.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n<0 \n        error(\"n must be positive\")\n    else if n==0 \n  \
    \      1\n    else if n==1 \n        1\n    else if n==2 \n        2\n    else\
    \ if n==3 \n        6\n    else if n==4 \n        24\n    else if n==5 \n    \
    \    120\n    else if n==6 \n        720\n    else if n==7 \n        5040\n  \
    \  else if n==8 \n        40320\n    else if n==9 \n        362880\n    else if\
    \ n==10 \n        3628800\n    else if n==11 \n        39916800\n    else if n==12\
    \ \n        479001600\n    else if n==13 \n        6227020800\n    else if n==14\
    \ \n        87178291200\n    else if n==15 \n        1307674368000\n    else if\
    \ n==16 \n        20922789888000\n    else if n==17 \n        355687428096000\n\
    \    else if n==18 \n        6402373705728000\n    else if n==19 \n        121645100408832000\n\
    \    else if n==20 \n        2432902008176640000\n    else if n==21 \n       \
    \ 51090942171709440000\n    else if n==22 \n        1124000727777607680000\n \
    \   else if n==23 \n        25852016738884976640000\n    else if n==24 \n    \
    \    620448401733239439360000\n    else if n==25 \n        15511210043330985984000000\n\
    \    else if n==26 \n        403291461126605635584000000\n    else if n==27 \n\
    \        10888869450418352160768000000\n    else if n==28 \n        30418300699896051200000000\n\
    \    else if n==29 \n        8841761993739701954543616000000\n    else if n==30\
    \ \n        265252859812191058636308480000000\n    else if n==31 \n        8222838654177922817725562880000000\n\
    \    else if n==32 \n        263130836933693530167218012160000000\n    else if\
    \ n==33 \nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2vy6o1bs.jl:11\nin expression starting at\
    \ /tmp/tmp2vy6o1bs.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        if n % 2 == 0 \n            digits(n\
    \ / 2) * digits(n / 2)\n        else\n            digits(n / 2)\nend\n</cell>\n\
    <code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n\
    </cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the sum of all even digits in a given number.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t\
    @test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3va0m90n.jl:17\nin expression starting at\
    \ /tmp/tmp3va0m90n.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    elseif n % 2 == 0 \n        digits(n / 2)\n\
    \    else\n        digits(n / 2) * 3\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ use the function digits(n) to get the digits of n.\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwumve2dx.jl:17\nin expression starting at\
    \ /tmp/tmpwumve2dx.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        if n % 2 == 0 \n            digits(n\
    \ / 2)\n        else\n            digits(n / 2) * 3\nend\n</cell>\n<code language=julia-1.4>\n\
    digits(1)\n</cell>\n<code language=julia-1.4>\ndigits(4)\n</cell>\n<code language=julia-1.4>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function named digits_sum that\
    \ returns the sum of the digits of an integer.\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy7ym8v8r.jl:17\nin expression starting at\
    \ /tmp/tmpy7ym8v8r.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    else if n%2==1 then return n*digits(n/2)\n\
    \    else return digits(n/2)*digits(n/2)\nend\n</cell>\n<code language=julia-1.0>\n\
    digits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n</cell>\n<code language=julia-1.0>\n\
    digits(235)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ use the function digits().\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpb9rro8j0.jl:9\nin expression starting at /tmp/tmpb9rro8j0.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        if n % 2 == 1 \n            digits(n\
    \ / 2)\n        else\n            digits(n / 2) * digits(n / 2)\nend\n</cell>\n\
    <code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n\
    </cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\nExercise\nWrite\
    \ a function that returns the sum of all the digits in an integer.\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq8809kki.jl:17\nin expression starting at\
    \ /tmp/tmpq8809kki.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0 \n        error(\"n must be positive\")\n    else if n == 0 \n\
    \        0\n    else \n        digits(n//2)*(n % 2 == 0 ? 1 : 2)\nend\n</cell>\n\
    <code language=julia-1.0>\ndigits(1)\n</cell>\n<code language=julia-1.0>\ndigits(4)\n\
    </cell>\n<code language=julia-1.0>\ndigits(235)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the sum of the digits of an integer.\n    For example,\
    \ digits(123) = 1 + 2 + 3 = 6\n    digits(-3) = 1 + 2 + 3 = 6\n    digits(0) =\
    \ 0\n    digits(-0) = 0\n    digits(-5) = 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 =\
    \ 45\n    digits(-10) = 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 0 + 1 = 45\n    digits(-100)\
    \ = 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9\
    \ + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8\
    \ + 9 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 7\
    \ + 8 + 9 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 0 + 1 + 2 + 3 + 4 + 5 + 6\
    \ + 7 + 8 + 9 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 0 + 1 + 2 + 3 + 4 + 5\
    \ + 6 + 7 + 8 + 9 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 0 + 1 + 2 + 3 + 4\
    \ + 5 + 6 + 7 + 8 + 9 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 0 + 1 + 2 + 3\
    \ + 4 + 5 + 6 + 7 + 8 + 9 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 0 + 1 + 2\
    \ + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 0 + 1\
    \ + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 0\
    \ + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9\
    \ + 0 + 1 + 2 + 3 + 4 + 5 + 6 + 7\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa151ea3u.jl:11\nin expression starting at\
    \ /tmp/tmpa151ea3u.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0 \n        error(\"n must be positive\")\n    else if n == 0 \n\
    \        0\n    else if n % 2 == 0 \n        digits(n / 2)\n    else \n      \
    \  digits(n / 2) * 3 + 1\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n\
    </cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ You can use the function digits(n) to get the digits of n.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu0wxqzud.jl:11\nin expression starting at\
    \ /tmp/tmpu0wxqzud.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n==0 then return 1\n    else if n%2==0 then return n*digits(n/2)\n\
    \    else return n*digits(n-1)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n\
    </cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the product\
    \ of the even digits in a number.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpeemspyna.jl:9\nin expression starting at /tmp/tmpeemspyna.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n\
    <code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the digits\
    \ of an integer.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcs3nakz5.jl:14\nin expression starting at\
    \ /tmp/tmpcs3nakz5.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0 \n        0\n    else\n        n % 2 == 0 ? n * digits(n / 2)\
    \ : digits(n / 2)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n\
    <code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n\
    </cell>\n<text>\nExercise 2\nWrite a function called digits_sum that takes a positive\
    \ integer n and returns the sum of the odd digits of n.\nFor example:\ndigits_sum(123)\
    \  == 6\ndigits_sum(1234) == 10\ndigits_sum(12345) == 15\ndigits_sum(123456) ==\
    \ 21\ndigits_sum(1234567) == 24\ndigits_sum(12345678) == 30\ndigits_sum(123456789)\
    \ == 36\ndigits_sum(1234567890) == 45\ndigits_sum(12345678901) == 50\ndigits_sum(123456789012)\
    \ == 55\ndigits_sum(1234567890123) == 60\ndigits_sum(12345678901234) == 65\ndigits_sum(123456789012345)\
    \ == 70\ndigits_sum(1234567890123456) == 75\ndigits_sum(1234567890123456789) ==\
    \ 80\ndigits_sum(12345678901234567890) == 85\ndigits_sum(123456789012345678901)\
    \ == 90\ndigits_sum(1234567890123456789012) == 95\ndigits_sum(12345678901234567890123)\
    \ == 100\ndigits_sum(123456789012345678901234) == 105\ndigits_sum(1234567890123456789012345)\
    \ == 110\ndigits_sum(12345678901234567890123456789) == 115\ndigits_sum(123456789012345678901234567890)\
    \ == 120\ndigits_sum(1234567890123456789012345678901) == 125\ndigits_sum(12345678901234567890123456789012)\
    \ == 130\ndigits_sum(123456789012345678901234567890123) == 135\ndigits_sum(1234567890123456789012345678901234)\
    \ == 140\ndigits_sum(12345678901234567890123456789012345) == 145\ndigits_sum(123456789012345678901234567890123456789)\
    \ == 150\ndigits_sum(1234567890123456789012345678901234567890) == 155\ndigits_sum(12345678901234567890123456789012345678901)\
    \ == 160\ndigits_sum(123456789012345678901234567890123456789012) == 165\ndigits_sum(1234567890123456789012345678901234567890123)\
    \ == 170\ndigits_sum(12345678901234567890123456789012345678901234) == 175\ndigits_sum(123456789012345678901234567890123456789012345)\
    \ == 180\ndigits_sum(1234567890123456789012345678901234567890123456789) == 185\n\
    digits_sum(12345678901234567890123456789012345678901234567890) == 190\ndigits_sum(123456789012345678901234567890123456789012345678901)\
    \ == 195\ndigits_sum(1234567890123456789012345678901234567890123456789012) ==\
    \ 200\ndigits_sum(12345678901234567890123456789012345678901234567890123) == 205\n\
    digits_sum(123456789012345678901234567890123456789012345678901234) == 210\ndigits_\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0y6s426d.jl:14\nin expression starting at\
    \ /tmp/tmp0y6s426d.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n<0 \n        error(\"n must be positive\")\n    else if n==0 \n  \
    \      1\n    else if n==1 \n        1\n    else if n==2 \n        2\n    else\
    \ if n==3 \n        6\n    else if n==4 \n        24\n    else if n==5 \n    \
    \    120\n    else if n==6 \n        720\n    else if n==7 \n        5040\n  \
    \  else if n==8 \n        40320\n    else if n==9 \n        362880\n    else if\
    \ n==10 \n        3628800\n    else if n==11 \n        39916800\n    else if n==12\
    \ \n        479001600\n    else if n==13 \n        6227020800\n    else if n==14\
    \ \n        87178291200\n    else if n==15 \n        1307674368000\n    else if\
    \ n==16 \n        20922789888000\n    else if n==17 \n        355687428096000\n\
    \    else if n==18 \n        6402373705728000\n    else if n==19 \n        121645100408832000\n\
    \    else if n==20 \n        2432902008176640000\n    else if n==21 \n       \
    \ 51090942171709440000\n    else if n==22 \n        1124000727777607680000\n \
    \   else if n==23 \n        25852016738884976640000\n    else if n==24 \n    \
    \    620448401733239439360000\n    else if n==25 \n        15511210043330985984000000\n\
    \    else if n==26 \n        403291461126605635584000000\n    else if n==27 \n\
    \        10888869450418352160768000000\n    else if n==28 \n        3041830068763805907943616000000\n\
    \    else if n==29 \n        8841761993739701954543616000000\n    else if n==30\
    \ \n        265252859812191058636308480000000\n    else if n==31 \n        8222838654177922817725562880000000\n\
    \    else if n==32 \n        263130836933693530167218012160000000\n    else if\
    \ \nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv4hv4fv5.jl:11\nin expression starting at\
    \ /tmp/tmpv4hv4fv5.jl:11\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n<0 \n        return 0 \n    else if n==0 \n        return 1 \n   \
    \ else if n%2==0 \n        return digits(n/2) \n    else \n        return digits(n-1)\
    \ * digits(n-2) \nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n\
    <code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the sum of the digits\
    \ of an integer.\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2gbsj12p.jl:11\nin expression starting at\
    \ /tmp/tmp2gbsj12p.jl:11\n"
  exit_code: 1
  status: SyntaxError

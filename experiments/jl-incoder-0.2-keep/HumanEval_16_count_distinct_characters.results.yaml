name: HumanEval_16_count_distinct_characters
language: julia
results:
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvgy8rcyq.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpvgy8rcyq.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpvgy8rcyq.jl:8\n   [2] top-level scope at /tmp/tmpvgy8rcyq.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvgy8rcyq.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpvgy8rcyq.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpvgy8rcyq.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpvgy8rcyq.jl:8\n   [2] top-level scope at /tmp/tmpvgy8rcyq.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvgy8rcyq.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpvgy8rcyq.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpvgy8rcyq.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpvgy8rcyq.jl:8\n   [2] top-level scope at /tmp/tmpvgy8rcyq.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvgy8rcyq.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpvgy8rcyq.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpvgy8rcyq.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpvgy8rcyq.jl:8\n   [2] top-level scope at /tmp/tmpvgy8rcyq.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvgy8rcyq.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpvgy8rcyq.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpvgy8rcyq.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpvgy8rcyq.jl:8\n   [2] top-level scope at /tmp/tmpvgy8rcyq.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvgy8rcyq.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvgy8rcyq.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,0,0)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3r52exz8.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmp3r52exz8.jl:8\n\
    \   [2] top-level scope at /tmp/tmp3r52exz8.jl:15\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3r52exz8.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp3r52exz8.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmp3r52exz8.jl:8\n\
    \   [2] top-level scope at /tmp/tmp3r52exz8.jl:16\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3r52exz8.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp3r52exz8.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmp3r52exz8.jl:8\n\
    \   [2] top-level scope at /tmp/tmp3r52exz8.jl:17\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3r52exz8.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp3r52exz8.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmp3r52exz8.jl:8\n\
    \   [2] top-level scope at /tmp/tmp3r52exz8.jl:18\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3r52exz8.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp3r52exz8.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmp3r52exz8.jl:8\n\
    \   [2] top-level scope at /tmp/tmp3r52exz8.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3r52exz8.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3r52exz8.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = HashSet()\n    for character in string:\n        count_distinct_characters.add(character)\n\
    \    return count_distinct_characters.length\n</code>\n<|/ a tags=string,haskell\
    \ |>\n<| a tags=string,haskell |>\n<code>\nimport Data.List\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpuyxl8kcs.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpuyxl8kcs.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmps1e46zc3.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmps1e46zc3.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmps1e46zc3.jl:8\n   [2] top-level scope at /tmp/tmps1e46zc3.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps1e46zc3.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmps1e46zc3.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmps1e46zc3.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmps1e46zc3.jl:8\n   [2] top-level scope at /tmp/tmps1e46zc3.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps1e46zc3.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmps1e46zc3.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmps1e46zc3.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmps1e46zc3.jl:8\n   [2] top-level scope at /tmp/tmps1e46zc3.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps1e46zc3.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmps1e46zc3.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmps1e46zc3.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmps1e46zc3.jl:8\n   [2] top-level scope at /tmp/tmps1e46zc3.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps1e46zc3.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmps1e46zc3.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmps1e46zc3.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmps1e46zc3.jl:8\n   [2] top-level scope at /tmp/tmps1e46zc3.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps1e46zc3.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps1e46zc3.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ \n    for c in string:\n        if c.isUpper():\n            count += 1\n  \
    \      elif c.isLower():\n            count += 1\n        elif c.isDigit():\n\
    \            count += 1\n        elif c.isSpace():\n            count += 1\n \
    \       else:\n            count += 1\n            \n    return count\n</code>\n\
    <|/ a tags=string,haskell |>\n<| c |>\nThe `if c.isUpper()` can be replaced with\
    \ `if c.isUppercase()`.\n<|/ c |>\n<| c |>\nYes, but that would require a newer\
    \ version of GHC. `isUppercase` was added in version 7.10.\n<|/ c |>\n<| c |>\n\
    I guess it depends on the version of GHC. `isUppercase` was added in 7.10.\n<|/\
    \ c |>\n<| c |>\nI guess it depends on the version of GHC. `isUppercase` was added\
    \ in 7.10.\n<|/ c |>\n<| c |>\nI guess it depends on the version of GHC. `isUppercase`\
    \ was added in 7.10.\n<|/ c |>\n<| a dscore=2 |>\nThe simplest way is to use Data.Char.\n\
    <code>\nimport Data.Char\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpo2l1abso.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpo2l1abso.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwnu8_hxz.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpwnu8_hxz.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpwnu8_hxz.jl:8\n   [2] top-level scope at /tmp/tmpwnu8_hxz.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwnu8_hxz.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpwnu8_hxz.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpwnu8_hxz.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpwnu8_hxz.jl:8\n   [2] top-level scope at /tmp/tmpwnu8_hxz.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwnu8_hxz.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpwnu8_hxz.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpwnu8_hxz.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpwnu8_hxz.jl:8\n   [2] top-level scope at /tmp/tmpwnu8_hxz.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwnu8_hxz.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpwnu8_hxz.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpwnu8_hxz.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpwnu8_hxz.jl:8\n   [2] top-level scope at /tmp/tmpwnu8_hxz.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwnu8_hxz.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpwnu8_hxz.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpwnu8_hxz.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpwnu8_hxz.jl:8\n   [2] top-level scope at /tmp/tmpwnu8_hxz.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwnu8_hxz.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwnu8_hxz.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = \n        string.map(x => x.toUpperCase()).filter(x => x != ' ').length\n\
    \    \n    return count_distinct_characters\nend\n</cell>\n<code language=julia-1.5>\n\
    count_distinct_characters('xyzXYZ')\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters('Jerry')\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the number of times each character appears in the string. \nFor example, if\
    \ the input string is \"Jerry Jerry Jerry\" the output should be [Jerry => 3,\
    \ Jerry => 2, Jerry => 1]\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpg54kbku5.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpg54kbku5.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0quzs3b5.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp0quzs3b5.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp0quzs3b5.jl:8\n   [2] top-level scope at /tmp/tmp0quzs3b5.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0quzs3b5.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp0quzs3b5.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp0quzs3b5.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp0quzs3b5.jl:8\n   [2] top-level scope at /tmp/tmp0quzs3b5.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0quzs3b5.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp0quzs3b5.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp0quzs3b5.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp0quzs3b5.jl:8\n   [2] top-level scope at /tmp/tmp0quzs3b5.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0quzs3b5.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp0quzs3b5.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp0quzs3b5.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp0quzs3b5.jl:8\n   [2] top-level scope at /tmp/tmp0quzs3b5.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0quzs3b5.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp0quzs3b5.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp0quzs3b5.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp0quzs3b5.jl:8\n   [2] top-level scope at /tmp/tmp0quzs3b5.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0quzs3b5.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0quzs3b5.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = string.count{char}\nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a string and returns the number of characters in the string that are not\
    \ in the alphabet (case insensitive).\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplx5xaiqd.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmplx5xaiqd.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpldfrlux0.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpldfrlux0.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpldfrlux0.jl:8\n   [2] top-level scope at /tmp/tmpldfrlux0.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpldfrlux0.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpldfrlux0.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpldfrlux0.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpldfrlux0.jl:8\n   [2] top-level scope at /tmp/tmpldfrlux0.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpldfrlux0.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpldfrlux0.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpldfrlux0.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpldfrlux0.jl:8\n   [2] top-level scope at /tmp/tmpldfrlux0.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpldfrlux0.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpldfrlux0.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpldfrlux0.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpldfrlux0.jl:8\n   [2] top-level scope at /tmp/tmpldfrlux0.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpldfrlux0.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpldfrlux0.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpldfrlux0.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpldfrlux0.jl:8\n   [2] top-level scope at /tmp/tmpldfrlux0.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpldfrlux0.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpldfrlux0.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = \"\"\n    \n    for character in string:\n        if character not in count_distinct_characters:\n\
    \            count_distinct_characters = count_distinct_characters + character\n\
    \            \n    return count_distinct_characters.length\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\ndef count_distinct_characters(string::String)::Int64\n\
    \    \n    count_distinct_characters = \"\"\n    \n    for character in string:\n\
    \        if character not in count_distinct_characters:\n            count_distinct_characters\
    \ = count_distinct_characters + character\n            \n    return count_distinct_characters.length\n\
    </code>\n<|/ a tags=string,haskell |>\n<| c |>\nWhile this code may answer the\
    \ question, providing additional context regarding how and/or why it solves the\
    \ problem would improve the answer's long-term value.\n<|/ c |>\n<| a tags=string,haskell\
    \ |>\n<code>\nimport Data.List\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4sryqplx.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp4sryqplx.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    \"\"\"\n    Count\
    \ the distinct characters in a string\n    \n    >>> count_distinct_characters('xyzXYZ')\n\
    \    3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp96wzoqww.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp96wzoqww.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp96wzoqww.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \"\"\n    for char in string:\n        if count_distinct_characters[char]\
    \ == \"\":\n            count_distinct_characters[char] = 1\n        else:\n \
    \           count_distinct_characters[char] += 1\n    return count_distinct_characters[char]\n\
    </code>\n<|/ a tags=string,haskell |>\n<| c |>\nThanks for your answer! I did\
    \ some research and found that `Data.Char` has a function `toUpper` that does\
    \ exactly what I want.\n<|/ c |>\n<| c |>\nYes, `toUpper` will work, but `toUpper`\
    \ will also convert `'a'` to `'A'`, which is not what you want. `toUpper` will\
    \ also convert `'A'` to `'a'`, which is not what you want. `toUpper` will also\
    \ convert `'0'` to `'0'`, which is not what you want. `toUpper` will also convert\
    \ `'1'` to `'1'`, which is not what you want. `toUpper` will also convert `'2'`\
    \ to `'2'`, which is not what you want. `toUpper` will also convert `'3'` to `'3'`,\
    \ which is not what you want. `toUpper` will also convert `'4'` to `'4'`, which\
    \ is not what you want. `toUpper` will also convert `'5'` to `'5'`, which is not\
    \ what you want. `toUpper` will also convert `'6'` to `'6'`, which is not what\
    \ you want. `toUpper` will also convert `'7'` to `'7'`, which is not what you\
    \ want. `toUpper` will also convert `'8'` to `'8'`, which is not what you want.\
    \ `toUpper` will also convert `'9'` to `'9'`, which is not what you want.\n<|/\
    \ c |>\n<| c |>\n`toUpper` will also convert `'a'` to `'A'`, which is not what\
    \ you want. `toUpper` will also convert `'A'` to `'a'`, which is not what you\
    \ want. `toUpper` will also convert `'0'` to `'0'`, which is not what you want.\
    \ `toUpper` will also convert `'1'` to `'1'`, which is not what you want. `toUpper`\
    \ will also convert `'2'` to `'2'`, which is not what you want. `toUpper` will\
    \ also convert `'3'` to `'3'`, which is not what you want. `toUpper` will also\
    \ convert `\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxxyhg557.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpxxyhg557.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \n        count_distinct_characters(string::String)::Int64\n    \n    if string\
    \ == \"\"\n        0\n    else\n        count_distinct_characters(string[1:end-1])\
    \ + count_distinct_characters(string[end])\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a string and returns the number of characters in the\
    \ string that are not in the alphabet (case insensitive). For example, the string\
    \ \"hello\" has 5 characters that are not in the alphabet, namely \"e\", \"l\"\
    , \"o\", and \"w\".\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpezm9839n.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpezm9839n.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \n        string.map(x => x.toLowercase()).filter(x => x != ' ').length\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters('Jerry')\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string and returns the number\
    \ of times each character appears in the string.\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp956xxpsp.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp956xxpsp.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isUpper():\n          \
    \  count += 1\n        elif c.isLower():\n            count += 1\n    return count\n\
    </code>\n<|/ a tags=string,haskell,count |>\n<| c |>\nThis doesn't work. Try it\
    \ with `count_distinct_characters('Jerry')`.\n<|/ c |>\n<| c |>\nThanks, I fixed\
    \ it. I had a typo which I fixed now.\n<|/ c |>\n<| c |>\nThe `if` statement is\
    \ redundant. Just `count` the upper and lower case letters.\n<|/ c |>\n<| c |>\n\
    Yes, I know, but I wanted to show how it could be done with if-statements.\n<|/\
    \ c |>\n<| c |>\nI see. But you still have `count` twice in your code. Also, `count`\
    \ should be `0` for the empty string. `count` should also be `1` for the string\
    \ `\"Jerry\"`.\n<|/ c |>\n<| a tags=string,haskell,count |>\n<code>\nimport Data.List\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpk_1o4b01.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpk_1o4b01.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters_helper(string,0,0)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxvzzzebv.jl:16\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpxvzzzebv.jl:9\n\
    \   [2] top-level scope at /tmp/tmpxvzzzebv.jl:16\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxvzzzebv.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpxvzzzebv.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpxvzzzebv.jl:9\n\
    \   [2] top-level scope at /tmp/tmpxvzzzebv.jl:17\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxvzzzebv.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpxvzzzebv.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpxvzzzebv.jl:9\n\
    \   [2] top-level scope at /tmp/tmpxvzzzebv.jl:18\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxvzzzebv.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpxvzzzebv.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpxvzzzebv.jl:9\n\
    \   [2] top-level scope at /tmp/tmpxvzzzebv.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxvzzzebv.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpxvzzzebv.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpxvzzzebv.jl:9\n\
    \   [2] top-level scope at /tmp/tmpxvzzzebv.jl:20\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxvzzzebv.jl:15\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxvzzzebv.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isDigit():\n          \
    \  count += 1\n        elif c.isSpace():\n            count += 1\n        else:\n\
    \            count += 1\n    return count\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    This does not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/27814774)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He asked how to count\
    \ the number of distinct characters in a string. He also gave a solution that\
    \ works. He also provided a link to a solution that works. He also provided a\
    \ link to a solution that does not work. He also provided a link to a solution\
    \ that does not work. He also provided a link to a solution that does not work.\
    \ He also provided a link to a solution that does not work. He also provided a\
    \ link to a solution that does not work. He also provided a link to a solution\
    \ that does not work. He also provided a link to a solution that does not work.\
    \ He also provided a link to a solution that does not work. He also provided a\
    \ link to a solution that does not work. He also provided a link to a solution\
    \ that does not work. He also provided a link to a solution that does not work.\
    \ He also provided a link to a solution that does not work. He also provided a\
    \ link to a solution that does not work. He also provided a link to a solution\
    \ that does not work. He also provided a link to a solution that does not work.\
    \ He also provided a link to a solution that does not work. He also provided a\
    \ link to a solution that does not work. He also provided a link to a solution\
    \ that does not work. He also provided a link to a solution that does not work.\
    \ He also provided a link to a solution that does not work. He also provided a\
    \ link to a solution that does not work. He also provided a link to a solution\
    \ that does not work. He also provided a link to a solution that does not work.\
    \ He also provided a link to a solution that does not work. He also provided a\
    \ link to a solution that does not work. He also provided a link to a solution\
    \ that does not work. He also provided a link to a solution that does not work.\
    \ He also provided a link to a solution that does not work. He also provided a\
    \ link to a solution that does not \nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3frhacnq.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp3frhacnq.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\"\n \
    \       0\n    else\n        count_distinct_characters(string[1:end-1]) + count_distinct_characters(string[end])\n\
    end\n</cell>\n<text>\nExercise 9\nWrite a function that takes a string and returns\
    \ the number of characters that are repeated more than once.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbet_3le6.jl:13\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpbet_3le6.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isDigit():\n          \
    \  count += 1\n        elif c.isSpace():\n            count += 1\n    return count\n\
    </code>\n<|/ a tags=string,haskell,functional-programming |>\n<| c |>\nThe `count`\
    \ function can be written more concisely as `length . filter (\\c -> isUpper c\
    \ || isLower c || isDigit c || isSpace c)`.\n<|/ c |>\n<| c |>\nI agree, that\
    \ is a better way to write it. I was trying to keep it close to the original code\
    \ as much as possible.\n<|/ c |>\n<| a dscore=1 |>\n<code>\nimport Data.Char\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp22afgovv.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp22afgovv.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isDigit():\n          \
    \  count += 1\n    return count\n</cell>\n<text>\nExercise 7\nWrite a function\
    \ that takes a string and returns the number of distinct characters (regardless\
    \ of case) does it consist of. For example, given 'xyzXYZ', it should return 3.\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwmdu0em1.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpwmdu0em1.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpx9ut0pfh.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpx9ut0pfh.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpx9ut0pfh.jl:8\n   [2] top-level scope at /tmp/tmpx9ut0pfh.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx9ut0pfh.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpx9ut0pfh.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpx9ut0pfh.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpx9ut0pfh.jl:8\n   [2] top-level scope at /tmp/tmpx9ut0pfh.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx9ut0pfh.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpx9ut0pfh.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpx9ut0pfh.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpx9ut0pfh.jl:8\n   [2] top-level scope at /tmp/tmpx9ut0pfh.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx9ut0pfh.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpx9ut0pfh.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpx9ut0pfh.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpx9ut0pfh.jl:8\n   [2] top-level scope at /tmp/tmpx9ut0pfh.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx9ut0pfh.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpx9ut0pfh.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpx9ut0pfh.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpx9ut0pfh.jl:8\n   [2] top-level scope at /tmp/tmpx9ut0pfh.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx9ut0pfh.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx9ut0pfh.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isDigit():\n          \
    \  count += 1\n        elif c.isSpace():\n            count += 1\n    return count\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not provide an answer to the question.\
    \ To critique or request clarification from an author, leave a comment below their\
    \ post. - [From Review](/review/low-quality-posts/29690138)\n<|/ c |>\n<| c |>\n\
    I believe this does answer the question. He wants to count the number of distinct\
    \ characters in a string. He also wants to count the number of distinct characters\
    \ in any string. He also wants to count the number of distinct characters in any\
    \ string. He also wants to count the number of distinct characters in any string.\
    \ He also wants to count the number of distinct characters in any string. He also\
    \ wants to count the number of distinct characters in any string. He also wants\
    \ to count the number of distinct characters in any string. He also wants to count\
    \ the number of distinct characters in any string. He also wants to count the\
    \ number of distinct characters in any string. He also wants to count the number\
    \ of distinct characters in any string. He also wants to count the number of distinct\
    \ characters in any string. He also wants to count the number of distinct characters\
    \ in any string. He also wants to count the number of distinct characters in any\
    \ string. He also wants to count the number of distinct characters in any string.\
    \ He also wants to count the number of distinct characters in any string. He also\
    \ wants to count the number of distinct characters in any string. He also wants\
    \ to count the number of distinct characters in any string. He also wants to count\
    \ the number of distinct characters in any string. He also wants to count the\
    \ number of distinct characters in any string. He also wants to count the number\
    \ of distinct characters in any string. He also wants to count the number of distinct\
    \ characters in any string. He also wants to count the number of distinct characters\
    \ in any string. He also wants to count the number of distinct characters in any\
    \ string. He also wants to count the number of distinct characters in any string.\
    \ He also wants to count the number of distinct characters in any string. He also\
    \ wants to count the number of distinct characters in any string. He also wants\
    \ to count the number of distinct characters in any string. He also wants to count\
    \ the number of distinct characters in any string. He also wants to count the\
    \ number of distinct characters in any string. He also wants to count the number\
    \ of distinct character\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpeq5jaq9h.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpeq5jaq9h.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpftlls4mr.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpftlls4mr.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpftlls4mr.jl:8\n   [2] top-level scope at /tmp/tmpftlls4mr.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpftlls4mr.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpftlls4mr.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpftlls4mr.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpftlls4mr.jl:8\n   [2] top-level scope at /tmp/tmpftlls4mr.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpftlls4mr.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpftlls4mr.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpftlls4mr.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpftlls4mr.jl:8\n   [2] top-level scope at /tmp/tmpftlls4mr.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpftlls4mr.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpftlls4mr.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpftlls4mr.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpftlls4mr.jl:8\n   [2] top-level scope at /tmp/tmpftlls4mr.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpftlls4mr.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpftlls4mr.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpftlls4mr.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpftlls4mr.jl:8\n   [2] top-level scope at /tmp/tmpftlls4mr.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpftlls4mr.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpftlls4mr.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpb7a4umsv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpb7a4umsv.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpb7a4umsv.jl:8\n   [2] top-level scope at /tmp/tmpb7a4umsv.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb7a4umsv.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpb7a4umsv.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpb7a4umsv.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpb7a4umsv.jl:8\n   [2] top-level scope at /tmp/tmpb7a4umsv.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb7a4umsv.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpb7a4umsv.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpb7a4umsv.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpb7a4umsv.jl:8\n   [2] top-level scope at /tmp/tmpb7a4umsv.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb7a4umsv.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpb7a4umsv.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpb7a4umsv.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpb7a4umsv.jl:8\n   [2] top-level scope at /tmp/tmpb7a4umsv.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb7a4umsv.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpb7a4umsv.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpb7a4umsv.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpb7a4umsv.jl:8\n   [2] top-level scope at /tmp/tmpb7a4umsv.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb7a4umsv.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb7a4umsv.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \n        string.foldl(\n            0,\n            |acc, c| acc + if c.isUppercase()\
    \ then 1 else 0 end\n        )\nend\n</cell>\n<text>\nExercise: Write a function\
    \ that counts the number of distinct characters in a string that only consist\
    \ of lowercase letters.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"|\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0o64ng5d.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp0o64ng5d.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isAlpha():\n          \
    \  count += 1\n    return count\n</code>\n<|/ a tags=string,haskell |>\n<| a dscore=1\
    \ |>\n<code>\nimport Data.List\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3j33mu4o.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp3j33mu4o.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        else:\n            count += 1\n\
    \    return count\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ string and returns the number of times each character appears in the string.\
    \ For example, the string 'abracadabra' would return {'a': 2, 'b':2, 'c':1, 'd':1,\
    \ 'r':2}.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpv7d68jrj.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpv7d68jrj.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \n        count_distinct_characters(string::String)::Int64\n    \n    if string\
    \ == \"\"\n        count_distinct_characters = 1\n    else\n        count_distinct_characters\
    \ = \n            count_distinct_characters(string::String)::Int64 + \n      \
    \      count_distinct_characters(string::String)::Int64\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string and returns the number\
    \ of times each character appears in the string. For example, given the string\
    \ \"Jerry Jerry Jerry\" the function should return {\"Jerry\" => 3, \"r\" => 2,\
    \ \"e\" => 3}\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp37sc9agr.jl:19\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp37sc9agr.jl:19\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2xv8hmwn.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp2xv8hmwn.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp2xv8hmwn.jl:8\n   [2] top-level scope at /tmp/tmp2xv8hmwn.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2xv8hmwn.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp2xv8hmwn.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp2xv8hmwn.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp2xv8hmwn.jl:8\n   [2] top-level scope at /tmp/tmp2xv8hmwn.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2xv8hmwn.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp2xv8hmwn.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp2xv8hmwn.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp2xv8hmwn.jl:8\n   [2] top-level scope at /tmp/tmp2xv8hmwn.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2xv8hmwn.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp2xv8hmwn.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp2xv8hmwn.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp2xv8hmwn.jl:8\n   [2] top-level scope at /tmp/tmp2xv8hmwn.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2xv8hmwn.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp2xv8hmwn.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp2xv8hmwn.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp2xv8hmwn.jl:8\n   [2] top-level scope at /tmp/tmp2xv8hmwn.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2xv8hmwn.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2xv8hmwn.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppccotwf9.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmppccotwf9.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmppccotwf9.jl:8\n   [2] top-level scope at /tmp/tmppccotwf9.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppccotwf9.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmppccotwf9.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmppccotwf9.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmppccotwf9.jl:8\n   [2] top-level scope at /tmp/tmppccotwf9.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppccotwf9.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmppccotwf9.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmppccotwf9.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmppccotwf9.jl:8\n   [2] top-level scope at /tmp/tmppccotwf9.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppccotwf9.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmppccotwf9.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmppccotwf9.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmppccotwf9.jl:8\n   [2] top-level scope at /tmp/tmppccotwf9.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppccotwf9.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmppccotwf9.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmppccotwf9.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmppccotwf9.jl:8\n   [2] top-level scope at /tmp/tmppccotwf9.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppccotwf9.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppccotwf9.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isDigit():\n          \
    \  count += 1\n        elif c.isSpace():\n            count += 1\n    return count\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=string,haskell |>\n<code>\nimport Data.List\n\
    import Data.Char\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbwvng1se.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpbwvng1se.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    \"\"\"\n    Count\
    \ the distinct characters in a string\n    \n    Arguments:\n        string {String}\
    \ -- The string to be counted\n    \n    Returns:\n        Int64 -- The number\
    \ of distinct characters in the string\n    \"\"\"\n    \n    count = 0\n    for\
    \ char in string:\n        if char.isalpha():\n            count += 1\n    return\
    \ count\n</cell>\n<text>\nExercise 3: Write a function that takes a string and\
    \ returns the number of uppercase letters in the string\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8ku7jrnp.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp8ku7jrnp.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = Set.new()\n    for c in string:\n        count_distinct_characters.add(c)\n\
    \    return count_distinct_characters.length\n</code>\n<|/ a dscore=1 |>\n<| a\
    \ tags=string,haskell,algorithm |>\n<code>\nimport Data.List\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9m30gf2g.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp9m30gf2g.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    \"\"\"\n    Count\
    \ the distinct characters in a string\n    \n    >>> count_distinct_characters('xyzXYZ')\n\
    \    3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpypl8hjj7.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpypl8hjj7.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpypl8hjj7.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpslz41y9h.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpslz41y9h.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpslz41y9h.jl:8\n   [2] top-level scope at /tmp/tmpslz41y9h.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpslz41y9h.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpslz41y9h.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpslz41y9h.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpslz41y9h.jl:8\n   [2] top-level scope at /tmp/tmpslz41y9h.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpslz41y9h.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpslz41y9h.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpslz41y9h.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpslz41y9h.jl:8\n   [2] top-level scope at /tmp/tmpslz41y9h.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpslz41y9h.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpslz41y9h.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpslz41y9h.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpslz41y9h.jl:8\n   [2] top-level scope at /tmp/tmpslz41y9h.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpslz41y9h.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpslz41y9h.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpslz41y9h.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpslz41y9h.jl:8\n   [2] top-level scope at /tmp/tmpslz41y9h.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpslz41y9h.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpslz41y9h.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwb_co9ia.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpwb_co9ia.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpwb_co9ia.jl:8\n   [2] top-level scope at /tmp/tmpwb_co9ia.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwb_co9ia.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpwb_co9ia.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpwb_co9ia.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpwb_co9ia.jl:8\n   [2] top-level scope at /tmp/tmpwb_co9ia.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwb_co9ia.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpwb_co9ia.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpwb_co9ia.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpwb_co9ia.jl:8\n   [2] top-level scope at /tmp/tmpwb_co9ia.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwb_co9ia.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpwb_co9ia.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpwb_co9ia.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpwb_co9ia.jl:8\n   [2] top-level scope at /tmp/tmpwb_co9ia.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwb_co9ia.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpwb_co9ia.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpwb_co9ia.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpwb_co9ia.jl:8\n   [2] top-level scope at /tmp/tmpwb_co9ia.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwb_co9ia.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwb_co9ia.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \n        count_distinct_characters(\n            string.map(\n          \
    \      char::Char\n            )\n        )\n    return count_distinct_characters\n\
    </code>\n<|/ a tags=haskell,functional-programming |>\n<| c |>\nI like your solution,\
    \ but I believe it can be simplified a bit. `count_distinct_characters = length\
    \ . map toLower` would do the same thing.\n<|/ c |>\n<| c |>\nYes, that's true.\
    \ Thanks.\n<|/ c |>\n<| a dscore=2 |>\n<code>\nimport Data.Char (toLower)\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzg52_04u.jl:15\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpzg52_04u.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcz2uo6en.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpcz2uo6en.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpcz2uo6en.jl:8\n   [2] top-level scope at /tmp/tmpcz2uo6en.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcz2uo6en.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpcz2uo6en.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpcz2uo6en.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpcz2uo6en.jl:8\n   [2] top-level scope at /tmp/tmpcz2uo6en.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcz2uo6en.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpcz2uo6en.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpcz2uo6en.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpcz2uo6en.jl:8\n   [2] top-level scope at /tmp/tmpcz2uo6en.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcz2uo6en.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpcz2uo6en.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpcz2uo6en.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpcz2uo6en.jl:8\n   [2] top-level scope at /tmp/tmpcz2uo6en.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcz2uo6en.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpcz2uo6en.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpcz2uo6en.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpcz2uo6en.jl:8\n   [2] top-level scope at /tmp/tmpcz2uo6en.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcz2uo6en.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcz2uo6en.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = \n        count_distinct_characters_helper(string)\n    \n    return count_distinct_characters\n\
    end count_distinct_characters\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"count_distinct_characters\" after\
    \ end of expression\nStacktrace:\n [1] top-level scope at /tmp/tmpd_e36xoq.jl:13\n\
    \ [2] include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpd_e36xoq.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp31q_hap8.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp31q_hap8.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp31q_hap8.jl:8\n   [2] top-level scope at /tmp/tmp31q_hap8.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp31q_hap8.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp31q_hap8.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp31q_hap8.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp31q_hap8.jl:8\n   [2] top-level scope at /tmp/tmp31q_hap8.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp31q_hap8.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp31q_hap8.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp31q_hap8.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp31q_hap8.jl:8\n   [2] top-level scope at /tmp/tmp31q_hap8.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp31q_hap8.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp31q_hap8.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp31q_hap8.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp31q_hap8.jl:8\n   [2] top-level scope at /tmp/tmp31q_hap8.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp31q_hap8.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp31q_hap8.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp31q_hap8.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp31q_hap8.jl:8\n   [2] top-level scope at /tmp/tmp31q_hap8.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp31q_hap8.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp31q_hap8.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpman3x55d.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpman3x55d.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpman3x55d.jl:8\n   [2] top-level scope at /tmp/tmpman3x55d.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpman3x55d.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpman3x55d.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpman3x55d.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpman3x55d.jl:8\n   [2] top-level scope at /tmp/tmpman3x55d.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpman3x55d.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpman3x55d.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpman3x55d.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpman3x55d.jl:8\n   [2] top-level scope at /tmp/tmpman3x55d.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpman3x55d.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpman3x55d.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpman3x55d.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpman3x55d.jl:8\n   [2] top-level scope at /tmp/tmpman3x55d.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpman3x55d.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpman3x55d.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpman3x55d.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpman3x55d.jl:8\n   [2] top-level scope at /tmp/tmpman3x55d.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpman3x55d.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpman3x55d.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters('Jerry')\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of distinct characters\
    \ in a string that appear in another string.\nusing Test\n\n@testset begin\n\n\
    candidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcenp9eeu.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpcenp9eeu.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp63hns_qe.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp63hns_qe.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp63hns_qe.jl:8\n   [2] top-level scope at /tmp/tmp63hns_qe.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp63hns_qe.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp63hns_qe.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp63hns_qe.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp63hns_qe.jl:8\n   [2] top-level scope at /tmp/tmp63hns_qe.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp63hns_qe.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp63hns_qe.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp63hns_qe.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp63hns_qe.jl:8\n   [2] top-level scope at /tmp/tmp63hns_qe.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp63hns_qe.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp63hns_qe.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp63hns_qe.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp63hns_qe.jl:8\n   [2] top-level scope at /tmp/tmp63hns_qe.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp63hns_qe.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp63hns_qe.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp63hns_qe.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp63hns_qe.jl:8\n   [2] top-level scope at /tmp/tmp63hns_qe.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp63hns_qe.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp63hns_qe.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        else:\n            count += 1\n\
    \    return count\n</code>\n<|/ a tags=string,haskell |>\n<| c |>\nI like this\
    \ solution, but I wonder if there is a way to do it without having to use recursion.\n\
    <|/ c |>\n<| c |>\nI agree with you, this is probably the most efficient solution.\
    \ I'm just trying to show how to do it without recursion.\n<|/ c |>\n<| c |>\n\
    I added a solution without recursion.\n<|/ c |>\n<| c |>\nI like your solution,\
    \ but I wonder if there is a way to do it without recursion.\n<|/ c |>\n<| c |>\n\
    I added a solution without recursion.\n<|/ c |>\n<| a |>\n<code>\nimport Data.List\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmppvglscq4.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmppvglscq4.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        else:\n            count += 1\n\
    \    return count\n</cell>\n<text>\nExercise 3\nWrite a function that takes a\
    \ string and returns the number of characters in the string that are uppercase\
    \ and lowercase. For example, count_distinct_characters('xyzXYZ') should return\
    \ 3.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp85b72_vl.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp85b72_vl.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        else:\n            count += 1\n\
    \    return count\n</cell>\n<text>\nExercise 10\nWrite a function that takes a\
    \ string and returns the number of times each character appears in the string.\
    \ For example, if the string is 'Jerry', the function should return {'J':1, 'e':2,\
    \ 'r':1}.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7r205a9z.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp7r205a9z.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,0,0)\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters('Jerry')\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string and returns the number\
    \ of characters in that string that occur more than once.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1spswik6.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp1spswik6.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpztia8lkp.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpztia8lkp.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpztia8lkp.jl:8\n   [2] top-level scope at /tmp/tmpztia8lkp.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpztia8lkp.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpztia8lkp.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpztia8lkp.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpztia8lkp.jl:8\n   [2] top-level scope at /tmp/tmpztia8lkp.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpztia8lkp.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpztia8lkp.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpztia8lkp.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpztia8lkp.jl:8\n   [2] top-level scope at /tmp/tmpztia8lkp.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpztia8lkp.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpztia8lkp.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpztia8lkp.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpztia8lkp.jl:8\n   [2] top-level scope at /tmp/tmpztia8lkp.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpztia8lkp.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpztia8lkp.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpztia8lkp.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpztia8lkp.jl:8\n   [2] top-level scope at /tmp/tmpztia8lkp.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpztia8lkp.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpztia8lkp.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = \n        count_distinct_characters(string, 0, string.length)\n    \n    return\
    \ count_distinct_characters\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwin62jq2.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  type String has no field length\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] count_distinct_characters(::String)\
    \ at /tmp/tmpwin62jq2.jl:9\n   [3] top-level scope at /tmp/tmpwin62jq2.jl:19\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwin62jq2.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpwin62jq2.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  type String has no field length\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] count_distinct_characters(::String) at /tmp/tmpwin62jq2.jl:9\n\
    \   [3] top-level scope at /tmp/tmpwin62jq2.jl:20\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwin62jq2.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpwin62jq2.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  type String has no field length\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] count_distinct_characters(::String)\
    \ at /tmp/tmpwin62jq2.jl:9\n   [3] top-level scope at /tmp/tmpwin62jq2.jl:21\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwin62jq2.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpwin62jq2.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  type String has no field length\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] count_distinct_characters(::String)\
    \ at /tmp/tmpwin62jq2.jl:9\n   [3] top-level scope at /tmp/tmpwin62jq2.jl:22\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwin62jq2.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmpwin62jq2.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  type String has no field length\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] count_distinct_characters(::String)\
    \ at /tmp/tmpwin62jq2.jl:9\n   [3] top-level scope at /tmp/tmpwin62jq2.jl:23\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwin62jq2.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwin62jq2.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfku48o1y.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpfku48o1y.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpfku48o1y.jl:8\n   [2] top-level scope at /tmp/tmpfku48o1y.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfku48o1y.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpfku48o1y.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpfku48o1y.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpfku48o1y.jl:8\n   [2] top-level scope at /tmp/tmpfku48o1y.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfku48o1y.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpfku48o1y.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpfku48o1y.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpfku48o1y.jl:8\n   [2] top-level scope at /tmp/tmpfku48o1y.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfku48o1y.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpfku48o1y.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpfku48o1y.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpfku48o1y.jl:8\n   [2] top-level scope at /tmp/tmpfku48o1y.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfku48o1y.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpfku48o1y.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpfku48o1y.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpfku48o1y.jl:8\n   [2] top-level scope at /tmp/tmpfku48o1y.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfku48o1y.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfku48o1y.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isAlpha():\n          \
    \  count += 1\n    return count\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that takes a string and returns a string where all characters are capitalized.\
    \ \nFor example, given 'hello', your function should return 'Hello'.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8ljjr1v2.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp8ljjr1v2.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = String.length(string)\n    return count_distinct_characters\nend count_distinct_characters\n\
    </cell>\n<code language=julia-1.3>\ncount_distinct_characters('xyzXYZ')\n</cell>\n\
    <code language=julia-1.3>\ncount_distinct_characters('Jerry')\n</cell>\n<text>\n\
    Write a function that takes a string and returns the number of characters that\
    \ are not repeated in the string.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"count_distinct_characters\" after\
    \ end of expression\nStacktrace:\n [1] top-level scope at /tmp/tmp0c6nnxaf.jl:10\n\
    \ [2] include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp0c6nnxaf.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \"\"\n    for character in string\n        count_distinct_characters = count_distinct_characters\
    \ + character\n    end\n    return count_distinct_characters\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_distinct_characters(\"hello\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string and returns the number of times\
    \ the character \"e\" occurs in the string.\nusing Test\n\n@testset begin\n\n\
    candidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_9oe8l9s.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp_9oe8l9s.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwcc0e3ni.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpwcc0e3ni.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpwcc0e3ni.jl:8\n   [2] top-level scope at /tmp/tmpwcc0e3ni.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwcc0e3ni.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpwcc0e3ni.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpwcc0e3ni.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpwcc0e3ni.jl:8\n   [2] top-level scope at /tmp/tmpwcc0e3ni.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwcc0e3ni.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpwcc0e3ni.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpwcc0e3ni.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpwcc0e3ni.jl:8\n   [2] top-level scope at /tmp/tmpwcc0e3ni.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwcc0e3ni.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpwcc0e3ni.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpwcc0e3ni.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpwcc0e3ni.jl:8\n   [2] top-level scope at /tmp/tmpwcc0e3ni.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwcc0e3ni.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpwcc0e3ni.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpwcc0e3ni.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpwcc0e3ni.jl:8\n   [2] top-level scope at /tmp/tmpwcc0e3ni.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwcc0e3ni.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwcc0e3ni.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = string.count{|x| x <=> ' '}\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters('Jerry')\n</cell>\n\
    <text>\nExercise: Write a function that takes a string and returns the number\
    \ of distinct characters (regardless of case) does it consist of. For example,\
    \ given \"xyzXYZ\", it should return 3.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"|\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkbrki02p.jl:9\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpkbrki02p.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for character in string\n        if character in string.lowercase\n        \
    \    count += 1\n        else if character in string.uppercase\n            count\
    \ += 1\n        else if character in string.digits\n            count += 1\n \
    \       else if character in string.special\n            count += 1\n        else\
    \ if character in string.whitespace\n            count += 1\n        else if character\
    \ in string.printable\n            count += 1\n        else\n            count\
    \ += 0\n    return count\n</code>\n<|/ a dscore=0 |>\n<| a tags=string,haskell\
    \ |>\n<code>\nimport Data.List\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpoxrtt449.jl:13\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpoxrtt449.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = string.count{|x| x != ' '}\n    \n    return count_distinct_characters\nend\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters('xyzXYZ')\n</cell>\n\
    <code language=julia-1.5>\ncount_distinct_characters('Jerry')\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a string and returns the number of characters\
    \ in the string that are spaces.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"|\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp94_vqo1c.jl:9\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp94_vqo1c.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = String.length(string)\n    \n    for char in string\n        count_distinct_characters\
    \ = count_distinct_characters - String.length(String.lower(char))\n        count_distinct_characters\
    \ = count_distinct_characters - String.length(String.upper(char))\n        \n\
    \    return count_distinct_characters\n</code>\n<|/ a tags=string,haskell,count\
    \ |>\n<| c |>\nThis doesn't work if you have a string with multiple repeated characters.\
    \ For example, `count_distinct_characters(\"abcabc\")` returns `3`, but should\
    \ be `2`.\n<|/ c |>\n<| c |>\nYes, I noticed that and fixed it now. Thanks!\n\
    <|/ c |>\n<| a tags=string,haskell,count |>\n<code>\nimport Data.List\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp95uil3wk.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp95uil3wk.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = \n        count_distinct_characters(string.lower(), string.upper())\n    \n\
    \    return count_distinct_characters\nend\n</cell>\n<code language=julia-1.5>\n\
    count_distinct_characters(\"Jerry\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of characters in the string that\
    \ are uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp008f61_2.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp008f61_2.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    \"\"\"\n    Count\
    \ the distinct characters in a string\n    \n    >>> count_distinct_characters('xyzXYZ')\n\
    \    3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpku42qqdd.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpku42qqdd.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpku42qqdd.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = string.count\n    return count_distinct_characters(string)\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpw5znx10o.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpw5znx10o.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isDigit():\n          \
    \  count += 1\n        elif c.isSpace():\n            count += 1\n    return count\n\
    </code>\n<|/ a tags=string,haskell,count,character |>\n<| a tags=string,haskell,count,character\
    \ |>\nI like using Data.Char.\n<code>\nimport Data.Char\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyw_i0003.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpyw_i0003.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = string.count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpf8qr0ain.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  type String has no field count\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] count_distinct_characters(::String)\
    \ at /tmp/tmpf8qr0ain.jl:8\n   [3] top-level scope at /tmp/tmpf8qr0ain.jl:15\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpf8qr0ain.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpf8qr0ain.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  type String has no field count\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] count_distinct_characters(::String) at /tmp/tmpf8qr0ain.jl:8\n\
    \   [3] top-level scope at /tmp/tmpf8qr0ain.jl:16\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpf8qr0ain.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpf8qr0ain.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  type String has no field count\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] count_distinct_characters(::String)\
    \ at /tmp/tmpf8qr0ain.jl:8\n   [3] top-level scope at /tmp/tmpf8qr0ain.jl:17\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpf8qr0ain.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpf8qr0ain.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  type String has no field count\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] count_distinct_characters(::String)\
    \ at /tmp/tmpf8qr0ain.jl:8\n   [3] top-level scope at /tmp/tmpf8qr0ain.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpf8qr0ain.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpf8qr0ain.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  type String has no field count\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] count_distinct_characters(::String)\
    \ at /tmp/tmpf8qr0ain.jl:8\n   [3] top-level scope at /tmp/tmpf8qr0ain.jl:19\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpf8qr0ain.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf8qr0ain.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplb76ijyg.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmplb76ijyg.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmplb76ijyg.jl:8\n   [2] top-level scope at /tmp/tmplb76ijyg.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplb76ijyg.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmplb76ijyg.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmplb76ijyg.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmplb76ijyg.jl:8\n   [2] top-level scope at /tmp/tmplb76ijyg.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplb76ijyg.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmplb76ijyg.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmplb76ijyg.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmplb76ijyg.jl:8\n   [2] top-level scope at /tmp/tmplb76ijyg.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplb76ijyg.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmplb76ijyg.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmplb76ijyg.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmplb76ijyg.jl:8\n   [2] top-level scope at /tmp/tmplb76ijyg.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplb76ijyg.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmplb76ijyg.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmplb76ijyg.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmplb76ijyg.jl:8\n   [2] top-level scope at /tmp/tmplb76ijyg.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplb76ijyg.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplb76ijyg.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpo2ec5rsy.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpo2ec5rsy.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpo2ec5rsy.jl:8\n   [2] top-level scope at /tmp/tmpo2ec5rsy.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo2ec5rsy.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpo2ec5rsy.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpo2ec5rsy.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpo2ec5rsy.jl:8\n   [2] top-level scope at /tmp/tmpo2ec5rsy.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo2ec5rsy.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpo2ec5rsy.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpo2ec5rsy.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpo2ec5rsy.jl:8\n   [2] top-level scope at /tmp/tmpo2ec5rsy.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo2ec5rsy.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpo2ec5rsy.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpo2ec5rsy.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpo2ec5rsy.jl:8\n   [2] top-level scope at /tmp/tmpo2ec5rsy.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo2ec5rsy.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpo2ec5rsy.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpo2ec5rsy.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpo2ec5rsy.jl:8\n   [2] top-level scope at /tmp/tmpo2ec5rsy.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo2ec5rsy.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo2ec5rsy.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpoi01hueh.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpoi01hueh.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpoi01hueh.jl:8\n   [2] top-level scope at /tmp/tmpoi01hueh.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoi01hueh.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpoi01hueh.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpoi01hueh.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpoi01hueh.jl:8\n   [2] top-level scope at /tmp/tmpoi01hueh.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoi01hueh.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpoi01hueh.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpoi01hueh.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpoi01hueh.jl:8\n   [2] top-level scope at /tmp/tmpoi01hueh.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoi01hueh.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpoi01hueh.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpoi01hueh.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpoi01hueh.jl:8\n   [2] top-level scope at /tmp/tmpoi01hueh.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoi01hueh.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpoi01hueh.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpoi01hueh.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpoi01hueh.jl:8\n   [2] top-level scope at /tmp/tmpoi01hueh.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoi01hueh.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoi01hueh.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\"\n \
    \       0\n    else\n        count_distinct_characters(string[1:end-1]) + count_distinct_characters(string[end])\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that counts the number of times\
    \ a substring appears in a string. For example, count_substring('abcabc', 'abc')\
    \ should return 3.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpr1qylzo0.jl:13\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpr1qylzo0.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = count(string) |> count\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a string and returns the number of times each character appears in\
    \ the string. For example, given \"abcabc\", your function should return {\"a\"\
    \ => 1, \"b\" => 2, \"c\" => 3}.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpazggy4as.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpazggy4as.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,0,0)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdvs6w1no.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpdvs6w1no.jl:8\n\
    \   [2] top-level scope at /tmp/tmpdvs6w1no.jl:15\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdvs6w1no.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpdvs6w1no.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpdvs6w1no.jl:8\n\
    \   [2] top-level scope at /tmp/tmpdvs6w1no.jl:16\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdvs6w1no.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpdvs6w1no.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpdvs6w1no.jl:8\n\
    \   [2] top-level scope at /tmp/tmpdvs6w1no.jl:17\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdvs6w1no.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpdvs6w1no.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpdvs6w1no.jl:8\n\
    \   [2] top-level scope at /tmp/tmpdvs6w1no.jl:18\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdvs6w1no.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpdvs6w1no.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpdvs6w1no.jl:8\n\
    \   [2] top-level scope at /tmp/tmpdvs6w1no.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdvs6w1no.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdvs6w1no.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = Set.new()\n    for c in string:\n        count_distinct_characters.add(c)\n\
    \    return count_distinct_characters.length\n</code>\n<|/ a tags=string,haskell,algorithm\
    \ |>\n<| c |>\nThis doesn't work if there are repeated characters in the string.\n\
    <|/ c |>\n<| c |>\nI believe this solution is O(n^2) in the worst case. `count_distinct_characters`\
    \ has O(n) complexity in the worst case. `count_distinct_characters` has O(n)\
    \ complexity in the best case. `count_distinct_characters` has O(n) complexity\
    \ in the average case. `count_distinct_characters` has O(n) complexity in the\
    \ best case when `count_distinct_characters` has O(n) complexity in the worst\
    \ case.\n<|/ c |>\n<| c |>\nI believe this solution is O(n) in the worst case.\
    \ `count_distinct_characters` has O(n) complexity in the worst case. `count_distinct_characters`\
    \ has O(n) complexity in the best case. `count_distinct_characters` has O(n) complexity\
    \ in the average case. `count_distinct_characters` has O(n) complexity in the\
    \ best case when `count_distinct_characters` has O(n) complexity in the worst\
    \ case.\n<|/ c |>\n<| c |>\nI believe this solution is O(n) in the worst case.\
    \ `count_distinct_characters` has O(n) complexity in the worst case. `count_distinct_characters`\
    \ has O(n) complexity in the best case. `count_distinct_characters` has O(n) complexity\
    \ in the average case. `count_distinct_characters` has O(n) complexity in the\
    \ best case when `count_distinct_characters` has O(n) complexity in the worst\
    \ case.\n<|/ c |>\n<| c |>\nI believe this solution is O(n) in the worst case.\
    \ `count_distinct_characters` has O(n) complexity in the worst case. `count_distinct_characters`\
    \ has O(n) complexity in the best case. `count_distinct_characters` has O(n) complexity\
    \ in the average case. `count_distinct_characters` has O(n) complexity in the\
    \ best case when `count_distinct_characters` has O(n) complexity in the worst\
    \ case.\n<|/ c |>\n<| a |>\nI believe this solution is O(n) in the worst case.\
    \ count_distinct_characters has O(n) complexity in the \nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2zio28iw.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp2zio28iw.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\"\n \
    \       0\n    else\n        count_distinct_characters(string[1:end-1]) + count_distinct_characters(string[end])\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of characters in the string that are uppercase letters.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpeatq37st.jl:13\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpeatq37st.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \"\"\n    for character in string\n        count_distinct_characters = count_distinct_characters\
    \ + character\n    end\n    return count_distinct_characters.length\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7ct7i8fs.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  type String has no field length\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] count_distinct_characters(::String)\
    \ at /tmp/tmp7ct7i8fs.jl:12\n   [3] top-level scope at /tmp/tmp7ct7i8fs.jl:19\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp7ct7i8fs.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp7ct7i8fs.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching +(::String, ::Char)\n  Closest\
    \ candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:529\n\
    \    +(!Matched::Integer, ::AbstractChar) at char.jl:224\n  Stacktrace:\n   [1]\
    \ count_distinct_characters(::String) at /tmp/tmp7ct7i8fs.jl:10\n   [2] top-level\
    \ scope at /tmp/tmp7ct7i8fs.jl:20\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7ct7i8fs.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp7ct7i8fs.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching +(::String, ::Char)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    +(!Matched::Integer, ::AbstractChar) at char.jl:224\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmp7ct7i8fs.jl:10\n\
    \   [2] top-level scope at /tmp/tmp7ct7i8fs.jl:21\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7ct7i8fs.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp7ct7i8fs.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching +(::String, ::Char)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    +(!Matched::Integer, ::AbstractChar) at char.jl:224\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmp7ct7i8fs.jl:10\n\
    \   [2] top-level scope at /tmp/tmp7ct7i8fs.jl:22\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7ct7i8fs.jl:18\n  \ntest set: Error During\
    \ Test at /tmp/tmp7ct7i8fs.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching +(::String, ::Char)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at operators.jl:529\n    +(!Matched::Integer, ::AbstractChar) at char.jl:224\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmp7ct7i8fs.jl:10\n\
    \   [2] top-level scope at /tmp/tmp7ct7i8fs.jl:23\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7ct7i8fs.jl:18\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7ct7i8fs.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = \n        string.\n        foldl(\n            0,\n            |acc, c| acc\
    \ + if c.isUpperCase then 1 else 0,\n            String.Chars.toList\n       \
    \ )\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<text>\nExercise 2\nWrite a function that counts the number of times\
    \ a character appears in a string.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"|\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0804900i.jl:13\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp0804900i.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2pr78zit.jl:16\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp2pr78zit.jl:9\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp2pr78zit.jl:9\n   [2] top-level scope at /tmp/tmp2pr78zit.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2pr78zit.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp2pr78zit.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp2pr78zit.jl:9\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp2pr78zit.jl:9\n   [2] top-level scope at /tmp/tmp2pr78zit.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2pr78zit.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp2pr78zit.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp2pr78zit.jl:9\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp2pr78zit.jl:9\n   [2] top-level scope at /tmp/tmp2pr78zit.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2pr78zit.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp2pr78zit.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp2pr78zit.jl:9\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp2pr78zit.jl:9\n   [2] top-level scope at /tmp/tmp2pr78zit.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2pr78zit.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmp2pr78zit.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp2pr78zit.jl:9\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp2pr78zit.jl:9\n   [2] top-level scope at /tmp/tmp2pr78zit.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2pr78zit.jl:15\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2pr78zit.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe5x2lsn0.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpe5x2lsn0.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpe5x2lsn0.jl:8\n   [2] top-level scope at /tmp/tmpe5x2lsn0.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe5x2lsn0.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpe5x2lsn0.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpe5x2lsn0.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpe5x2lsn0.jl:8\n   [2] top-level scope at /tmp/tmpe5x2lsn0.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe5x2lsn0.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpe5x2lsn0.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpe5x2lsn0.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpe5x2lsn0.jl:8\n   [2] top-level scope at /tmp/tmpe5x2lsn0.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe5x2lsn0.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpe5x2lsn0.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpe5x2lsn0.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpe5x2lsn0.jl:8\n   [2] top-level scope at /tmp/tmpe5x2lsn0.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe5x2lsn0.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpe5x2lsn0.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpe5x2lsn0.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpe5x2lsn0.jl:8\n   [2] top-level scope at /tmp/tmpe5x2lsn0.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe5x2lsn0.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe5x2lsn0.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abc\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abcXYZ\")\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abcXYZ\", 0)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abcXYZ\", 2)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abcXYZ\", 3)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abcXYZ\", 4)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abcXYZ\", 5)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abcXYZ\", 6)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abcXYZ\", 7)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abcXYZ\", 8)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abcXYZ\", 9)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abcXYZ\", 10)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abcXYZ\", 11)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abcXYZ\", 12)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abcXYZ\", 13)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abcXYZ\", 14)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abcXYZ\", 15)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abcXYZ\", 16)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abcXYZ\", 17)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abcXYZ\", 18)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abcXYZ\", 19)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abcXYZ\", 20)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abcXYZ\", 21)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abcXYZ\", 22)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abcXYZ\", 23)\n\
    </cell\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzkm9agp_.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpzkm9agp_.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\"\n \
    \       0\n    else\n        count_distinct_characters(string[1:end-1]) + count_distinct_characters(string[end])\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abc\")\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the number of times each character appears in the string.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjaj6fy9s.jl:13\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpjaj6fy9s.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\n@code_native count_distinct_characters('xyzXYZ')\n\
    </cell>\n<code language=julia-1.5>\n@code_native count_distinct_characters('Jerry')\n\
    </cell>\n<text>\nExercise 3\nWrite a function that counts the number of times\
    \ a character appears in a string. For example, count_characters('xyzXYZ') should\
    \ return 3.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpd5i75_cz.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpd5i75_cz.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = String.length(string)\n    for character in string.chars()\n        count_distinct_characters\
    \ = count_distinct_characters - String.length(String.lower(character))\n     \
    \   count_distinct_characters = count_distinct_characters - String.length(String.upper(character))\n\
    \    return count_distinct_characters\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\ndef count_distinct_characters(string::String)::Int64\n    count_distinct_characters\
    \ = String.length(string)\n    for character in string.chars()\n        count_distinct_characters\
    \ = count_distinct_characters - String.length(String.lower(character))\n     \
    \   count_distinct_characters = count_distinct_characters - String.length(String.upper(character))\n\
    \    return count_distinct_characters\n</code>\n<|/ a tags=string,haskell |>\n\
    <| c |>\nWhile this code may answer the question, providing additional context\
    \ regarding why and/or how this code answers the question improves its long-term\
    \ value.\n<|/ c |>\n<| a tags=string,haskell |>\n<code>\nimport Data.List\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6j0echt4.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp6j0echt4.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\"\n \
    \       0\n    else\n        count_distinct_characters(string[1:end-1]) + count_distinct_characters(string[end])\n\
    \    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string\
    \ and returns the number of characters in that string that are not in the alphabet\
    \ (including spaces). For example, given the string \"Jerry\" the function should\
    \ return 3.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvezy5bql.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpvezy5bql.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isDigit():\n          \
    \  count += 1\n        elif c.isSpace():\n            count += 1\n    return count\n\
    </code>\n<|/ a tags=string,haskell |>\n<| c |>\nThis doesn't count spaces as distinct\
    \ characters. `count_distinct_characters(\"  \")` returns `1` instead of `2`.\n\
    <|/ c |>\n<| c |>\nI fixed the bug, thanks for pointing it out. Now it returns\
    \ `2` instead of `1`.\n<|/ c |>\n<| a dscore=2 |>\n<code>\nimport Data.List\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpp9lsyzhn.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpp9lsyzhn.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of distinct characters in that string in alphabetical order.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsxmnd976.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpsxmnd976.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\"\n \
    \       0\n    else\n        count_distinct_characters(string[1:end-1]) + count_distinct_characters(string[end])\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvnk565yx.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpvnk565yx.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \"\"\n    for character in string\n        count_distinct_characters = count_distinct_characters\
    \ + character\n    end\n    return count_distinct_characters.length\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_distinct_characters(\"xyzXYZ\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string and returns the number of times\
    \ each character appears in the string.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplo2y_oj2.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmplo2y_oj2.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \n        count_distinct_characters(string.chars)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwo7mb45d.jl:16\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  type String has no field chars\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] count_distinct_characters(::String)\
    \ at /tmp/tmpwo7mb45d.jl:8\n   [3] top-level scope at /tmp/tmpwo7mb45d.jl:16\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwo7mb45d.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpwo7mb45d.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  type String has no field chars\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] count_distinct_characters(::String) at /tmp/tmpwo7mb45d.jl:8\n\
    \   [3] top-level scope at /tmp/tmpwo7mb45d.jl:17\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwo7mb45d.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpwo7mb45d.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  type String has no field chars\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] count_distinct_characters(::String)\
    \ at /tmp/tmpwo7mb45d.jl:8\n   [3] top-level scope at /tmp/tmpwo7mb45d.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwo7mb45d.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpwo7mb45d.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  type String has no field chars\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] count_distinct_characters(::String)\
    \ at /tmp/tmpwo7mb45d.jl:8\n   [3] top-level scope at /tmp/tmpwo7mb45d.jl:19\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwo7mb45d.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpwo7mb45d.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  type String has no field chars\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] count_distinct_characters(::String)\
    \ at /tmp/tmpwo7mb45d.jl:8\n   [3] top-level scope at /tmp/tmpwo7mb45d.jl:20\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpwo7mb45d.jl:15\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwo7mb45d.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = \n        string.map(x => x.toLowerCase |> String.length |> Int64).distinct\n\
    \    \nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(strings)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the number of times each character appears in the string. For example, given\
    \ \"abcde\", it should return [('a', 1), ('b', 1), ('c', 1), ('d', 1), ('e', 2)]\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvhhmus53.jl:13\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpvhhmus53.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ \n    for char in string:\n        if char.isUpper():\n            count +=\
    \ 1\n        elif char.isLower():\n            count += 1\n        elif char.isDigit():\n\
    \            count += 1\n        elif char.isSpace():\n            count += 1\n\
    \        elif char.isAlpha():\n            count += 1\n        elif char.isAlphaNumeric():\n\
    \            count += 1\n        elif char.isPunct():\n            count += 1\n\
    \        elif char.isSymbol():\n            count += 1\n        elif char.isSeparator():\n\
    \            count += 1\n        elif char.isPunctuation():\n            count\
    \ += 1\n        elif char.isWhitespace():\n            count += 1\n        elif\
    \ char.isControl():\n            count += 1\n        elif char.isNewline():\n\
    \            count += 1\n        elif char.isUnicode():\n            count +=\
    \ 1\n        elif char.isASCII():\n            count += 1\n        elif char.isControlCharacter():\n\
    \            count += 1\n        elif char.isPrintable():\n            count +=\
    \ 1\n        elif char.isLineTerminator():\n            count += 1\n        elif\
    \ char.isUnicodeControlCharacter():\n            count += 1\n        elif char.isUnicodeControlCharacter():\n\
    \            count += 1\n        elif char.isUnicodeControlCharacter():\n    \
    \        count += 1\n        elif char.isUnicodeControlCharacter():\n        \
    \    count += 1\n        elif char.isUnicodeControlCharacter():\n            count\
    \ += 1\n        elif char.isUnicodeControlCharacter():\n            count += 1\n\
    \        elif char.isUnicodeControlCharacter():\n            count += 1\n    \
    \    elif char.isUnicodeControlCharacter():\n            count += 1\n        elif\
    \ char.isUnicodeControlCharacter():\n            count += 1\n        elif char.isUnicodeControlCharacter():\n\
    \            count += 1\n        elif char.isUnicodeControlCharacter():\n    \
    \        count += 1\n        elif char.isUnicodeControlCharacter():\n        \
    \    count += 1\n        elif char.isUnicodeControlCharacter():\n            count\
    \ += 1\n        elif char.isUnicodeControlCharacter():\n            count += 1\n\
    \        elif char.isUnicodeControlCharacter():\n            count += 1\n    \
    \    elif char.isUnicodeControlCharacter():\n            count += 1\n        elif\
    \ char.isUnicodeControlCharacter():\n            count += 1\n        elif char.isUnicodeControlCharacter():\n\
    \            count += 1\n        elif char.isUnicodeControlCharacter():\n    \
    \        count += 1\n        elif char.isUnicodeControlCharacter():\n        \
    \    count += 1\n        elif char.isUnicodeControlCharacter():\n            count\
    \ += 1\n        elif char.isUnicodeControlCharacter():\n            count += 1\n\
    \        elif char.isUnicodeControlCharacter():\n            count += 1\n    \
    \    elif char.isUnicodeControlCharacter():\n            count += 1\n        elif\
    \ char.isUnicodeControlCharacter():\n            count += 1\n        elif char.isUnicodeControlCharacter():\n\
    \            count += 1\n        elif char.isUnicodeControlCharacter():\n    \
    \        count += 1\n        elif char.isUnicodeControlCharacter():\n        \
    \    count += 1\n        elif char.isUnicodeControlCharacter():\n            count\
    \ += 1\n        elif char.isUnicodeControlCharacter():\n            count += 1\n\
    \        elif \nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzn22kwg8.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpzn22kwg8.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.1>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<code language=julia-1.1>\ncount_distinct_characters('Jerry')\n</cell>\n\
    <text>\nExercise\nWrite a function that counts the number of distinct characters\
    \ in a string ignoring case.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3iiuuij8.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp3iiuuij8.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp49ccwv2l.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp49ccwv2l.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp49ccwv2l.jl:8\n   [2] top-level scope at /tmp/tmp49ccwv2l.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp49ccwv2l.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp49ccwv2l.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp49ccwv2l.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp49ccwv2l.jl:8\n   [2] top-level scope at /tmp/tmp49ccwv2l.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp49ccwv2l.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp49ccwv2l.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp49ccwv2l.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp49ccwv2l.jl:8\n   [2] top-level scope at /tmp/tmp49ccwv2l.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp49ccwv2l.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp49ccwv2l.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp49ccwv2l.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp49ccwv2l.jl:8\n   [2] top-level scope at /tmp/tmp49ccwv2l.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp49ccwv2l.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp49ccwv2l.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp49ccwv2l.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp49ccwv2l.jl:8\n   [2] top-level scope at /tmp/tmp49ccwv2l.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp49ccwv2l.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp49ccwv2l.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = string.len()\n    for character in string.chars()\n        count_distinct_characters\
    \ = count_distinct_characters - 1\n    end\n    return count_distinct_characters\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsb28zj8t.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  type String has no field len\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] count_distinct_characters(::String)\
    \ at /tmp/tmpsb28zj8t.jl:9\n   [3] top-level scope at /tmp/tmpsb28zj8t.jl:20\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpsb28zj8t.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpsb28zj8t.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  type String has no field len\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] count_distinct_characters(::String) at /tmp/tmpsb28zj8t.jl:9\n\
    \   [3] top-level scope at /tmp/tmpsb28zj8t.jl:21\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpsb28zj8t.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpsb28zj8t.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  type String has no field len\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] count_distinct_characters(::String) at /tmp/tmpsb28zj8t.jl:9\n\
    \   [3] top-level scope at /tmp/tmpsb28zj8t.jl:22\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpsb28zj8t.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpsb28zj8t.jl:23\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  type String has no field len\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] count_distinct_characters(::String) at /tmp/tmpsb28zj8t.jl:9\n\
    \   [3] top-level scope at /tmp/tmpsb28zj8t.jl:23\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpsb28zj8t.jl:19\n  \ntest set: Error During\
    \ Test at /tmp/tmpsb28zj8t.jl:24\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  type String has no field len\n  Stacktrace:\n  \
    \ [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] count_distinct_characters(::String)\
    \ at /tmp/tmpsb28zj8t.jl:9\n   [3] top-level scope at /tmp/tmpsb28zj8t.jl:24\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpsb28zj8t.jl:19\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsb28zj8t.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpoiuwt65g.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpoiuwt65g.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpoiuwt65g.jl:8\n   [2] top-level scope at /tmp/tmpoiuwt65g.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoiuwt65g.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpoiuwt65g.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpoiuwt65g.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpoiuwt65g.jl:8\n   [2] top-level scope at /tmp/tmpoiuwt65g.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoiuwt65g.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpoiuwt65g.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpoiuwt65g.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpoiuwt65g.jl:8\n   [2] top-level scope at /tmp/tmpoiuwt65g.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoiuwt65g.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpoiuwt65g.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpoiuwt65g.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpoiuwt65g.jl:8\n   [2] top-level scope at /tmp/tmpoiuwt65g.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoiuwt65g.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpoiuwt65g.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpoiuwt65g.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpoiuwt65g.jl:8\n   [2] top-level scope at /tmp/tmpoiuwt65g.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoiuwt65g.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoiuwt65g.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpiyplf8kw.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpiyplf8kw.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpiyplf8kw.jl:8\n   [2] top-level scope at /tmp/tmpiyplf8kw.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiyplf8kw.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpiyplf8kw.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpiyplf8kw.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpiyplf8kw.jl:8\n   [2] top-level scope at /tmp/tmpiyplf8kw.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiyplf8kw.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpiyplf8kw.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpiyplf8kw.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpiyplf8kw.jl:8\n   [2] top-level scope at /tmp/tmpiyplf8kw.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiyplf8kw.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpiyplf8kw.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpiyplf8kw.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpiyplf8kw.jl:8\n   [2] top-level scope at /tmp/tmpiyplf8kw.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiyplf8kw.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpiyplf8kw.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpiyplf8kw.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpiyplf8kw.jl:8\n   [2] top-level scope at /tmp/tmpiyplf8kw.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiyplf8kw.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiyplf8kw.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = string.count{|x| x != ' '}\n    \n    return count_distinct_characters\nend\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters('xyzXYZ')\n</cell>\n\
    <code language=julia-1.5>\ncount_distinct_characters('Jerry')\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string and returns the number of times\
    \ each character appears in the string.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"|\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwgdpb0yp.jl:9\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpwgdpb0yp.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"hello\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"hello\", 0)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"hello\", 1)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"hello\", 2)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"hello\", 3)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"hello\", 4)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"hello\", 5)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"hello\", 6)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"hello\", 7)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"hello\", 8)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"hello\", 9)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"hello\", 10)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"hello\", 11)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"hello\", 12)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"hello\", 13)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"hello\", 14)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"hello\", 15)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"hello\", 16)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"hello\", 17)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"hello\", 18)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"hello\", 19)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"hello\", 20)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"hello\", 21)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"hello\", 22)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"hello\", 23)\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"hello\", 24)\n\
    </cell>\n<code language=julia-\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3ua104_v.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp3ua104_v.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpoozbx17b.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpoozbx17b.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpoozbx17b.jl:8\n   [2] top-level scope at /tmp/tmpoozbx17b.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoozbx17b.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpoozbx17b.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpoozbx17b.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpoozbx17b.jl:8\n   [2] top-level scope at /tmp/tmpoozbx17b.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoozbx17b.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpoozbx17b.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpoozbx17b.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpoozbx17b.jl:8\n   [2] top-level scope at /tmp/tmpoozbx17b.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoozbx17b.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpoozbx17b.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpoozbx17b.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpoozbx17b.jl:8\n   [2] top-level scope at /tmp/tmpoozbx17b.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoozbx17b.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpoozbx17b.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpoozbx17b.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpoozbx17b.jl:8\n   [2] top-level scope at /tmp/tmpoozbx17b.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpoozbx17b.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoozbx17b.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = \n        foldl(\n            fun(acc, x) -> acc + count_distinct_characters_helper(x),\n\
    \            0,\n            string\n        )\nend\n</cell>\n<code language=julia-1.3>\n\
    count_distinct_characters('xyzXYZ')\n</cell>\n<code language=julia-1.3>\ncount_distinct_characters('Jerry')\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of distinct characters in that string that appear in alphabetical\
    \ order (ignoring case).\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"fun(acc, x)\" is not a valid function argument\
    \ name\nStacktrace:\n [1] top-level scope at /tmp/tmpr8u4tywy.jl:1\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpr8u4tywy.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,0,0)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdvyuwk1k.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpdvyuwk1k.jl:8\n\
    \   [2] top-level scope at /tmp/tmpdvyuwk1k.jl:15\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdvyuwk1k.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpdvyuwk1k.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpdvyuwk1k.jl:8\n\
    \   [2] top-level scope at /tmp/tmpdvyuwk1k.jl:16\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdvyuwk1k.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpdvyuwk1k.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpdvyuwk1k.jl:8\n\
    \   [2] top-level scope at /tmp/tmpdvyuwk1k.jl:17\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdvyuwk1k.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpdvyuwk1k.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpdvyuwk1k.jl:8\n\
    \   [2] top-level scope at /tmp/tmpdvyuwk1k.jl:18\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdvyuwk1k.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpdvyuwk1k.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpdvyuwk1k.jl:8\n\
    \   [2] top-level scope at /tmp/tmpdvyuwk1k.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdvyuwk1k.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdvyuwk1k.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,0,0)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_cijt1fb.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmp_cijt1fb.jl:8\n\
    \   [2] top-level scope at /tmp/tmp_cijt1fb.jl:15\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_cijt1fb.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp_cijt1fb.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmp_cijt1fb.jl:8\n\
    \   [2] top-level scope at /tmp/tmp_cijt1fb.jl:16\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_cijt1fb.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp_cijt1fb.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmp_cijt1fb.jl:8\n\
    \   [2] top-level scope at /tmp/tmp_cijt1fb.jl:17\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_cijt1fb.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp_cijt1fb.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmp_cijt1fb.jl:8\n\
    \   [2] top-level scope at /tmp/tmp_cijt1fb.jl:18\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_cijt1fb.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp_cijt1fb.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmp_cijt1fb.jl:8\n\
    \   [2] top-level scope at /tmp/tmp_cijt1fb.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_cijt1fb.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_cijt1fb.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = \n        string.filter(!is_space).filter(!is_punctuation).filter(!is_digit).length\n\
    \    \n    return count_distinct_characters\n</code>\n<|/ a dscore=1 |>\n<| a\
    \ tags=string,haskell |>\n<code>\nimport Data.Char\nimport Data.List\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpntffn9hi.jl:13\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpntffn9hi.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,0,0)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprdzb51io.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmprdzb51io.jl:8\n\
    \   [2] top-level scope at /tmp/tmprdzb51io.jl:15\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprdzb51io.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmprdzb51io.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmprdzb51io.jl:8\n\
    \   [2] top-level scope at /tmp/tmprdzb51io.jl:16\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprdzb51io.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmprdzb51io.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmprdzb51io.jl:8\n\
    \   [2] top-level scope at /tmp/tmprdzb51io.jl:17\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprdzb51io.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmprdzb51io.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmprdzb51io.jl:8\n\
    \   [2] top-level scope at /tmp/tmprdzb51io.jl:18\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprdzb51io.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmprdzb51io.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmprdzb51io.jl:8\n\
    \   [2] top-level scope at /tmp/tmprdzb51io.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprdzb51io.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprdzb51io.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp522qzjdo.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp522qzjdo.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp522qzjdo.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        else:\n            count += 1\n\
    \    return count\n</cell>\n<text>\nExercise 4\nWrite a function that takes a\
    \ string and returns the number of distinct characters in that string.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6gmymw2k.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp6gmymw2k.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \n        count_distinct_characters(string.chars)\n    return count_distinct_characters\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1djvw_on.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp1djvw_on.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpim71n5y3.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpim71n5y3.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpim71n5y3.jl:8\n   [2] top-level scope at /tmp/tmpim71n5y3.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpim71n5y3.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpim71n5y3.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpim71n5y3.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpim71n5y3.jl:8\n   [2] top-level scope at /tmp/tmpim71n5y3.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpim71n5y3.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpim71n5y3.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpim71n5y3.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpim71n5y3.jl:8\n   [2] top-level scope at /tmp/tmpim71n5y3.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpim71n5y3.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpim71n5y3.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpim71n5y3.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpim71n5y3.jl:8\n   [2] top-level scope at /tmp/tmpim71n5y3.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpim71n5y3.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpim71n5y3.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpim71n5y3.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpim71n5y3.jl:8\n   [2] top-level scope at /tmp/tmpim71n5y3.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpim71n5y3.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpim71n5y3.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprikiik08.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmprikiik08.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmprikiik08.jl:8\n   [2] top-level scope at /tmp/tmprikiik08.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprikiik08.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmprikiik08.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmprikiik08.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmprikiik08.jl:8\n   [2] top-level scope at /tmp/tmprikiik08.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprikiik08.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmprikiik08.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmprikiik08.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmprikiik08.jl:8\n   [2] top-level scope at /tmp/tmprikiik08.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprikiik08.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmprikiik08.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmprikiik08.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmprikiik08.jl:8\n   [2] top-level scope at /tmp/tmprikiik08.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprikiik08.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmprikiik08.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmprikiik08.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmprikiik08.jl:8\n   [2] top-level scope at /tmp/tmprikiik08.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprikiik08.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprikiik08.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpv504di4v.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpv504di4v.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpv504di4v.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvto79w9v.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpvto79w9v.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpvto79w9v.jl:8\n   [2] top-level scope at /tmp/tmpvto79w9v.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvto79w9v.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpvto79w9v.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpvto79w9v.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpvto79w9v.jl:8\n   [2] top-level scope at /tmp/tmpvto79w9v.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvto79w9v.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpvto79w9v.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpvto79w9v.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpvto79w9v.jl:8\n   [2] top-level scope at /tmp/tmpvto79w9v.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvto79w9v.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpvto79w9v.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpvto79w9v.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpvto79w9v.jl:8\n   [2] top-level scope at /tmp/tmpvto79w9v.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvto79w9v.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpvto79w9v.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpvto79w9v.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpvto79w9v.jl:8\n   [2] top-level scope at /tmp/tmpvto79w9v.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvto79w9v.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvto79w9v.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\"\n \
    \       0\n    else\n        count_distinct_characters(string[1:end-1]) + count_distinct_characters(string[end])\n\
    \    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string\
    \ and returns the number of characters in the string that are not in the alphabet\
    \ (case insensitive).\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkmcxigtt.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpkmcxigtt.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpycks3js1.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpycks3js1.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpycks3js1.jl:8\n   [2] top-level scope at /tmp/tmpycks3js1.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpycks3js1.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpycks3js1.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpycks3js1.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpycks3js1.jl:8\n   [2] top-level scope at /tmp/tmpycks3js1.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpycks3js1.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpycks3js1.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpycks3js1.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpycks3js1.jl:8\n   [2] top-level scope at /tmp/tmpycks3js1.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpycks3js1.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpycks3js1.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpycks3js1.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpycks3js1.jl:8\n   [2] top-level scope at /tmp/tmpycks3js1.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpycks3js1.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpycks3js1.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpycks3js1.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpycks3js1.jl:8\n   [2] top-level scope at /tmp/tmpycks3js1.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpycks3js1.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpycks3js1.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abc\")\n</cell>\n\
    <code language=julia-1.5>\ncount_distinct_characters(\"abC\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_distinct_characters(\"abC\")\n</cell>\n<code language=julia-1.5>\n\
    count_distinct_characters(\"abC\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    abC\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abC\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abC\")\n</cell>\n\
    <code language=julia-1.5>\ncount_distinct_characters(\"abC\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_distinct_characters(\"abC\")\n</cell>\n<code language=julia-1.5>\n\
    count_distinct_characters(\"abC\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    abC\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abC\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abC\")\n</cell>\n\
    <code language=julia-1.5>\ncount_distinct_characters(\"abC\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_distinct_characters(\"abC\")\n</cell>\n<code language=julia-1.5>\n\
    count_distinct_characters(\"abC\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    abC\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abC\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abC\")\n</cell>\n\
    <code language=julia-1.5>\ncount_distinct_characters(\"abC\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_distinct_characters(\"abC\")\n</cell>\n<code language=julia-1.5>\n\
    count_distinct_characters(\"abC\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    abC\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abC\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abC\")\n</cell>\n\
    <code language=julia-1.5>\n\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpw3yefc9l.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpw3yefc9l.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7z50fwjj.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7z50fwjj.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp7z50fwjj.jl:8\n   [2] top-level scope at /tmp/tmp7z50fwjj.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7z50fwjj.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp7z50fwjj.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7z50fwjj.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp7z50fwjj.jl:8\n   [2] top-level scope at /tmp/tmp7z50fwjj.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7z50fwjj.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp7z50fwjj.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7z50fwjj.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp7z50fwjj.jl:8\n   [2] top-level scope at /tmp/tmp7z50fwjj.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7z50fwjj.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp7z50fwjj.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7z50fwjj.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp7z50fwjj.jl:8\n   [2] top-level scope at /tmp/tmp7z50fwjj.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7z50fwjj.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp7z50fwjj.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7z50fwjj.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp7z50fwjj.jl:8\n   [2] top-level scope at /tmp/tmp7z50fwjj.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7z50fwjj.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7z50fwjj.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \"\"\n    for character in string\n        count_distinct_characters = count_distinct_characters\
    \ + character\n    end\n    return count_distinct_characters\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a string and returns the number of times\
    \ the string \"Jerry\" appears in the string. \n    >>> count_times_string(\"\
    Jerry\")\n    1\n    >>> count_times_string(\"JerryJerry\")\n    2\n    >>> count_times_string(\"\
    JerryJerryJerry\")\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9i_eiltc.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp9i_eiltc.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isDigit():\n          \
    \  count += 1\n        elif c.isSpace():\n            count += 1\n    return count\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=string,haskell,count |>\n<code>\nimport\
    \ Data.List\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7_a8h0bg.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp7_a8h0bg.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isDigit():\n          \
    \  count += 1\n        elif c.isSpace():\n            count += 1\n    return count\n\
    </code>\n<|/ a |>\n<| c |>\nThis does not answer the question. He asked for distinct\
    \ characters, not distinct letters.\n<|/ c |>\n<| c |>\nI believe he wants to\
    \ count distinct characters, regardless of case. He also wants to count spaces\
    \ as distinct characters. He also wants to count digits and punctuation as distinct\
    \ characters. He also wants to count the length of the string as distinct characters.\
    \ He also wants to count the length of the string as distinct characters. He also\
    \ wants to count the length of the string as distinct characters. He also wants\
    \ to count the length of the string as distinct characters. He also wants to count\
    \ the length of the string as distinct characters. He also wants to count the\
    \ length of the string as distinct characters. He also wants to count the length\
    \ of the string as distinct characters. He also wants to count the length of the\
    \ string as distinct characters. He also wants to count the length of the string\
    \ as distinct characters. He also wants to count the length of the string as distinct\
    \ characters. He also wants to count the length of the string as distinct characters.\
    \ He also wants to count the length of the string as distinct characters. He also\
    \ wants to count the length of the string as distinct characters. He also wants\
    \ to count the length of the string as distinct characters. He also wants to count\
    \ the length of the string as distinct characters. He also wants to count the\
    \ length of the string as distinct characters. He also wants to count the length\
    \ of the string as distinct characters. He also wants to count the length of the\
    \ string as distinct characters. He also wants to count the length of the string\
    \ as distinct characters. He also wants to count the length of the string as distinct\
    \ characters. He also wants to count the length of the string as distinct characters.\
    \ He also wants to count the length of the string as distinct characters. He also\
    \ wants to count the length of the string as distinct characters. He also wants\
    \ to count the length of the string as distinct characters. He also wants to count\
    \ the length of the string as distinct characters. He also wants to count the\
    \ length of the string as distinct characters. He also wants to count the length\
    \ of the string as distinct characters. He also wants to count the length of the\
    \ string as distinct characters. He also wants to count the length of the string\
    \ as distinct characters. He also wants to count the length of the string \nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvloh074b.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpvloh074b.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters('Jerry')\n</cell>\n\
    <text>\nExercise 2\nWrite a function that counts the number of times a character\
    \ appears in a string. For example, count_characters('xyzXYZ') should return 3.\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2aik7wl_.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp2aik7wl_.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters('Jerry')\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of distinct characters\
    \ in a string that start with a given character. For example, if the given character\
    \ is 'z', then 'z' has 2 distinct characters, 'Z' has 1, and 'ZY' has 3.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyv1uq_2p.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpyv1uq_2p.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = HashSet()\n    for character in string:\n        if character in count_distinct_characters:\n\
    \            count_distinct_characters.remove(character)\n        else:\n    \
    \        count_distinct_characters.add(character)\n    return count_distinct_characters.length\n\
    </code>\n<|/ a tags=string,haskell |>\n<| c |>\n`count_distinct_characters = foldl\
    \ (\\_ x -> x + (x `elem` [False, True])) 0` would be a more efficient solution.\n\
    <|/ c |>\n<| c |>\nI didn't know about `foldl`, thanks for teaching me something\
    \ new!\n<|/ c |>\n<| a tags=string,haskell |>\n<code>\nimport Data.List\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4xv6mksi.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp4xv6mksi.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpt8falozr.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpt8falozr.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpt8falozr.jl:8\n   [2] top-level scope at /tmp/tmpt8falozr.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt8falozr.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpt8falozr.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpt8falozr.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpt8falozr.jl:8\n   [2] top-level scope at /tmp/tmpt8falozr.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt8falozr.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpt8falozr.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpt8falozr.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpt8falozr.jl:8\n   [2] top-level scope at /tmp/tmpt8falozr.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt8falozr.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpt8falozr.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpt8falozr.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpt8falozr.jl:8\n   [2] top-level scope at /tmp/tmpt8falozr.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt8falozr.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpt8falozr.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpt8falozr.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpt8falozr.jl:8\n   [2] top-level scope at /tmp/tmpt8falozr.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpt8falozr.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt8falozr.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    \"\"\"\n    Count\
    \ the number of distinct characters in a string\n    \n    >>> count_distinct_characters('xyzXYZ')\n\
    \    3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsstkv8ds.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpsstkv8ds.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpsstkv8ds.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = String.length(string)\n    \n    for character in string\n        count_distinct_characters\
    \ = count_distinct_characters - String.length(String.lower(character))\n     \
    \   count_distinct_characters = count_distinct_characters - String.length(String.upper(character))\n\
    \        count_distinct_characters = count_distinct_characters - String.length(character)\n\
    \    end\n    \n    return count_distinct_characters\nend\n</cell>\n<code language=julia-1.5>\n\
    count_distinct_characters('xyzXYZ')\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters('Jerry')\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the number of characters in that string that occur more than once.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp99eouvi1.jl:19\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp99eouvi1.jl:19\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = string.len()\n    for character in string.chars()\n        count_distinct_characters\
    \ = count_distinct_characters - 1\n    return count_distinct_characters\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\ndef count_distinct_characters(string::String)::Int64\
    \ \n    count_distinct_characters = string.len()\n    for character in string.chars()\n\
    \        count_distinct_characters = count_distinct_characters - 1\n    return\
    \ count_distinct_characters\n</code>\n<|/ a tags=haskell |>\n<| a dscore=1 |>\n\
    <code>\nimport Data.List\nimport Data.Maybe\nusing Test\n\n@testset begin\n\n\
    candidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqldfgxya.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpqldfgxya.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = String.length(string)\n    \n    return count_distinct_characters\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjky2ypxy.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  type DataType has no field length\n  Stacktrace:\n\
    \   [1] getproperty(::Type{T} where T, ::Symbol) at ./Base.jl:28\n   [2] count_distinct_characters(::String)\
    \ at /tmp/tmpjky2ypxy.jl:9\n   [3] top-level scope at /tmp/tmpjky2ypxy.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpjky2ypxy.jl:17\n  \ntest set: Error During\
    \ Test at /tmp/tmpjky2ypxy.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  type DataType has no field length\n  Stacktrace:\n   [1] getproperty(::Type{T}\
    \ where T, ::Symbol) at ./Base.jl:28\n   [2] count_distinct_characters(::String)\
    \ at /tmp/tmpjky2ypxy.jl:9\n   [3] top-level scope at /tmp/tmpjky2ypxy.jl:19\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpjky2ypxy.jl:17\n  \ntest set: Error During\
    \ Test at /tmp/tmpjky2ypxy.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  type DataType has no field length\n  Stacktrace:\n  \
    \ [1] getproperty(::Type{T} where T, ::Symbol) at ./Base.jl:28\n   [2] count_distinct_characters(::String)\
    \ at /tmp/tmpjky2ypxy.jl:9\n   [3] top-level scope at /tmp/tmpjky2ypxy.jl:20\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpjky2ypxy.jl:17\n  \ntest set: Error During\
    \ Test at /tmp/tmpjky2ypxy.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  type DataType has no field length\n  Stacktrace:\n   [1]\
    \ getproperty(::Type{T} where T, ::Symbol) at ./Base.jl:28\n   [2] count_distinct_characters(::String)\
    \ at /tmp/tmpjky2ypxy.jl:9\n   [3] top-level scope at /tmp/tmpjky2ypxy.jl:21\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpjky2ypxy.jl:17\n  \ntest set: Error During\
    \ Test at /tmp/tmpjky2ypxy.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  type DataType has no field length\n  Stacktrace:\n\
    \   [1] getproperty(::Type{T} where T, ::Symbol) at ./Base.jl:28\n   [2] count_distinct_characters(::String)\
    \ at /tmp/tmpjky2ypxy.jl:9\n   [3] top-level scope at /tmp/tmpjky2ypxy.jl:22\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpjky2ypxy.jl:17\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjky2ypxy.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for character in string\n        count += 1\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_b66j6j6.jl:22\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n   Evaluated: 13 == 5\nStacktrace:\n [1] top-level scope\
    \ at /tmp/tmp_b66j6j6.jl:22\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_b66j6j6.jl:19\ntest set: Test Failed at /tmp/tmp_b66j6j6.jl:23\n\
    \  Expression: candidate(\"aaaaAAAAaaaa\") == 1\n   Evaluated: 12 == 1\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_b66j6j6.jl:23\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_b66j6j6.jl:19\ntest set: Test Failed at /tmp/tmp_b66j6j6.jl:24\n\
    \  Expression: candidate(\"Jerry jERRY JeRRRY\") == 5\n   Evaluated: 18 == 5\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_b66j6j6.jl:24\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_b66j6j6.jl:19\nTest Summary: | Pass  Fail  Total\n\
    test set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_b66j6j6.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsvchlggm.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpsvchlggm.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpsvchlggm.jl:8\n   [2] top-level scope at /tmp/tmpsvchlggm.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsvchlggm.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpsvchlggm.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpsvchlggm.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpsvchlggm.jl:8\n   [2] top-level scope at /tmp/tmpsvchlggm.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsvchlggm.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpsvchlggm.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpsvchlggm.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpsvchlggm.jl:8\n   [2] top-level scope at /tmp/tmpsvchlggm.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsvchlggm.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpsvchlggm.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpsvchlggm.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpsvchlggm.jl:8\n   [2] top-level scope at /tmp/tmpsvchlggm.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsvchlggm.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpsvchlggm.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpsvchlggm.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpsvchlggm.jl:8\n   [2] top-level scope at /tmp/tmpsvchlggm.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsvchlggm.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsvchlggm.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzim5vlza.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpzim5vlza.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpzim5vlza.jl:8\n   [2] top-level scope at /tmp/tmpzim5vlza.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzim5vlza.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpzim5vlza.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpzim5vlza.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpzim5vlza.jl:8\n   [2] top-level scope at /tmp/tmpzim5vlza.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzim5vlza.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpzim5vlza.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpzim5vlza.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpzim5vlza.jl:8\n   [2] top-level scope at /tmp/tmpzim5vlza.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzim5vlza.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpzim5vlza.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpzim5vlza.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpzim5vlza.jl:8\n   [2] top-level scope at /tmp/tmpzim5vlza.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzim5vlza.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpzim5vlza.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpzim5vlza.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpzim5vlza.jl:8\n   [2] top-level scope at /tmp/tmpzim5vlza.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzim5vlza.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzim5vlza.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpibb44_nz.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpibb44_nz.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpibb44_nz.jl:8\n   [2] top-level scope at /tmp/tmpibb44_nz.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpibb44_nz.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpibb44_nz.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpibb44_nz.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpibb44_nz.jl:8\n   [2] top-level scope at /tmp/tmpibb44_nz.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpibb44_nz.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpibb44_nz.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpibb44_nz.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpibb44_nz.jl:8\n   [2] top-level scope at /tmp/tmpibb44_nz.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpibb44_nz.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpibb44_nz.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpibb44_nz.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpibb44_nz.jl:8\n   [2] top-level scope at /tmp/tmpibb44_nz.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpibb44_nz.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpibb44_nz.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpibb44_nz.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpibb44_nz.jl:8\n   [2] top-level scope at /tmp/tmpibb44_nz.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpibb44_nz.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpibb44_nz.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7xmug4gp.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7xmug4gp.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp7xmug4gp.jl:8\n   [2] top-level scope at /tmp/tmp7xmug4gp.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7xmug4gp.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp7xmug4gp.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7xmug4gp.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp7xmug4gp.jl:8\n   [2] top-level scope at /tmp/tmp7xmug4gp.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7xmug4gp.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp7xmug4gp.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7xmug4gp.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp7xmug4gp.jl:8\n   [2] top-level scope at /tmp/tmp7xmug4gp.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7xmug4gp.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp7xmug4gp.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7xmug4gp.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp7xmug4gp.jl:8\n   [2] top-level scope at /tmp/tmp7xmug4gp.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7xmug4gp.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp7xmug4gp.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7xmug4gp.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp7xmug4gp.jl:8\n   [2] top-level scope at /tmp/tmp7xmug4gp.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7xmug4gp.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7xmug4gp.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \n        string.map(x => x.toLowerCase |> String.length |> Int64).distinct\n\
    \    count_distinct_characters\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters('Jerry')\n</cell>\n\
    <text>\nExercise 2\nWrite a function that counts the number of times a substring\
    \ appears in a string. For example, count_substring('abc', 'bc') should return\
    \ 1. count_substring('abc', 'a') should return 2. count_substring('abc', 'z')\
    \ should return 3.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyo86vzhq.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpyo86vzhq.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = Set.new()\n    for character in string:\n        count_distinct_characters.add(character)\n\
    \    return count_distinct_characters.length\n</code>\n<|/ a tags=string,haskell,algorithm\
    \ |>\n<| c |>\n`count_distinct_characters = foldl (\\acc x -> acc + (if x == '\
    \ ' then 1 else 0)) 0` would do the same thing more efficiently.\n<|/ c |>\n<|\
    \ c |>\n`foldl` would also work here, but `foldl` has the advantage of being tail-recursive,\
    \ so it can avoid the extra allocations caused by `if`.\n<|/ c |>\n<| c |>\nI\
    \ agree, `foldl` is definitely the way to go. `foldl` also has the advantage of\
    \ being lazy, so you don't have to worry about `if` being evaluated or not.\n\
    <|/ c |>\n<| c |>\n`foldl` also has the advantage of being tail-recursive, so\
    \ it can avoid the extra allocations caused by `if`.\n<|/ c |>\n<| c |>\n`foldl`\
    \ also has the advantage of being lazy, so you don't have to worry about `if`\
    \ being evaluated or not.\n<|/ c |>\n<| a tags=string,haskell,algorithm |>\n<code>\n\
    import Data.List\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptfn5hmuz.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmptfn5hmuz.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters('Jerry')\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string and returns the number\
    \ of distinct characters in it.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpm3qk3un9.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpm3qk3un9.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\"\n \
    \       return 0 \n    \n    chars = string.chars()\n    chars = chars.filter(!is_space)\n\
    \    chars = chars.filter(!is_punctuation)\n    chars = chars.filter(!is_digit)\n\
    \    chars = chars.filter(!is_alpha)\n    chars = chars.filter(!is_symbol)\n \
    \   \n    chars = chars.distinct()\n    \n    return chars.count() \nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0dmjgfo3.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp0dmjgfo3.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = string.len()\n    \n    for char in string:\n        if string.count(char)\
    \ > count_distinct_characters:\n            count_distinct_characters = string.count(char)\n\
    \    \n    return count_distinct_characters\n</cell>\n<cell>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<cell>\ncount_distinct_characters('Jerry')\n</cell>\n<text>\nQuestion\
    \ 3\nWrite a function that takes a string and returns the number of times the\
    \ string \"Jerry\" occurs in the string.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2t7_8v2q.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp2t7_8v2q.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\"\n \
    \       0\n    else\n        count_distinct_characters(string[1:end-1]) + count_distinct_characters(string[end])\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of distinct characters in it.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpscls70kn.jl:13\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpscls70kn.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\"\n \
    \       0\n    else\n        count_distinct_characters(string[1:end-1]) + count_distinct_characters(string[end])\n\
    end\n</cell>\n<code language=julia-1.4>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a string as input and\
    \ returns the number of characters in the string that are not in the alphabet\
    \ (case-insensitive).\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9wirrbwb.jl:13\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp9wirrbwb.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \n        string.foldl(\n            0,\n            |acc, c| acc + (if c.isUppercase()\
    \ then 1 else 0)\n        )\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of distinct characters in that string that appear in alphabetical\
    \ order.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"|\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6nrt79x4.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp6nrt79x4.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \n        foldl(\n            foldl(\n                foldl(\n           \
    \         foldl(\n                        foldl(\n                           \
    \ foldl(\n                                foldl(\n                           \
    \         foldl(\n                                        foldl(\n           \
    \                                 foldl(\n                                   \
    \             foldl(\n                                                    foldl(\n\
    \                                                        foldl(\n            \
    \                                                foldl(\n                    \
    \                                            foldl(\n                        \
    \                                            foldl(\n                        \
    \                                                foldl(\n                    \
    \                                                        foldl(\n            \
    \                                                                    foldl(\n\
    \                                                                            \
    \        foldl(\n                                                            \
    \                            foldl(\n                                        \
    \                                                    foldl(\n                \
    \                                                                            \
    \    foldl(\n                                                                \
    \                                    foldl(\n                                \
    \                                                                        foldl(\n\
    \                                                                            \
    \                                foldl(\n                                    \
    \                                                                            foldl(\n\
    \                                                                            \
    \                                        foldl(\n                            \
    \                                                                            \
    \                foldl(\n                                                    \
    \                                                                        foldl(\n\
    \                                                                            \
    \                                                    foldl(\n                \
    \                                                                            \
    \                                        foldl(\n                            \
    \                                                                            \
    \                                foldl(\n                                    \
    \                                                                            \
    \                            foldl(\n                                        \
    \                                                                            \
    \                            foldl(\n                                        \
    \                                                                            \
    \                                foldl(\n                                    \
    \                                                                            \
    \                                        foldl(\n                            \
    \                                                                            \
    \                                                    foldl(\n                \
    \                                                                            \
    \                                                                    foldl(\n\
    \                                                                            \
    \                                                                            \
    \            foldl(\n                                                        \
    \                                                                            \
    \                                    foldl(\n                                \
    \                                                                            \
    \                                                                foldl(\n    \
    \                                                                            \
    \                                                                            \
    \                    foldl(\n                                                \
    \                                                                            \
    \                                                        foldl(\n            \
    \                                                                            \
    \                                                                            \
    \                    foldl(\n                                                \
    \                                                                            \
    \                                                                foldl(\n    \
    \                                                                            \
    \                                                                            \
    \                                    foldl(\n                                \
    \                                                                            \
    \                                                                            \
    \            foldl(\n                                                        \
    \                                                                            \
    \                                                                    foldl(\n\
    \                                                                            \
    \                                                                            \
    \                                                    foldl(\n                \
    \                                                                            \
    \                                                                            \
    \                                        foldl(\n                            \
    \                                                                            \
    \                                                                            \
    \                                foldl(\n                                    \
    \                                                                            \
    \                                                                            \
    \                            foldl(\n                                        \
    \                                                                            \
    \                                                                            \
    \                            foldl(\n                                        \
    \                                                                            \
    \                                                                            \
    \                                foldl(\n                                    \
    \                                                                            \
    \                                                                            \
    \                                        foldl(\n                            \
    \                                                                            \
    \                                                                            \
    \                                                    foldl(\n                \
    \                                                                            \
    \                                                                            \
    \                                                                    foldl(\n\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \            foldl(\n                                                        \
    \                                                                            \
    \                                                                            \
    \                                    foldl(\n                                \
    \                                                                            \
    \                                                                            \
    \                                                                foldl(\n    \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                    foldl(\n                                                \
    \                                                                            \
    \                                                                            \
    \                                                        foldl(\n            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                    foldl(\n                                                \
    \                                                                            \
    \                                                                            \
    \                                                                foldl(\n    \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                    foldl(\n                                \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \            foldl(\n                                                        \
    \                                                                            \
    \                                                                            \
    \                                                                    foldl(\n\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                    foldl(\n                \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                        foldl(\n                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                foldl(\n                                    \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                            foldl(\n                                        \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                            foldl(\n                                        \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                foldl(\n                                    \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                        foldl(\n                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                    foldl(\n                \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                    foldl(\n\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \            foldl(\n                                                        \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                    foldl(\n                                \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                foldl(\n    \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                    foldl(\n                                                \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                        foldl(\n            \
    \                                                                            \
    \                                        \nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdd9wxdf7.jl:94\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpdd9wxdf7.jl:94\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters('Jerry')\n</cell>\n\
    <text>\nExercise 3\nWrite a function that counts the number of times a character\
    \ appears in a given string.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9yxwmgl8.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp9yxwmgl8.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,0)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnnxyvz19.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpnnxyvz19.jl:8\n\
    \   [2] top-level scope at /tmp/tmpnnxyvz19.jl:15\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnnxyvz19.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpnnxyvz19.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpnnxyvz19.jl:8\n\
    \   [2] top-level scope at /tmp/tmpnnxyvz19.jl:16\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnnxyvz19.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpnnxyvz19.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpnnxyvz19.jl:8\n\
    \   [2] top-level scope at /tmp/tmpnnxyvz19.jl:17\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnnxyvz19.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpnnxyvz19.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpnnxyvz19.jl:8\n\
    \   [2] top-level scope at /tmp/tmpnnxyvz19.jl:18\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnnxyvz19.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpnnxyvz19.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpnnxyvz19.jl:8\n\
    \   [2] top-level scope at /tmp/tmpnnxyvz19.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnnxyvz19.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnnxyvz19.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \n        count_distinct_characters(string::String)::Int64\n    \n    if string\
    \ == \"\"\n        0\n    else\n        count_distinct_characters(string[1:])::Int64\
    \ + count_distinct_characters(string[1:])::Int64\nend\n</cell>\n<text>\nExercise:\
    \ Write a function that takes a string and returns the number of distinct characters\
    \ in that string. For example, count_distinct_characters('xyzXYZ') should return\
    \ 3.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing last argument in \"1:\" range expression\
    \ \nStacktrace:\n [1] top-level scope at /tmp/tmpnt9snc3t.jl:14\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpnt9snc3t.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\"\n \
    \       0\n    else\n        count_distinct_characters(string[1:end-1]) + count_distinct_characters(string[end])\n\
    end\n</cell>\n<code language=julia-1.3>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<text>\nExercise\nWrite a function that takes a string and returns the\
    \ number of distinct characters (regardless of case) in the string. For example,\
    \ given \"Jerry\" it should return 4.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvk53kzif.jl:13\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpvk53kzif.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\" then\
    \ return 0\n    else if string[0] == string[1] then return 1\n    else if string[0]\
    \ == string[2] then return 2\n    else if string[0] == string[3] then return 3\n\
    \    else if string[0] == string[4] then return 4\n    else if string[0] == string[5]\
    \ then return 5\n    else if string[0] == string[6] then return 6\n    else if\
    \ string[0] == string[7] then return 7\n    else if string[0] == string[8] then\
    \ return 8\n    else if string[0] == string[9] then return 9\n    else if string[0]\
    \ == string[10] then return 10\n    else if string[0] == string[11] then return\
    \ 11\n    else if string[0] == string[12] then return 12\n    else if string[0]\
    \ == string[13] then return 13\n    else if string[0] == string[14] then return\
    \ 14\n    else if string[0] == string[15] then return 15\n    else if string[0]\
    \ == string[16] then return 16\n    else if string[0] == string[17] then return\
    \ 17\n    else if string[0] == string[18] then return 18\n    else if string[0]\
    \ == string[19] then return 19\n    else if string[0] == string[20] then return\
    \ 20\n    else if string[0] == string[21] then return 21\n    else if string[0]\
    \ == string[22] then return 22\n    else if string[0] == string[23] then return\
    \ 23\n    else if string[0] == string[24] then return 24\n    else if string[0]\
    \ == string[25] then return 25\n    else if string[0] == string[26] then return\
    \ 26\n    else if string[0] == string[27] then return 27\n    else if string[0]\
    \ == string[28] then return 28\n    else if string[0] == string[29] then return\
    \ 29\n    else if string[0] == string[30] then return 30\n    else if string[0]\
    \ == string[31] then return 31\n    else if string[0] == string[32] then return\
    \ 32\n    else if string[0] == string[33] then return 33\n    else if string[0]\
    \ == string[34] then return 34\n    else if string[0] == string[35] then return\
    \ 35\n    else if string[0] == string[36] then return 36\n    else if string[0]\
    \ == string[37] then return 37\n    else if string[0] == string[38] then return\
    \ 38\n    else if string[0] == string[39] then return 39\n    else if string[0]\
    \ == string[40] then return 40\n\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"return\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpofp7p29u.jl:8\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpofp7p29u.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    \"\"\"\n    Count\
    \ the number of distinct characters in a given string\n    \n    >>> count_distinct_characters('xyzXYZ')\n\
    \    3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpem2_rgbs.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpem2_rgbs.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpem2_rgbs.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isAlpha():\n          \
    \  count += 1\n        elif c.isDigit():\n            count += 1\n    return count\n\
    </code>\n<|/ a tags=string,haskell,count,distinct |>\n<| c |>\n`isUpper` and `isLower`\
    \ are not in `Data.Char`\n<|/ c |>\n<| c |>\n`isUpper` and `isLower` are in `Data.Char`\n\
    <|/ c |>\n<| c |>\n`isUpper` and `isLower` are in `Data.Char`\n<|/ c |>\n<| c\
    \ |>\n`isUpper` and `isLower` are in `Data.Char`\n<|/ c |>\n<| c |>\n`isUpper`\
    \ and `isLower` are in `Data.Char`\n<|/ c |>\n<| a dscore=4 |>\n<code>\nimport\
    \ Data.List\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp65feevzy.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp65feevzy.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpz17yailt.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpz17yailt.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpz17yailt.jl:8\n   [2] top-level scope at /tmp/tmpz17yailt.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz17yailt.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpz17yailt.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpz17yailt.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpz17yailt.jl:8\n   [2] top-level scope at /tmp/tmpz17yailt.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz17yailt.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpz17yailt.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpz17yailt.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpz17yailt.jl:8\n   [2] top-level scope at /tmp/tmpz17yailt.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz17yailt.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpz17yailt.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpz17yailt.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpz17yailt.jl:8\n   [2] top-level scope at /tmp/tmpz17yailt.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz17yailt.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpz17yailt.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpz17yailt.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpz17yailt.jl:8\n   [2] top-level scope at /tmp/tmpz17yailt.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz17yailt.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz17yailt.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isUpper():\n          \
    \  count += 1\n        elif c.isLower():\n            count += 1\n    return count\n\
    </code>\n<|/ a tags=haskell,functional-programming |>\n<| c |>\nI like this solution,\
    \ but I believe it can be simplified even further by just using `foldl` instead\
    \ of `foldl1'`.\n<|/ c |>\n<| c |>\nI agree with you, `foldl` is more elegant\
    \ and more efficient.\n<|/ c |>\n<| a tags=haskell,functional-programming |>\n\
    <code>\nimport Data.List\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcfu80i7e.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpcfu80i7e.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    \"\"\"\n    Count\
    \ the number of distinct characters in a string\n    \n    Arguments:\n    string\
    \ -- a string\n    \n    Returns:\n    Int -- number of distinct characters\n\
    \    \"\"\"\n    \n    count = 0\n    for c in string:\n        if c.isUpper():\n\
    \            count += 1\n        elif c.isLower():\n            count += 1\n \
    \       elif c.isUpper():\n            count += 1\n        elif c.isLower():\n\
    \            count += 1\n    return count\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string and returns the number of times each character\
    \ appears in the string. Case is ignored.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptsdgmola.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmptsdgmola.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters_helper(string,\
    \ 0, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsh4y8utn.jl:16\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpsh4y8utn.jl:9\n\
    \   [2] top-level scope at /tmp/tmpsh4y8utn.jl:16\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsh4y8utn.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpsh4y8utn.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpsh4y8utn.jl:9\n\
    \   [2] top-level scope at /tmp/tmpsh4y8utn.jl:17\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsh4y8utn.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpsh4y8utn.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpsh4y8utn.jl:9\n\
    \   [2] top-level scope at /tmp/tmpsh4y8utn.jl:18\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsh4y8utn.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpsh4y8utn.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpsh4y8utn.jl:9\n\
    \   [2] top-level scope at /tmp/tmpsh4y8utn.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsh4y8utn.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmpsh4y8utn.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpsh4y8utn.jl:9\n\
    \   [2] top-level scope at /tmp/tmpsh4y8utn.jl:20\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpsh4y8utn.jl:15\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsh4y8utn.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk_69ttgw.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpk_69ttgw.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpk_69ttgw.jl:8\n   [2] top-level scope at /tmp/tmpk_69ttgw.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk_69ttgw.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpk_69ttgw.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpk_69ttgw.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpk_69ttgw.jl:8\n   [2] top-level scope at /tmp/tmpk_69ttgw.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk_69ttgw.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpk_69ttgw.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpk_69ttgw.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpk_69ttgw.jl:8\n   [2] top-level scope at /tmp/tmpk_69ttgw.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk_69ttgw.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpk_69ttgw.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpk_69ttgw.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpk_69ttgw.jl:8\n   [2] top-level scope at /tmp/tmpk_69ttgw.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk_69ttgw.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpk_69ttgw.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpk_69ttgw.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpk_69ttgw.jl:8\n   [2] top-level scope at /tmp/tmpk_69ttgw.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk_69ttgw.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk_69ttgw.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        else:\n            count += 1\n\
    \    return count\n</cell>\n<text>\nExercise 3\nWrite a function that takes a\
    \ string and returns the number of times the string \"a\" appears in the string.\
    \ \n    >>> count_a('abracadabra')\n    2\n    >>> count_a('abracadabra')\n  \
    \  2\n    >>> count_a('abracadabra')\n    2\n    >>> count_a('abracadabra')\n\
    \    2\n    >>> count_a('abracadabra')\n    2\n    >>> count_a('abracadabra')\n\
    \    2\n    >>> count_a('abracadabra')\n    2\n    >>> count_a('abracadabra')\n\
    \    2\n    >>> count_a('abracadabra')\n    2\n    >>> count_a('abracadabra')\n\
    \    2\n    >>> count_a('abracadabra')\n    2\n    >>> count_a('abracadabra')\n\
    \    2\n    >>> count_a('abracadabra')\n    2\n    >>> count_a('abracadabra')\n\
    \    2\n    >>> count_a('abracadabra')\n    2\n    >>> count_a('abracadabra')\n\
    \    2\n    >>> count_a('abracadabra')\n    2\n    >>> count_a('abracadabra')\n\
    \    2\n    >>> count_a('abracadabra')\n    2\n    >>> count_a('abracadabra')\n\
    \    2\n    >>> count_a('abracadabra')\n    2\n    >>> count_a('abracadabra')\n\
    \    2\n    >>> count_a('abracadabra')\n    2\n    >>> count_a('abracadabra')\n\
    \    2\n    >>> count_a('abracadabra')\n    2\n    >>> count_a('abracadabra')\n\
    \    2\n    >>> count_a('abracadabra')\n    2\n    >>> count_a('abracadabra')\n\
    \    2\n    >>> count_a('abracadabra')\n    2\n    >>> count_a('abracadabra')\n\
    \    2\n    >>> count_a('abracadabra')\n    2\n    >>> count_a('abracadabra')\n\
    \    2\n    >>> count_a('abracadabra')\n    2\n    >>> count_a('abracadabra')\n\
    \    2\n    >>> count_a('abrac\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptkeia715.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmptkeia715.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters('Jerry')\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string and returns the number\
    \ of characters in the string that are not in the alphabet (case insensitive).\
    \ For example, the string \"Jerry\" has 3 characters that are not in the alphabet,\
    \ namely \"J\", \"e\" and \"r\".\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpaaqw83pw.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpaaqw83pw.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    \"\"\"\n    Count\
    \ the distinct characters in a string\n    \"\"\"\n    \n    count = 0\n    for\
    \ c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isDigit():\n          \
    \  count += 1\n        elif c.isSpace():\n            count += 1\n    return count\n\
    </cell>\n<code language=julia-1.4>\ncount_distinct_characters(\"Jerry\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string and returns the number\
    \ of uppercase letters, lowercase letters, digits, and spaces.\nusing Test\n\n\
    @testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbgjlbspr.jl:15\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpbgjlbspr.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,0,0)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6kjjvt98.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmp6kjjvt98.jl:8\n\
    \   [2] top-level scope at /tmp/tmp6kjjvt98.jl:15\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6kjjvt98.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp6kjjvt98.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmp6kjjvt98.jl:8\n\
    \   [2] top-level scope at /tmp/tmp6kjjvt98.jl:16\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6kjjvt98.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp6kjjvt98.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmp6kjjvt98.jl:8\n\
    \   [2] top-level scope at /tmp/tmp6kjjvt98.jl:17\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6kjjvt98.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp6kjjvt98.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmp6kjjvt98.jl:8\n\
    \   [2] top-level scope at /tmp/tmp6kjjvt98.jl:18\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6kjjvt98.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp6kjjvt98.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmp6kjjvt98.jl:8\n\
    \   [2] top-level scope at /tmp/tmp6kjjvt98.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6kjjvt98.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6kjjvt98.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,0,0)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpiqpynfpn.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpiqpynfpn.jl:8\n\
    \   [2] top-level scope at /tmp/tmpiqpynfpn.jl:15\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiqpynfpn.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpiqpynfpn.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpiqpynfpn.jl:8\n\
    \   [2] top-level scope at /tmp/tmpiqpynfpn.jl:16\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiqpynfpn.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpiqpynfpn.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpiqpynfpn.jl:8\n\
    \   [2] top-level scope at /tmp/tmpiqpynfpn.jl:17\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiqpynfpn.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpiqpynfpn.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpiqpynfpn.jl:8\n\
    \   [2] top-level scope at /tmp/tmpiqpynfpn.jl:18\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiqpynfpn.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpiqpynfpn.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpiqpynfpn.jl:8\n\
    \   [2] top-level scope at /tmp/tmpiqpynfpn.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiqpynfpn.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiqpynfpn.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = HashSet()\n    for character in string:\n        if character in count_distinct_characters:\n\
    \            count_distinct_characters.remove(character)\n        else:\n    \
    \        count_distinct_characters.add(character)\n    return count_distinct_characters.length\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=haskell,string |>\n<code>\nimport Data.List\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9aq91_m7.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp9aq91_m7.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \n        foldl(\n            +,\n            map(\n                count_distinct_character,\n\
    \                string.chars\n            )\n        )\n    return count_distinct_characters\n\
    end\n</cell>\n<code language=julia-1.0>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<code language=julia-1.0>\ncount_distinct_characters('Jerry')\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a string and returns the number\
    \ of distinct characters in that string in alphabetical order.\nusing Test\n\n\
    @testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpd4vlbxoi.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpd4vlbxoi.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        else:\n            count += 1\n\
    \    return count\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThank you for your answer.\
    \ Can you please explain why you used `if c.isUpper():` instead of `if c.isupper():`?\n\
    <|/ c |>\n<| c |>\n`isUpper` checks if the character is upper case and `islower`\
    \ checks if the character is lower case. `isupper` checks if the character is\
    \ upper case and `islower` checks if the character is lower case. `isupper` checks\
    \ if the character is upper case and `islower` checks if the character is lower\
    \ case. `isupper` checks if the character is upper case and `islower` checks if\
    \ the character is lower case. `isupper` checks if the character is upper case\
    \ and `islower` checks if the character is lower case. `isupper` checks if the\
    \ character is upper case and `islower` checks if the character is lower case.\
    \ `isupper` checks if the character is upper case and `islower` checks if the\
    \ character is lower case. `isupper` checks if the character is upper case and\
    \ `islower` checks if the character is lower case. `isupper` checks if the character\
    \ is upper case and `islower` checks if the character is lower case. `isupper`\
    \ checks if the character is upper case and `islower` checks if the character\
    \ is lower case. `isupper` checks if the character is upper case and `islower`\
    \ checks if the character is lower case. `isupper` checks if the character is\
    \ upper case and `islower` checks if the character is lower case. `isupper` checks\
    \ if the character is upper case and `islower` checks if the character is lower\
    \ case. `isupper` checks if the character is upper case and `islower` checks if\
    \ the character is lower case. `isupper` checks if the character is upper case\
    \ and `islower` checks if the character is lower case. `isupper` checks if the\
    \ character is upper case and `islower` checks if the character is lower case.\
    \ `isupper` checks if the character is upper case and `islower` checks if the\
    \ character is lower case. `isupper` checks if the character is upper case and\
    \ `islower` checks if the character is lower case. `isupper` checks if the character\
    \ is upper case and `islower` checks if the character is lower case. `isupper`\
    \ \nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp33jgnoe6.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp33jgnoe6.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \n        count_distinct_characters(string.chars)\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a string and returns the number of characters\
    \ in the string that are not in the alphabet (case insensitive).\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxt6067c_.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpxt6067c_.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \n        foldl(\n            foldl(\n                foldl(\n           \
    \         foldl(\n                        foldl(\n                           \
    \ foldl(\n                                foldl(\n                           \
    \         foldl(\n                                        foldl(\n           \
    \                                 foldl(\n                                   \
    \             foldl(\n                                                    foldl(\n\
    \                                                        foldl(\n            \
    \                                                foldl(\n                    \
    \                                            foldl(\n                        \
    \                                            foldl(\n                        \
    \                                                foldl(\n                    \
    \                                                        foldl(\n            \
    \                                                                    foldl(\n\
    \                                                                            \
    \        foldl(\n                                                            \
    \                            foldl(\n                                        \
    \                                                    foldl(\n                \
    \                                                                            \
    \    foldl(\n                                                                \
    \                                    foldl(\n                                \
    \                                                                        foldl(\n\
    \                                                                            \
    \                                foldl(\n                                    \
    \                                                                            foldl(\n\
    \                                                                            \
    \                                        foldl(\n                            \
    \                                                                            \
    \                foldl(\n                                                    \
    \                                                                        foldl(\n\
    \                                                                            \
    \                                                    foldl(\n                \
    \                                                                            \
    \                                        foldl(\n                            \
    \                                                                            \
    \                                foldl(\n                                    \
    \                                                                            \
    \                            foldl(\n                                        \
    \                                                                            \
    \                            foldl(\n                                        \
    \                                                                            \
    \                                foldl(\n                                    \
    \                                                                            \
    \                                        foldl(\n                            \
    \                                                                            \
    \                                                    foldl(\n                \
    \                                                                            \
    \                                                                    foldl(\n\
    \                                                                            \
    \                                                                            \
    \            foldl(\n                                                        \
    \                                                                            \
    \                                    foldl(\n                                \
    \                                                                            \
    \                                                                foldl(\n    \
    \                                                                            \
    \                                                                            \
    \                    foldl(\n                                                \
    \                                                                            \
    \                                                        foldl(\n            \
    \                                                                            \
    \                                                                            \
    \                    foldl(\n                                                \
    \                                                                            \
    \                                                                foldl(\n    \
    \                                                                            \
    \                                                                            \
    \                                    foldl(\n                                \
    \                                                                            \
    \                                                                            \
    \            foldl(\n                                                        \
    \                                                                            \
    \                                                                    foldl(\n\
    \                                                                            \
    \                                                                            \
    \                                                    foldl(\n                \
    \                                                                            \
    \                                                                            \
    \                                        foldl(\n                            \
    \                                                                            \
    \                                                                            \
    \                                foldl(\n                                    \
    \                                                                            \
    \                                                                            \
    \                            foldl(\n                                        \
    \                                                                            \
    \                                                                            \
    \                            foldl(\n                                        \
    \                                                                            \
    \                                                                            \
    \                                foldl(\n                                    \
    \                                                                            \
    \                                                                            \
    \                                        foldl(\n                            \
    \                                                                            \
    \                                                                            \
    \                                                    foldl(\n                \
    \                                                                            \
    \                                                                            \
    \                                                                    foldl(\n\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \            foldl(\n                                                        \
    \                                                                            \
    \                                                                            \
    \                                    foldl(\n                                \
    \                                                                            \
    \                                                                            \
    \                                                                foldl(\n    \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                    foldl(\n                                                \
    \                                                                            \
    \                                                                            \
    \                                                        foldl(\n            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                    foldl(\n                                                \
    \                                                                            \
    \                                                                            \
    \                                                                foldl(\n    \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                    foldl(\n                                \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \            foldl(\n                                                        \
    \                                                                            \
    \                                                                            \
    \                                                                    foldl(\n\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                    foldl(\n                \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                        foldl(\n                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                foldl(\n                                    \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                            foldl(\n                                        \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                            foldl(\n                                        \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                foldl(\n                                    \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                        foldl(\n                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                    foldl(\n                \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                    foldl(\n\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \            foldl(\n                                                        \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                    foldl(\n                                \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                foldl(\n    \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                    foldl(\n                                                \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                        foldl(\n            \
    \                                                                            \
    \                                        \nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp61bls_jt.jl:94\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp61bls_jt.jl:94\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \n        foldl(\n            count_distinct_characters_helper,\n        \
    \    0,\n            string.chars\n        )\n    return count_distinct_characters\n\
    end\n</cell>\n<code language=julia-1.4>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<code language=julia-1.4>\ncount_distinct_characters('Jerry')\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string and returns the number\
    \ of times each character appears in the string.\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqs_mntvg.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpqs_mntvg.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\"\n \
    \       0\n    else\n        count_distinct_characters(string[1:end-1]) + count_distinct_characters(string[end])\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of times a substring appears in the string. For example, given the\
    \ string \"abracadabra\", the substring \"abr\" appears twice in the string, and\
    \ so does the substring \"cad\". The function should return the number 2. Write\
    \ a test that ensures that your function works as expected.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpt3rmt47q.jl:13\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpt3rmt47q.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = Set.new()\n    for c in string:\n        if c not in count_distinct_characters:\n\
    \            count_distinct_characters.add(c)\n    return count_distinct_characters.length\n\
    </code>\n<|/ a tags=haskell,string |>\n<| c |>\n`Set` has `length` function, so\
    \ you can just use `length . Set.fromList` instead of `foldl`.\n<|/ c |>\n<| c\
    \ |>\nThanks, I didn't know about `Set.fromList`\n<|/ c |>\n<| c |>\n`Set.fromList`\
    \ has O(n) complexity, while `foldl` has O(n^2) complexity. `foldl` is more efficient\
    \ than `Set.fromList`.\n<|/ c |>\n<| c |>\n`foldl` has O(n) complexity, `foldl`\
    \ is more efficient than `Set.fromList`\n<|/ c |>\n<| c |>\n`foldl` has O(n) complexity,\
    \ `foldl` is more efficient than `Set.fromList`\n<|/ c |>\n<| a tags=haskell,string\
    \ |>\n<code>\nimport Data.List\nimport Data.Char\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpg6e7t2n8.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpg6e7t2n8.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abc\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abC\")\n</cell>\n\
    <code language=julia-1.5>\ncount_distinct_characters(\"abC\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_distinct_characters(\"abC\")\n</cell>\n<code language=julia-1.5>\n\
    count_distinct_characters(\"abC\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    abC\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abC\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abC\")\n</cell>\n\
    <code language=julia-1.5>\ncount_distinct_characters(\"abC\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_distinct_characters(\"abC\")\n</cell>\n<code language=julia-1.5>\n\
    count_distinct_characters(\"abC\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    abC\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abC\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abC\")\n</cell>\n\
    <code language=julia-1.5>\ncount_distinct_characters(\"abC\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_distinct_characters(\"abC\")\n</cell>\n<code language=julia-1.5>\n\
    count_distinct_characters(\"abC\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    abC\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abC\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abC\")\n</cell>\n\
    <code language=julia-1.5>\ncount_distinct_characters(\"abC\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_distinct_characters(\"abC\")\n</cell>\n<code language=julia-1.5>\n\
    count_distinct_characters(\"abC\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    abC\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abC\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abC\")\n</cell>\n\
    <code language=julia-1.5\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2tlo04_j.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp2tlo04_j.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2b7gz7dz.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp2b7gz7dz.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp2b7gz7dz.jl:8\n   [2] top-level scope at /tmp/tmp2b7gz7dz.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2b7gz7dz.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp2b7gz7dz.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp2b7gz7dz.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp2b7gz7dz.jl:8\n   [2] top-level scope at /tmp/tmp2b7gz7dz.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2b7gz7dz.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp2b7gz7dz.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp2b7gz7dz.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp2b7gz7dz.jl:8\n   [2] top-level scope at /tmp/tmp2b7gz7dz.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2b7gz7dz.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp2b7gz7dz.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp2b7gz7dz.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp2b7gz7dz.jl:8\n   [2] top-level scope at /tmp/tmp2b7gz7dz.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2b7gz7dz.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp2b7gz7dz.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp2b7gz7dz.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp2b7gz7dz.jl:8\n   [2] top-level scope at /tmp/tmp2b7gz7dz.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2b7gz7dz.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2b7gz7dz.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \"\"\n    for character in string\n        count_distinct_characters += character\n\
    \    end\n    return count_distinct_characters.length\nend\n</cell>\n<code language=julia-1.5>\n\
    count_distinct_characters(\"hello\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    helloWorld\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    helloWorld\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    helloWorld\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    helloWorld\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    helloWorld\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    helloWorld\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    helloWorld\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    helloWorld\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    helloWorld\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    helloWorld\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    helloWorld\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    helloWorld\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    helloWorld\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    helloWorld\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    helloWorld\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    helloWorld\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    helloWorld\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    helloWorld\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    helloWorld\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    helloWorld\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    helloWorld\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    helloWorld\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    helloWorld\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    helloWorld\")\n</cell>\n<code language=juli\nusing Test\n\n@testset begin\n\n\
    candidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3a3le6b2.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp3a3le6b2.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isAlpha():\n          \
    \  count += 1\n    return count\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a string and returns the number of uppercase characters, lowercase\
    \ characters, and non-alphabetic characters. For example, count_distinct_characters('xyzXYZ')\
    \ should return 3.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp59w89h60.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp59w89h60.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,0,0)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqwvbl_w0.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpqwvbl_w0.jl:8\n\
    \   [2] top-level scope at /tmp/tmpqwvbl_w0.jl:15\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqwvbl_w0.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpqwvbl_w0.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpqwvbl_w0.jl:8\n\
    \   [2] top-level scope at /tmp/tmpqwvbl_w0.jl:16\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqwvbl_w0.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpqwvbl_w0.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpqwvbl_w0.jl:8\n\
    \   [2] top-level scope at /tmp/tmpqwvbl_w0.jl:17\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqwvbl_w0.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpqwvbl_w0.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpqwvbl_w0.jl:8\n\
    \   [2] top-level scope at /tmp/tmpqwvbl_w0.jl:18\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqwvbl_w0.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpqwvbl_w0.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpqwvbl_w0.jl:8\n\
    \   [2] top-level scope at /tmp/tmpqwvbl_w0.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqwvbl_w0.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqwvbl_w0.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.3>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<code language=julia-1.3>\ncount_distinct_characters('Jerry')\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a string and returns the number\
    \ of characters in the string that are not in the alphabet of English.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkal_v3qd.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpkal_v3qd.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \n        foldl(\n            +,\n            map(\n                count_distinct_character,\n\
    \                filter(\n                    is_character,\n                \
    \    string\n                )\n            )\n        )\nend\n</cell>\n<code\
    \ language=julia-1.5>\ncount_distinct_characters(strings)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a string and returns the number of characters\
    \ in the string that are not in the alphabet of English.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpe3eopb28.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpe3eopb28.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpu5efo3tx.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpu5efo3tx.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpu5efo3tx.jl:8\n   [2] top-level scope at /tmp/tmpu5efo3tx.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu5efo3tx.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpu5efo3tx.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpu5efo3tx.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpu5efo3tx.jl:8\n   [2] top-level scope at /tmp/tmpu5efo3tx.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu5efo3tx.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpu5efo3tx.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpu5efo3tx.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpu5efo3tx.jl:8\n   [2] top-level scope at /tmp/tmpu5efo3tx.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu5efo3tx.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpu5efo3tx.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpu5efo3tx.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpu5efo3tx.jl:8\n   [2] top-level scope at /tmp/tmpu5efo3tx.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu5efo3tx.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpu5efo3tx.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpu5efo3tx.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmpu5efo3tx.jl:8\n   [2] top-level scope at /tmp/tmpu5efo3tx.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu5efo3tx.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu5efo3tx.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,0,0)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwzr1p96v.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpwzr1p96v.jl:8\n\
    \   [2] top-level scope at /tmp/tmpwzr1p96v.jl:15\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwzr1p96v.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpwzr1p96v.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpwzr1p96v.jl:8\n\
    \   [2] top-level scope at /tmp/tmpwzr1p96v.jl:16\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwzr1p96v.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpwzr1p96v.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpwzr1p96v.jl:8\n\
    \   [2] top-level scope at /tmp/tmpwzr1p96v.jl:17\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwzr1p96v.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpwzr1p96v.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpwzr1p96v.jl:8\n\
    \   [2] top-level scope at /tmp/tmpwzr1p96v.jl:18\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwzr1p96v.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpwzr1p96v.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpwzr1p96v.jl:8\n\
    \   [2] top-level scope at /tmp/tmpwzr1p96v.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwzr1p96v.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwzr1p96v.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isDigit():\n          \
    \  count += 1\n        elif c.isSpace():\n            count += 1\n    return count\n\
    </code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't work. `count_distinct_characters('Jerry')`\
    \ returns `4` instead of `3`.\n<|/ c |>\n<| c |>\nThanks for pointing that out.\
    \ I fixed the code. Now it should work.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsljt7p35.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpsljt7p35.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters('Jerry')\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a string and returns the number\
    \ of characters in the string that are not in the alphabet (including spaces).\
    \ For example, if the string is 'Jerry', the function should return 3.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxmt1x8c_.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpxmt1x8c_.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"a\")\n</cell>\n\
    <code language=julia-1.5>\ncount_distinct_characters(\"ab\")\n</cell>\n<code language=julia-1.5>\n\
    count_distinct_characters(\"abc\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    abA\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abA\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abA\")\n</cell>\n\
    <code language=julia-1.5>\ncount_distinct_characters(\"abA\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_distinct_characters(\"abA\")\n</cell>\n<code language=julia-1.5>\n\
    count_distinct_characters(\"abA\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    abA\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abA\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abA\")\n</cell>\n\
    <code language=julia-1.5>\ncount_distinct_characters(\"abA\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_distinct_characters(\"abA\")\n</cell>\n<code language=julia-1.5>\n\
    count_distinct_characters(\"abA\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    abA\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abA\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abA\")\n</cell>\n\
    <code language=julia-1.5>\ncount_distinct_characters(\"abA\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_distinct_characters(\"abA\")\n</cell>\n<code language=julia-1.5>\n\
    count_distinct_characters(\"abA\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    abA\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abA\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"abA\")\n</cell>\n\
    <code language=julia-1.5>\ncount_distinct_characters(\"abA\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_distinct_\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnr49p3ez.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpnr49p3ez.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = HashSet{Char}(string.uppercase)\n    count_distinct_characters.merge(string.lowercase)\n\
    \    count_distinct_characters.merge(string.digits)\n    count_distinct_characters.merge(string.whitespace)\n\
    \    count_distinct_characters.merge(string.ascii_lowercase)\n    count_distinct_characters.merge(string.ascii_uppercase)\n\
    \    count_distinct_characters.merge(string.ascii_letters)\n    count_distinct_characters.merge(string.ascii_lowercase)\n\
    \    count_distinct_characters.merge(string.ascii_uppercase)\n    count_distinct_characters.merge(string.ascii_letters)\n\
    \    count_distinct_characters.merge(string.ascii_lowercase)\n    count_distinct_characters.merge(string.ascii_uppercase)\n\
    \    count_distinct_characters.merge(string.ascii_letters)\n    count_distinct_characters.merge(string.ascii_lowercase)\n\
    \    count_distinct_characters.merge(string.ascii_uppercase)\n    count_distinct_characters.merge(string.ascii_letters)\n\
    \    count_distinct_characters.merge(string.ascii_lowercase)\n    count_distinct_characters.merge(string.ascii_uppercase)\n\
    \    count_distinct_characters.merge(string.ascii_letters)\n    count_distinct_characters.merge(string.ascii_lowercase)\n\
    \    count_distinct_characters.merge(string.ascii_uppercase)\n    count_distinct_characters.merge(string.ascii_letters)\n\
    \    count_distinct_characters.merge(string.ascii_lowercase)\n    count_distinct_characters.merge(string.ascii_uppercase)\n\
    \    count_distinct_characters.merge(string.ascii_letters)\n    count_distinct_characters.merge(string.ascii_lowercase)\n\
    \    count_distinct_characters.merge(string.ascii_uppercase)\n    count_distinct_characters.merge(string.ascii_letters)\n\
    \    count_distinct_characters.merge(string.ascii_lowercase)\n    count_distinct_characters.merge(string.ascii_uppercase)\n\
    \    count_distinct_characters.merge(string.ascii_letters)\n    count_distinct_characters.merge(string.ascii_lowercase)\n\
    \    count_distinct_characters.merge(string.ascii_uppercase)\n    count_distinct_characters.merge(string.ascii_letters)\n\
    \    count_distinct_characters.merge(string.ascii_lowercase)\n    count_distinct_characters.merge(string.ascii_uppercase)\n\
    \    count_distinct_characters.merge(string.ascii_letters)\n    count_distinct_characters.merge(string.ascii_lowercase)\n\
    \    count_distinct_characters.merge(string.ascii_uppercase)\n    count_distinct_characters.merge(string.ascii_letters)\n\
    \    count_distinct_characters.merge(string.ascii_lowercase)\n    count_distinct_characters.merge(string.ascii_uppercase)\n\
    \    count_distinct_characters.merge(string.ascii_letters)\n    count_distinct_characters.merge(string.ascii_lowercase)\n\
    \    count_distinct_characters.merge(string.ascii_uppercase)\n    count_distinct_characters.merge(string.ascii_letters)\n\
    \    count_distin\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpx6nsam7i.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpx6nsam7i.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpx6nsam7i.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.3>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<code language=julia-1.3>\ncount_distinct_characters('Jerry')\n</cell>\n\
    <text>\nExercise 2\nWrite a function that counts the number of times a character\
    \ appears in a string. For example, count_characters('Jerry') = 4.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbuhgu13a.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpbuhgu13a.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = HashSet{Char}(Char.uppercase)\n    for c in string\n        count_distinct_characters.add(c)\n\
    \    return count_distinct_characters.size\nend\n</cell>\n<code language=julia-1.5>\n\
    count_distinct_characters(\"Jerry\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of distinct characters in that string\
    \ in upper case. For example, given \"Jerry\", your function should return 4.\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpr4c4jqcg.jl:14\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpr4c4jqcg.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = String.length(string)\n    \n    for char in string\n        count_distinct_characters\
    \ = count_distinct_characters - String.length(String.lower(char))\n        count_distinct_characters\
    \ = count_distinct_characters - String.length(String.upper(char))\n    end\n \
    \   \n    return count_distinct_characters\nend\n</cell>\n<code language=julia-1.5>\n\
    count_distinct_characters('xyzXYZ')\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters('Jerry')\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of characters in the string that are not in the alphabet (case insensitive).\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwx_qea4s.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpwx_qea4s.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters('Jerry')\n</cell>\n\
    <text>\nExercise 2\nWrite a function that counts the number of characters in a\
    \ string that appears more than once in a row. For example, given \"abcabcbb\"\
    , your function should return 3.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvc4zr8po.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpvc4zr8po.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmph7w9z3cm.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmph7w9z3cm.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmph7w9z3cm.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp9t7n9ut1.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp9t7n9ut1.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp9t7n9ut1.jl:8\n   [2] top-level scope at /tmp/tmp9t7n9ut1.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9t7n9ut1.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp9t7n9ut1.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp9t7n9ut1.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp9t7n9ut1.jl:8\n   [2] top-level scope at /tmp/tmp9t7n9ut1.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9t7n9ut1.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp9t7n9ut1.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp9t7n9ut1.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp9t7n9ut1.jl:8\n   [2] top-level scope at /tmp/tmp9t7n9ut1.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9t7n9ut1.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp9t7n9ut1.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp9t7n9ut1.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp9t7n9ut1.jl:8\n   [2] top-level scope at /tmp/tmp9t7n9ut1.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9t7n9ut1.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp9t7n9ut1.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp9t7n9ut1.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp9t7n9ut1.jl:8\n   [2] top-level scope at /tmp/tmp9t7n9ut1.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp9t7n9ut1.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9t7n9ut1.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters('Jerry')\n</cell>\n\
    <text>\nExercise 2\nWrite a function that counts the number of times a character\
    \ appears in a string. For example, if the string is 'Jerry', the function should\
    \ return 4.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpegluta7c.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpegluta7c.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = Set.new()\n    for c in string:\n        count_distinct_characters.add(c)\n\
    \    return count_distinct_characters.length\n</code>\n<|/ a dscore=1 |>\n<| a\
    \ |>\n<code>\ndef count_distinct_characters(string::String)\n    string.downcase!\n\
    \    string.gsub!(/[^a-z]/,'')\n    string.gsub!(/[^A-Z]/,'')\n    string.gsub!(/[^0-9]/,'')\n\
    \    string.gsub!(/[^a-zA-Z0-9]/,'')\n    string.gsub!(/[^a-zA-Z]/,'')\n    string.gsub!(/[^0-9a-zA-Z]/,'')\n\
    \    string.gsub!(/[^a-zA-Z0-9]/,'')\n    string.gsub!(/[^a-zA-Z]/,'')\n    string.gsub!(/[^0-9a-zA-Z]/,'')\n\
    \    string.gsub!(/[^a-zA-Z0-9]/,'')\n    string.gsub!(/[^a-zA-Z]/,'')\n    string.gsub!(/[^0-9a-zA-Z]/,'')\n\
    \    string.gsub!(/[^a-zA-Z0-9]/,'')\n    string.gsub!(/[^a-zA-Z]/,'')\n    string.gsub!(/[^0-9a-zA-Z]/,'')\n\
    \    string.gsub!(/[^a-zA-Z0-9]/,'')\n    string.gsub!(/[^a-zA-Z]/,'')\n    string.gsub!(/[^0-9a-zA-Z]/,'')\n\
    \    string.gsub!(/[^a-zA-Z0-9]/,'')\n    string.gsub!(/[^a-zA-Z]/,'')\n    string.gsub!(/[^0-9a-zA-Z]/,'')\n\
    \    string.gsub!(/[^a-zA-Z0-9]/,'')\n    string.gsub!(/[^a-zA-Z]/,'')\n    string.gsub!(/[^0-9a-zA-Z]/,'')\n\
    \    string.gsub!(/[^a-zA-Z0-9]/,'')\n    string.gsub!(/[^a-zA-Z]/,'')\n    string.gsub!(/[^0-9a-zA-Z]/,'')\n\
    \    string.gsub!(/[^a-zA-Z0-9]/,'')\n    string.gsub!(/[^a-zA-Z]/,'')\n    string.gsub!(/[^0-9a-zA-Z]/,'')\n\
    \    string.gsub!(/[^a-zA-Z0-9]/,'')\n    string.gsub!(/[^a-zA-Z]/,'')\n    string.gsub!(/[^0-9a-zA-Z]/,'')\n\
    \    string.gsub!(/[^a-zA-Z0-9]/,'')\n    string.gsub!(/[^a-zA-Z]/,'')\n    string.gsub!(/[^0-9\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpd_g2jjms.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpd_g2jjms.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppsri5roe.jl:16\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmppsri5roe.jl:9\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmppsri5roe.jl:9\n   [2] top-level scope at /tmp/tmppsri5roe.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppsri5roe.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmppsri5roe.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmppsri5roe.jl:9\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmppsri5roe.jl:9\n   [2] top-level scope at /tmp/tmppsri5roe.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppsri5roe.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmppsri5roe.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmppsri5roe.jl:9\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmppsri5roe.jl:9\n   [2] top-level scope at /tmp/tmppsri5roe.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppsri5roe.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmppsri5roe.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmppsri5roe.jl:9\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmppsri5roe.jl:9\n   [2] top-level scope at /tmp/tmppsri5roe.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppsri5roe.jl:15\n  \ntest set: Error During\
    \ Test at /tmp/tmppsri5roe.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmppsri5roe.jl:9\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmppsri5roe.jl:9\n   [2] top-level scope at /tmp/tmppsri5roe.jl:20\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppsri5roe.jl:15\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppsri5roe.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,0)\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters('Jerry')\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a string and returns the number\
    \ of characters in the string that are not in the alphabet (case insensitive).\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp57es8xii.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp57es8xii.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isDigit():\n          \
    \  count += 1\n    return count\n</code>\n<|/ a tags=haskell,functional-programming\
    \ |>\n<| c |>\nI like the idea of using foldl, but I think it would be more idiomatic\
    \ to use `foldl (\\count c -> if c.isUpper() then count + 1 else count) 0`.\n\
    <|/ c |>\n<| c |>\nI agree with you. My answer was more to show how it can be\
    \ done with foldl and how it can be done with foldr.\n<|/ c |>\n<| c |>\nI like\
    \ your solution, but I prefer `foldl (\\count c -> if c.isUpper() then count +\
    \ 1 else count) 0`.\n<|/ c |>\n<| c |>\nI agree, foldl is more idiomatic. Thanks\
    \ for your suggestion.\n<|/ c |>\n<| c |>\nI prefer `foldl (\\count c -> if c.isUpper()\
    \ then count + 1 else count) 0` because it is more readable. `foldl` has more\
    \ general type than `foldl (+) 0`.\n<|/ c |>\n<| a tags=haskell,functional-programming\
    \ |>\nA simple solution using foldl:\n<code>\ncount_distinct_characters :: String\
    \ -> Int\ncount_distinct_characters s = foldl (\\acc c -> if c.isUpper() then\
    \ acc + 1 else acc) 0 s\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\nA simple\
    \ solution using foldl and map:\n<code>\ncount_distinct_characters :: String ->\
    \ Int\ncount_distinct_characters s = foldl (\\acc c -> if c.isUpper() then acc\
    \ + 1 else acc) 0 $ map toUpper s\n</code>\n<|/ a tags=haskell,functional-programming\
    \ |>\n<| a tags=haskell,functional-programming |>\n<code>\ncount_distinct_characters\
    \ :: String -> Int\ncount_distinct_characters s = foldl (\\acc c -> if c.isUpper()\
    \ then acc + 1 else acc) 0 s\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n\
    count_distinct_characters :: String -> Int\ncount_distinct_characters s = foldl\
    \ (\\acc c -> if c.isUpper() then acc + 1 else acc) 0 \nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpl3s8fd3o.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpl3s8fd3o.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptzz6988v.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmptzz6988v.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmptzz6988v.jl:8\n   [2] top-level scope at /tmp/tmptzz6988v.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptzz6988v.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmptzz6988v.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmptzz6988v.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmptzz6988v.jl:8\n   [2] top-level scope at /tmp/tmptzz6988v.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptzz6988v.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmptzz6988v.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmptzz6988v.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmptzz6988v.jl:8\n   [2] top-level scope at /tmp/tmptzz6988v.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptzz6988v.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmptzz6988v.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmptzz6988v.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmptzz6988v.jl:8\n   [2] top-level scope at /tmp/tmptzz6988v.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptzz6988v.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmptzz6988v.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmptzz6988v.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmptzz6988v.jl:8\n   [2] top-level scope at /tmp/tmptzz6988v.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptzz6988v.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptzz6988v.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = HashSet{Char}(string.chars)\n    \n    return length(count_distinct_characters)\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters('Jerry')\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string and returns the number\
    \ of times each character appears in the string.\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpfdt4_x8q.jl:13\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpfdt4_x8q.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4m7bobzw.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp4m7bobzw.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp4m7bobzw.jl:8\n   [2] top-level scope at /tmp/tmp4m7bobzw.jl:15\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4m7bobzw.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp4m7bobzw.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp4m7bobzw.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp4m7bobzw.jl:8\n   [2] top-level scope at /tmp/tmp4m7bobzw.jl:16\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4m7bobzw.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp4m7bobzw.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp4m7bobzw.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp4m7bobzw.jl:8\n   [2] top-level scope at /tmp/tmp4m7bobzw.jl:17\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4m7bobzw.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp4m7bobzw.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp4m7bobzw.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp4m7bobzw.jl:8\n   [2] top-level scope at /tmp/tmp4m7bobzw.jl:18\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4m7bobzw.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmp4m7bobzw.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp4m7bobzw.jl:8\n  Stacktrace:\n   [1] count_distinct_characters(::String)\
    \ at /tmp/tmp4m7bobzw.jl:8\n   [2] top-level scope at /tmp/tmp4m7bobzw.jl:19\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4m7bobzw.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4m7bobzw.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.0>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<code language=julia-1.0>\ncount_distinct_characters('Jerry')\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a string and returns the number\
    \ of distinct characters (regardless of case) in the string.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgcd9tn9k.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpgcd9tn9k.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,0,0)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuvgha_0l.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpuvgha_0l.jl:8\n\
    \   [2] top-level scope at /tmp/tmpuvgha_0l.jl:15\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuvgha_0l.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpuvgha_0l.jl:16\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpuvgha_0l.jl:8\n\
    \   [2] top-level scope at /tmp/tmpuvgha_0l.jl:16\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuvgha_0l.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpuvgha_0l.jl:17\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpuvgha_0l.jl:8\n\
    \   [2] top-level scope at /tmp/tmpuvgha_0l.jl:17\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuvgha_0l.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpuvgha_0l.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  UndefVarError: count_distinct_characters_helper not defined\n\
    \  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpuvgha_0l.jl:8\n\
    \   [2] top-level scope at /tmp/tmpuvgha_0l.jl:18\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuvgha_0l.jl:14\n  \ntest set: Error During\
    \ Test at /tmp/tmpuvgha_0l.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(::String) at /tmp/tmpuvgha_0l.jl:8\n\
    \   [2] top-level scope at /tmp/tmpuvgha_0l.jl:19\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuvgha_0l.jl:14\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuvgha_0l.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isDigit():\n          \
    \  count += 1\n    return count\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n\
    def count_distinct_characters(string::String)::Int64\n    count = 0\n    for c\
    \ in string:\n        if c.isUpper():\n            count += 1\n        elif c.isLower():\n\
    \            count += 1\n        elif c.isDigit():\n            count += 1\n \
    \   return count\n</code>\n<|/ a dscore=0 tags=haskell,functional-programming\
    \ |>\n<| a dscore=0 |>\n<code>\nimport Data.Char\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpm_qog7nu.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpm_qog7nu.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = HashSet{Char}(string.chars)\n    return count_distinct_characters.length\n\
    end\n</cell>\n<code language=julia-1.3>\ncount_distinct_characters(string::String)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the number of times each character appears in the string. For example, given\
    \ \"abcabcbb\", the function should return {\"a\" => 3, \"b\" => 2, \"c\" => 3,\
    \ \"b\" => 2}.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6y1dxzlt.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp6y1dxzlt.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = HashSet{Char}(string.chars)\n    \n    return count_distinct_characters.length\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7wx6zsse.jl:13\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp7wx6zsse.jl:13\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = string.count\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6w4x_4m_.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp6w4x_4m_.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \n        foldl(\n            +,\n            map(\n                char,\n\
    \                string\n            )\n        )\nend\n</cell>\n<code language=julia-1.5>\n\
    count_distinct_characters(strings)\n</cell>\n<text>\nExercise\nWrite a function\
    \ that takes a string and returns the number of distinct characters in that string.\
    \ \nFor example, given \"Jerry\" it should return 4.\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpz16k2vxs.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpz16k2vxs.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\n\
    candidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsp9pq7pr.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpsp9pq7pr.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = String.length(string)\n    \n    return count_distinct_characters\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8tlrnfop.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  type DataType has no field length\n  Stacktrace:\n\
    \   [1] getproperty(::Type{T} where T, ::Symbol) at ./Base.jl:28\n   [2] count_distinct_characters(::String)\
    \ at /tmp/tmp8tlrnfop.jl:9\n   [3] top-level scope at /tmp/tmp8tlrnfop.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp8tlrnfop.jl:17\n  \ntest set: Error During\
    \ Test at /tmp/tmp8tlrnfop.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    abcde\") == 5\n  type DataType has no field length\n  Stacktrace:\n   [1] getproperty(::Type{T}\
    \ where T, ::Symbol) at ./Base.jl:28\n   [2] count_distinct_characters(::String)\
    \ at /tmp/tmp8tlrnfop.jl:9\n   [3] top-level scope at /tmp/tmp8tlrnfop.jl:19\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp8tlrnfop.jl:17\n  \ntest set: Error During\
    \ Test at /tmp/tmp8tlrnfop.jl:20\n  Test threw exception\n  Expression: candidate(\"\
    abcdecadeCADE\") == 5\n  type DataType has no field length\n  Stacktrace:\n  \
    \ [1] getproperty(::Type{T} where T, ::Symbol) at ./Base.jl:28\n   [2] count_distinct_characters(::String)\
    \ at /tmp/tmp8tlrnfop.jl:9\n   [3] top-level scope at /tmp/tmp8tlrnfop.jl:20\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp8tlrnfop.jl:17\n  \ntest set: Error During\
    \ Test at /tmp/tmp8tlrnfop.jl:21\n  Test threw exception\n  Expression: candidate(\"\
    aaaaAAAAaaaa\") == 1\n  type DataType has no field length\n  Stacktrace:\n   [1]\
    \ getproperty(::Type{T} where T, ::Symbol) at ./Base.jl:28\n   [2] count_distinct_characters(::String)\
    \ at /tmp/tmp8tlrnfop.jl:9\n   [3] top-level scope at /tmp/tmp8tlrnfop.jl:21\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp8tlrnfop.jl:17\n  \ntest set: Error During\
    \ Test at /tmp/tmp8tlrnfop.jl:22\n  Test threw exception\n  Expression: candidate(\"\
    Jerry jERRY JeRRRY\") == 5\n  type DataType has no field length\n  Stacktrace:\n\
    \   [1] getproperty(::Type{T} where T, ::Symbol) at ./Base.jl:28\n   [2] count_distinct_characters(::String)\
    \ at /tmp/tmp8tlrnfop.jl:9\n   [3] top-level scope at /tmp/tmp8tlrnfop.jl:22\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp8tlrnfop.jl:17\n  \nTest Summary: | Error \
    \ Total\ntest set      |     5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8tlrnfop.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,0,0)\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters('Jerry')\n</cell>\n\
    <text>\nExercise\nWrite a function that takes a string and returns the number\
    \ of distinct characters (regardless of case) does it consist of. For example,\
    \ given \"xyzXYZ\", it should return 3.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpi4l10io7.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpi4l10io7.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n \
    \   3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters('xyzXYZ')\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the number of distinct\
    \ characters in a string that consist of only lowercase letters.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmwcdy2wp.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpmwcdy2wp.jl:10\n"
  exit_code: 1
  status: Exception

name: HumanEval_146_specialFilter
language: julia
results:
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to check your answer\nspecialFilter([15,\
    \ -73, 14, -15]) # => 1\nspecialFilter([33, -2, -3, 45, 21, 109]) # => 2\n</cell>\n\
    <text>\nQuestion 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvgdxyhtk.jl:17\nin expression starting at\
    \ /tmp/tmpvgdxyhtk.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your function with\
    \ the above example\n@assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkemsz0lh.jl:17\nin expression starting at\
    \ /tmp/tmpkemsz0lh.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10\n            if num\
    \ % 2 == 0 && num % 2 != 1\n                count += 1\n            end\n    \
    \    end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.4>\n\
    @time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n  \
    \  specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb_ei5qn8.jl:19\nin expression starting at\
    \ /tmp/tmpb_ei5qn8.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14,\
    \ -15])\n</cell>\n<code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21,\
    \ 109])\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of\
    \ numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3lofx9k0.jl:17\nin expression starting at\
    \ /tmp/tmp3lofx9k0.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\n# Run this cell to check your\
    \ answer\nspecialFilter([15, -73, 14, -15]) # => 1\nspecialFilter([33, -2, -3,\
    \ 45, 21, 109]) # => 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7lzwq448.jl:17\nin expression starting at\
    \ /tmp/tmp7lzwq448.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp344exfoz.jl:18\nin expression starting at\
    \ /tmp/tmp344exfoz.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums \n        if num > 10 && num % 2 == 1 &&\
    \ num % 2 == 0 && num % 2 != 0 && num % 2 != 1 \n            count += 1\n    \
    \    end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    # Run this cell to test your code\n@assert specialFilter([15, -73, 14, -15]) ==\
    \ 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\n\
    Question 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (2, 4, 6, 8, 10, 12).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnnybgcgf.jl:17\nin expression starting at\
    \ /tmp/tmpnnybgcgf.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\n# Run this cell to test your\
    \ function\n@assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc8rhch6b.jl:17\nin expression starting at\
    \ /tmp/tmpc8rhch6b.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n\
    @assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2\n</cell>\n<text>\nPart 3: Finding the first and last\
    \ indices where your function returns true\nNow that you know how to use filter\
    \ and count, you can now use find to find the indices where your function returns\
    \ true.\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb0mti1tf.jl:18\nin expression starting at\
    \ /tmp/tmpb0mti1tf.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to check your\
    \ answer\nspecialFilter([15, -73, 14, -15]) # => 1\nspecialFilter([33, -2, -3,\
    \ 45, 21, 109]) # => 2\n</cell>\n<text>\nQuestion 3.\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (2, 4, 6, 8, 10, 12).\n    For example:\n    specialFilter([15, -73,\
    \ 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp4n377d9.jl:17\nin expression starting at\
    \ /tmp/tmpp4n377d9.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10\n            count\
    \ += 1\n            if num % 2 == 1 && num % 3 == 1 && num % 5 == 1\n        \
    \        count += 1\n            end\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n\
    @assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptx0sqgob.jl:20\nin expression starting at\
    \ /tmp/tmptx0sqgob.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are even\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsqg3hnah.jl:17\nin expression starting at\
    \ /tmp/tmpsqg3hnah.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.0>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpos85yfxd.jl:17\nin expression starting at\
    \ /tmp/tmpos85yfxd.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n   \
    \ return count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to test\
    \ your function\n@assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7f64qlzr.jl:18\nin expression starting at\
    \ /tmp/tmp7f64qlzr.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if n % 2\
    \ == 1\n                count += 1\n            elseif n % 2 == 0\n          \
    \      if n % 4 == 0\n                    count += 1\n                end\n  \
    \          end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.3>\n\
    @time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \ specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx3dh5bo3.jl:23\nin expression starting at\
    \ /tmp/tmpx3dh5bo3.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.4>\n# Run this cell to check your answer\nspecialFilter([15,\
    \ -73, 14, -15]); # => 1\nspecialFilter([33, -2, -3, 45, 21, 109]); # => 2\n</cell>\n\
    <text>\nPart 2: Functional Programming in Julia\nNow that we have seen how to\
    \ use loops to solve problems, we will look at how we can use Julia's functional\
    \ programming features to write more concise and readable code. Functional programming\
    \ is one of the core elements of Julia's ecosystem, and Julia's syntax is designed\
    \ to make writing code concise and readable. Here is an example of a problem that\
    \ might be solved in a more Julian way:\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmnwxdp1j.jl:17\nin expression starting at\
    \ /tmp/tmpmnwxdp1j.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg57n36cu.jl:17\nin expression starting at\
    \ /tmp/tmpg57n36cu.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your\
    \ code\n@assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyz1qx24y.jl:17\nin expression starting at\
    \ /tmp/tmpyz1qx24y.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.0>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.0>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc5su0o1x.jl:17\nin expression starting at\
    \ /tmp/tmpc5su0o1x.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if n % 2\
    \ == 1\n                count += 1\n            end\n            if n % 2 == 0\n\
    \                if n % 4 == 0\n                    count += 1\n             \
    \   end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.0>\n@time specialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.0>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpti3212d3.jl:24\nin expression starting at\
    \ /tmp/tmpti3212d3.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu7ujnvz_.jl:18\nin expression starting at\
    \ /tmp/tmpu7ujnvz_.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3z5ovpne.jl:18\nin expression starting at\
    \ /tmp/tmp3z5ovpne.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgp7i9zau.jl:17\nin expression starting at\
    \ /tmp/tmpgp7i9zau.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd6amv_j_.jl:17\nin expression starting at\
    \ /tmp/tmpd6amv_j_.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmposupevqi.jl:17\nin expression starting at\
    \ /tmp/tmposupevqi.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 == 1 &&\
    \ num % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpptucnw1a.jl:17\nin expression starting at\
    \ /tmp/tmpptucnw1a.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to check your answer\nspecialFilter([15,\
    \ -73, 14, -15]) # => 1\nspecialFilter([33, -2, -3, 45, 21, 109]) # => 2\n</cell>\n\
    <text>\nQuestion 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqb1tk60c.jl:17\nin expression starting at\
    \ /tmp/tmpqb1tk60c.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 == 1 &&\
    \ num % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4fuz4jzy.jl:17\nin expression starting at\
    \ /tmp/tmp4fuz4jzy.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\n@time specialFilter([15, -73,\
    \ 14, -15])\n</cell>\n<code language=julia-1.0>\n@time specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprrbvesai.jl:17\nin expression starting at\
    \ /tmp/tmprrbvesai.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for num in nums\n        if num > 10\n          \
    \  if num % 2 == 1\n                if num % 3 == 0\n                    if num\
    \ % 5 == 0\n                        count += 1\n                    end\n    \
    \            end\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8t3e2sc3.jl:24\nin expression starting at\
    \ /tmp/tmp8t3e2sc3.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 3 == 1 && n % 5 == 1 \n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnyvd1kko.jl:17\nin expression starting at\
    \ /tmp/tmpnyvd1kko.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10\n            if num\
    \ % 2 == 0 && num % 2 != 1\n                count += 1\n            end\n    \
    \    end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    # Run this cell to test your function\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\n\
    Question 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even \n    (2, 4, 6, 8, 10, 12).\n\
    \    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp73rrlzis.jl:19\nin expression starting at\
    \ /tmp/tmp73rrlzis.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            count +=\
    \ 1\n            if n % 2 == 1\n                count += 1\n                if\
    \ n % 4 == 1\n                    count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73,\
    \ 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9c6ckfc7.jl:21\nin expression starting at\
    \ /tmp/tmp9c6ckfc7.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if n % 2\
    \ == 1\n                count += 1\n            end\n        end\n    end\n  \
    \  return count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to check\
    \ your answer\nspecialFilter([15, -73, 14, -15]) # => 1\nspecialFilter([33, -2,\
    \ -3, 45, 21, 109]) # => 2\n</cell>\n<text>\nQuestion 9\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkzzp9x0b.jl:19\nin expression starting at\
    \ /tmp/tmpkzzp9x0b.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 == 1 &&\
    \ num % 2 == 0 && num > floor(num/10)\n            count += 1\n        end\n \
    \   end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n# Run this\
    \ cell to test your function\n@assert specialFilter([15, -73, 14, -15]) == 1\n\
    @assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\nProblem\
    \ 3\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are divisible by 7 and \n    the\
    \ first and last digits are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv0h07l7a.jl:17\nin expression starting at\
    \ /tmp/tmpv0h07l7a.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph0kp0kt_.jl:17\nin expression starting at\
    \ /tmp/tmph0kp0kt_.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp428qpn06.jl:17\nin expression starting at\
    \ /tmp/tmp428qpn06.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for num in nums \n        if num > 10 && num % 2\
    \ == 1 && num % 2 == 0 && num % 2 != 1 && num % 2 != 0 \n            count +=\
    \ 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    # Run this cell to test your function\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\n\
    Question 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (2, 4, 6, 8, 10).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo7_ml2aq.jl:18\nin expression starting at\
    \ /tmp/tmpo7_ml2aq.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n   \
    \ return count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to check\
    \ your answer\nspecialFilter([15, -73, 14, -15]) # => 1\nspecialFilter([33, -2,\
    \ -3, 45, 21, 109]) # => 2\n</cell>\n<text>\nQuestion 7\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpldpvc8vn.jl:18\nin expression starting at\
    \ /tmp/tmpldpvc8vn.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for num in nums\n        if num > 10\n          \
    \  if num % 2 == 1\n                if num % 10 == 1\n                    count\
    \ += 1\n                end\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your\
    \ function above\n@assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (2, 4, 6, 8, 10, 12).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx3lyc2kf.jl:22\nin expression starting at\
    \ /tmp/tmpx3lyc2kf.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            count +=\
    \ 1\n            if n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n                count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    # Run this cell to test your function\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\n\
    Question 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0we2tl_t.jl:19\nin expression starting at\
    \ /tmp/tmp0we2tl_t.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\nspecialFilter([15, -73, 14,\
    \ -15])\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of\
    \ numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbr0vpyp2.jl:17\nin expression starting at\
    \ /tmp/tmpbr0vpyp2.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n   \
    \     end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    # Run this cell to check your answer\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <text>\nQuestion 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq_p4wo6v.jl:17\nin expression starting at\
    \ /tmp/tmpq_p4wo6v.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0ae13xm1.jl:17\nin expression starting at\
    \ /tmp/tmp0ae13xm1.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3wn320o0.jl:17\nin expression starting at\
    \ /tmp/tmp3wn320o0.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your code\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6r4cxcej.jl:17\nin expression starting at\
    \ /tmp/tmp6r4cxcej.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10\n            if\
    \ n % 2 == 1\n                if n % 4 == 1\n                    count += 1\n\
    \                end\n            end\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb1r__m2c.jl:22\nin expression starting at\
    \ /tmp/tmpb1r__m2c.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9y8irp5g.jl:18\nin expression starting at\
    \ /tmp/tmp9y8irp5g.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw_sywve5.jl:17\nin expression starting at\
    \ /tmp/tmpw_sywve5.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n\
    @assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2\n</cell>\n<text>\nQuestion 4\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi6nibarn.jl:18\nin expression starting at\
    \ /tmp/tmpi6nibarn.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwg1o2coz.jl:17\nin expression starting at\
    \ /tmp/tmpwg1o2coz.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 == 1 &&\
    \ num % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu__wj4m4.jl:17\nin expression starting at\
    \ /tmp/tmpu__wj4m4.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your code\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (2, 4, 6, 8, 10, 12).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxl5sny21.jl:17\nin expression starting at\
    \ /tmp/tmpxl5sny21.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4rthprfi.jl:17\nin expression starting at\
    \ /tmp/tmp4rthprfi.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0o5228c7.jl:17\nin expression starting at\
    \ /tmp/tmp0o5228c7.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpez_ni8lm.jl:17\nin expression starting at\
    \ /tmp/tmpez_ni8lm.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums \n        if num > 10 && num % 2 == 1 &&\
    \ num % 2 == 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw6086dcp.jl:17\nin expression starting at\
    \ /tmp/tmpw6086dcp.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqq74i6nx.jl:17\nin expression starting at\
    \ /tmp/tmpqq74i6nx.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6g9r4vnj.jl:17\nin expression starting at\
    \ /tmp/tmp6g9r4vnj.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your\
    \ function\n@assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp90rfw2sj.jl:17\nin expression starting at\
    \ /tmp/tmp90rfw2sj.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn28fxggx.jl:17\nin expression starting at\
    \ /tmp/tmpn28fxggx.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10\n            if\
    \ n % 2 == 1\n                count += 1\n            end\n            if n %\
    \ 2 == 0\n                if n % 4 == 0\n                    count += 1\n    \
    \            end\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp626iwd70.jl:25\nin expression starting at\
    \ /tmp/tmp626iwd70.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppmbdvs1c.jl:18\nin expression starting at\
    \ /tmp/tmppmbdvs1c.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmped7y5f49.jl:17\nin expression starting at\
    \ /tmp/tmped7y5f49.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 == 1 &&\
    \ num % 2 == 0 && num % 2 != 0\n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1nc0k0zl.jl:17\nin expression starting at\
    \ /tmp/tmp1nc0k0zl.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73,\
    \ 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq8glrelp.jl:17\nin expression starting at\
    \ /tmp/tmpq8glrelp.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\n\
    Part III: Refactoring your code\nThe code above is very repetitive. Let's refactor\
    \ it.\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdv_ho0di.jl:17\nin expression starting at\
    \ /tmp/tmpdv_ho0di.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    \n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your code\n@test\
    \ specialFilter([15, -73, 14, -15]) == 1 \n@test specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2 \n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc5kp0ls2.jl:19\nin expression starting at\
    \ /tmp/tmpc5kp0ls2.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy5z8q1gv.jl:17\nin expression starting at\
    \ /tmp/tmpy5z8q1gv.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your code\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdbmh5i3k.jl:18\nin expression starting at\
    \ /tmp/tmpdbmh5i3k.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73,\
    \ 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1gj2jhe5.jl:17\nin expression starting at\
    \ /tmp/tmp1gj2jhe5.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 4\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe3xs1vxq.jl:17\nin expression starting at\
    \ /tmp/tmpe3xs1vxq.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n\
    @assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxwhj2d9d.jl:18\nin expression starting at\
    \ /tmp/tmpxwhj2d9d.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz46w7lu2.jl:17\nin expression starting at\
    \ /tmp/tmpz46w7lu2.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4egn2cas.jl:17\nin expression starting at\
    \ /tmp/tmp4egn2cas.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4l6264hs.jl:17\nin expression starting at\
    \ /tmp/tmp4l6264hs.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsf221omh.jl:17\nin expression starting at\
    \ /tmp/tmpsf221omh.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your code\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz7utdsi9.jl:17\nin expression starting at\
    \ /tmp/tmpz7utdsi9.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your code\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (2, 4, 6, 8, 10, 12).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcaavlxfr.jl:17\nin expression starting at\
    \ /tmp/tmpcaavlxfr.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to check your\
    \ answer\nspecialFilter([15, -73, 14, -15]) # => 1\nspecialFilter([33, -2, -3,\
    \ 45, 21, 109]) # => 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmikr36cc.jl:17\nin expression starting at\
    \ /tmp/tmpmikr36cc.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if n % 2\
    \ == 1\n                if n % 4 == 1\n                    count += 1\n      \
    \          end\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp64qb_kst.jl:21\nin expression starting at\
    \ /tmp/tmp64qb_kst.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your\
    \ code\n@assert specialFilter([15, -73, 14, -15]) == 1 \n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nQuestion 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv76ek163.jl:17\nin expression starting at\
    \ /tmp/tmpv76ek163.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if n % 2\
    \ == 1\n                count += 1\n            end\n        end\n    end\n  \
    \  return count\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7wdugsst.jl:19\nin expression starting at\
    \ /tmp/tmp7wdugsst.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for num in nums\n        if num > 10\n          \
    \  if num % 2 == 0\n                if num % 4 == 0\n                    if num\
    \ % 8 == 0\n                        count += 1\n                    end\n    \
    \            end\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps3gih_tl.jl:24\nin expression starting at\
    \ /tmp/tmps3gih_tl.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 4\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd8iipo8n.jl:17\nin expression starting at\
    \ /tmp/tmpd8iipo8n.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw5ap8c_3.jl:17\nin expression starting at\
    \ /tmp/tmpw5ap8c_3.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd8y2xjg1.jl:17\nin expression starting at\
    \ /tmp/tmpd8y2xjg1.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your code\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjjjg6b7c.jl:17\nin expression starting at\
    \ /tmp/tmpjjjg6b7c.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your\
    \ function\n@assert specialFilter([15, -73, 14, -15]) == 1 \n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nQuestion 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcrg7ljrl.jl:17\nin expression starting at\
    \ /tmp/tmpcrg7ljrl.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your function above\n\
    @assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2\n</cell>\n<text>\nProblem 2b\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl03g48ig.jl:17\nin expression starting at\
    \ /tmp/tmpl03g48ig.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0j9dsj7h.jl:17\nin expression starting at\
    \ /tmp/tmp0j9dsj7h.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to check your answer\nspecialFilter([15,\
    \ -73, 14, -15]) # => 1\nspecialFilter([33, -2, -3, 45, 21, 109]) # => 2\n</cell>\n\
    <text>\nQuestion 2.2\nWrite a function that takes an array of numbers as input\
    \ and returns \n    the number of elements in the array that are greater than\
    \ 10 and both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n\
    \    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmb84k0lq.jl:17\nin expression starting at\
    \ /tmp/tmpmb84k0lq.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpujvyhrby.jl:17\nin expression starting at\
    \ /tmp/tmpujvyhrby.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run this cell to check your answer\n\
    specialFilter([15, -73, 14, -15]) # => 1\nspecialFilter([33, -2, -3, 45, 21, 109])\
    \ # => 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an array of\
    \ numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdxwyt41a.jl:18\nin expression starting at\
    \ /tmp/tmpdxwyt41a.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10\n            if num\
    \ % 2 == 1 && num % 2 == 0\n                count += 1\n            end\n    \
    \    end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    # Run this cell to test your function\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\n\
    Question 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi8lqrsib.jl:19\nin expression starting at\
    \ /tmp/tmpi8lqrsib.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpji0mmyq5.jl:17\nin expression starting at\
    \ /tmp/tmpji0mmyq5.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10\n            if num\
    \ % 2 == 1\n                if num % 10 == 1\n                    count += 1\n\
    \                end\n            end\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 4\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa6_7yfhu.jl:21\nin expression starting at\
    \ /tmp/tmpa6_7yfhu.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            count +=\
    \ 1\n            if n % 2 == 1\n                if n % 4 == 1\n              \
    \      count += 1\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.4>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.4>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6pvszh4m.jl:21\nin expression starting at\
    \ /tmp/tmp6pvszh4m.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to check your answer\nspecialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<text>\nQuestion 9\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_9i9yi2o.jl:17\nin expression starting at\
    \ /tmp/tmp_9i9yi2o.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 3 == 1 && n % 5 == 1 && n % 7 == 1 \n            count += 1\n        end\n \
    \   end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfc1c3gao.jl:17\nin expression starting at\
    \ /tmp/tmpfc1c3gao.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n   \
    \ return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73,\
    \ 14, -15])\n</cell>\n<code language=julia-1.5>\nspecialFilter([33, -2, -3, 45,\
    \ 21, 109])\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3yalhfl8.jl:18\nin expression starting at\
    \ /tmp/tmp3yalhfl8.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if n % 2\
    \ == 1\n                count += 1\n            end\n            if n % 2 == 0\n\
    \                if n % 4 == 1\n                    count += 1\n             \
    \   end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\n# Run this cell to test your function\n@assert specialFilter([15,\
    \ -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n\
    </cell>\n<text>\nProblem 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are divisible\
    \ by 7 and \n    the first and last digits are even numbers.\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphot262y2.jl:24\nin expression starting at\
    \ /tmp/tmphot262y2.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyhvtv67n.jl:17\nin expression starting at\
    \ /tmp/tmpyhvtv67n.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp64xjavvm.jl:17\nin expression starting at\
    \ /tmp/tmp64xjavvm.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if n % 2\
    \ == 1\n                count += 1\n            elseif n % 2 == 0\n          \
    \      if n % 4 == 0\n                    count += 1\n                end\n  \
    \          end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    # Run this cell to check your answer\nspecialFilter([15, -73, 14, -15]); # =>\
    \ 1\nspecialFilter([33, -2, -3, 45, 21, 109]); # => 2\n</cell>\n<text>\nQuestion\
    \ 3\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxbjvdcbz.jl:23\nin expression starting at\
    \ /tmp/tmpxbjvdcbz.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3pk_tf_c.jl:17\nin expression starting at\
    \ /tmp/tmp3pk_tf_c.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.4>\n# Run this cell to test your\
    \ function\n@assert specialFilter([15, -73, 14, -15]) == 1 \n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nQuestion 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (2, 4, 6, 8, 10).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplyr_xs9n.jl:17\nin expression starting at\
    \ /tmp/tmplyr_xs9n.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your\
    \ function\n@assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp94ngimg8.jl:17\nin expression starting at\
    \ /tmp/tmp94ngimg8.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n\
    @assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp62a61_7k.jl:18\nin expression starting at\
    \ /tmp/tmp62a61_7k.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.0>\n# Run this cell to test your function\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9e0po_le.jl:17\nin expression starting at\
    \ /tmp/tmp9e0po_le.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 == 1 &&\
    \ num % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnbnv4tbw.jl:17\nin expression starting at\
    \ /tmp/tmpnbnv4tbw.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are even\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp79jmfmx1.jl:17\nin expression starting at\
    \ /tmp/tmp79jmfmx1.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for num in nums\n        if num > 10\n          \
    \  if num % 2 == 1\n                if num % 10 == 1\n                    count\
    \ += 1\n                end\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprt1jqgkq.jl:22\nin expression starting at\
    \ /tmp/tmprt1jqgkq.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmph5ka4n.jl:17\nin expression starting at\
    \ /tmp/tmpmph5ka4n.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnx3stefp.jl:17\nin expression starting at\
    \ /tmp/tmpnx3stefp.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpij64h94g.jl:18\nin expression starting at\
    \ /tmp/tmpij64h94g.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_80whcxs.jl:17\nin expression starting at\
    \ /tmp/tmp_80whcxs.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@time println(specialFilter([15, -73, 14,\
    \ -15]))\n@time println(specialFilter([33, -2, -3, 45, 21, 109]))\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl4nf0c8p.jl:17\nin expression starting at\
    \ /tmp/tmpl4nf0c8p.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for num in nums\n        if num > 10\n          \
    \  if num % 2 == 0\n                if num % 3 == 0\n                    if num\
    \ % 5 == 0\n                        count += 1\n                    end\n    \
    \            end\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoban0k07.jl:24\nin expression starting at\
    \ /tmp/tmpoban0k07.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n@time begin\n    specialFilter([15,\
    \ -73, 14, -15])\nend\n</cell>\n<code language=julia-1.5>\n@time begin\n    specialFilter([33,\
    \ -2, -3, 45, 21, 109])\nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp475hpnb8.jl:17\nin expression starting at\
    \ /tmp/tmp475hpnb8.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nPart 3: Finding Primes\nThe previous two parts\
    \ required you to write functions for checking if a number is a prime and to print\
    \ out all the prime numbers less than a certain number. Julia's built-in function\
    \ primes() does this for you. Run the cell below to see an example of how it works.\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe3wvke5s.jl:17\nin expression starting at\
    \ /tmp/tmpe3wvke5s.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if n % 2\
    \ == 1\n                count += 1\n            end\n        end\n    end\n  \
    \  return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdky9hpn4.jl:19\nin expression starting at\
    \ /tmp/tmpdky9hpn4.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 == 1 &&\
    \ num % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise: Write a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfm3h37ut.jl:17\nin expression starting at\
    \ /tmp/tmpfm3h37ut.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphuotbcsc.jl:17\nin expression starting at\
    \ /tmp/tmphuotbcsc.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14,\
    \ -15])\n</cell>\n<code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21,\
    \ 109])\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of\
    \ numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_xhh1_p0.jl:17\nin expression starting at\
    \ /tmp/tmp_xhh1_p0.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for num in nums\n        if num > 10\n          \
    \  if num % 2 == 0 && num % 2 != 1\n                count += 1\n            end\n\
    \        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.5>\n\
    @time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \ specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp866s9evb.jl:20\nin expression starting at\
    \ /tmp/tmp866s9evb.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpky0inp8k.jl:17\nin expression starting at\
    \ /tmp/tmpky0inp8k.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10\n            if\
    \ n % 2 == 1\n                if n % 4 == 1\n                    count += 1\n\
    \                end\n            end\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your code\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nProblem 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are even\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_g0fm34m.jl:22\nin expression starting at\
    \ /tmp/tmp_g0fm34m.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjzgksm66.jl:17\nin expression starting at\
    \ /tmp/tmpjzgksm66.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 3 == 1 && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n \
    \       end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    # Run this cell to test your function with the above example\n@assert specialFilter([15,\
    \ -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n\
    </cell>\n<text>\nQuestion 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp03h_eqq6.jl:17\nin expression starting at\
    \ /tmp/tmp03h_eqq6.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if mod(n,\
    \ 2) == 1 && mod(n, 3) == 1 && mod(n, 5) == 1 && mod(n, 7) == 1 && mod(n, 9) ==\
    \ 1\n                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n@time specialFilter([15, -73,\
    \ 14, -15])\n</cell>\n<code language=julia-1.5>\n@time specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7ctrcz_g.jl:19\nin expression starting at\
    \ /tmp/tmp7ctrcz_g.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if n % 2\
    \ == 1\n                count += 1\n            elseif n % 2 == 0\n          \
    \      if n % 4 == 0\n                    count += 1\n                end\n  \
    \          end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    # Run this cell to check your answer\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\n\
    Part III: Finding Primes\nThe previous two functions should only have one problem:\
    \ they don't handle negative numbers. Write a function that finds all prime numbers\
    \ less than a given number. Your function should take in a number as an input\
    \ and then return all of the prime numbers less than that number.\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuivyblvb.jl:23\nin expression starting at\
    \ /tmp/tmpuivyblvb.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9lx4d91_.jl:17\nin expression starting at\
    \ /tmp/tmp9lx4d91_.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\nspecialFilter([15, -73, 14,\
    \ -15])\n</cell>\n<text>\nWrite a function that takes an array of numbers as input\
    \ and returns \n    the number of elements in the array that are greater than\
    \ 10 and both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n\
    \    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnh7tbj4i.jl:17\nin expression starting at\
    \ /tmp/tmpnh7tbj4i.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if mod(n,\
    \ 2) == 1 && mod(n, 3) == 1 && mod(n, 5) == 1 && mod(n, 7) == 1 && mod(n, 9) ==\
    \ 1\n                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your\
    \ function\n@assert specialFilter([15, -73, 14, -15]) == 1 \n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nQuestion 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjg2jre6p.jl:19\nin expression starting at\
    \ /tmp/tmpjg2jre6p.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.4>\n# Run this cell to check your answer\nspecialFilter([15,\
    \ -73, 14, -15]) # => 1\nspecialFilter([33, -2, -3, 45, 21, 109]) # => 2\n</cell>\n\
    <text>\nQuestion 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzuc09e7x.jl:17\nin expression starting at\
    \ /tmp/tmpzuc09e7x.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5dw0ktdc.jl:17\nin expression starting at\
    \ /tmp/tmp5dw0ktdc.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.4>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.4>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmq85tko9.jl:17\nin expression starting at\
    \ /tmp/tmpmq85tko9.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are even\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmyvx2cul.jl:17\nin expression starting at\
    \ /tmp/tmpmyvx2cul.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your function with\
    \ the above example\n@assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\nProblem 4\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp76_gfbv4.jl:17\nin expression starting at\
    \ /tmp/tmp76_gfbv4.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 == 1 &&\
    \ num % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 4\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkao9f226.jl:17\nin expression starting at\
    \ /tmp/tmpkao9f226.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n   \
    \     end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    # Run this cell to check your answer\nspecialFilter([15, -73, 14, -15]) # => 1\n\
    specialFilter([33, -2, -3, 45, 21, 109]) # => 2\n</cell>\n<text>\nQuestion 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n  \
    \  specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd6r8kzad.jl:17\nin expression starting at\
    \ /tmp/tmpd6r8kzad.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 4\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf50n009n.jl:17\nin expression starting at\
    \ /tmp/tmpf50n009n.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 3 == 1 && n % 5 == 1 && n % 7 == 1 \n            count += 1\n        end\n \
    \   end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<code language=julia-1.5>\nspecialFilter([33, -2, -3,\
    \ 45, 21, 109])\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4ql76m4k.jl:17\nin expression starting at\
    \ /tmp/tmp4ql76m4k.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if n % 2\
    \ == 1\n                if n % 4 == 1\n                    count += 1\n      \
    \          end\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to check your answer\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 4.\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpftwweq8d.jl:21\nin expression starting at\
    \ /tmp/tmpftwweq8d.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0 && n % 1 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpku787dkt.jl:17\nin expression starting at\
    \ /tmp/tmpku787dkt.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.3>\n# Run this cell to check your\
    \ answer\n@assert specialFilter([15, -73, 14, -15]) == 1 \n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nQuestion 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0vfhkwp7.jl:17\nin expression starting at\
    \ /tmp/tmp0vfhkwp7.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppl0hnpg3.jl:17\nin expression starting at\
    \ /tmp/tmppl0hnpg3.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5hozduvv.jl:17\nin expression starting at\
    \ /tmp/tmp5hozduvv.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if n % 2\
    \ == 1\n                count += 1\n            end\n        end\n    end\n  \
    \  return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc7okh70e.jl:19\nin expression starting at\
    \ /tmp/tmpc7okh70e.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10\n            if\
    \ n % 2 == 1\n                count += 1\n            end\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to\
    \ test your function with the above example\n@assert specialFilter([15, -73, 14,\
    \ -15]) == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n\
    <text>\nQuestion 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf885ar26.jl:20\nin expression starting at\
    \ /tmp/tmpf885ar26.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcjx56wu_.jl:18\nin expression starting at\
    \ /tmp/tmpcjx56wu_.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 == 1 &&\
    \ num % 2 == 0 && num > floor(num/10)\n            count += 1\n        end\n \
    \   end\n    return count\nend\n</cell>\n<code language=julia-1.0>\nspecialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<code language=julia-1.0>\nspecialFilter([33, -2, -3,\
    \ 45, 21, 109])\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are even\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8a9skvj1.jl:17\nin expression starting at\
    \ /tmp/tmp8a9skvj1.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.4>\n# Run your function on the given array of\
    \ numbers\nspecialFilter([15, -73, 14, -15])\n</cell>\n<text>\nQuestion 3\nWrite\
    \ a function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph9j5lspd.jl:17\nin expression starting at\
    \ /tmp/tmph9j5lspd.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzwa3foj5.jl:17\nin expression starting at\
    \ /tmp/tmpzwa3foj5.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5h_rlbns.jl:17\nin expression starting at\
    \ /tmp/tmp5h_rlbns.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n\
    @assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptc3iexu5.jl:18\nin expression starting at\
    \ /tmp/tmptc3iexu5.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10\n            if num\
    \ % 2 == 0\n                if num % 10 == 1\n                    count += 1\n\
    \                end\n            end\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzk3u6l5s.jl:21\nin expression starting at\
    \ /tmp/tmpzk3u6l5s.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0 && n % 1 != 0 && n % 1 != 9\n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to\
    \ check your answer\nspecialFilter([15, -73, 14, -15]) # => 1\nspecialFilter([33,\
    \ -2, -3, 45, 21, 109]) # => 2\n</cell>\n<text>\nQuestion 3\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi6np10vx.jl:17\nin expression starting at\
    \ /tmp/tmpi6np10vx.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to check your answer\nspecialFilter([15,\
    \ -73, 14, -15]) # => 1\nspecialFilter([33, -2, -3, 45, 21, 109]) # => 2\n</cell>\n\
    <text>\nQuestion 2.\nWrite a function that takes an array of numbers as input\
    \ and returns \n    the number of elements in the array that are greater than\
    \ 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n\
    \    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphlz0u_ex.jl:17\nin expression starting at\
    \ /tmp/tmphlz0u_ex.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n   \
    \ return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73,\
    \ 14, -15])\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp49e4iebu.jl:18\nin expression starting at\
    \ /tmp/tmp49e4iebu.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvw44tcvd.jl:17\nin expression starting at\
    \ /tmp/tmpvw44tcvd.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm72tdm8h.jl:18\nin expression starting at\
    \ /tmp/tmpm72tdm8h.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise: Write a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu58mxv64.jl:17\nin expression starting at\
    \ /tmp/tmpu58mxv64.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 == 1 &&\
    \ num % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\n# Run this cell to check your answer\n\
    specialFilter([15, -73, 14, -15]) # => 1\nspecialFilter([33, -2, -3, 45, 21, 109])\
    \ # => 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an array of\
    \ numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are even\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyc5kejp9.jl:17\nin expression starting at\
    \ /tmp/tmpyc5kejp9.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 == 1 &&\
    \ num % 2 == 0 && num % 2 != 0\n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptfa42kp_.jl:17\nin expression starting at\
    \ /tmp/tmptfa42kp_.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 &&\
    \ n % 3 == 1 && n % 5 == 1 \n            count += 1\n        end\n    end\n  \
    \  return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73,\
    \ 14, -15])\n</cell>\n<code language=julia-1.5>\nspecialFilter([33, -2, -3, 45,\
    \ 21, 109])\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are even\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppoiwjsix.jl:18\nin expression starting at\
    \ /tmp/tmppoiwjsix.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz7ysjj2n.jl:17\nin expression starting at\
    \ /tmp/tmpz7ysjj2n.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            count +=\
    \ 1\n            if n % 2 == 1 && n % 3 == 1\n                count += 1\n   \
    \     end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.0>\n\
    @time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \ specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcnb55676.jl:19\nin expression starting at\
    \ /tmp/tmpcnb55676.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0 && n % 10 == 1 && n % 10 == 9 \n            count += 1\n        end\n \
    \   end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<code language=julia-1.5>\nspecialFilter([33, -2, -3,\
    \ 45, 21, 109])\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdq3j0mve.jl:17\nin expression starting at\
    \ /tmp/tmpdq3j0mve.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10\n            if num\
    \ % 2 == 1 && num % 3 == 1 && num % 5 == 1\n                count += 1\n     \
    \       end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n\
    # Run this cell to test your code\n@test specialFilter([15, -73, 14, -15]) ==\
    \ 1 \n@test specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\nQuestion\
    \ 3\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptin1ctk6.jl:19\nin expression starting at\
    \ /tmp/tmptin1ctk6.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            count +=\
    \ 1\n            if n % 2 == 1 && n % 3 == 1\n                count += 1\n   \
    \     end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.5>\nspecialFilter([33,\
    \ -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiw0v1jin.jl:19\nin expression starting at\
    \ /tmp/tmpiw0v1jin.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfe6g61ep.jl:17\nin expression starting at\
    \ /tmp/tmpfe6g61ep.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp632g4qwa.jl:18\nin expression starting at\
    \ /tmp/tmp632g4qwa.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if n % 2\
    \ == 1\n                if n % 4 == 1\n                    count += 1\n      \
    \          end\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.0>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.0>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd8674qju.jl:21\nin expression starting at\
    \ /tmp/tmpd8674qju.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.4>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.4>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqrg0iolv.jl:17\nin expression starting at\
    \ /tmp/tmpqrg0iolv.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 4\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp091fbuxw.jl:17\nin expression starting at\
    \ /tmp/tmp091fbuxw.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 3 == 1 && n % 5 == 1 && n % 7 == 1 \n            count += 1\n        end\n \
    \   end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1ujt4yo6.jl:17\nin expression starting at\
    \ /tmp/tmp1ujt4yo6.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are even\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpakqorx2c.jl:17\nin expression starting at\
    \ /tmp/tmpakqorx2c.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxay12tzz.jl:18\nin expression starting at\
    \ /tmp/tmpxay12tzz.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for num in nums\n        if num > 10\n          \
    \  count += 1\n            if num % 2 == 1 && num % 2 == 0\n                count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.5>\nspecialFilter([33,\
    \ -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp66z7pau1.jl:20\nin expression starting at\
    \ /tmp/tmp66z7pau1.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo5tt4zci.jl:17\nin expression starting at\
    \ /tmp/tmpo5tt4zci.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.0>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.0>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsdqfa2je.jl:17\nin expression starting at\
    \ /tmp/tmpsdqfa2je.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr7apty7f.jl:17\nin expression starting at\
    \ /tmp/tmpr7apty7f.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqalttum0.jl:17\nin expression starting at\
    \ /tmp/tmpqalttum0.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to check your answer\nspecialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6dnj4kob.jl:17\nin expression starting at\
    \ /tmp/tmp6dnj4kob.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpln9982mc.jl:17\nin expression starting at\
    \ /tmp/tmpln9982mc.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are even\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjy0k8s26.jl:17\nin expression starting at\
    \ /tmp/tmpjy0k8s26.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 !=\
    \ 0 && num % 2 != 1 && num % 2 != 3\n            count += 1\n        end\n   \
    \ end\n    \n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1i99y5bq.jl:19\nin expression starting at\
    \ /tmp/tmp1i99y5bq.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.0>\n# Run this cell to test your function\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv_xicqvf.jl:17\nin expression starting at\
    \ /tmp/tmpv_xicqvf.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n   \
    \ return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpap9d03hc.jl:18\nin expression starting at\
    \ /tmp/tmpap9d03hc.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10\n            if num\
    \ % 2 == 0 && num % 2 != 0 && num % 2 != 1\n                count += 1\n     \
    \       end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    # Run this cell to test your function\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\n\
    Question 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5eku5pz6.jl:19\nin expression starting at\
    \ /tmp/tmp5eku5pz6.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if n % 2\
    \ == 1\n                if n % 4 == 0\n                    count += 1\n      \
    \          end\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbz5y7h2w.jl:21\nin expression starting at\
    \ /tmp/tmpbz5y7h2w.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14,\
    \ -15])\n</cell>\n<code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21,\
    \ 109])\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of\
    \ numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are even\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu0h9ez5u.jl:17\nin expression starting at\
    \ /tmp/tmpu0h9ez5u.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps3v5o5g5.jl:17\nin expression starting at\
    \ /tmp/tmps3v5o5g5.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqpyqlsqj.jl:18\nin expression starting at\
    \ /tmp/tmpqpyqlsqj.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.0>\n# Run this cell to test your code\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgj7zdr52.jl:17\nin expression starting at\
    \ /tmp/tmpgj7zdr52.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm7e77q92.jl:17\nin expression starting at\
    \ /tmp/tmpm7e77q92.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n\
    @assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpup1b2rbq.jl:18\nin expression starting at\
    \ /tmp/tmpup1b2rbq.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv2ajbww8.jl:18\nin expression starting at\
    \ /tmp/tmpv2ajbww8.jl:18\n"
  exit_code: 1
  status: SyntaxError

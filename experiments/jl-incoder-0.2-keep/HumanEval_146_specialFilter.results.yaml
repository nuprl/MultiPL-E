name: HumanEval_146_specialFilter
language: julia
results:
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to check your answer\nspecialFilter([15,\
    \ -73, 14, -15]) # => 1\nspecialFilter([33, -2, -3, 45, 21, 109]) # => 2\n</cell>\n\
    <text>\nQuestion 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpfcr2ynxt.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpfcr2ynxt.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your function with\
    \ the above example\n@assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpv3thx1x_.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpv3thx1x_.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10\n            if num\
    \ % 2 == 0 && num % 2 != 1\n                count += 1\n            end\n    \
    \    end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.4>\n\
    @time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n  \
    \  specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp80nb0nhq.jl:19\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp80nb0nhq.jl:19\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14,\
    \ -15])\n</cell>\n<code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21,\
    \ 109])\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of\
    \ numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpab9_az6s.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpab9_az6s.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\n# Run this cell to check your\
    \ answer\nspecialFilter([15, -73, 14, -15]) # => 1\nspecialFilter([33, -2, -3,\
    \ 45, 21, 109]) # => 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp11787ix1.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp11787ix1.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdqgx1ck7.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpdqgx1ck7.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums \n        if num > 10 && num % 2 == 1 &&\
    \ num % 2 == 0 && num % 2 != 0 && num % 2 != 1 \n            count += 1\n    \
    \    end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    # Run this cell to test your code\n@assert specialFilter([15, -73, 14, -15]) ==\
    \ 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\n\
    Question 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (2, 4, 6, 8, 10, 12).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptgyihac0.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmptgyihac0.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\n# Run this cell to test your\
    \ function\n@assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp99kf_pd_.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp99kf_pd_.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n\
    @assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2\n</cell>\n<text>\nPart 3: Finding the first and last\
    \ indices where your function returns true\nNow that you know how to use filter\
    \ and count, you can now use find to find the indices where your function returns\
    \ true.\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4w3ad48n.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp4w3ad48n.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to check your\
    \ answer\nspecialFilter([15, -73, 14, -15]) # => 1\nspecialFilter([33, -2, -3,\
    \ 45, 21, 109]) # => 2\n</cell>\n<text>\nQuestion 3.\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (2, 4, 6, 8, 10, 12).\n    For example:\n    specialFilter([15, -73,\
    \ 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplb63gipf.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmplb63gipf.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10\n            count\
    \ += 1\n            if num % 2 == 1 && num % 3 == 1 && num % 5 == 1\n        \
    \        count += 1\n            end\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n\
    @assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnit6v7o2.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpnit6v7o2.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are even\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpuqvt94r5.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpuqvt94r5.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.0>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyotb5g5v.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpyotb5g5v.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n   \
    \ return count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to test\
    \ your function\n@assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpf7bn00w_.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpf7bn00w_.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if n % 2\
    \ == 1\n                count += 1\n            elseif n % 2 == 0\n          \
    \      if n % 4 == 0\n                    count += 1\n                end\n  \
    \          end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.3>\n\
    @time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \ specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdyrmwo2a.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpdyrmwo2a.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.4>\n# Run this cell to check your answer\nspecialFilter([15,\
    \ -73, 14, -15]); # => 1\nspecialFilter([33, -2, -3, 45, 21, 109]); # => 2\n</cell>\n\
    <text>\nPart 2: Functional Programming in Julia\nNow that we have seen how to\
    \ use loops to solve problems, we will look at how we can use Julia's functional\
    \ programming features to write more concise and readable code. Functional programming\
    \ is one of the core elements of Julia's ecosystem, and Julia's syntax is designed\
    \ to make writing code concise and readable. Here is an example of a problem that\
    \ might be solved in a more Julian way:\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpq31c7rpr.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpq31c7rpr.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp5901l0q1.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp5901l0q1.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your\
    \ code\n@assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgsbbwoet.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpgsbbwoet.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.0>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.0>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp61hockgb.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp61hockgb.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if n % 2\
    \ == 1\n                count += 1\n            end\n            if n % 2 == 0\n\
    \                if n % 4 == 0\n                    count += 1\n             \
    \   end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.0>\n@time specialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.0>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6j6i12c9.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp6j6i12c9.jl:24\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9jy9_d94.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp9jy9_d94.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpftzfrj_r.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpftzfrj_r.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpe2b6tysd.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpe2b6tysd.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjv22kw8t.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpjv22kw8t.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpaw9zaet0.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpaw9zaet0.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 == 1 &&\
    \ num % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_mbx_emr.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp_mbx_emr.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to check your answer\nspecialFilter([15,\
    \ -73, 14, -15]) # => 1\nspecialFilter([33, -2, -3, 45, 21, 109]) # => 2\n</cell>\n\
    <text>\nQuestion 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsf5b80gk.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpsf5b80gk.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 == 1 &&\
    \ num % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpf88acys1.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpf88acys1.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\n@time specialFilter([15, -73,\
    \ 14, -15])\n</cell>\n<code language=julia-1.0>\n@time specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzkyro0h9.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpzkyro0h9.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for num in nums\n        if num > 10\n          \
    \  if num % 2 == 1\n                if num % 3 == 0\n                    if num\
    \ % 5 == 0\n                        count += 1\n                    end\n    \
    \            end\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpghw__fxz.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpghw__fxz.jl:24\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 3 == 1 && n % 5 == 1 \n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp23mbjyf0.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp23mbjyf0.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10\n            if num\
    \ % 2 == 0 && num % 2 != 1\n                count += 1\n            end\n    \
    \    end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    # Run this cell to test your function\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\n\
    Question 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even \n    (2, 4, 6, 8, 10, 12).\n\
    \    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpv4hy4g6m.jl:19\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpv4hy4g6m.jl:19\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            count +=\
    \ 1\n            if n % 2 == 1\n                count += 1\n                if\
    \ n % 4 == 1\n                    count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73,\
    \ 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpade7ktmv.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpade7ktmv.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if n % 2\
    \ == 1\n                count += 1\n            end\n        end\n    end\n  \
    \  return count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to check\
    \ your answer\nspecialFilter([15, -73, 14, -15]) # => 1\nspecialFilter([33, -2,\
    \ -3, 45, 21, 109]) # => 2\n</cell>\n<text>\nQuestion 9\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3858n5sg.jl:19\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp3858n5sg.jl:19\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 == 1 &&\
    \ num % 2 == 0 && num > floor(num/10)\n            count += 1\n        end\n \
    \   end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n# Run this\
    \ cell to test your function\n@assert specialFilter([15, -73, 14, -15]) == 1\n\
    @assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\nProblem\
    \ 3\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are divisible by 7 and \n    the\
    \ first and last digits are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmvplkyq4.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpmvplkyq4.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpuvfmbhyq.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpuvfmbhyq.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyf2m8bft.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpyf2m8bft.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for num in nums \n        if num > 10 && num % 2\
    \ == 1 && num % 2 == 0 && num % 2 != 1 && num % 2 != 0 \n            count +=\
    \ 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    # Run this cell to test your function\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\n\
    Question 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (2, 4, 6, 8, 10).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmziuvpk_.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpmziuvpk_.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n   \
    \ return count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to check\
    \ your answer\nspecialFilter([15, -73, 14, -15]) # => 1\nspecialFilter([33, -2,\
    \ -3, 45, 21, 109]) # => 2\n</cell>\n<text>\nQuestion 7\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2535u_u7.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp2535u_u7.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for num in nums\n        if num > 10\n          \
    \  if num % 2 == 1\n                if num % 10 == 1\n                    count\
    \ += 1\n                end\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your\
    \ function above\n@assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (2, 4, 6, 8, 10, 12).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpowv5wqyw.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpowv5wqyw.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            count +=\
    \ 1\n            if n % 2 == 1 && n % 3 == 1 && n % 5 == 1\n                count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    # Run this cell to test your function\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\n\
    Question 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpi41h0maj.jl:19\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpi41h0maj.jl:19\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\nspecialFilter([15, -73, 14,\
    \ -15])\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of\
    \ numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkm40be4f.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpkm40be4f.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n   \
    \     end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    # Run this cell to check your answer\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <text>\nQuestion 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpje0enjz3.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpje0enjz3.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpc6vqo1bk.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpc6vqo1bk.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptykmzgd_.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmptykmzgd_.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your code\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvuywccv7.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpvuywccv7.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10\n            if\
    \ n % 2 == 1\n                if n % 4 == 1\n                    count += 1\n\
    \                end\n            end\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdnz5ng65.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpdnz5ng65.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2dw3m9rf.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp2dw3m9rf.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpg28uuwnb.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpg28uuwnb.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n\
    @assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2\n</cell>\n<text>\nQuestion 4\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpia7x8czw.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpia7x8czw.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1q46k3kw.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp1q46k3kw.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 == 1 &&\
    \ num % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps6fgqjbv.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmps6fgqjbv.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your code\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (2, 4, 6, 8, 10, 12).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3e095m9s.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp3e095m9s.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp44qj59ej.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp44qj59ej.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp16tvg42d.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp16tvg42d.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpc97zk8fl.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpc97zk8fl.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums \n        if num > 10 && num % 2 == 1 &&\
    \ num % 2 == 0 \n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp53wgw3mn.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp53wgw3mn.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpk8oykvql.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpk8oykvql.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp68zq7deg.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp68zq7deg.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your\
    \ function\n@assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpg6z8h0ma.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpg6z8h0ma.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpa5qtcqy_.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpa5qtcqy_.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10\n            if\
    \ n % 2 == 1\n                count += 1\n            end\n            if n %\
    \ 2 == 0\n                if n % 4 == 0\n                    count += 1\n    \
    \            end\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp5res9e9z.jl:25\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp5res9e9z.jl:25\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7kydlcqz.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp7kydlcqz.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp83qkwim3.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp83qkwim3.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 == 1 &&\
    \ num % 2 == 0 && num % 2 != 0\n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptwba68c1.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmptwba68c1.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73,\
    \ 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0cm402on.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp0cm402on.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\n\
    Part III: Refactoring your code\nThe code above is very repetitive. Let's refactor\
    \ it.\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbiqyy933.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpbiqyy933.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    \n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your code\n@test\
    \ specialFilter([15, -73, 14, -15]) == 1 \n@test specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2 \n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9vhz6jm9.jl:19\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp9vhz6jm9.jl:19\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpekvkrcqd.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpekvkrcqd.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 1\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your code\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_zivyk4d.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp_zivyk4d.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73,\
    \ 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptvq65op5.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmptvq65op5.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 4\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp38p7ijjk.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp38p7ijjk.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n\
    @assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpr_87g6a3.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpr_87g6a3.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4zzhgt2b.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp4zzhgt2b.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbhmyy0yq.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpbhmyy0yq.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6x4hpb53.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp6x4hpb53.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgxrl8w5n.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpgxrl8w5n.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your code\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzqw4ba8i.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpzqw4ba8i.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your code\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (2, 4, 6, 8, 10, 12).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprv_1n088.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmprv_1n088.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to check your\
    \ answer\nspecialFilter([15, -73, 14, -15]) # => 1\nspecialFilter([33, -2, -3,\
    \ 45, 21, 109]) # => 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqldqyot_.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpqldqyot_.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if n % 2\
    \ == 1\n                if n % 4 == 1\n                    count += 1\n      \
    \          end\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpuz7i33b1.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpuz7i33b1.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your\
    \ code\n@assert specialFilter([15, -73, 14, -15]) == 1 \n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nQuestion 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp96_59es_.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp96_59es_.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if n % 2\
    \ == 1\n                count += 1\n            end\n        end\n    end\n  \
    \  return count\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9lf45wff.jl:19\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp9lf45wff.jl:19\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for num in nums\n        if num > 10\n          \
    \  if num % 2 == 0\n                if num % 4 == 0\n                    if num\
    \ % 8 == 0\n                        count += 1\n                    end\n    \
    \            end\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp03i5qacb.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp03i5qacb.jl:24\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 4\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpso46bcy6.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpso46bcy6.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7qentmp7.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp7qentmp7.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvbo2ac29.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpvbo2ac29.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your code\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpt09_8r6d.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpt09_8r6d.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your\
    \ function\n@assert specialFilter([15, -73, 14, -15]) == 1 \n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nQuestion 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqh5_rgqh.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpqh5_rgqh.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your function above\n\
    @assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2\n</cell>\n<text>\nProblem 2b\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvswnqpv1.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpvswnqpv1.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjzvzswgs.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpjzvzswgs.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to check your answer\nspecialFilter([15,\
    \ -73, 14, -15]) # => 1\nspecialFilter([33, -2, -3, 45, 21, 109]) # => 2\n</cell>\n\
    <text>\nQuestion 2.2\nWrite a function that takes an array of numbers as input\
    \ and returns \n    the number of elements in the array that are greater than\
    \ 10 and both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n\
    \    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpoeb2o480.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpoeb2o480.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpej6qow3s.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpej6qow3s.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run this cell to check your answer\n\
    specialFilter([15, -73, 14, -15]) # => 1\nspecialFilter([33, -2, -3, 45, 21, 109])\
    \ # => 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an array of\
    \ numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmppmi6lk2l.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmppmi6lk2l.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10\n            if num\
    \ % 2 == 1 && num % 2 == 0\n                count += 1\n            end\n    \
    \    end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    # Run this cell to test your function\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\n\
    Question 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1ne7rhk4.jl:19\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp1ne7rhk4.jl:19\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpg98uwe5y.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpg98uwe5y.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10\n            if num\
    \ % 2 == 1\n                if num % 10 == 1\n                    count += 1\n\
    \                end\n            end\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 4\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpj1qbltmg.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpj1qbltmg.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            count +=\
    \ 1\n            if n % 2 == 1\n                if n % 4 == 1\n              \
    \      count += 1\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.4>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.4>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpu3mtz77g.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpu3mtz77g.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to check your answer\nspecialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<text>\nQuestion 9\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprx9u50q7.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmprx9u50q7.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 3 == 1 && n % 5 == 1 && n % 7 == 1 \n            count += 1\n        end\n \
    \   end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzfvn3kxz.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpzfvn3kxz.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n   \
    \ return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73,\
    \ 14, -15])\n</cell>\n<code language=julia-1.5>\nspecialFilter([33, -2, -3, 45,\
    \ 21, 109])\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzb4avvhh.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpzb4avvhh.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if n % 2\
    \ == 1\n                count += 1\n            end\n            if n % 2 == 0\n\
    \                if n % 4 == 1\n                    count += 1\n             \
    \   end\n            end\n        end\n    end\n    return count\nend\n</cell>\n\
    <code language=julia-1.5>\n# Run this cell to test your function\n@assert specialFilter([15,\
    \ -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n\
    </cell>\n<text>\nProblem 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are divisible\
    \ by 7 and \n    the first and last digits are even numbers.\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmposulbwrd.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmposulbwrd.jl:24\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp97o9p0c3.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp97o9p0c3.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0i8x_03f.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp0i8x_03f.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if n % 2\
    \ == 1\n                count += 1\n            elseif n % 2 == 0\n          \
    \      if n % 4 == 0\n                    count += 1\n                end\n  \
    \          end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    # Run this cell to check your answer\nspecialFilter([15, -73, 14, -15]); # =>\
    \ 1\nspecialFilter([33, -2, -3, 45, 21, 109]); # => 2\n</cell>\n<text>\nQuestion\
    \ 3\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjmufj9th.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpjmufj9th.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmph7gbfual.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmph7gbfual.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.4>\n# Run this cell to test your\
    \ function\n@assert specialFilter([15, -73, 14, -15]) == 1 \n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nQuestion 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (2, 4, 6, 8, 10).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgttz_6b3.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpgttz_6b3.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your\
    \ function\n@assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpw3r1gxs5.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpw3r1gxs5.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n\
    @assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplqji1qyz.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmplqji1qyz.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.0>\n# Run this cell to test your function\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpricqmjhg.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpricqmjhg.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 == 1 &&\
    \ num % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4t65nl5y.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp4t65nl5y.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are even\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmil_uf7f.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpmil_uf7f.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for num in nums\n        if num > 10\n          \
    \  if num % 2 == 1\n                if num % 10 == 1\n                    count\
    \ += 1\n                end\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpx6baj3_b.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpx6baj3_b.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9dcs5fh8.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp9dcs5fh8.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnks0tph2.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpnks0tph2.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplla7dtd9.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmplla7dtd9.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9xiy1mxa.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp9xiy1mxa.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@time println(specialFilter([15, -73, 14,\
    \ -15]))\n@time println(specialFilter([33, -2, -3, 45, 21, 109]))\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyt4w2gui.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpyt4w2gui.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for num in nums\n        if num > 10\n          \
    \  if num % 2 == 0\n                if num % 3 == 0\n                    if num\
    \ % 5 == 0\n                        count += 1\n                    end\n    \
    \            end\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpc5n6850z.jl:24\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpc5n6850z.jl:24\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n@time begin\n    specialFilter([15,\
    \ -73, 14, -15])\nend\n</cell>\n<code language=julia-1.5>\n@time begin\n    specialFilter([33,\
    \ -2, -3, 45, 21, 109])\nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpis1ev6ql.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpis1ev6ql.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nPart 3: Finding Primes\nThe previous two parts\
    \ required you to write functions for checking if a number is a prime and to print\
    \ out all the prime numbers less than a certain number. Julia's built-in function\
    \ primes() does this for you. Run the cell below to see an example of how it works.\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpa_sv_bt7.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpa_sv_bt7.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if n % 2\
    \ == 1\n                count += 1\n            end\n        end\n    end\n  \
    \  return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6voq5hi7.jl:19\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp6voq5hi7.jl:19\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 == 1 &&\
    \ num % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise: Write a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpp45efok2.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpp45efok2.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmgza96gj.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpmgza96gj.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14,\
    \ -15])\n</cell>\n<code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21,\
    \ 109])\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of\
    \ numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4yyxsqji.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp4yyxsqji.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for num in nums\n        if num > 10\n          \
    \  if num % 2 == 0 && num % 2 != 1\n                count += 1\n            end\n\
    \        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.5>\n\
    @time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \ specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpw6_5flgp.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpw6_5flgp.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprwkz1_8t.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmprwkz1_8t.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10\n            if\
    \ n % 2 == 1\n                if n % 4 == 1\n                    count += 1\n\
    \                end\n            end\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your code\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nProblem 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are even\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9tblp5zk.jl:22\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp9tblp5zk.jl:22\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp5keym59y.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp5keym59y.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 3 == 1 && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n \
    \       end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    # Run this cell to test your function with the above example\n@assert specialFilter([15,\
    \ -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n\
    </cell>\n<text>\nQuestion 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplsabj59k.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmplsabj59k.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if mod(n,\
    \ 2) == 1 && mod(n, 3) == 1 && mod(n, 5) == 1 && mod(n, 7) == 1 && mod(n, 9) ==\
    \ 1\n                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n@time specialFilter([15, -73,\
    \ 14, -15])\n</cell>\n<code language=julia-1.5>\n@time specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxeympanl.jl:19\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpxeympanl.jl:19\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if n % 2\
    \ == 1\n                count += 1\n            elseif n % 2 == 0\n          \
    \      if n % 4 == 0\n                    count += 1\n                end\n  \
    \          end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    # Run this cell to check your answer\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\n\
    Part III: Finding Primes\nThe previous two functions should only have one problem:\
    \ they don't handle negative numbers. Write a function that finds all prime numbers\
    \ less than a given number. Your function should take in a number as an input\
    \ and then return all of the prime numbers less than that number.\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1ppmst20.jl:23\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp1ppmst20.jl:23\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyr3r9xep.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpyr3r9xep.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.0>\nspecialFilter([15, -73, 14,\
    \ -15])\n</cell>\n<text>\nWrite a function that takes an array of numbers as input\
    \ and returns \n    the number of elements in the array that are greater than\
    \ 10 and both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n\
    \    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4xkdhmer.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp4xkdhmer.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if mod(n,\
    \ 2) == 1 && mod(n, 3) == 1 && mod(n, 5) == 1 && mod(n, 7) == 1 && mod(n, 9) ==\
    \ 1\n                count += 1\n            end\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your\
    \ function\n@assert specialFilter([15, -73, 14, -15]) == 1 \n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nQuestion 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_tp3cxrr.jl:19\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp_tp3cxrr.jl:19\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.4>\n# Run this cell to check your answer\nspecialFilter([15,\
    \ -73, 14, -15]) # => 1\nspecialFilter([33, -2, -3, 45, 21, 109]) # => 2\n</cell>\n\
    <text>\nQuestion 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpujp09lxc.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpujp09lxc.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpao2tofy9.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpao2tofy9.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.4>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.4>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpj1ubowp0.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpj1ubowp0.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are even\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8amm7dth.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp8amm7dth.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your function with\
    \ the above example\n@assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\nProblem 4\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphj5hjlys.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmphj5hjlys.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 == 1 &&\
    \ num % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 4\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmup8eeu9.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpmup8eeu9.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1 && n % 7 == 1 && n % 9 == 1\n            count += 1\n   \
    \     end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    # Run this cell to check your answer\nspecialFilter([15, -73, 14, -15]) # => 1\n\
    specialFilter([33, -2, -3, 45, 21, 109]) # => 2\n</cell>\n<text>\nQuestion 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n  \
    \  specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdx3klzwm.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpdx3klzwm.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 4\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are even (1, 3, 5,\
    \ 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4ol2n5ka.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp4ol2n5ka.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 3 == 1 && n % 5 == 1 && n % 7 == 1 \n            count += 1\n        end\n \
    \   end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<code language=julia-1.5>\nspecialFilter([33, -2, -3,\
    \ 45, 21, 109])\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpb8ev5537.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpb8ev5537.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if n % 2\
    \ == 1\n                if n % 4 == 1\n                    count += 1\n      \
    \          end\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to check your answer\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 4.\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbjbez211.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpbjbez211.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0 && n % 1 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpviwkiuc6.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpviwkiuc6.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.3>\n# Run this cell to check your\
    \ answer\n@assert specialFilter([15, -73, 14, -15]) == 1 \n@assert specialFilter([33,\
    \ -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\nQuestion 3\nWrite a function that\
    \ takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwsxr1o11.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpwsxr1o11.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqvsnhqqm.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpqvsnhqqm.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjuq0m99j.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpjuq0m99j.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if n % 2\
    \ == 1\n                count += 1\n            end\n        end\n    end\n  \
    \  return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp29agtqec.jl:19\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp29agtqec.jl:19\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10\n            if\
    \ n % 2 == 1\n                count += 1\n            end\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to\
    \ test your function with the above example\n@assert specialFilter([15, -73, 14,\
    \ -15]) == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n\
    <text>\nQuestion 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp14jn_gun.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp14jn_gun.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpisun3k5y.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpisun3k5y.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 == 1 &&\
    \ num % 2 == 0 && num > floor(num/10)\n            count += 1\n        end\n \
    \   end\n    return count\nend\n</cell>\n<code language=julia-1.0>\nspecialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<code language=julia-1.0>\nspecialFilter([33, -2, -3,\
    \ 45, 21, 109])\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are even\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpeid0isvm.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpeid0isvm.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.4>\n# Run your function on the given array of\
    \ numbers\nspecialFilter([15, -73, 14, -15])\n</cell>\n<text>\nQuestion 3\nWrite\
    \ a function that takes an array of numbers as input and returns \n    the number\
    \ of elements in the array that are greater than 10 and both \n    first and last\
    \ digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpz69fag9o.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpz69fag9o.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpfbx8njyw.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpfbx8njyw.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpirpgnvd8.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpirpgnvd8.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n\
    @assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4twofisk.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp4twofisk.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10\n            if num\
    \ % 2 == 0\n                if num % 10 == 1\n                    count += 1\n\
    \                end\n            end\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzyvgzj5s.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpzyvgzj5s.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0 && n % 1 != 0 && n % 1 != 9\n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<code language=julia-1.5>\n# Run this cell to\
    \ check your answer\nspecialFilter([15, -73, 14, -15]) # => 1\nspecialFilter([33,\
    \ -2, -3, 45, 21, 109]) # => 2\n</cell>\n<text>\nQuestion 3\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps5liw7_1.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmps5liw7_1.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to check your answer\nspecialFilter([15,\
    \ -73, 14, -15]) # => 1\nspecialFilter([33, -2, -3, 45, 21, 109]) # => 2\n</cell>\n\
    <text>\nQuestion 2.\nWrite a function that takes an array of numbers as input\
    \ and returns \n    the number of elements in the array that are greater than\
    \ 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n\
    \    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpoc0ububl.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpoc0ububl.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n   \
    \ return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73,\
    \ 14, -15])\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2spgwxtn.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp2spgwxtn.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzrk5nl11.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpzrk5nl11.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpz1e0sopm.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpz1e0sopm.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise: Write a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjrq9lal4.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpjrq9lal4.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 == 1 &&\
    \ num % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\n# Run this cell to check your answer\n\
    specialFilter([15, -73, 14, -15]) # => 1\nspecialFilter([33, -2, -3, 45, 21, 109])\
    \ # => 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an array of\
    \ numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are even\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpv1adzg4m.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpv1adzg4m.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 == 1 &&\
    \ num % 2 == 0 && num % 2 != 0\n            count += 1\n        end\n    end\n\
    \    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpugzhxyjd.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpugzhxyjd.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 &&\
    \ n % 3 == 1 && n % 5 == 1 \n            count += 1\n        end\n    end\n  \
    \  return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73,\
    \ 14, -15])\n</cell>\n<code language=julia-1.5>\nspecialFilter([33, -2, -3, 45,\
    \ 21, 109])\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are even\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpds0u5aeq.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpds0u5aeq.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 1\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkk9ld6y7.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpkk9ld6y7.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            count +=\
    \ 1\n            if n % 2 == 1 && n % 3 == 1\n                count += 1\n   \
    \     end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.0>\n\
    @time specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.0>\n\
    @time specialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes an array of numbers as input and returns \n    the\
    \ number of elements in the array that are greater than 10 and both \n    first\
    \ and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n   \
    \ specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7me_bh0b.jl:19\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp7me_bh0b.jl:19\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0 && n % 10 == 1 && n % 10 == 9 \n            count += 1\n        end\n \
    \   end\n    return count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<code language=julia-1.5>\nspecialFilter([33, -2, -3,\
    \ 45, 21, 109])\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp756ii4oq.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp756ii4oq.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10\n            if num\
    \ % 2 == 1 && num % 3 == 1 && num % 5 == 1\n                count += 1\n     \
    \       end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.4>\n\
    # Run this cell to test your code\n@test specialFilter([15, -73, 14, -15]) ==\
    \ 1 \n@test specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\nQuestion\
    \ 3\nWrite a function that takes an array of numbers as input and returns \n \
    \   the number of elements in the array that are greater than 10 and both \n \
    \   first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpuowimw9i.jl:19\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpuowimw9i.jl:19\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            count +=\
    \ 1\n            if n % 2 == 1 && n % 3 == 1\n                count += 1\n   \
    \     end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.5>\nspecialFilter([33,\
    \ -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpd6r3ir8h.jl:19\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpd6r3ir8h.jl:19\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpe06xushm.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpe06xushm.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers\
    \ as input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp95l037jr.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp95l037jr.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if n % 2\
    \ == 1\n                if n % 4 == 1\n                    count += 1\n      \
    \          end\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.0>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.0>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp34x8lkd6.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp34x8lkd6.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.4>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.4>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6kdmd1px.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp6kdmd1px.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 4\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpj_u05vbh.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpj_u05vbh.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 3 == 1 && n % 5 == 1 && n % 7 == 1 \n            count += 1\n        end\n \
    \   end\n    return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpagvi052d.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpagvi052d.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are even\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpoehtlnmq.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpoehtlnmq.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpy56o1pis.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpy56o1pis.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for num in nums\n        if num > 10\n          \
    \  count += 1\n            if num % 2 == 1 && num % 2 == 0\n                count\
    \ += 1\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    specialFilter([15, -73, 14, -15])\n</cell>\n<code language=julia-1.5>\nspecialFilter([33,\
    \ -2, -3, 45, 21, 109])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdz4h3lmv.jl:20\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpdz4h3lmv.jl:20\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_03_6kh0.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp_03_6kh0.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.0>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.0>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp73130xn8.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp73130xn8.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([15, -73, 14, -15])\n\
    </cell>\n<code language=julia-1.5>\n@time specialFilter([33, -2, -3, 45, 21, 109])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpy76c45e0.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpy76c45e0.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are odd\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcewjxda8.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpcewjxda8.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to check your answer\nspecialFilter([15,\
    \ -73, 14, -15])\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxk8wks2g.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpxk8wks2g.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6c2eh1yt.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp6c2eh1yt.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are even\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpd6oc9h1e.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpd6oc9h1e.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for num in nums\n        if num > 10 && num % 2 !=\
    \ 0 && num % 2 != 1 && num % 2 != 3\n            count += 1\n        end\n   \
    \ end\n    \n    return count\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes an array of numbers as input and returns \n    the number of elements\
    \ in the array that are greater than 10 and both \n    first and last digits of\
    \ a number are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15,\
    \ -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n  \
    \  \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplap910vf.jl:19\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmplap910vf.jl:19\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.0>\n# Run this cell to test your function\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp402z_yrp.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp402z_yrp.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 3 == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n   \
    \ return count\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp01t_cw0d.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp01t_cw0d.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for num in nums\n        if num > 10\n            if num\
    \ % 2 == 0 && num % 2 != 0 && num % 2 != 1\n                count += 1\n     \
    \       end\n        end\n    end\n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    # Run this cell to test your function\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1 \n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2 \n</cell>\n<text>\n\
    Question 3\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 0\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjse5tes7.jl:19\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpjse5tes7.jl:19\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10\n            if n % 2\
    \ == 1\n                if n % 4 == 0\n                    count += 1\n      \
    \          end\n            end\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert specialFilter([15, -73, 14, -15])\
    \ == 1\n@assert specialFilter([33, -2, -3, 45, 21, 109]) == 2\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = specialFilter;\n\
    \t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15])\
    \ == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43,\
    \ -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19])\
    \ == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([])) ==\
    \ 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6e7u03z4.jl:21\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp6e7u03z4.jl:21\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 3\
    \ == 1 && n % 5 == 1\n            count += 1\n        end\n    end\n    return\
    \ count\nend\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14,\
    \ -15])\n</cell>\n<code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21,\
    \ 109])\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array of\
    \ numbers as input and returns \n    the number of elements in the array that\
    \ are greater than 10 and both \n    first and last digits of a number are even\
    \ (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) =>\
    \ 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5, -2, 1, -5])\
    \ == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33, -2,\
    \ -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109]) ==\
    \ 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgul12oyz.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpgul12oyz.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an array of numbers as\
    \ input and returns \n    the number of elements in the array that are greater\
    \ than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp84sop5e7.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp84sop5e7.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are even (1, 3, 5, 7, 9).\n   \
    \ For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjor5rk7r.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpjor5rk7r.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums \n        if n > 10 && n % 2 == 1 && n %\
    \ 2 == 1 \n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.0>\n# Run this cell to test your code\n@assert\
    \ specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2, -3, 45,\
    \ 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes an\
    \ array of numbers as input and returns \n    the number of elements in the array\
    \ that are greater than 10 and both \n    first and last digits of a number are\
    \ even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15])\
    \ => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwoio_wlk.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpwoio_wlk.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 && n % 2\
    \ == 0\n            count += 1\n        end\n    end\n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmb316eqo.jl:17\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpmb316eqo.jl:17\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your function\n\
    @assert specialFilter([15, -73, 14, -15]) == 1\n@assert specialFilter([33, -2,\
    \ -3, 45, 21, 109]) == 2\n</cell>\n<text>\nQuestion 3\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are even (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14,\
    \ -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 0\n    \"\"\"\n\
    using Test\n\n@testset begin\n\ncandidate = specialFilter;\n\t@test(candidate([5,\
    \ -2, 1, -5]) == 0)\n\t@test(candidate([15, -73, 14, -15]) == 1)\n\t@test(candidate([33,\
    \ -2, -3, 45, 21, 109]) == 2)\n\t@test(candidate([43, -12, 93, 125, 121, 109])\
    \ == 4)\n\t@test(candidate([71, -2, -33, 75, 21, 19]) == 3)\n\t@test(candidate([1])\
    \ == 0)\n\t@test(candidate(Vector{Int64}([])) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4zw3h_pt.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp4zw3h_pt.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\"Write a function that takes an array of numbers as input and returns\
    \ \n    the number of elements in the array that are greater than 10 and both\
    \ \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
    \    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\n    \"\"\"\nfunction specialFilter(nums::Vector{Int64})::Int64\
    \ \n    \n    count = 0\n    for n in nums\n        if n > 10 && n % 2 == 1 &&\
    \ n % 2 == 0\n            count += 1\n        end\n    end\n    return count\n\
    end\n</cell>\n<code language=julia-1.5>\nspecialFilter([15, -73, 14, -15])\n</cell>\n\
    <code language=julia-1.5>\nspecialFilter([33, -2, -3, 45, 21, 109])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers as input and\
    \ returns \n    the number of elements in the array that are greater than 10 and\
    \ both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For\
    \ example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = specialFilter;\n\t@test(candidate([5, -2, 1, -5]) == 0)\n\t@test(candidate([15,\
    \ -73, 14, -15]) == 1)\n\t@test(candidate([33, -2, -3, 45, 21, 109]) == 2)\n\t\
    @test(candidate([43, -12, 93, 125, 121, 109]) == 4)\n\t@test(candidate([71, -2,\
    \ -33, 75, 21, 19]) == 3)\n\t@test(candidate([1]) == 0)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpydj4x7cf.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpydj4x7cf.jl:18\n"
  exit_code: 1
  status: Exception

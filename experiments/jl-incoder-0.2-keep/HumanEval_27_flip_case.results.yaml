name: HumanEval_27_flip_case
language: julia
results:
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result = result + c.lower()\n\
    \        else:\n            result = result + c.upper()\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcopz1mtx.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpcopz1mtx.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    local result = \"\"\n\
    \    for char in string:\n        if char == char:\n            result += \"_\"\
    \n        elif char.isupper():\n            result += \"_\"\n            result\
    \ += char.lower()\n        else:\n            result += char\n    return result\n\
    </code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\nusing Test\n\n@testset begin\n\n\
    candidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1g_h6c7l.jl:9\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp1g_h6c7l.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return uppercase+lowercase\nend\n\
    </cell>\n<code language=julia-1.5>\n@test flip_case(\"Hello\") == \"hELLO\"\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the string with all lowercase letters replaced by uppercase letters.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") ==\
    \ \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpj4ne3qli.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpj4ne3qli.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    lowercase = lowercase.replace(uppercase,lowercase)\n\
    \    lowercase = lowercase.replace(uppercase,lowercase)\n    \n    return lowercase\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your function\
    \ above. \n# Note that it may take a few seconds to complete.\nusing Test\n\n\
    @testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent\
    \ delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8970j2vj.jl:15\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp8970j2vj.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char.toUpper():\n            result = result\
    \ + char.toLower()\n        elseif char == char.toLower():\n            result\
    \ = result + char.toUpper()\n        else\n            result = result + char\n\
    \        end\n    end\n    return result\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpq77trosn.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpq77trosn.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp49jpw4ug.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp49jpw4ug.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp49jpw4ug.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char >= 'a' and char <= 'z':\n            char =\
    \ char - 32\n        elif char >= 'A' and char <= 'Z':\n            char = char\
    \ - 64\n        result = result .. char\n    return result\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp67y5uumi.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp67y5uumi.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp82wh8hyj.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp82wh8hyj.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp82wh8hyj.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result = result + c.lower()\n\
    \        else:\n            result = result + c.upper()\n    return result\nend\n\
    </cell>\n<code language=julia-1.5>\n# Test the function\n@test flip_case(\"hello\"\
    ) == \"hELLO\"\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string\
    \ and returns the number of characters in the string. \nWrite a function that\
    \ takes a string and returns the number of uppercase characters in the string.\
    \ \nWrite a function that takes a string and returns the number of lowercase characters\
    \ in the string. \nWrite a function that takes a string and returns the number\
    \ of characters in the string that are uppercase and lowercase letters. \nWrite\
    \ a function that takes a string and returns the number of characters in the string\
    \ that are uppercase and lowercase letters. \nWrite a function that takes a string\
    \ and returns the number of characters in the string that are uppercase and lowercase\
    \ letters. \nWrite a function that takes a string and returns the number of characters\
    \ in the string that are uppercase and lowercase letters. \nWrite a function that\
    \ takes a string and returns the number of characters in the string that are uppercase\
    \ and lowercase letters. \nWrite a function that takes a string and returns the\
    \ number of characters in the string that are uppercase and lowercase letters.\
    \ \nWrite a function that takes a string and returns the number of characters\
    \ in the string that are uppercase and lowercase letters. \nWrite a function that\
    \ takes a string and returns the number of characters in the string that are uppercase\
    \ and lowercase letters. \nWrite a function that takes a string and returns the\
    \ number of characters in the string that are uppercase and lowercase letters.\
    \ \nWrite a function that takes a string and returns the number of characters\
    \ in the string that are uppercase and lowercase letters. \nWrite a function that\
    \ takes a string and returns the number of characters in the string that are uppercase\
    \ and lowercase letters. \nWrite a function that takes a string and returns the\
    \ number of characters in the string that are uppercase and lowercase letters.\
    \ \nWrite a function that takes a string and returns the number of characters\
    \ in the string that are uppercase and lowercase letters. \nWrite a function that\
    \ takes a string and returns the number of characters in the string that are uppercase\
    \ and lowercase letters. \nWrite a function that takes a string and returns the\
    \ number of characters in the string that are uppercase and lowercase letters.\
    \ \nWrite a function that takes a string and returns the number of characters\
    \ in the string that are uppercase and lowercase letters. \nWrite a function that\
    \ takes a string and returns the number of characters in the string that are uppercase\
    \ and lowercase letters. \nWrite a function that takes a string and returns the\
    \ number of characters in the string that are uppercase and lowercase letters.\
    \ \nWrite a function that takes a string and returns the number of characters\
    \ in the string that are uppercase and lowercase letters. \nWrite a function that\
    \ takes a string and returns the number of characters in the string that are uppercase\
    \ and lowercase letter\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcq2o6g89.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpcq2o6g89.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    string = string.lower()\n\
    \    \n    for i in string.chars:\n        if i.isupper():\n            string\
    \ = string.replace(i, i.upper())\n        else:\n            string = string.replace(i,\
    \ i.lower())\n    \n    return string\n</code>\n<|/ a tags=string,uppercase,lowercase,haskell\
    \ |>\n<| c |>\nThanks for your answer! I understand your solution, but I wanted\
    \ to avoid using recursion. My solution was to convert the string into an array\
    \ of chars and then loop through each char and flip it if it's uppercase. Thanks\
    \ again!\n<|/ c |>\n<| c |>\nI see. Well I guess you were on the right track.\
    \ Good luck!\n<|/ c |>\n<| a dscore=2 |>\nI wanted to avoid using recursion\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwrt2kiet.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpwrt2kiet.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char.toUpper():\n            result += \"\
    _\"\n            result += char.toLower()\n        else\n            result +=\
    \ char\n        end\n    end\n    return result\nend\n</cell>\n<code language=julia-1.5>\n\
    @time flip_case(\"Hello\")\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent\
    \ delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpk53ju_xv.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpk53ju_xv.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    local result = \"\"\n\
    \    for c in string:\n        if c.isupper():\n            result += \"_\"\n\
    \            result += c.lower()\n        else:\n            result += c\n   \
    \ return result\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ and returns the string with all non-alphanumeric characters replaced by underscores.\
    \ \ne.g. \"hello!\" -> \"hello_\"\nHint: use regular expressions\nusing Test\n\
    \n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent\
    \ delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpa_5naa8n.jl:9\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpa_5naa8n.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return uppercase + lowercase\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpce6betcx.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpce6betcx.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += char\n    \
    \    else if char.isupper():\n            result += char.lower()\n        else\
    \ if char.islower():\n            result += char.upper()\n    return result\n\
    </code>\n<|/ a tags=string,lowercase,uppercase,haskell |>\n<| a dscore=2 |>\n\
    <code>\nimport Data.Char\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8ga0k1o3.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp8ga0k1o3.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    string = string.lower()\n\
    \    \n    for c in string.chars:\n        if c.isupper():\n            string\
    \ = string.replace(c.lower(), c.upper())\n    \n    return string\n</cell>\n<cell>\n\
    # Test your code\nresult = flip_case('hello')\nresult\n</cell>\n<cell>\n# Run\
    \ this cell to check your work.\nfrom qc_grader import grade_ex4\ngrade_ex4(flip_case)\n\
    </cell>\n<text>\nExtra Challenge\nCan you write a single line of code that can\
    \ capitalize the first letter of each word in a string?\nusing Test\n\n@testset\
    \ begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqcydgc2e.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpqcydgc2e.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += \"_\"\n   \
    \     else if char.isupper():\n            result += char.lower()\n        else\
    \ if char.islower():\n            result += char.upper()\n        else \n    \
    \        result += char\n    return result\n</code>\n<|/ a tags=string,lowercase,uppercase,haskell\
    \ |>\n<| a |>\n<code>\nimport Data.Char\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdwtqvt5k.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpdwtqvt5k.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result = result + c.lower()\n\
    \        else:\n            result = result + c.upper()\n    return result\nend\n\
    </cell>\n<code language=julia-1.0>\n@time flip_case(\"Hello\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string and returns a new string with\
    \ all the characters in lowercase and uppercase separated by a space.\nusing Test\n\
    \n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent\
    \ delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgw7o07ui.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpgw7o07ui.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    local result = \"\"\n\
    \    for char in string:\n        if char == char:\n            result += char\n\
    \        else\n            result += char.upper()\n            result += char.lower()\n\
    \        end\n    end\n    return result\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp37kye26x.jl:9\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp37kye26x.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    lowercase_string = string.lower()\n\
    \    uppercase_string = string.upper()\n    \n    return uppercase_string + lowercase_string\n\
    end\n</cell>\n<code language=julia-1.4>\n@assert flip_case(\"Hello\") == \"hELLO\"\
    \n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the string with all vowels replaced by an underscore.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpq7y4je9x.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpq7y4je9x.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    local result = \"\"\n\
    \    for char in string:\n        if char == char:\n            result += char\n\
    \        else\n            result += char.upper()\n            result += char.lower()\n\
    \        end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\n\
    candidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwdx7e6iv.jl:9\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpwdx7e6iv.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return lowercase+uppercase\nend\n\
    </cell>\n<code language=julia-1.5>\n@test flip_case(\"Hello\") == \"hELLO\"\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the string with all lowercase letters replaced by uppercase letters.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") ==\
    \ \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvof_of08.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpvof_of08.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    local result = \"\"\n\
    \    for char in string:\n        if char == char:\n            result = result\
    \ + char\n        else\n            result = result + char.upper()\n        end\n\
    \    end\n    return result\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent\
    \ delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6n0aoq1x.jl:9\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp6n0aoq1x.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    string = string.lower()\n\
    \    \n    for char in string.upper():\n        string = string.replace(char,\
    \ char.lower())\n    \n    return string\n</cell>\n<code language=julia-1.5>\n\
    @time flip_case(\"hello\")\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a string and returns a string where all characters have been converted\
    \ to lowercase except for the first character.\nFor example, if the input string\
    \ is \"hello\", the output should be \"HeLlO\".\nusing Test\n\n@testset begin\n\
    \ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9v4tuw3v.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp9v4tuw3v.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result += \"_\"\n       \
    \     result += c.lower()\n        else:\n            result += c\n    return\
    \ result\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work if you have a string like\
    \ \"hello_world\" which should return \"hello_World\"\n<|/ c |>\n<| c |>\nI fixed\
    \ the bug and added a test case\n<|/ c |>\n<| a dscore=3 |>\n<code>\nusing Test\n\
    \n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent\
    \ delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdg1b4dd_.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpdg1b4dd_.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpnb7h5u02.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpnb7h5u02.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpnb7h5u02.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result = result + char\n\
    \        elseif char == char.upper():\n            result = result + char.lower()\n\
    \        elseif char == char.lower():\n            result = result + char.upper()\n\
    \        end\n    end\n    return result\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpknlx6ggh.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpknlx6ggh.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += char\n    \
    \    else\n            result += char.upper()\n            result += char.lower()\n\
    \        end\n    end\n    return result\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3zatn1bn.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp3zatn1bn.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    \n    return string.map\
    \ { |char| char.downcase if char.upcase == char else char.upcase }\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") ==\
    \ \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: space before \"{\" not allowed in \"string.map\
    \ {\" at /tmp/tmpivnpahqz.jl:8\nStacktrace:\n [1] top-level scope at /tmp/tmpivnpahqz.jl:8\n\
    \ [2] include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpivnpahqz.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result += \"_\"\n       \
    \     result += c.lower()\n        else:\n            result += c\n    return\
    \ result\n</code>\n<|/ a tags=string,lowercase,uppercase,haskell |>\n<| a tags=string,lowercase,uppercase,haskell\
    \ |>\n<code>\nimport Data.Char\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyvi__bf4.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpyvi__bf4.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpx401biq8.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpx401biq8.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpx401biq8.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return lowercase+uppercase\nend\n\
    </cell>\n<code language=julia-1.5>\n@test flip_case(\"Hello\") == \"hELLO\"\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the string with all non-alphanumeric characters removed.\ne.g. \"Hello!\" =>\
    \ \"Hello\"\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpx7l0f48p.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpx7l0f48p.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return lowercase+uppercase[1:]\
    \ \nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\n\
    candidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing last argument in \"1:\" range expression\
    \ \nStacktrace:\n [1] top-level scope at /tmp/tmpk329ldxe.jl:10\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpk329ldxe.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.upcase()\n\
    \    lowercase = string.lower()\n    \n    return uppercase + lowercase[1:len(uppercase)]\
    \ + lowercase[0]\nend\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjunvsc9a.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field upcase\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] flip_case(::String)\
    \ at /tmp/tmpjunvsc9a.jl:7\n   [3] top-level scope at /tmp/tmpjunvsc9a.jl:17\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpjunvsc9a.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpjunvsc9a.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    Hello!\") == \"hELLO!\"\n  type String has no field upcase\n  Stacktrace:\n  \
    \ [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] flip_case(::String)\
    \ at /tmp/tmpjunvsc9a.jl:7\n   [3] top-level scope at /tmp/tmpjunvsc9a.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpjunvsc9a.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpjunvsc9a.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"\n  type String has no field upcase\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] flip_case(::String) at /tmp/tmpjunvsc9a.jl:7\n\
    \   [3] top-level scope at /tmp/tmpjunvsc9a.jl:19\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpjunvsc9a.jl:16\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjunvsc9a.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return lowercase + uppercase[1:len(uppercase)]\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert flip_case(\"Hello\") == \"hELLO\"\
    \n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the number of uppercase and lowercase letters.\nusing Test\n\n@testset begin\n\
    \ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqreg1tdb.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpqreg1tdb.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += char\n    \
    \    else\n            result += char.upper()\n            result += char.lower()\n\
    \        end\n    end\n    return result\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp60cu7vga.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp60cu7vga.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result = result + c.lower()\n\
    \        else:\n            result = result + c.upper()\n    return result\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpojg96cqq.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpojg96cqq.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += char\n    \
    \    elseif char == char.upper():\n            result += char.lower()\n      \
    \  elseif char == char.lower():\n            result += char.upper()\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\")\
    \ == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprfod7h50.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmprfod7h50.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbwzmxv_4.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpbwzmxv_4.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpbwzmxv_4.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result = result + c.lower()\n\
    \        else:\n            result = result + c.upper()\n    return result\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=string,uppercase,lowercase,haskell |>\n<code>\nimport\
    \ Data.List\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpigp1ycrc.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpigp1ycrc.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += char\n    \
    \    elseif char == char.upper():\n            result += char.lower()\n      \
    \  elseif char == char.lower():\n            result += char.upper()\n        else\n\
    \            result += char\n        end\n    end\n    return result\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp52cx64ci.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp52cx64ci.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += char\n    \
    \    else\n            result += char.upper()\n            result += char.lower()\n\
    \        end\n    end\n    return result\nend\n</cell>\n<code language=julia-1.5>\n\
    @time flip_case(\"Hello\")\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a string and returns the number of uppercase and lowercase letters.\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvqsh9vcu.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpvqsh9vcu.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string.gmatch(\"%a\")::String \n        result = result + string.char(c:upper())\
    \ + string.char(c:lower())\n    end\n    return result\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8x8rcd36.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp8x8rcd36.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return lowercase + uppercase[1:len(uppercase)]\n\
    end\n</cell>\n<code language=julia-1.5>\n@test flip_case(\"Hello\") == \"hELLO\"\
    \n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the string with all characters in lower case and upper case separated by underscores.\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwuas0eby.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpwuas0eby.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.islower() then\n            result = result .. c.toupper()\n\
    \        elseif c.isupper() then\n            result = result .. c.tolower()\n\
    \        end\n    end\n    return result\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3a5a517m.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp3a5a517m.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    string::String \n   \
    \ \n    string::String\n    \n    string::String\n    \n    string::String\n \
    \   \n    string::String\n    \n    string::String\n    \n    string::String\n\
    \    \n    string::String\n    \n    string::String\n    \n    string::String\n\
    \    \n    string::String\n    \n    string::String\n    \n    string::String\n\
    \    \n    string::String\n    \n    string::String\n    \n    string::String\n\
    \    \n    string::String\n    \n    string::String\n    \n    string::String\n\
    \    \n    string::String\n    \n    string::String\n    \n    string::String\n\
    \    \n    string::String\n    \n    string::String\n    \n    string::String\n\
    \    \n    string::String\n    \n    string::String\n    \n    string::String\n\
    \    \n    string::String\n    \n    string::String\n    \n    string::String\n\
    \    \n    string::String\n    \n    string::String\n    \n    string::String\n\
    \    \n    string::String\n    \n    string::String\n    \n    string::String\n\
    \    \n    string::String\n    \n    string::String\n    \n    string::String\n\
    \    \n    string::String\n    \n    string::String\n    \n    string::String\n\
    \    \n    string::String\n    \n    string::String\n    \n    string::String\n\
    \    \n    string::String\n    \n    string::String\n    \n    string::String\n\
    \    \n    string::String\n    \n    string::String\n    \n    string::String\n\
    \    \n    string::String\n    \n    string::String\n    \n    string::String\n\
    \    \n    string::String\n    \n    string::String\n    \n    string::String\n\
    \    \n    string::String\n    \n    string::String\n    \n    string::String\n\
    \    \n    string::String\n    \n    string::String\n    \n    string::String\n\
    \    \n    string::String\n    \n    string::String\n    \n    string::String\n\
    \    \n    string::String\n    \n    string::String\n    \n    string::String\n\
    \    \n    string::String\n    \n    string::String\n    \n    string::String\n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmphka27b40.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmphka27b40.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmphka27b40.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char.upper():\n            result += \"\
    _\"\n            result += char.lower()\n        else:\n            result +=\
    \ char\n    return result\n</code>\n<|/ a tags=string,lowercase,uppercase,haskell\
    \ |>\n<| a |>\n<code>\nimport Data.List\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9_kvzzl5.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp9_kvzzl5.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    lowercase_chars = string.chars()\n\
    \    uppercase_chars = string.chars().map(|c| if c.isUpper() => c.toUpper() else\
    \ c.toLower())\n    \n    string.extend(uppercase_chars)\n    string.extend(lowercase_chars)\n\
    \    \n    return string\nend\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"|\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4usozgzd.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp4usozgzd.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += \"_\"\n   \
    \     else\n            result += char\n        end\n    end\n    return result\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjkwr169g.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpjkwr169g.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result = result + c.lower()\n\
    \        else:\n            result = result + c.upper()\n    return result\n</code>\n\
    <|/ a |>\n<| a tags=string,lowercase,uppercase,haskell |>\n<code>\nimport Data.Char\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpezhc1x9x.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpezhc1x9x.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    lowercase_string = string.lower()\n\
    \    uppercase_string = string.upper()\n    \n    return uppercase_string + lowercase_string\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert flip_case(\"hello\") == \"hELLO\"\
    \n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the string with all characters converted to lowercase. For example, the string\
    \ \"hello\" would become \"hello\".\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpv3ij51ev.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpv3ij51ev.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    local result = \"\"\n\
    \    for character in string:\n        if character == character then\n      \
    \      character = character:upper()\n        else\n            character = character:lower()\n\
    \        end\n        result = result .. character\n    end\n    return result\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpf7xi8srg.jl:9\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpf7xi8srg.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result += \"_\"\n       \
    \     result += c.lower()\n        else:\n            result += c\n    return\
    \ result\n</code>\n<|/ a tags=string,lowercase,uppercase,haskell |>\n<| a dscore=3\
    \ |>\nI like using Data.List.unwords :: [String] -> String for this:\n<code>\n\
    import Data.List\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpu2rwkn1v.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpu2rwkn1v.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return uppercase+lowercase\nend\n\
    </cell>\n<code language=julia-1.5>\n@test flip_case(\"Hello\") == \"hELLO\"\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the string with all lowercase letters converted to uppercase. For example, \n\
    >>> \"hello\".to_uppercase()\n'HELLO'\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsjqoebth.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpsjqoebth.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    string = string.lower()\n\
    \    string = string.upper()\n    \n    return string\n</cell>\n<cell>\nflip_case(\"\
    hello\")\n</cell>\n<text>\nExercise: Write a function that takes a string and\
    \ returns the string with all vowels replaced with an underscore.\nusing Test\n\
    \n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent\
    \ delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpez8xofpj.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpez8xofpj.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return uppercase + lowercase[1:]\
    \ + lowercase[0]\nend\n</cell>\n<code language=julia-1.5>\n@test flip_case(\"\
    Hello\") == \"hELLO\"\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string and returns the number of uppercase letters.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing last argument in \"1:\" range expression\
    \ \nStacktrace:\n [1] top-level scope at /tmp/tmpifezzg2p.jl:10\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpifezzg2p.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += char\n    \
    \    elseif char.isupper():\n            result += char.lower()\n        elseif\
    \ char.islower():\n            result += char.upper()\n        else\n        \
    \    result += char\n    end\n    return result\nend\n</cell>\n<code language=julia-1.4>\n\
    @time flip_case(\"Hello\")\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a string and returns the number of characters in the string.\nHint: Use\
    \ length\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpo_9u9k_3.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpo_9u9k_3.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result = result + c.lower()\n\
    \        else:\n            result = result + c.upper()\n    return result\nend\n\
    </cell>\n<code language=julia-1.4>\n@time flip_case(\"Hello World\")\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a string and returns the number\
    \ of characters in the string.\nWrite a function that takes a string and returns\
    \ the number of words in the string.\nWrite a function that takes a string and\
    \ returns the number of sentences in the string.\nWrite a function that takes\
    \ a string and returns the number of uppercase characters in the string.\nWrite\
    \ a function that takes a string and returns the number of lowercase characters\
    \ in the string.\nWrite a function that takes a string and returns the number\
    \ of characters in the string that are uppercase.\nWrite a function that takes\
    \ a string and returns the number of characters in the string that are lowercase.\n\
    Write a function that takes a string and returns the number of words in the string\
    \ that are uppercase.\nWrite a function that takes a string and returns the number\
    \ of words in the string that are lowercase.\nWrite a function that takes a string\
    \ and returns the number of sentences in the string that are uppercase.\nWrite\
    \ a function that takes a string and returns the number of sentences in the string\
    \ that are lowercase.\nWrite a function that takes a string and returns the number\
    \ of uppercase characters in the string that are in the string.\nWrite a function\
    \ that takes a string and returns the number of lowercase characters in the string\
    \ that are in the string.\nWrite a function that takes a string and returns the\
    \ number of characters in the string that are uppercase that are in the string.\n\
    Write a function that takes a string and returns the number of characters in the\
    \ string that are lowercase that are in the string.\nWrite a function that takes\
    \ a string and returns the number of words in the string that are uppercase that\
    \ are in the string.\nWrite a function that takes a string and returns the number\
    \ of words in the string that are lowercase that are in the string.\nWrite a function\
    \ that takes a string and returns the number of sentences in the string that are\
    \ uppercase that are in the string.\nWrite a function that takes a string and\
    \ returns the number of sentences in the string that are lowercase that are in\
    \ the string.\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4cq8pnni.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp4cq8pnni.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return uppercase + lowercase[1:]\
    \ + lowercase[0]\nend\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing last argument in \"1:\" range expression\
    \ \nStacktrace:\n [1] top-level scope at /tmp/tmpxpvt251v.jl:10\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpxpvt251v.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp86udaxhr.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp86udaxhr.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp86udaxhr.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result = result + c.lower()\n\
    \        else:\n            result = result + c.upper()\n    return result\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=string,lowercase,uppercase,haskell |>\n<code>\nimport\
    \ Data.List\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpr7m_y13i.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpr7m_y13i.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += \"_\"\n   \
    \     elseif char.isupper():\n            result += \"_\"\n            result\
    \ += char.lower()\n        elseif char.islower():\n            result += char.upper()\n\
    \        else\n            result += char\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwbhn4hyb.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpwbhn4hyb.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result = result + c.lower()\n\
    \        else:\n            result = result + c.upper()\n    return result\n</code>\n\
    <|/ a dscore=2 |>\n<| c |>\nThis doesn't work for non-English characters. For\
    \ example, it doesn't work for `'\xDF'`.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpt5wfmv4n.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpt5wfmv4n.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += char\n    \
    \    else\n            result += char.upper()\n            result += char.lower()\n\
    \        end\n    end\n    return result\nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzasigmo8.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpzasigmo8.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    uppercase = uppercase.replace(lowercase,\
    \ lowercase)\n    lowercase = lowercase.replace(uppercase, uppercase)\n    \n\
    \    return lowercase + uppercase\nend\n</cell>\n<code language=julia-1.5>\n@test\
    \ flip_case(\"Hello\") == \"hELLO\"\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a string and returns the string with all spaces replaced by underscores.\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsb_3l4vv.jl:15\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpsb_3l4vv.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += \"_\"\n   \
    \     else\n            result += char\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_ccuix63.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp_ccuix63.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return lowercase + uppercase\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyhhdv26q.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field uppercase\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ flip_case(::String) at /tmp/tmpyhhdv26q.jl:7\n   [3] top-level scope at /tmp/tmpyhhdv26q.jl:17\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpyhhdv26q.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpyhhdv26q.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    Hello!\") == \"hELLO!\"\n  type String has no field uppercase\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] flip_case(::String)\
    \ at /tmp/tmpyhhdv26q.jl:7\n   [3] top-level scope at /tmp/tmpyhhdv26q.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpyhhdv26q.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpyhhdv26q.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"\n  type String has no field uppercase\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] flip_case(::String) at /tmp/tmpyhhdv26q.jl:7\n\
    \   [3] top-level scope at /tmp/tmpyhhdv26q.jl:19\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpyhhdv26q.jl:16\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyhhdv26q.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char.toUpper():\n            result += \"\
    _\"\n            result += char.toLower()\n        else\n            result +=\
    \ char\n    end\n    return result\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6o3efy69.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp6o3efy69.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    local result = \"\"\n\
    \    for char in string:\n        if char == char:\n            result += char\n\
    \        else\n            result += char.upper()\n            result += char.lower()\n\
    \        end\n    end\n    return result\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxhay0gp5.jl:9\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpxhay0gp5.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    local result = \"\"\n\
    \    for char in string:\n        if char == char:\n            result += char\n\
    \        else\n            result += char.upper()\n            result += char.lower()\n\
    \        end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\n\
    candidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpp7pjz2_u.jl:9\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpp7pjz2_u.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    string = string.lower()\n\
    \    \n    for i in string.chars:\n        if i.isupper():\n            string\
    \ = string.replace(i, i.lower())\n        else:\n            string = string.replace(i,\
    \ i.upper())\n    \n    return string\n</cell>\n<cell>\n# Test your code\nresult\
    \ = flip_case('hello')\nassert result == 'hELLO', 'Expected \"hELLO\", got \"\
    {}\"'.format(result)\n</cell>\n<text>\nImplement trim to trim leading and trailing\
    \ whitespace from strings. Make sure the returned string doesn't contain leading\
    \ or trailing whitespace.\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6preq1jy.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp6preq1jy.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    lowercase_chars = string.chars\n\
    \    uppercase_chars = string.chars.map(char.upper)\n    \n    return \"\".join(lowercase_chars)\
    \ + \"\".join(uppercase_chars)\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") ==\
    \ \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp02tf8lbf.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp02tf8lbf.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += char\n    \
    \    else\n            result += char.upper()\n            result += char.lower()\n\
    \        end\n    end\n    return result\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpo2icyt9c.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpo2icyt9c.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    lowercase_string = string.lower()\n\
    \    uppercase_string = string.upper()\n    \n    return uppercase_string+lowercase_string\n\
    end\n</cell>\n<code language=julia-1.5>\n# Test the function \nprintln(flip_case(\"\
    hello\"))\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and\
    \ returns the string with all non-alphanumeric characters removed.\ne.g. \"hello!\"\
    \ => \"hello\"\nHint: use the function replace!\nusing Test\n\n@testset begin\n\
    \ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphdh2ltzt.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmphdh2ltzt.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += \"_\"\n   \
    \     else:\n            result += char.upper()\n    return result\n</code>\n\
    <|/ a tags=string,lowercase,uppercase,haskell |>\n<| a tags=string,lowercase,uppercase,haskell\
    \ |>\n<code>\nimport Data.Char\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1u_miowi.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp1u_miowi.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    local result = \"\"\n\
    \    for char in string:\n        if char == char:\n            result += \"_\"\
    \n        else:\n            result += char.upper()\n    return result\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9b0k1t83.jl:9\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp9b0k1t83.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result = result + c.lower()\n\
    \        else:\n            result = result + c.upper()\n    return result\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmve70c6i.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpmve70c6i.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char.toUpper():\n            result += \"\
    _\"\n            result += char.toLower()\n        else if char == char.toLower():\n\
    \            result += \"_\"\n            result += char.toUpper()\n        else\
    \ \n            result += char\n    end\n    return result\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent\
    \ delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7aq094cy.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp7aq094cy.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return uppercase + lowercase\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert flip_case(\"Hello\") == \"hELLO\"\
    \n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ a string where all characters have been converted to lowercase and all uppercase\
    \ characters have been converted to uppercase.\nusing Test\n\n@testset begin\n\
    \ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxrw453l5.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpxrw453l5.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    local result = \"\"\n\
    \    \n    for char in string:\n        if char == char:\n            result +=\
    \ char\n        else:\n            result += char.upper()\n            result\
    \ += char.lower()\n            \n    return result\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4sgd3qje.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp4sgd3qje.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    lowercase = string.lower()\n\
    \    uppercase = string.upper()\n    \n    return lowercase + uppercase\nend\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpsgxpxtqe.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field lower\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] flip_case(::String)\
    \ at /tmp/tmpsgxpxtqe.jl:7\n   [3] top-level scope at /tmp/tmpsgxpxtqe.jl:17\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpsgxpxtqe.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpsgxpxtqe.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    Hello!\") == \"hELLO!\"\n  type String has no field lower\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] flip_case(::String)\
    \ at /tmp/tmpsgxpxtqe.jl:7\n   [3] top-level scope at /tmp/tmpsgxpxtqe.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpsgxpxtqe.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpsgxpxtqe.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"\n  type String has no field lower\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] flip_case(::String) at /tmp/tmpsgxpxtqe.jl:7\n\
    \   [3] top-level scope at /tmp/tmpsgxpxtqe.jl:19\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpsgxpxtqe.jl:16\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsgxpxtqe.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result = result + c.lower()\n\
    \        else:\n            result = result + c.upper()\n    return result\nend\n\
    </cell>\n<code language=julia-1.4>\n@time flip_case(\"Hello\");\n</cell>\n<text>\n\
    Exercise: Write a function that takes a string and returns the string with all\
    \ vowels replaced by \"*\". For example, \"Hello\" -> \"h*e*l*l*o\".\nusing Test\n\
    \n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent\
    \ delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmph4mtp60a.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmph4mtp60a.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return lowercase+uppercase\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpu46lfeax.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpu46lfeax.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string.gmatch(\"%a\")::Array{Char,1}\n        result = result + c.toupper()\n\
    \    end\n    return result\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent\
    \ delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprc0xv5nc.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmprc0xv5nc.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return lowercase+uppercase[1:len(uppercase)]\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpx9rtcwbp.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpx9rtcwbp.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += \"_\"\n   \
    \     else\n            result += char\n        end\n    end\n    return result\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprq1iqrcz.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmprq1iqrcz.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result = result + c.lower()\n\
    \        else:\n            result = result + c.upper()\n    return result\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3_0e7r31.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp3_0e7r31.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result = result + c.lower()\n\
    \        else:\n            result = result + c.upper()\n    return result\n</code>\n\
    <|/ a dscore=2 |>\n<| a tags=string,lowercase,uppercase,haskell |>\n<code>\nimport\
    \ Data.Char\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpju724wom.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpju724wom.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp0hdp3ydg.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp0hdp3ydg.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp0hdp3ydg.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += char\n    \
    \    elseif char == char.upper():\n            result += char.lower()\n      \
    \  elseif char == char.lower():\n            result += char.upper()\n        end\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\")\
    \ == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1k3_06_c.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp1k3_06_c.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return lowercase+uppercase[1:len(uppercase)]\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert flip_case(\"hello\") == \"hELLO\"\
    \n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the number of characters in the string. \nFor example, \n>>> count_characters(\"\
    hello\")\n5\n>>> count_characters(\"hELLO\")\n5\n>>> count_characters(\"HellO\"\
    )\n5\n>>> count_characters(\"HellO\")\n5\n>>> count_characters(\"HellO\")\n5\n\
    >>> count_characters(\"HellO\")\n5\n>>> count_characters(\"HellO\")\n5\n>>> count_characters(\"\
    HellO\")\n5\n>>> count_characters(\"HellO\")\n5\n>>> count_characters(\"HellO\"\
    )\n5\n>>> count_characters(\"HellO\")\n5\n>>> count_characters(\"HellO\")\n5\n\
    >>> count_characters(\"HellO\")\n5\n>>> count_characters(\"HellO\")\n5\n>>> count_characters(\"\
    HellO\")\n5\n>>> count_characters(\"HellO\")\n5\n>>> count_characters(\"HellO\"\
    )\n5\n>>> count_characters(\"HellO\")\n5\n>>> count_characters(\"HellO\")\n5\n\
    >>> count_characters(\"HellO\")\n5\n>>> count_characters(\"HellO\")\n5\n>>> count_characters(\"\
    HellO\")\n5\n>>> count_characters(\"HellO\")\n5\n>>> count_characters(\"HellO\"\
    )\n5\n>>> count_characters(\"HellO\")\n5\n>>> count_characters(\"HellO\")\n5\n\
    >>> count_characters(\"HellO\")\n5\n>>> count_characters(\"HellO\")\n5\n>>> count_characters(\"\
    HellO\")\n5\n>>> count_characters(\"HellO\")\n5\n>>> count_characters(\"HellO\"\
    )\n5\n>>> count_characters(\"HellO\")\n5\n>>> count_characters(\"HellO\")\n5\n\
    >>> count_characters(\"HellO\")\n5\n>>> count_characters(\"HellO\")\n5\n>>> count_characters(\"\
    HellO\")\n5\n>>> count_characters(\"HellO\")\n5\n>>> count_characters(\"HellO\"\
    )\n5\n>>> count_characters(\"HellO\")\n5\n>>> count_characters(\"HellO\")\nusing\
    \ Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") ==\
    \ \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8ov1a85o.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp8ov1a85o.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return uppercase + lowercase\n\
    end\n</cell>\n<code language=julia-1.5>\n# Test the function\n@test flip_case(\"\
    hello\") == \"hELLO\"\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string and returns the string with all characters in lower case and all characters\
    \ in upper case.\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprn9sep8r.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmprn9sep8r.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return lowercase+uppercase\nend\n\
    </cell>\n<code language=julia-1.5>\n# Test the function above\n@test flip_case(\"\
    hello\") == \"hELLO\"\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string and returns a string where all characters have been converted to uppercase\
    \ except for the first character.\nFor example, if the input string is \"hello\"\
    , the output should be \"HeLlO\".\nusing Test\n\n@testset begin\n\ncandidate =\
    \ flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\")\
    \ == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpc35rgptt.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpc35rgptt.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += \"_\"\n   \
    \     else\n            result += char\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpuh19mo_d.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpuh19mo_d.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += char\n    \
    \    else\n            result += char.upper()\n            result += char.lower()\n\
    \        end\n    end\n    return result\nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpp9wjue2e.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpp9wjue2e.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char.toUpper():\n            result += \"\
    _\"\n            result += char.toLower()\n        else\n            result +=\
    \ char\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2s79tnkc.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp2s79tnkc.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return lowercase+uppercase\nend\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvh48kw8k.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field uppercase\n\
    \  Stacktrace:\n   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2]\
    \ flip_case(::String) at /tmp/tmpvh48kw8k.jl:7\n   [3] top-level scope at /tmp/tmpvh48kw8k.jl:17\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpvh48kw8k.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpvh48kw8k.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    Hello!\") == \"hELLO!\"\n  type String has no field uppercase\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] flip_case(::String)\
    \ at /tmp/tmpvh48kw8k.jl:7\n   [3] top-level scope at /tmp/tmpvh48kw8k.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpvh48kw8k.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpvh48kw8k.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"\n  type String has no field uppercase\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] flip_case(::String) at /tmp/tmpvh48kw8k.jl:7\n\
    \   [3] top-level scope at /tmp/tmpvh48kw8k.jl:19\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpvh48kw8k.jl:16\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvh48kw8k.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpkq9a53wf.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpkq9a53wf.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpkq9a53wf.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return lowercase+uppercase[1:uppercase.len()-1]\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert flip_case(\"hello\") == \"hELLO\"\
    \n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the number of characters in the string.\nFor example, the string \"hello\" has\
    \ 5 characters.\nWrite a function that takes a string and returns the number of\
    \ uppercase characters in the string.\nFor example, the string \"hello\" has 1\
    \ uppercase character.\nWrite a function that takes a string and returns the number\
    \ of lowercase characters in the string.\nFor example, the string \"hello\" has\
    \ 1 lowercase character.\nWrite a function that takes a string and returns the\
    \ number of digits (0-9) in the string.\nFor example, the string \"hello\" has\
    \ 1 digit.\nWrite a function that takes a string and returns the number of spaces\
    \ ( ) in the string.\nFor example, the string \"hello\" has 1 space.\nWrite a\
    \ function that takes a string and returns the number of punctuation marks (!,\
    \ ?, and .) in the string.\nFor example, the string \"hello\" has 1 punctuation\
    \ mark.\nWrite a function that takes a string and returns the number of words\
    \ in the string.\nFor example, the string \"hello world\" has 2 words.\nWrite\
    \ a function that takes a string and returns the number of lines in the string.\n\
    For example, the string \"hello\\nworld\" has 1 line.\nWrite a function that takes\
    \ a string and returns the number of characters in the string that are not spaces.\n\
    For example, the string \"hello  world\" has 5 characters.\nWrite a function that\
    \ takes a string and returns the number of characters in the string that are not\
    \ punctuation marks.\nFor example, the string \"hello! world\" has 5 characters.\n\
    Write a function that takes a string and returns the number of characters in the\
    \ string that are not digits.\nFor example, the string \"hello123 world\" has\
    \ 5 characters.\nWrite a function that takes a string and returns the number of\
    \ characters in the string that are not uppercase characters.\nFor example, the\
    \ string \"hello! world\" has 5 characters.\nWrite a function that takes a string\
    \ and returns the number of characters in the string that are not lowercase characters.\n\
    For example, the string \"hello! world\" has 5 characters.\nWrite a function that\
    \ takes a string and returns the number of characters in the string that are not\
    \ digits.\nFor example, the string \"hello123 world\" has 5 characters.\nWrite\
    \ a function that takes a string and returns the number of characters in the string\
    \ that are not uppercase characters.\nFor example, the string \"hello! world\"\
    \ has 5 characters.\nWrite a function that takes a string and returns the number\
    \ of characters in the string that are not lowercase characters.\nFor example,\
    \ the string \"hello! world\" has 5 characters.\nWrite a function that takes a\
    \ string and returns the number of characters in the string that are not \nusing\
    \ Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") ==\
    \ \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp44a_rvv2.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp44a_rvv2.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    string = string.lower()\n\
    \    \n    for i in string.chars:\n        if i.isupper():\n            string\
    \ = string.replace(i, i.lower())\n    \n    return string\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nThis does not provide an answer to the question. To critique or\
    \ request clarification from an author, leave a comment below their post. - [From\
    \ Review](/review/low-quality-posts/27826825)\n<|/ c |>\n<| c |>\nI believe it\
    \ does provide an answer to the question. He asked how to flip lowercase characters\
    \ to uppercase and uppercase to lowercase. He also asked how to do this in one\
    \ line. He also asked how to do this in one line without using any libraries.\
    \ He also asked how to do this in one line without using any libraries. He also\
    \ asked how to do this in one line without using any libraries. He also asked\
    \ how to do this in one line without using any libraries. He also asked how to\
    \ do this in one line without using any libraries. He also asked how to do this\
    \ in one line without using any libraries. He also asked how to do this in one\
    \ line without using any libraries. He also asked how to do this in one line without\
    \ using any libraries. He also asked how to do this in one line without using\
    \ any libraries. He also asked how to do this in one line without using any libraries.\
    \ He also asked how to do this in one line without using any libraries. He also\
    \ asked how to do this in one line without using any libraries.\n<|/ c |>\n<|\
    \ c |>\nHe also asked how to do this in one line without using any libraries.\
    \ He also asked how to do this in one line without using any libraries. He also\
    \ asked how to do this in one line without using any libraries. He also asked\
    \ how to do this in one line without using any libraries. He also asked how to\
    \ do this in one line without using any libraries. He also asked how to do this\
    \ in one line without using any libraries. He also asked how to do this in one\
    \ line without using any libraries. He also asked how to do this in one line without\
    \ using any libraries. He also asked how to do this in one line without using\
    \ any libraries. He also asked how to do this in one line without using any libraries.\
    \ He also asked how to do this in one line without using any libraries. He also\
    \ asked how to do this in one line without \nusing Test\n\n@testset begin\n\n\
    candidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzxxzcq_e.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpzxxzcq_e.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    local result = \"\"\n\
    \    \n    for char in string:\n        if char == char:\n            result +=\
    \ \"_\"\n        else:\n            result += char.upper()\n            \n   \
    \ return result\nend\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpu1q6m9l6.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpu1q6m9l6.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpap_a0sqm.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpap_a0sqm.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpap_a0sqm.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp67j_ae4q.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp67j_ae4q.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp67j_ae4q.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result = result + c.lower()\n\
    \        else:\n            result = result + c.upper()\n    return result\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1iwgenme.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp1iwgenme.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string.gmatch(\"[%a]\") do \n        if c:sub(1,1) ~= 'a' then \n     \
    \       result = result .. c:sub(2,2) .. c:sub(1,1) \n        else \n        \
    \    result = result .. c:sub(1,1) .. c:sub(2,2) \n        end\n    end\n    return\
    \ result\nend\n</code>\n<|/ a dscore=1 |>\n<| a tags=string,julia |>\nI wanted\
    \ to add an answer that uses regular expressions to do the job. \n<code>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") ==\
    \ \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: extra token \"then\" after end of expression\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphvsik3ki.jl:8\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmphvsik3ki.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result = result + c.lower()\n\
    \        else:\n            result = result + c.upper()\n    return result\n</code>\n\
    <|/ a tags=string,lowercase,uppercase,haskell |>\n<| a |>\n<code>\nimport Data.Char\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmph4t6moae.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmph4t6moae.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char.toUpper():\n            result += \"\
    _\"\n            result += char.toLower()\n        elseif char == char.toLower():\n\
    \            result += \"_\"\n            result += char.toUpper()\n        else\n\
    \            result += char\n        end\n    end\n    return result\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjvpmsdtl.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpjvpmsdtl.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result += \"_\"\n       \
    \     result += c.lower()\n        else:\n            result += c\n    return\
    \ result\n</code>\n<|/ a tags=string,lowercase,uppercase,haskell |>\n<| a dscore=2\
    \ |>\nA simple solution that doesn't use any libraries:\n<code>\nimport Data.List\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpj0me0foa.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpj0me0foa.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result = result + c.lower()\n\
    \        else:\n            result = result + c.upper()\n    return result\n</code>\n\
    <|/ a tags=string,lowercase,uppercase,haskell |>\n<| a dscore=2 |>\n<code>\nimport\
    \ Data.Char\nimport Data.List\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_x6d5trs.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp_x6d5trs.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    lowercase_chars = string.lower()\n\
    \    uppercase_chars = string.upper()\n    \n    return uppercase_chars + lowercase_chars\n\
    end\n</cell>\n<code language=julia-1.5>\n# Run this cell to test your function\
    \ above. \n# Note that it may take a few minutes to finish.\n@time flip_case(\"\
    hello world\")\n</cell>\n<text>\nExtra Credit!\nWrite a function that takes a\
    \ string and returns a new string where all the spaces are replaced with an underscore\
    \ (_).\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphx5o6xdt.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmphx5o6xdt.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpoz3na0a4.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpoz3na0a4.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpoz3na0a4.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    \    string::String\n    \n    string::String\n    \n    string::String\n    \n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmped5zsq4s.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmped5zsq4s.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmped5zsq4s.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result += \"_\"\n       \
    \     result += c.lower()\n        else:\n            result += c\n    return\
    \ result\n</code>\n<|/ a |>\n<| a dscore=0 |>\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp71_0pj5k.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp71_0pj5k.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += char\n    \
    \    elseif char.isupper():\n            result += char.lower()\n        elseif\
    \ char.islower():\n            result += char.upper()\n        end\n    end\n\
    \    return result\nend\n</cell>\n<code language=julia-1.5>\n@time flip_case(\"\
    Hello\");\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and\
    \ returns the number of characters in the string.\nusing Test\n\n@testset begin\n\
    \ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpx2pdsqse.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpx2pdsqse.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result = result + c.lower()\n\
    \        else:\n            result = result + c.upper()\n    return result\nend\n\
    </cell>\n<code language=julia-1.3>\n@time flip_case(\"hello\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string and returns the number of characters\
    \ in that string. \nHint: Use a for loop to iterate over the characters in the\
    \ string.\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgowuhqoa.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpgowuhqoa.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    string = string.lower()\n\
    \    \n    for i in string.chars:\n        if i.isupper():\n            string\
    \ = string.replace(i, i.lower())\n        else:\n            string = string.replace(i,\
    \ i.upper())\n    \n    return string\n</cell>\n<cell>\n\"\"\"\nflip_case(\"hello\"\
    )\n</cell>\n<cell>\n\"\"\"\nflip_case(\"hello\")\n</cell>\n<cell>\n\"\"\"\nflip_case(\"\
    hello\")\n</cell>\n<cell>\n\"\"\"\nflip_case(\"hello\")\n</cell>\n<cell>\n\"\"\
    \"\nflip_case(\"hello\")\n</cell>\n<cell>\n\"\"\"\nflip_case(\"hello\")\n</cell>\n\
    <cell>\n\"\"\"\nflip_case(\"hello\")\n</cell>\n<cell>\n\"\"\"\nflip_case(\"hello\"\
    )\n</cell>\n<cell>\n\"\"\"\nflip_case(\"hello\")\n</cell>\n<cell>\n\"\"\"\nflip_case(\"\
    hello\")\n</cell>\n<cell>\n\"\"\"\nflip_case(\"hello\")\n</cell>\n<cell>\n\"\"\
    \"\nflip_case(\"hello\")\n</cell>\n<cell>\n\"\"\"\nflip_case(\"hello\")\n</cell>\n\
    <cell>\n\"\"\"\nflip_case(\"hello\")\n</cell>\n<cell>\n\"\"\"\nflip_case(\"hello\"\
    )\n</cell>\n<cell>\n\"\"\"\nflip_case(\"hello\")\n</cell>\n<cell>\n\"\"\"\nflip_case(\"\
    hello\")\n</cell>\n<cell>\n\"\"\"\nflip_case(\"hello\")\n</cell>\n<cell>\n\"\"\
    \"\nflip_case(\"hello\")\n</cell>\n<cell>\n\"\"\"\nflip_case(\"hello\")\n</cell>\n\
    <cell>\n\"\"\"\nflip_case(\"hello\")\n</cell>\n<cell>\n\"\"\"\nflip_case(\"hello\"\
    )\n</cell>\n<cell>\n\"\"\"\nflip_case(\"hello\")\n</cell>\n<cell>\n\"\"\"\nflip_case(\"\
    hello\")\n</cell>\n<cell>\n\"\"\"\nflip_case(\"hello\")\n</cell>\n<cell>\n\"\"\
    \"\nflip_case(\"hello\")\n</cell>\n<cell>\n\"\"\"\nflip_case(\"hello\")\n</cell>\n\
    <cell>\n\"\"\"\nflip_case(\"hello\")\n</cell>\n<cell>\n\"\"\"\nflip_case(\"hello\"\
    )\n</cell>\n\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp74qr9z5e.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp74qr9z5e.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += char\n    \
    \    else\n            result += char.upper()\n            result += char.lower()\n\
    \        end\n    end\n    return result\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpg9ddo8s0.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpg9ddo8s0.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    local result = \"\"\n\
    \    for char in string:\n        if char == char:\n            result += char\n\
    \        else if char < \"a\" and char > \"z\":\n            result += \"A\"\n\
    \        elif char < \"A\" and char > \"Z\":\n            result += \"a\"\n  \
    \      elif char < \"0\" and char > \"9\":\n            result += \"0\"\n    \
    \    else :\n            result += char\n    end\n    return result\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8pvr9cz8.jl:9\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp8pvr9cz8.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    string = string.lower()\n\
    \    \n    for i in string.chars:\n        if i.isupper():\n            string\
    \ = string.replace(i, i.lower())\n            \n    return string\n</code>\n<|/\
    \ a dscore=0 |>\n<| a dscore=0 |>\n<code>\ndef flip_case(string):\n    \n    string\
    \ = string.lower()\n    \n    for i in string.chars:\n        if i.isupper():\n\
    \            string = string.replace(i, i.lower())\n            \n    return string\n\
    </code>\n<|/ a tags=string,python |>\n<| c |>\nPlease don't post only code as\
    \ an answer, but also provide an explanation of what your code does and how it\
    \ solves the problem of the question. Answers with an explanation are usually\
    \ more helpful and of better quality, and are more likely to attract upvotes.\n\
    <|/ c |>\n<| c |>\nWhile this code may provide a solution to the question, it's\
    \ better to add context as to why/how it works. This can help future users learn\
    \ and eventually apply that knowledge to their own code. You are also likely to\
    \ have positive feedback/upvotes from users, when the code is explained.\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>\ndef flip_case(string):\n    \n    string = string.lower()\n\
    \    \n    for i in string.chars:\n        if i.isupper():\n            string\
    \ = string.replace(i, i.lower())\n            \n    return string\n</code>\n<|/\
    \ a tags=string,python |>\n<| c |>\nPlease don't post only code as an answer,\
    \ but also provide an explanation of what your code does and how it solves the\
    \ problem of the question. Answers with an explanation are usually more helpful\
    \ and of better quality, and are more likely to attract upvotes.\n<|/ c |>\n<|\
    \ a tags=string,python |>\n<code>\ndef flip_case(string):\n    \n    string =\
    \ string.lower()\n    \n    for i in string.chars:\n        if i.isupper():\n\
    \            string = string.replace(i, i.lower())\n            \n    return string\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nPlease don't post only code as an answer,\
    \ but also provide an explanation of what your code does and how it solves the\
    \ problem of the question. Answers with an explanation are usually more helpful\
    \ and of better quality, and are more likely to attract upvotes.\n<|/ c |>\n<|\
    \ a tags=string,python |>\n<code>\ndef flip_case(string):\n    \n    string =\
    \ string.lower()\n    \n    for i in string.chars:\n        if i.isupper():\n\
    \            string = string.replace(i, i.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpffjhxhps.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpffjhxhps.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += \"_\"\n   \
    \     else if char.isupper():\n            result += \"_\"\n            result\
    \ += char.lower()\n        else if char.islower():\n            result += char.upper()\n\
    \    return result\n</code>\n<|/ a tags=string,lowercase,uppercase,haskell |>\n\
    <| a tags=string,lowercase,uppercase,haskell |>\n<code>\nimport Data.Char\nusing\
    \ Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") ==\
    \ \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbtrm7mc5.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpbtrm7mc5.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result += \"_\"\n       \
    \     result += c.lower()\n        else:\n            result += c\n    return\
    \ result\n</code>\n<|/ a tags=string,lowercase,uppercase,haskell |>\n<| a |>\n\
    Here's a solution using Data.Text:\n<code>\nimport qualified Data.Text as T\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkd2v7736.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpkd2v7736.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    lowercase_string = string.lower()\n\
    \    uppercase_string = string.upper()\n    \n    return uppercase_string + lowercase_string\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpd0ljgt64.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpd0ljgt64.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp921fofs6.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp921fofs6.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp921fofs6.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return uppercase+lowercase\nend\n\
    </cell>\n<code language=julia-1.5>\n@test flip_case(\"Hello\") == \"hELLO\"\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the string with all non-alphanumeric characters removed.\ne.g. \"hello!\" =>\
    \ \"hello\"\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp88rn3o7a.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp88rn3o7a.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += char\n    \
    \    else\n            result += char.upper()\n            result += char.lower()\n\
    \        end\n    end\n    return result\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpc55bezyy.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpc55bezyy.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return lowercase + uppercase\n\
    end\n</cell>\n<code language=julia-1.5>\n@test flip_case(\"Hello\") == \"hELLO\"\
    \n</cell>\n<text>\nExercise: Write a function that takes a string and returns\
    \ the string with all lowercase letters replaced by uppercase letters.\nHint:\
    \ Use string.uppercase() and string.lowercase().\nusing Test\n\n@testset begin\n\
    \ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdec1_148.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpdec1_148.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    lowercase_chars = string.chars\n\
    \    uppercase_chars = string.chars.map(char.upper)\n    \n    return string.chars.zip(lowercase_chars,\
    \ uppercase_chars).map(&(&1)).collect{|x| x.join('')}\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"|\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdsgno9vo.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpdsgno9vo.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += char\n    \
    \    else\n            result += char.upper()\n            result += char.lower()\n\
    \        end\n    end\n    return result\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0l8onyxb.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp0l8onyxb.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    local result = \"\"\n\
    \    for char in string:\n        if char == char:\n            result = result\
    \ + char\n        else if char == char.upper():\n            result = result +\
    \ char.lower()\n        else if char == char.lower():\n            result = result\
    \ + char.upper()\n        end\n    end\n    return result\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@time flip_case(\"Hello\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a string and returns a new string where all characters\
    \ have been reversed. The original string should not be modified.\nusing Test\n\
    \n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent\
    \ delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpnotl0ksc.jl:9\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpnotl0ksc.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    lowercase_string = string.lower()\n\
    \    uppercase_string = string.upper()\n    \n    return uppercase_string+lowercase_string\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpyrab5mfj.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpyrab5mfj.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    local result = \"\"\n\
    \    for c in string:\n        if c.isupper():\n            result += '_' + c.lower()\n\
    \        else:\n            result += c\n    return result\n</code>\n<|/ a tags=string,lowercase,uppercase,haskell\
    \ |>\n<| a dscore=2 |>\nThe other answers are all good, but I thought I'd add\
    \ my own solution, since I find it more readable:\n<code>\nimport Data.Char\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp22cw3f7q.jl:9\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp22cw3f7q.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return uppercase + lowercase[1:]\
    \ + lowercase[0]\nend\n</cell>\n<code language=julia-1.5>\n# Test the function\n\
    @test flip_case(\"Hello\") == \"hELLO\"\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes a string and returns the string with all uppercase letters\
    \ replaced by their lowercase counterparts.\n>>> flip_case(\"Hello\")\n\"hELLO\"\
    \n>>> flip_case(\"hello\")\n\"hELLO\"\n>>> flip_case(\"HellO\")\n\"hELLO\"\n>>>\
    \ flip_case(\"HellO\")\n\"hELLO\"\n>>> flip_case(\"HellO\")\n\"hELLO\"\n>>> flip_case(\"\
    HellO\")\n\"hELLO\"\n>>> flip_case(\"HellO\")\n\"hELLO\"\n>>> flip_case(\"HellO\"\
    )\n\"hELLO\"\n>>> flip_case(\"HellO\")\n\"hELLO\"\n>>> flip_case(\"HellO\")\n\"\
    hELLO\"\n>>> flip_case(\"HellO\")\n\"hELLO\"\n>>> flip_case(\"HellO\")\n\"hELLO\"\
    \n>>> flip_case(\"HellO\")\n\"hELLO\"\n>>> flip_case(\"HellO\")\n\"hELLO\"\n>>>\
    \ flip_case(\"HellO\")\n\"hELLO\"\n>>> flip_case(\"HellO\")\n\"hELLO\"\n>>> flip_case(\"\
    HellO\")\n\"hELLO\"\n>>> flip_case(\"HellO\")\n\"hELLO\"\n>>> flip_case(\"HellO\"\
    )\n\"hELLO\"\n>>> flip_case(\"HellO\")\n\"hELLO\"\n>>> flip_case(\"HellO\")\n\"\
    hELLO\"\n>>> flip_case(\"HellO\")\n\"hELLO\"\n>>> flip_case(\"HellO\")\n\"hELLO\"\
    \n>>> flip_case(\"HellO\")\n\"hELLO\"\n>>> flip_case(\"HellO\")\n\"hELLO\"\n>>>\
    \ flip_case(\"HellO\")\n\"hELLO\"\n>>> flip_case(\"HellO\")\n\"hELLO\"\n>>> flip_case(\"\
    HellO\")\n\"hELLO\"\n>>> flip_case(\"HellO\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing last argument in \"1:\" range expression\
    \ \nStacktrace:\n [1] top-level scope at /tmp/tmpfeymzy3i.jl:10\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpfeymzy3i.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    lowercase_chars = string.lower()\n\
    \    uppercase_chars = string.upper()\n    \n    return uppercase_chars + lowercase_chars\n\
    end\n</cell>\n<code language=julia-1.1>\n# Test the function\n@test flip_case(\"\
    hello\") == \"hELLO\"\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a string and returns the number of uppercase letters in the string.\nusing Test\n\
    \n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent\
    \ delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzi9a41jv.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpzi9a41jv.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    local result = \"\"\n\
    \    for char in string:\n        if char == char:\n            result += char\n\
    \        elseif char.isupper():\n            result += char.lower()\n        elseif\
    \ char.islower():\n            result += char.upper()\n        else\n        \
    \    result += char\n        end\n    end\n    return result\nend\n</cell>\n<code\
    \ language=julia-1.4>\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpq1t_w7r3.jl:9\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpq1t_w7r3.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    lowercase_string = string.lower()\n\
    \    uppercase_string = string.upper()\n    \n    return uppercase_string + lowercase_string\n\
    end\n</cell>\n<code language=julia-1.4>\n@test flip_case(\"hello\") == \"hELLO\"\
    \n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of characters in the string.\nHint: Use length\nusing Test\n\n@testset\
    \ begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3wm1w_3h.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp3wm1w_3h.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    local result = \"\"\n\
    \    for character in string:\n        if character == character.upper():\n  \
    \          character = character.lower()\n        \n        result = result +\
    \ character\n    \n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4azfo7v8.jl:9\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp4azfo7v8.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp808vsujr.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp808vsujr.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp808vsujr.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ character in string:\n        if character == character then\n            result\
    \ += \"_\"\n        else\n            result += character\n        end\n    end\n\
    \    return result\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpglu832h_.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpglu832h_.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    lowercase_string = string.lower()\n\
    \    uppercase_string = string.upper()\n    \n    return uppercase_string + lowercase_string\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7ndl_6uz.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp7ndl_6uz.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbvoc1etq.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpbvoc1etq.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpbvoc1etq.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result = result + char\n\
    \        else\n            result = result + char.upper()\n        end\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpei_udmr0.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpei_udmr0.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return lowercase+uppercase[1:len(uppercase)]\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert flip_case(\"hello\") == \"hELLO\"\
    \n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the string with all characters in lower case and upper case separated by a space.\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp29ixjep1.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp29ixjep1.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result = result + c.lower()\n\
    \        else:\n            result = result + c.upper()\n    return result\n</code>\n\
    <|/ a tags=string,lowercase,uppercase,haskell |>\n<| a dscore=4 |>\n<code>\nimport\
    \ Data.Char\nimport Data.List\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplgvrhyzw.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmplgvrhyzw.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqslzzjr9.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpqslzzjr9.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpqslzzjr9.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char.toUpper():\n            char = toLower()\n\
    \        elif char == char.toLower():\n            char = toUpper()\n        end\n\
    \        result = result + char\n    return result\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbd0eifs4.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpbd0eifs4.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char.toUpper():\n            result = result\
    \ + char.toLower()\n        elseif char == char.toLower():\n            result\
    \ = result + char.toUpper()\n        else\n            result = result + char\n\
    \        end\n    end\n    return result\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpl9csz7mt.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpl9csz7mt.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return lowercase + uppercase[1:len(uppercase)]\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert flip_case(\"Hello\") == \"hELLO\"\
    \n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpajhh72gd.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpajhh72gd.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char.upper():\n            char.upper()\n\
    \        elif char == char.lower():\n            char.lower()\n        else :\n\
    \            result = result + char\n    return result\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2_k7n1zn.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp2_k7n1zn.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result = result + c.lower()\n\
    \        else:\n            result = result + c.upper()\n    return result\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkbbw8i38.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpkbbw8i38.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += \"_\"\n   \
    \     else if char.isupper():\n            result += \"_\"\n            result\
    \ += char.lower()\n        else if char.islower():\n            result += char.upper()\n\
    \            result += \"_\"\n    return result\n</code>\n<|/ a tags=string,lowercase,uppercase,haskell,replace\
    \ |>\n<| a |>\n<code>\nimport Data.List\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpn7fpgr6s.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpn7fpgr6s.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += \"_\"\n   \
    \     else\n            result += char\n        end\n    end\n    return result\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpl3qmp97x.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpl3qmp97x.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result = result + c.lower()\n\
    \        else:\n            result = result + c.upper()\n    return result\nend\n\
    </cell>\n<code language=julia-1.0>\n# Test the function\nprintln(flip_case(\"\
    Hello\"))\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and\
    \ returns the number of uppercase letters.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgu7q5209.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpgu7q5209.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpb36zr4g6.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpb36zr4g6.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpb36zr4g6.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return uppercase+lowercase[1:]+lowercase[0]\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing last argument in \"1:\" range expression\
    \ \nStacktrace:\n [1] top-level scope at /tmp/tmpn_s77f0k.jl:10\n [2] include(::Module,\
    \ ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n\
    \ [4] _start() at ./client.jl:484\nin expression starting at /tmp/tmpn_s77f0k.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    local result = \"\"\n\
    \    \n    for char in string:\n        if char == char.toUpper():\n         \
    \   result = result + char.toLower()\n        else\n            result = result\
    \ + char\n        end\n    end\n    \n    return result\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpogy66s_z.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpogy66s_z.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    string = string.lower()\n\
    \    string = string.upper()\n    \n    return string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2h1y257u.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field lower\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] flip_case(::String)\
    \ at /tmp/tmp2h1y257u.jl:7\n   [3] top-level scope at /tmp/tmp2h1y257u.jl:17\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp2h1y257u.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmp2h1y257u.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    Hello!\") == \"hELLO!\"\n  type String has no field lower\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] flip_case(::String)\
    \ at /tmp/tmp2h1y257u.jl:7\n   [3] top-level scope at /tmp/tmp2h1y257u.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp2h1y257u.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmp2h1y257u.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"\n  type String has no field lower\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] flip_case(::String) at /tmp/tmp2h1y257u.jl:7\n\
    \   [3] top-level scope at /tmp/tmp2h1y257u.jl:19\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp2h1y257u.jl:16\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2h1y257u.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    string::String \n   \
    \ \n    string::String \n    \n    string::String \n    \n    string::String \n\
    \    \n    string::String \n    \n    string::String \n    \n    string::String\
    \ \n    \n    string::String \n    \n    string::String \n    \n    string::String\
    \ \n    \n    string::String \n    \n    string::String \n    \n    string::String\
    \ \n    \n    string::String \n    \n    string::String \n    \n    string::String\
    \ \n    \n    string::String \n    \n    string::String \n    \n    string::String\
    \ \n    \n    string::String \n    \n    string::String \n    \n    string::String\
    \ \n    \n    string::String \n    \n    string::String \n    \n    string::String\
    \ \n    \n    string::String \n    \n    string::String \n    \n    string::String\
    \ \n    \n    string::String \n    \n    string::String \n    \n    string::String\
    \ \n    \n    string::String \n    \n    string::String \n    \n    string::String\
    \ \n    \n    string::String \n    \n    string::String \n    \n    string::String\
    \ \n    \n    string::String \n    \n    string::String \n    \n    string::String\
    \ \n    \n    string::String \n    \n    string::String \n    \n    string::String\
    \ \n    \n    string::String \n    \n    string::String \n    \n    string::String\
    \ \n    \n    string::String \n    \n    string::String \n    \n    string::String\
    \ \n    \n    string::String \n    \n    string::String \n    \n    string::String\
    \ \n    \n    string::String \n    \n    string::String \n    \n    string::String\
    \ \n    \n    string::String \n    \n    string::String \n    \n    string::String\
    \ \n    \n    string::String \n    \n    string::String \n    \n    string::String\
    \ \n    \n    string::String \n    \n    string::String \n    \n    string::String\
    \ \n    \n    string::String \n    \n    string::String \n    \n    string::String\
    \ \n    \n    string::String \n    \n    string::String \n    \n    string::String\
    \ \n    \n    string::String \n    \n    string::String \n    \n    string::String\
    \ \n    \nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbs_h44z0.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpbs_h44z0.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpbs_h44z0.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return lowercase+uppercase[1:len(uppercase)]\n\
    end\n</cell>\n<code language=julia-1.5>\n# Test Cases\n@test flip_case(\"hello\"\
    ) == \"hELLO\"\n@test flip_case(\"hello \") == \"hELLO \"\n@test flip_case(\"\
    hello \") == \"hELLO \"\n@test flip_case(\"hello \") == \"hELLO \"\n@test flip_case(\"\
    hello \") == \"hELLO \"\n@test flip_case(\"hello \") == \"hELLO \"\n@test flip_case(\"\
    hello \") == \"hELLO \"\n@test flip_case(\"hello \") == \"hELLO \"\n@test flip_case(\"\
    hello \") == \"hELLO \"\n@test flip_case(\"hello \") == \"hELLO \"\n@test flip_case(\"\
    hello \") == \"hELLO \"\n@test flip_case(\"hello \") == \"hELLO \"\n@test flip_case(\"\
    hello \") == \"hELLO \"\n@test flip_case(\"hello \") == \"hELLO \"\n@test flip_case(\"\
    hello \") == \"hELLO \"\n@test flip_case(\"hello \") == \"hELLO \"\n@test flip_case(\"\
    hello \") == \"hELLO \"\n@test flip_case(\"hello \") == \"hELLO \"\n@test flip_case(\"\
    hello \") == \"hELLO \"\n@test flip_case(\"hello \") == \"hELLO \"\n@test flip_case(\"\
    hello \") == \"hELLO \"\n@test flip_case(\"hello \") == \"hELLO \"\n@test flip_case(\"\
    hello \") == \"hELLO \"\n@test flip_case(\"hello \") == \"hELLO \"\n@test flip_case(\"\
    hello \") == \"hELLO \"\n@test flip_case(\"hello \") == \"hELLO \"\n@test flip_case(\"\
    hello \") == \"hELLO \"\n@test flip_case(\"hello \") == \"hELLO \"\n@test flip_case(\"\
    hello \") == \"hELLO \"\n@test flip_case(\"hello \") == \"hELLO \"\n@test flip_case(\"\
    hello \") == \"hELLO \"\n@test flip_case(\"hello \") == \"hELLO \"\n@test flip_case(\"\
    hello \") == \"hELLO \"\n@test flip_case(\"hello \") == \"hELLO \"\n@test flip_case(\"\
    hello \") == \"hELLO \"\n@test flip_case(\"hello \") == \"hELLO \"\n\nusing Test\n\
    \n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent\
    \ delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_r5mo0el.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp_r5mo0el.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptqsd3q6f.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmptqsd3q6f.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmptqsd3q6f.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpyt8cg512.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpyt8cg512.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpyt8cg512.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    string = string.lower()\n\
    \    \n    for c in string.chars:\n        if c.isupper():\n            string\
    \ = string.replace(c.lower(), c.upper())\n    \n    return string\n</cell>\n<cell>\n\
    flip_case('Hello')\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ string and returns the string with all lowercase letters replaced with uppercase\
    \ letters.\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpah4ysfz4.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpah4ysfz4.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result = result + c.lower()\n\
    \        else:\n            result = result + c.upper()\n    return result\nend\n\
    </cell>\n<code language=julia-1.3>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsbdg4az0.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpsbdg4az0.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string.gmatch(\"%a\")::String \n        result = result .. tostring((tostring(c):lower()))::String\
    \ \n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfmqnt88o.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field gmatch\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] flip_case(::String)\
    \ at /tmp/tmpfmqnt88o.jl:7\n   [3] top-level scope at /tmp/tmpfmqnt88o.jl:17\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpfmqnt88o.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpfmqnt88o.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    Hello!\") == \"hELLO!\"\n  type String has no field gmatch\n  Stacktrace:\n  \
    \ [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] flip_case(::String)\
    \ at /tmp/tmpfmqnt88o.jl:7\n   [3] top-level scope at /tmp/tmpfmqnt88o.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpfmqnt88o.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmpfmqnt88o.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"\n  type String has no field gmatch\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] flip_case(::String) at /tmp/tmpfmqnt88o.jl:7\n\
    \   [3] top-level scope at /tmp/tmpfmqnt88o.jl:19\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmpfmqnt88o.jl:16\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfmqnt88o.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    local result = \"\"\n\
    \    for char in string:\n        if char == char:\n            result += char\n\
    \        else if char.isupper():\n            result += char.lower()\n       \
    \ else if char.islower():\n            result += char.upper()\n        else :\n\
    \            result += char\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0_cjqcat.jl:9\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp0_cjqcat.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    string = string.lower()\n\
    \    string = string.upper()\n    \n    return string\n</cell>\n<code language=julia-1.5>\n\
    # Test your function with the below cell\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpw486kskb.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpw486kskb.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return lowercase+uppercase\nend\n\
    </cell>\n<code language=julia-1.5>\n@test flip_case(\"Hello\") == \"hELLO\"\n\
    </cell>\n<text>\nExercise: Write a function that takes a string and returns the\
    \ string with all uppercase letters replaced with their lowercase counterparts.\
    \ For example, if the input string is \"hello\", the output should be \"hELLO\"\
    .\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpfo2ykroi.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpfo2ykroi.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result += \"_\"\n       \
    \     result += c.lower()\n        else:\n            result += c\n    return\
    \ result\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your answer! I used\
    \ your function and I got this error: `Undefined function 'flip_case' for input\
    \ arguments of type 'String'.` I added the function to the question so you can\
    \ see it.\n<|/ c |>\n<| c |>\nI added the function to the question so you can\
    \ see it.\n<|/ c |>\n<| c |>\nI added the function to the question so you can\
    \ see it.\n<|/ c |>\n<| c |>\nI added the function to the question so you can\
    \ see it.\n<|/ c |>\n<| c |>\nI added the function to the question so you can\
    \ see it.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nusing Test\n\n@testset begin\n\n\
    candidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0drp2ym1.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp0drp2ym1.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpn6uuf1gf.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpn6uuf1gf.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpn6uuf1gf.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    lowercase_string = string.lower()\n\
    \    uppercase_string = string.upper()\n    \n    return uppercase_string+lowercase_string\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplsywg2nw.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmplsywg2nw.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    lowercase_string = string.lower()\n\
    \    uppercase_string = string.upper()\n    \n    return uppercase_string + lowercase_string\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxvh62juz.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpxvh62juz.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpg487yhl0.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpg487yhl0.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpg487yhl0.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    local result = \"\"\n\
    \    for char in string:\n        if char == char:\n            result += char\n\
    \        else if char == char.upper():\n            result += char.lower()\n \
    \       else if char == char.lower():\n            result += char.upper()\n  \
    \  return result\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8dceap8k.jl:9\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp8dceap8k.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += char\n    \
    \    elseif char.isupper():\n            result += char.lower()\n        elseif\
    \ char.islower():\n            result += char.upper()\n        end\n    end\n\
    \    return result\nend\n</cell>\n<code language=julia-1.3>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_wbmfn4v.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp_wbmfn4v.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    local result = \"\"\n\
    \    \n    for char in string:\n        if char == char:\n            result +=\
    \ \"_\"\n        else if char.isupper():\n            result += \"_\"\n      \
    \      result += char.lower()\n        else if char.islower():\n            result\
    \ += char.upper()\n            result += \"_\"\n        else:\n            result\
    \ += char\n    \n    return result\nend\n</cell>\n<code language=julia-1.5>\n\
    @test flip_case(\"hello\") == \"hELLO\"\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes a string and returns a string where all characters are capitalized.\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps9_9ls6p.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmps9_9ls6p.jl:10\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result = result + c.lower()\n\
    \        else:\n            result = result + c.upper()\n    return result\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp585jgcez.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp585jgcez.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string.gmatch(\"%a\")::String \n        if c == \"a\" then\n          \
    \  result = \"A\"\n        elseif c == \"A\" then\n            result = \"a\"\n\
    \        else\n            result = result .. c\n        end\n    end\n    return\
    \ result\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\
    \ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplu54fghp.jl:18\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmplu54fghp.jl:18\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return uppercase + lowercase\n\
    end\n</cell>\n<code language=julia-1.5>\n@test flip_case(\"hello\") == \"hELLO\"\
    \n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the string with all vowels replaced by an underscore. For example, \"hello\"\
    \ becomes \"_hELLO\".\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpihilud8z.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpihilud8z.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result = result + char\n\
    \        elseif char == char.upper():\n            result = result + char.lower()\n\
    \        elseif char == char.lower():\n            result = result + char.upper()\n\
    \        else\n            result = result + char\n        end\n    end\n    return\
    \ result\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\
    \ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6ny62xzn.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp6ny62xzn.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result += \"_\"\n       \
    \     result += c.lower()\n        else:\n            result += c\n    return\
    \ result\n</code>\n<|/ a dscore=0 |>\n<| a tags=string,lowercase,uppercase,python\
    \ |>\n<code>\ndef flip_case(string):\n    \n    string=string.lower()\n    \n\
    \    string=string.replace('a','A')\n    string=string.replace('b','B')\n    string=string.replace('c','C')\n\
    \    string=string.replace('d','D')\n    string=string.replace('e','E')\n    string=string.replace('f','F')\n\
    \    string=string.replace('g','G')\n    string=string.replace('h','H')\n    string=string.replace('i','I')\n\
    \    string=string.replace('j','J')\n    string=string.replace('k','K')\n    string=string.replace('l','L')\n\
    \    string=string.replace('m','M')\n    string=string.replace('n','N')\n    string=string.replace('o','O')\n\
    \    string=string.replace('p','P')\n    string=string.replace('q','Q')\n    string=string.replace('r','R')\n\
    \    string=string.replace('s','S')\n    string=string.replace('t','T')\n    string=string.replace('u','U')\n\
    \    string=string.replace('v','V')\n    string=string.replace('w','W')\n    string=string.replace('x','X')\n\
    \    string=string.replace('y','Y')\n    string=string.replace('z','Z')\n    \n\
    \    string=string.replace(' ','')\n    \n    return string\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\ndef flip_case(string):\n    \n    string=string.lower()\n\
    \    \n    string=string.replace('a','A')\n    string=string.replace('b','B')\n\
    \    string=string.replace('c','C')\n    string=string.replace('d','D')\n    string=string.replace('e','E')\n\
    \    string=string.replace('f','F')\n    string=string.replace('g','G')\n    string=string.replace('h','H')\n\
    \    string=string.replace('i','I')\n    string=string.replace('j','J')\n    string=string.replace('k','K')\n\
    \    string=string.replace('l','L')\n    string=string.replace('m\nusing Test\n\
    \n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent\
    \ delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmztjqd2z.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpmztjqd2z.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    string = string.lower()\n\
    \    string = string.upper()\n    \n    return string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6s6jev25.jl:17\n  Test threw exception\n\
    \  Expression: candidate(\"\") == \"\"\n  type String has no field lower\n  Stacktrace:\n\
    \   [1] getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] flip_case(::String)\
    \ at /tmp/tmp6s6jev25.jl:7\n   [3] top-level scope at /tmp/tmp6s6jev25.jl:17\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp6s6jev25.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmp6s6jev25.jl:18\n  Test threw exception\n  Expression: candidate(\"\
    Hello!\") == \"hELLO!\"\n  type String has no field lower\n  Stacktrace:\n   [1]\
    \ getproperty(::String, ::Symbol) at ./Base.jl:33\n   [2] flip_case(::String)\
    \ at /tmp/tmp6s6jev25.jl:7\n   [3] top-level scope at /tmp/tmp6s6jev25.jl:18\n\
    \   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp6s6jev25.jl:16\n  \ntest set: Error During\
    \ Test at /tmp/tmp6s6jev25.jl:19\n  Test threw exception\n  Expression: candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"\n  type String has no field lower\n  Stacktrace:\n   [1] getproperty(::String,\
    \ ::Symbol) at ./Base.jl:33\n   [2] flip_case(::String) at /tmp/tmp6s6jev25.jl:7\n\
    \   [3] top-level scope at /tmp/tmp6s6jev25.jl:19\n   [4] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [5] top-level scope at /tmp/tmp6s6jev25.jl:16\n  \nTest Summary: | Error \
    \ Total\ntest set      |     3      3\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6s6jev25.jl:14\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    uppercase = uppercase.replace(lowercase,\
    \ lowercase)\n    lowercase = lowercase.replace(uppercase, uppercase)\n    \n\
    \    return lowercase + uppercase\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") ==\
    \ \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpaqn_xsut.jl:15\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpaqn_xsut.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ character in string:\n        if character == character then\n            character\
    \ = character .. \"A\"\n        elseif character == \"A\" then\n            character\
    \ = character .. \"a\"\n        elseif character == \"a\" then\n            character\
    \ = character .. \"A\"\n        end\n        result = result .. character\n  \
    \  end\n    return result\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent\
    \ delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpo7q7a9_0.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpo7q7a9_0.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += char\n    \
    \    else if char < \"a\" and char > \"z\":\n            result += \"A\"\n   \
    \     elif char < \"A\" and char > \"Z\":\n            result += \"a\"\n     \
    \   elif char < \"0\" and char > \"9\":\n            result += \"0\"\n       \
    \ else:\n            result += char\n    return result\n</code>\n<|/ a dscore=2\
    \ |>\n<| a dscore=1 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_r9gjkd9.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp_r9gjkd9.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    string = string.lower()\n\
    \    string = string.upper()\n    \n    return string\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    count_substrings(string::String, substring::String)\nusing Test\n\n\
    @testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t\
    @test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent\
    \ delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpaitnfayu.jl:11\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpaitnfayu.jl:11\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char.toLower():\n            char.toUpper()\n\
    \        else\n            char.toLower()\n        end\n    end\n    return result\n\
    end\n</cell>\n<code language=julia-1.4>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpiq4oezn0.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpiq4oezn0.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    chars = string.chars\n\
    \    \n    for i in 0..(length(chars)-1)\n        chars[i] = chars[i].toUpper()\n\
    \        chars[length(chars)-i-1] = chars[length(chars)-i-1].toLower()\n    end\n\
    \    \n    return join(chars, \"\")\nend\n</cell>\n<code language=julia-1.5>\n\
    @time flip_case(\"Hello\")\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a string and returns a new string where all characters have been converted\
    \ to uppercase and all characters have been converted to lowercase.\nusing Test\n\
    \n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent\
    \ delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpfxtzauz5.jl:16\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpfxtzauz5.jl:16\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char >= 'a' and char <= 'z':\n            char =\
    \ char - 32\n        elif char >= 'A' and char <= 'Z':\n            char = char\
    \ - 64\n        result += char\n    return result\n</code>\n<|/ a tags=string,lowercase,uppercase,haskell\
    \ |>\n<| c |>\nThis doesn't work for all characters, e.g. `flip_case(\"\xDF\"\
    )` returns `\"SS\"`.\n<|/ c |>\n<| c |>\nI guess I should have mentioned that\
    \ I was aware of that. Thanks for pointing it out.\n<|/ c |>\n<| c |>\nI guess\
    \ I should have mentioned that I was aware of that. Thanks for pointing it out.\n\
    <|/ c |>\n<| c |>\nI guess I should have mentioned that I was aware of that. Thanks\
    \ for pointing it out.\n<|/ c |>\n<| c |>\nI guess I should have mentioned that\
    \ I was aware of that. Thanks for pointing it out.\n<|/ c |>\n<| a dscore=4 |>\n\
    <code>\nimport Data.Char\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4r2zfy0n.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp4r2zfy0n.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    string::String\n    \n\
    \    lower::String\n    \n    upper::String\n    \n    lower::String\n    \n \
    \   upper::String\n    \n    lower::String\n    \n    upper::String\n    \n  \
    \  lower::String\n    \n    upper::String\n    \n    lower::String\n    \n   \
    \ upper::String\n    \n    lower::String\n    \n    upper::String\n    \n    lower::String\n\
    \    \n    upper::String\n    \n    lower::String\n    \n    upper::String\n \
    \   \n    lower::String\n    \n    upper::String\n    \n    lower::String\n  \
    \  \n    upper::String\n    \n    lower::String\n    \n    upper::String\n   \
    \ \n    lower::String\n    \n    upper::String\n    \n    lower::String\n    \n\
    \    upper::String\n    \n    lower::String\n    \n    upper::String\n    \n \
    \   lower::String\n    \n    upper::String\n    \n    lower::String\n    \n  \
    \  upper::String\n    \n    lower::String\n    \n    upper::String\n    \n   \
    \ lower::String\n    \n    upper::String\n    \n    lower::String\n    \n    upper::String\n\
    \    \n    lower::String\n    \n    upper::String\n    \n    lower::String\n \
    \   \n    upper::String\n    \n    lower::String\n    \n    upper::String\n  \
    \  \n    lower::String\n    \n    upper::String\n    \n    lower::String\n   \
    \ \n    upper::String\n    \n    lower::String\n    \n    upper::String\n    \n\
    \    lower::String\n    \n    upper::String\n    \n    lower::String\n    \n \
    \   upper::String\n    \n    lower::String\n    \n    upper::String\n    \n  \
    \  lower::String\n    \n    upper::String\n    \n    lower::String\n    \n   \
    \ upper::String\n    \n    lower::String\n    \n    upper::String\n    \n    lower::String\n\
    \    \n    upper::String\n    \n    lower::String\n    \n    upper::String\n \
    \   \n    lower::String\n    \n    upper::String\n    \n    lower::String\n  \
    \  \n    upper::String\n    \n    lower::String\n    \n    upper::String\n   \
    \ \nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmprj23ylyr.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmprj23ylyr.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmprj23ylyr.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return lowercase+uppercase\nend\n\
    </cell>\n<code language=julia-1.5>\n@test flip_case(\"Hello\") == \"hELLO\"\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the string with all spaces replaced by underscores.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmppq02hmzo.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmppq02hmzo.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpq0kzp9fg.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmpq0kzp9fg.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmpq0kzp9fg.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp0elfmnt8.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp0elfmnt8.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp0elfmnt8.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2qjr4uhk.jl:5\
    \ requires end\nStacktrace:\n [1] top-level scope at /tmp/tmp2qjr4uhk.jl:1\n [2]\
    \ include(::Module, ::String) at ./Base.jl:377\n [3] exec_options(::Base.JLOptions)\
    \ at ./client.jl:288\n [4] _start() at ./client.jl:484\nin expression starting\
    \ at /tmp/tmp2qjr4uhk.jl:1\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += char\n    \
    \    else\n            result += char.upper()\n            result += char.lower()\n\
    \        end\n    end\n    return result\nend\n</cell>\n<code language=julia-1.5>\n\
    @time flip_case(\"Hello\")\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a string and returns the string with all vowels replaced by an underscore.\n\
    using Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\"\
    ) == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp33jkjijk.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp33jkjijk.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result = result + c.lower()\n\
    \        else:\n            result = result + c.upper()\n    return result\n</code>\n\
    <|/ a dscore=2 |>\n<| a tags=string,lowercase,uppercase,haskell |>\n<code>\nimport\
    \ Data.Char\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcy9xkzjr.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpcy9xkzjr.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    uppercase = uppercase.replace(uppercase,lowercase)\n\
    \    lowercase = lowercase.replace(lowercase,uppercase)\n    \n    return lowercase\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpa2nuhstf.jl:15\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpa2nuhstf.jl:15\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    uppercase = string.uppercase()\n\
    \    lowercase = string.lowercase()\n    \n    return lowercase+uppercase[1:len(uppercase)]\n\
    end\n</cell>\n<code language=julia-1.5>\n@time flip_case(\"Hello\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string and returns the string\
    \ with all vowels replaced by an underscore.\nusing Test\n\n@testset begin\n\n\
    candidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7ltfrz3w.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp7ltfrz3w.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ char in string:\n        if char == char:\n            result += char\n    \
    \    else if char.isupper():\n            result += char.lower()\n        else\
    \ if char.islower():\n            result += char.upper()\n    return result\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nusing Test\n\n@testset begin\n\
    \ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"\
    Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptcgy2z5o.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmptcgy2z5o.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    lowercase = string.lower()\n\
    \    uppercase = string.upper()\n    \n    return lowercase + uppercase\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = flip_case;\n\t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\"\
    ) == \"hELLO!\")\n\t@test(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvtrlghwy.jl:12\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpvtrlghwy.jl:12\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    local result = \"\"\n    for\
    \ c in string:\n        if c.isupper():\n            result += \"_\"\n       \
    \     result += c.lower()\n        else:\n            result += c\n    return\
    \ result\n</code>\n<|/ a tags=string,lowercase,uppercase,haskell |>\n<| a tags=string,lowercase,uppercase,haskell\
    \ |>\n<code>\nimport Data.List\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\
    \t@test(candidate(\"\") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\"\
    )\n\t@test(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpp__9fhok.jl:8\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpp__9fhok.jl:8\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    local result = \"\"\n\
    \    for char in string:\n        if char == char.upper():\n            char =\
    \ char.lower()\n        elif char == char.lower():\n            char = char.upper()\n\
    \        result += char\n    return result\n</code>\n<|/ a tags=string,lowercase,uppercase,haskell\
    \ |>\n<| c |>\nThis doesn't work if you have a string like `'HellO'`\n<|/ c |>\n\
    <| c |>\nIt works if you have a string like `'HellO'`\n<|/ c |>\n<| c |>\nIt works\
    \ if you have a string like `'HellO'`\n<|/ c |>\n<| c |>\nIt works if you have\
    \ a string like `'HellO'`\n<|/ c |>\n<| c |>\nIt works if you have a string like\
    \ `'HellO'`\n<|/ c |>\n<| a tags=string,lowercase,uppercase,haskell |>\n<code>\n\
    import Data.Char\nusing Test\n\n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\
    \") == \"\")\n\t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2jfrvqs2.jl:9\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmp2jfrvqs2.jl:9\n"
  exit_code: 1
  status: Exception
- program: "\"\"\" For a given string, flip lowercase characters to uppercase and\
    \ uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\
    \nfunction flip_case(string::String)::String \n    \n    local result = \"\"\n\
    \    \n    for char in string:\n        if char == char:\n            result +=\
    \ char\n        else if char.isupper():\n            result += char.lower()\n\
    \        else if char.islower():\n            result += char.upper()\n       \
    \ else :\n            result += char\n    \n    return result\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = flip_case;\n\t@test(candidate(\"\") == \"\")\n\
    \t@test(candidate(\"Hello!\") == \"hELLO!\")\n\t@test(candidate(\"These violent\
    \ delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    )\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpsw4cz14v.jl:10\n [2] include(::Module, ::String)\
    \ at ./Base.jl:377\n [3] exec_options(::Base.JLOptions) at ./client.jl:288\n [4]\
    \ _start() at ./client.jl:484\nin expression starting at /tmp/tmpsw4cz14v.jl:10\n"
  exit_code: 1
  status: Exception

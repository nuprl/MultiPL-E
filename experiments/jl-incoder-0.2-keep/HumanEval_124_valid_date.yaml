name: HumanEval_124_valid_date
language: julia
prompt: "\"\"\"You have to write a function which validates a given date string and\n\
  \    returns True if the date is valid otherwise False.\n    The date is valid if\
  \ all of the following rules are satisfied:\n    1. The date string is not empty.\n\
  \    2. The number of days is not less than 1 or higher than 31 days for months\
  \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days\
  \ for months 4,6,9,11. And, the number of days is not less than 1 or higher than\
  \ 29 for the month 2.\n    3. The months should not be less than 1 or higher than\
  \ 12.\n    4. The date should be in the format: mm-dd-yyyy\n\n    for example: \n\
  \    valid_date('03-11-2000') => True\n\n    valid_date('15-01-2012') => False\n\
  \n    valid_date('04-0-2040') => False\n\n    valid_date('06-04-2020') => True\n\
  \n    valid_date('06/04/2020') => False\n    \"\"\"\nfunction valid_date(date::String)::Bool\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = valid_date;\n\t@test(candidate(\"\
  03-11-2000\") == true)\n\t@test(candidate(\"15-01-2012\") == false)\n\t@test(candidate(\"\
  04-0-2040\") == false)\n\t@test(candidate(\"06-04-2020\") == true)\n\t@test(candidate(\"\
  01-01-2007\") == true)\n\t@test(candidate(\"03-32-2011\") == false)\n\t@test(candidate(\"\
  \") == false)\n\t@test(candidate(\"04-31-3000\") == false)\n\t@test(candidate(\"\
  06-06-2005\") == true)\n\t@test(candidate(\"21-31-2000\") == false)\n\t@test(candidate(\"\
  04-12-2003\") == true)\n\t@test(candidate(\"04122003\") == false)\n\t@test(candidate(\"\
  20030412\") == false)\n\t@test(candidate(\"2003-04\") == false)\n\t@test(candidate(\"\
  2003-04-12\") == false)\n\t@test(candidate(\"04-2003\") == false)\nend\n"
completions: ["    \n    valid_date_regex = Regex(\"^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-[0-9]{4}$\"\
    )\n    \n    if valid_date_regex.match(date) == nil \n        return false\n \
    \   end\n    \n    days_regex = Regex(\"^((0?[1-9]|[12]\\d|3[01])-(0?[1-9]|1[0-2])-((19|20)\\\
    d\\d))$\")\n    \n    if days_regex.match(date) == nil \n        return false\n\
    \    end\n    \n    months_regex = Regex(\"^((0?[1-9]|1[012])-(0?[1-9]|[12]\\\
    d|3[01]))$\")\n    \n    if months_regex.match(date) == nil \n        return false\n\
    \    end\n    \n    year_regex = Regex(\"^((19|20)\\d\\d)$\")\n    \n    if year_regex.match(date)\
    \ == nil \n        return false\n    end\n    \n    return true\nend\n</cell>\n\
    <code language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06/04/2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    06/04/2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06/04/2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    06/04/2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06/04/2020\")\n</cell", "    \n    valid_date_regex = Regex(\"^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-[0-9]{4}$\"\
    )\n    \n    if valid_date_regex.match(date) == nil \n        return false\n \
    \   end", "    \n    valid_date_regex = r\"^(0[1-9]|[12][0-9]|3[01])[\\-](0[1-9]|1[012])[\\\
    -]\\d{4}$\"\n    valid_date_match = match(valid_date_regex, date)\n    \n    if\
    \ valid_date_match != None\n        \n        days_match = match(r\"^((?!29)[0-9])|30$\"\
    , valid_date_match.group(0))\n        months_match = match(r\"^((?!12)[0-9])|12$\"\
    , valid_date_match.group(0))\n        \n        if days_match != None and months_match\
    \ != None\n            \n            days_match = days_match.group(1)\n      \
    \      months_match = months_match.group(1)\n            \n            if days_match\
    \ != None and months_match != None\n                \n                days_match\
    \ = int(days_match)\n                months_match = int(months_match)\n      \
    \          \n                if days_match > 0 and months_match > 0 and days_match\
    \ <= 31 and months_match <= 12\n                    \n                    return\
    \ True\n                \n                elif days_match > 0 and months_match\
    \ > 0 and days_match <= 30 and months_match <= 12\n                    \n    \
    \                return False\n                \n                elif days_match\
    \ > 0 and months_match > 0 and days_match <= 31 and months_match <= 12\n     \
    \               \n                    return False\n                \n       \
    \         elif days_match > 0 and months_match > 0 and days_match <= 30 and months_match\
    \ <= 12\n                    \n                    return False\n            \
    \    \n                elif days_match > 0 and months_match > 0 and days_match\
    \ <= 31 and months_match <= 12\n                    \n                    return\
    \ False\n                \n                elif days_match > 0 and months_match\
    \ > 0 and days_match <= 30 and months_match <= 12\n                    \n    \
    \                return False\n                \n                elif days_match\
    \ > 0 and months_match > 0 and days_match <= 31 and months_match <= 12\n     \
    \               \n                    return False\n                \n       \
    \         elif days_match > 0 and months_match > 0 and days_match <= 30 and months_match\
    \ <= 12\n                    \n                    return False\n            \
    \    \n                elif days_match > 0 and months_match > 0 and days_match\
    \ <= 31 and months_match <= 12\n                    \n                    return\
    \ False\n                \n                elif days_match > 0 and months_match\
    \ > 0 and days_match <= 30 and months_match <= 12\n                    \n    \
    \                return False\n                \n                elif days_match\
    \ > 0 and months_match > 0 and days_match <= 31 and months_match <= 12\n     \
    \               \n                    return False\n                \n       \
    \         elif days_match > 0 and months_match > 0 and days_match <= 30 and months_match\
    \ <= 12\n                    \n                    return False\n            \
    \    \n                elif ", "    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = ", "    \n    valid_date_string = Date.parse(date)\n\
    \    \n    if valid_date_string == nil\n        return false\n    end", "    \n\
    \    valid_date_str = Date.parse(date)\n    if valid_date_str == nil \n      \
    \  return false\n    end\n    \n    valid_date_str = Date.parse(date)\n    if\
    \ valid_date_str == nil \n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil \n        return false\n  \
    \  end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str ==\
    \ nil \n        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil \n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil \n        return false\n  \
    \  end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str ==\
    \ nil \n        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil \n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil \n        return false\n  \
    \  end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str ==\
    \ nil \n        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil \n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil \n        return false\n  \
    \  end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str ==\
    \ nil \n        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil \n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil \n        return false\n  \
    \  end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str ==\
    \ nil \n        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil \n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil \n        return false\n  \
    \  end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str ==\
    \ nil \n        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil \n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil \n        return false\n  \
    \  end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str ==\
    \ nil \n        return false\n    end\n    \n    valid_date_str = ", "    \n \
    \   valid_date_res = validate_date(date)\n    if valid_date_res\n        return\
    \ true\n    else\n        return false\n    end\nend", "    \n    valid_date::Bool\
    \ = false \n    \n    if date == \"\" \n        valid_date = false \n    else\
    \ \n        valid_date = true \n    \n        if length(date) == 7 \n        \
    \    valid_date = true \n        else \n            valid_date = false \n    \n\
    \            if date == \"01-01-2000\" \n                valid_date = true \n\
    \            else \n                valid_date = false \n    \n              \
    \  if date == \"01-01-2001\" \n                    valid_date = true \n      \
    \          else \n                    valid_date = false \n    \n            \
    \        if date == \"01-01-2002\" \n                        valid_date = true\
    \ \n                    else \n                        valid_date = false \n \
    \   \n                        if date == \"01-01-2003\" \n                   \
    \         valid_date = true \n                        else \n                \
    \            valid_date = false \n    \n                            if date ==\
    \ \"01-01-2004\" \n                                valid_date = true \n      \
    \                      else \n                                valid_date = false\
    \ \n    \n                                if date == \"01-01-2005\" \n       \
    \                             valid_date = true \n                           \
    \     else \n                                    valid_date = false \n    \n \
    \                                   if date == \"01-01-2006\" \n             \
    \                           valid_date = true \n                             \
    \       else \n                                        valid_date = false \n \
    \   \n                                        if date == \"01-01-2007\" \n   \
    \                                         valid_date = true \n               \
    \                         else \n                                            valid_date\
    \ = false \n    \n                                            if date == \"01-01-2008\"\
    \ \n                                                valid_date = true \n     \
    \                                       else \n                              \
    \                  valid_date = false \n    \n                               \
    \                 if date == \"01-01-2009\" \n                               \
    \                     valid_date = true \n                                   \
    \             else \n                                                    valid_date\
    \ = false \n    \n                                                    if date\
    \ == \"01-01-2010\" \n                                                       \
    \ valid_date = true \n                                                    else\
    \ \n                                                        valid_date = false\
    \ \n    \n                                                        if date == \"\
    01-01-2011\" \n                                                            valid_date\
    \ = true \n                                                        else \n   \
    \                                                         valid_date = false \n\
    \    \n                                                                if date\
    \ == \"01-01-2012\" \n                                                       \
    \             valid_date = true \n                                           \
    \                     else \n                                                \
    \                    valid_date = false \n    \n                             \
    \                                   if date == \"01-01-2013\" \n             \
    \                                                       valid_date = true \n \
    \                                                               else \n      \
    \                                                              valid_date = false\
    \ \n    \n                                                                if date\
    \ == \"01-01-2014\" \n                                                       \
    \             valid_date = true \n                                           \
    \                     else \n                                                \
    \                    valid_date = false \n    \n                             \
    \                                   if date == \"01-01-2015\" \n             \
    \                                                       valid_date = true \n \
    \                                                               else \n      \
    \                                                              valid_date = false\
    \ \n    \n                                                                if date\
    \ == \"01-01-2016\" \n                                                       \
    \             valid_date = true \n                                           \
    \                     else \n                                                \
    \                    valid_date = false \n    \n                             \
    \                                   if date == \"01-01-2017\" \n             \
    \                                                       valid_date = true \n \
    \                                                               else \n      \
    \                                                              valid_date = false\
    \ \n    \n                                                                if date\
    \ == \"01", "    \n    valid_date::Bool = false \n    \n    if date != \"\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" \n\
    \        && date != \"Invalid Date\" \n        && date != \"Invalid Date\" ",
  "    \n    valid_date::Bool = false \n    \n    if date == \"\" \n        valid_date\
    \ = false \n    else \n        valid_date = true \n    \n        if length(date)\
    \ == 7 \n            valid_date = true \n        else \n            valid_date\
    \ = false \n    \n            if length(date) == 10 \n                valid_date\
    \ = true \n            else \n                valid_date = false \n    \n    \
    \            if length(date) == 12 \n                    valid_date = true \n\
    \                else \n                    valid_date = false \n    \n      \
    \              if length(date) == 4 \n                        valid_date = true\
    \ \n                    else \n                        valid_date = false \n \
    \   \n                        if length(date) == 2 \n                        \
    \    valid_date = true \n                        else \n                     \
    \       valid_date = false \n    \n                            if length(date)\
    \ == 1 \n                                valid_date = true \n                \
    \            else \n                                valid_date = false \n    \n\
    \                                if length(date) == 3 \n                     \
    \               valid_date = true \n                                else \n  \
    \                                  valid_date = false \n    \n               \
    \                     if length(date) == 5 \n                                \
    \        valid_date = true \n                                    else \n     \
    \                                   valid_date = false \n    \n              \
    \                          if length(date) == 7 \n                           \
    \                 valid_date = true \n                                       \
    \ else \n                                            valid_date = false \n   \
    \ \n                                            if length(date) == 9 \n      \
    \                                          valid_date = true \n              \
    \                              else \n                                       \
    \         valid_date = false \n    \n                                        \
    \        if length(date) == 11 \n                                            \
    \        valid_date = true \n                                                else\
    \ \n                                                    valid_date = false \n\
    \    \n                                                    if length(date) ==\
    \ 13 \n                                                        valid_date = true\
    \ \n                                                    else \n              \
    \                                          valid_date = false \n    \n       \
    \                                                 if length(date) == 14 \n   \
    \                                                         valid_date = true \n\
    \                                                        else \n             \
    \                                               valid_date = false \n    \n  \
    \                                                          if length(date) ==\
    \ 16 \n                                                                valid_date\
    \ = true \n                                                            else \n\
    \                                                                valid_date =\
    \ false \n    \n                                                             \
    \   if length(date) == 18 \n                                                 \
    \                   valid_date = true \n                                     \
    \                           else \n                                          \
    \                          valid_date = false \n    \n                       \
    \                                             if length(date) == 19 \n       \
    \                                                                 valid_date =\
    \ true \n                                                                    else\
    \ \n                                                                        valid_date\
    \ = false \n    \n                                                        if length(date)\
    \ == 20 \n                                                            valid_date\
    \ = true \n                                                        else \n   \
    \                                                         valid_date = false \n\
    \    \n                                                            if length(date)\
    \ == 21 \n                                                                valid_date\
    \ = true \n                                                            else \n\
    \                                                                valid_date =\
    \ false \n    \n                                                             \
    \   if length(date) == 22 \n                                                 \
    \                   valid_date = true \n                                     \
    \                           else \n                                          \
    \                          valid_date = false \n    \n                       \
    \                                             if length(date) == 24 \n       \
    \                                                                 valid_date =\
    \ true \n                                                                    else\
    \ \n                                                                        valid_date\
    \ = false \n    \n                                                        if length(date)\
    \ == 25 \n                                                            valid_date\
    \ = true \n                                                        else \n   \
    \                                                         valid_date = false \n\
    \    \n                                                            if length(date)\
    \ == 26 \n                                                                valid_date\
    \ = true \n                                                            else \n\
    \                                                                ", "    \n  \
    \  date_split = split(date, '-')\n    \n    months_valid = months_valid(date_split)\n\
    \    \n    days_valid = days_valid(date_split)\n    \n    years_valid = years_valid(date_split)\n\
    \    \n    date_valid = months_valid && days_valid && years_valid\n    \n    return\
    \ date_valid\nend\n</cell>\n<code language=julia-1.5>\nvalid_date(\"03-11-2000\"\
    )\n</cell>\n<code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06-04-2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    06/04/2020\")\n</cell>\n<text>\nExercise 2\nWrite a function which accepts a string\
    \ and returns the number of characters in the string.", "    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = ", "    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n \
    \       return false\n    end\n    valid_date_str = Date.parse(date)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n \
    \       return false\n    end\n    valid_date_str = Date.parse(date)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n \
    \       return false\n    end\n    valid_date_str = Date.parse(date)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n \
    \       return false\n    end\n    valid_date_str = Date.parse(date)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n \
    \       return false\n    end\n    valid_date_str = Date.parse(date)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n \
    \       return false\n    end\n    valid_date_str = Date.parse(date)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str", "    \n    valid_date::Bool = true\
    \ \n    \n    if date == \"\" \n        valid_date = false \n    else \n     \
    \   valid_date = true \n        \n        day::Int = date_to_day(date) \n    \
    \    \n        if day < 1 or day > 31 \n            valid_date = false \n    \
    \    else \n            valid_date = true \n            \n            month::Int\
    \ = date_to_month(date) \n            \n            if month < 1 or month > 12\
    \ \n                valid_date = false \n            else \n                valid_date\
    \ = true \n                \n                year::Int = date_to_year(date) \n\
    \                \n                if year < 1 or year > 2020 \n             \
    \       valid_date = false \n                else \n                    valid_date\
    \ = true \n                \n    return valid_date \nend \n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"04-0-2040\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code language=julia-1.5>",
  "    \n    valid_date_str = date\n    valid_date_str = valid_date_str.replace(\"\
    \ \", \"\")\n    valid_date_str = valid_date_str.replace(\"-\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"/\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    :\", \"\")\n    valid_date_str = valid_date_str.replace(\"'\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"\\\"\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    ,\", \"\")\n    valid_date_str = valid_date_str.replace(\"-\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"\\\"\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    (\", \"\")\n    valid_date_str = valid_date_str.replace(\")\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\",\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    '\", \"\")\n    valid_date_str = valid_date_str.replace(\"\\\"\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\":\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    \\\"\", \"\")\n    valid_date_str = valid_date_str.replace(\"'\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"(\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    )\", \"\")\n    valid_date_str = valid_date_str.replace(\",\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"-\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    \\\"\", \"\")\n    valid_date_str = valid_date_str.replace(\":\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"\\\"\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    '\", \"\")\n    valid_date_str = valid_date_str.replace(\"(\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\")\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    ,\", \"\")\n    valid_date_str = valid_date_str.replace(\"-\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"\\\"\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    :\", \"\")\n    valid_date_str = valid_date_str.replace(\"\\\"\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"'\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    (\", \"\")\n    valid_date_str = valid_date_str.replace(\")\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\",\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    -\", \"\")\n    valid_date_str = valid_date_str.replace(\"\\\"\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\":\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    \\\"\", \"\")\n    valid_date_str = valid_date_str.replace(\"'\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"(\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    )\", \"\")\n    valid_date_str = valid_date_str.replace(\",\", \"\")\n    valid_date_str\
    \ = valid_", "    \n    valid_date_regex = Regex(\"^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-[0-9]{4}$\"\
    )\n    valid_date_match = valid_date_regex.match(date)\n    \n    if valid_date_match\
    \ != nil\n        \n        days_regex = Regex(\"^((0?[1-9]|[12]\\d|3[01])-(0?[1-9]|1[0-2]))$\"\
    )\n        days_match = days_regex.match(date)\n        \n        if days_match\
    \ != nil\n            \n            month_regex = Regex(\"^(0?[1-9]|1[0-2])$\"\
    )\n            month_match = month_regex.match(date)\n            \n         \
    \   if month_match != nil\n                \n                year_regex = Regex(\"\
    ^[0-9]{4}$\")\n                year_match = year_regex.match(date)\n         \
    \       \n                if year_match != nil\n                    \n       \
    \             days_match = days_match.captures\n                    days_match[1]\n\
    \                    days_match[2]\n                    days_match[3]\n      \
    \              days_match[4]\n                    days_match[5]\n            \
    \        days_match[6]\n                    days_match[7]\n                  \
    \  days_match[8]\n                    days_match[9]\n                    days_match[10]\n\
    \                    days_match[11]\n                    days_match[12]\n    \
    \                days_match[13]\n                    days_match[14]\n        \
    \            days_match[15]\n                    days_match[16]\n            \
    \        days_match[17]\n                    days_match[18]\n                \
    \    days_match[19]\n                    days_match[20]\n                    days_match[21]\n\
    \                    days_match[22]\n                    days_match[23]\n    \
    \                days_match[24]\n                    days_match[25]\n        \
    \            days_match[26]\n                    days_match[27]\n            \
    \        days_match[28]\n                    days_match[29]\n                \
    \    days_match[30]\n                    days_match[31]\n                    days_match[32]\n\
    \                    days_match[33]\n                    days_match[34]\n    \
    \                days_match[35]\n                    days_match[36]\n        \
    \            days_match[37]\n                    days_match[38]\n            \
    \        days_match[39]\n                    days_match[40]\n                \
    \    days_match[41]\n                    days_match[42]\n                    days_match[43]\n\
    \                    days_match[44]\n                    days_match[45]\n    \
    \                ", "    \n    valid_date::Bool = false \n    \n    if date ==\
    \ \"\" \n        valid_date = false \n    else \n        valid_date = true \n\
    \    \n    valid_date &= (length(date) > 0) \n    valid_date &= (length(date)\
    \ <= 31) \n    valid_date &= (length(date) <= 30) \n    valid_date &= (length(date)\
    \ <= 29) \n    valid_date &= (length(date) <= 12) \n    valid_date &= (length(date)\
    \ >= 1) \n    valid_date &= (length(date) >= 4) \n    valid_date &= (length(date)\
    \ >= 6) \n    valid_date &= (length(date) >= 9) \n    valid_date &= (length(date)\
    \ >= 11) \n    valid_date &= (length(date) >= 13) \n    valid_date &= (length(date)\
    \ >= 15) \n    valid_date &= (length(date) >= 18) \n    valid_date &= (length(date)\
    \ >= 21) \n    valid_date &= (length(date) >= 24) \n    valid_date &= (length(date)\
    \ >= 27) \n    valid_date &= (length(date) >= 30) \n    valid_date &= (length(date)\
    \ >= 31) \n    valid_date &= (length(date) >= 32) \n    valid_date &= (length(date)\
    \ >= 33) \n    valid_date &= (length(date) >= 34) \n    valid_date &= (length(date)\
    \ >= 35) \n    valid_date &= (length(date) >= 36) \n    valid_date &= (length(date)\
    \ >= 37) \n    valid_date &= (length(date) >= 38) \n    valid_date &= (length(date)\
    \ >= 39) \n    valid_date &= (length(date) >= 40) \n    valid_date &= (length(date)\
    \ >= 41) \n    valid_date &= (length(date) >= 42) \n    valid_date &= (length(date)\
    \ >= 43) \n    valid_date &= (length(date) >= 44) \n    valid_date &= (length(date)\
    \ >= 45) \n    valid_date &= (length(date) >= 46) \n    valid_date &= (length(date)\
    \ >= 47) \n    valid_date &= (length(date) >= 48) \n    valid_date &= (length(date)\
    \ >= 49) \n    valid_date &= (length(date) >= 50) \n    valid_date &= (length(date)\
    \ >= 51) \n    valid_date &= (length(date) >= 52) \n    valid_date &= (length(date)\
    \ >= 53) \n    valid_date &= (length(date) >= 54) \n    valid_date &= (length(date)\
    \ >= 55) \n    valid_date &= (length(date) >= 56) \n    valid_date &= (length(date)\
    \ >= 57) \n", "    \n    valid_date_str = Date.parse(date)\n    \n    if valid_date_str\
    \ == nil\n        return false\n    end", "    \n    date_split = split(date,\
    \ '-')\n    \n    days_months_years = date_split[2]\n    \n    days_months_years_split\
    \ = split(days_months_years, '-')\n    \n    days_months_years_split[2] = days_months_years_split[2].replace('-','')\n\
    \    \n    days_months_years_split[2] = days_months_years_split[2].split(',')\n\
    \    \n    days_months_years_split[2] = days_months_years_split[2][1]\n    \n\
    \    days_months_years_split[2] = days_months_years_split[2].split(' ')\n    \n\
    \    days_months_years_split[2] = days_months_years_split[2][0]\n    \n    days_months_years_split[2]\
    \ = days_months_years_split[2].split('-')\n    \n    days_months_years_split[2]\
    \ = days_months_years_split[2][0]\n    \n    days_months_years_split[2] = days_months_years_split[2].split('-')\n\
    \    \n    days_months_years_split[2] = days_months_years_split[2][0]\n    \n\
    \    days_months_years_split[2] = days_months_years_split[2].split('-')\n    \n\
    \    days_months_years_split[2] = days_months_years_split[2][0]\n    \n    days_months_years_split[2]\
    \ = days_months_years_split[2].split('-')\n    \n    days_months_years_split[2]\
    \ = days_months_years_split[2][0]\n    \n    days_months_years_split[2] = days_months_years_split[2].split('-')\n\
    \    \n    days_months_years_split[2] = days_months_years_split[2][0]\n    \n\
    \    days_months_years_split[2] = days_months_years_split[2].split('-')\n    \n\
    \    days_months_years_split[2] = days_months_years_split[2][0]\n    \n    days_months_years_split[2]\
    \ = days_months_years_split[2].split('-')\n    \n    days_months_years_split[2]\
    \ = days_months_years_split[2][0]\n    \n    days_months_years_split[2] = days_months_years_split[2].split('-')\n\
    \    \n    days_months_years_split[2] = days_months_years_split[2][0]\n    \n\
    \    days_months_years_split[2] = days_months_years_split", "    \n    date_split\
    \ = split(date, '-')\n    \n    days_valid = true\n    \n    months_valid = true\n\
    \    \n    years_valid = true\n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    date_array\
    \ = split(date, \"-\")\n    \n    if date_array.length != 3 || date_array[1] <\
    \ 1 || date_array[1] > 12 || date_array[2] < 1 || date_array[2] > 31 || date_array[1]\
    \ > date_array[2] || date_array[1] > 29 || date_array[1] < 12\n        return\
    \ false\n    else\n        return true\n    end\nend\n</code>\n<|/ a tags=julia,date\
    \ |>\n<| a dscore=2 |>\nThe accepted answer works well for most cases, but fails\
    \ for some edge cases. For example, for dates like \"29-02-2020\" the function\
    \ returns true. \nA better solution is to use Dates.jl and Dates.jl's Dates.is_valid_date()\
    \ function, which returns true for valid dates and false for invalid dates. \n\
    <code>\nusing Dates\nDates.is_valid_date(\"29-02-2020\")\n</code>\n<|/ a tags=julia,date\
    \ |>\n<| a dscore=1 |>\nI wrote a package to validate dates in Julia. \n<code>\n\
    using Dates", "    \n    valid_date_regex = Regex(\"^(0?[1-9]|[12][0-9]|3[01])-(0?[1-9]|1[012])-((19|20)\\\
    d\\d)$\")\n    \n    if valid_date_regex.match(date) == nil\n        return false\n\
    \    end", "    \n    valid_date_str = date\n    valid_date_str = valid_date_str.replace(\"\
    \ \", \"\")\n    valid_date_str = valid_date_str.replace(\"-\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"/\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    :\", \"\")\n    valid_date_str = valid_date_str.replace(\",\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"'\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    \\\"\", \"\")\n    valid_date_str = valid_date_str.replace(\"\\\\\", \"\")\n \
    \   valid_date_str = valid_date_str.replace(\"\\n\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"\\r\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    \\t\", \"\")\n    valid_date_str = valid_date_str.replace(\"\\t\", \"\")\n   \
    \ valid_date_str = valid_date_str.replace(\"\\t\", \"\")\n    valid_date_str =\
    \ valid_date_str.replace(\"\\t\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    \\t\", \"\")\n    valid_date_str = valid_date_str.replace(\"\\t\", \"\")\n   \
    \ valid_date_str = valid_date_str.replace(\"\\t\", \"\")\n    valid_date_str =\
    \ valid_date_str.replace(\"\\t\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    \\t\", \"\")\n    valid_date_str = valid_date_str.replace(\"\\t\", \"\")\n   \
    \ valid_date_str = valid_date_str.replace(\"\\t\", \"\")\n    valid_date_str =\
    \ valid_date_str.replace(\"\\t\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    \\t\", \"\")\n    valid_date_str = valid_date_str.replace(\"\\t\", \"\")\n   \
    \ valid_date_str = valid_date_str.replace(\"\\t\", \"\")\n    valid_date_str =\
    \ valid_date_str.replace(\"\\t\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    \\t\", \"\")\n    valid_date_str = valid_date_str.replace(\"\\t\", \"\")\n   \
    \ valid_date_str = valid_date_str.replace(\"\\t\", \"\")\n    valid_date_str =\
    \ valid_date_str.replace(\"\\t\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    \\t\", \"\")\n    valid_date_str = valid_date_str.replace(\"\\t\", \"\")\n   \
    \ valid_date_str = valid_date_str.replace(\"\\t\", \"\")\n    valid_date_str =\
    \ valid_date_str.replace(\"\\t\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    \\t\", \"\")\n    valid_date_str = valid_date_str.replace(\"\\t\", \"\")\n   \
    \ valid_date_str = valid_date_str.replace(\"\\t\", \"\")\n    valid_date_str =\
    \ valid_date_str.replace(\"\\t\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    \\t\", \"\")\n    valid_date_str = valid_date_str.replace(\"\\t\", \"\")\n   \
    \ valid_date_str = valid_date_str.replace(\"\\t\", \"\")\n    valid_date_str =\
    \ valid_date_str.replace(\"\\t\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    \\t\", \"\")\n    valid_date_str = valid_date_str.replace(\"\\t\", \"\")\n   \
    \ valid_date_str = valid_date_str.replace(\"\\t\", \"\")\n    valid_date_str =\
    \ valid_date_str.replace(\"", "    \n    if date == \"\"\n        error(\"The\
    \ date string cannot be empty\")\n    end\n    \n    if length(date) < 1\n   \
    \     error(\"The date string cannot be empty\")\n    end\n    \n    if length(date)\
    \ > 31\n        error(\"The date string cannot be greater than 31 days\")\n  \
    \  end\n    \n    if length(date) > 30\n        error(\"The date string cannot\
    \ be greater than 30 days\")\n    end\n    \n    if length(date) > 29\n      \
    \  error(\"The date string cannot be greater than 29 days\")\n    end\n    \n\
    \    if length(date) < 1\n        error(\"The date string cannot be less than\
    \ 1 day\")\n    end\n    \n    if length(date) < 12\n        error(\"The date\
    \ string cannot be less than 12 months\")\n    end\n    \n    if length(date)\
    \ < 4\n        error(\"The date string cannot be less than 4 months\")\n    end\n\
    \    \n    if length(date) < 6\n        error(\"The date string cannot be less\
    \ than 6 months\")\n    end\n    \n    if length(date) < 9\n        error(\"The\
    \ date string cannot be less than 9 months\")\n    end\n    \n    if length(date)\
    \ < 11\n        error(\"The date string cannot be less than 11 months\")\n   \
    \ end\n    \n    if length(date) < 12\n        error(\"The date string cannot\
    \ be less than 12 months\")\n    end\n    \n    if length(date) < 4\n        error(\"\
    The date string cannot be less than 4 months\")\n    end\n    \n    if length(date)\
    \ < 6\n        error(\"The date string cannot be less than 6 months\")\n    end\n\
    \    \n    if length(date) < 9\n        error(\"The date string cannot be less\
    \ than 9 months\")\n    end\n    \n    if length(date) < 11\n        error(\"\
    The date string cannot be less than 11 months\")\n    end\n    \n    if length(date)\
    \ < 12\n        error(\"The date string cannot be less than 12 months\")\n   \
    \ end\n    \n    if length(date) < 4\n        error(\"The date string cannot be\
    \ less than 4 months\")\n    end\n    \n    if length(date) < 6\n        error(\"\
    The date string cannot be less than 6 months\")\n    end\n    \n    if length(date)\
    \ < 9\n        error(\"The date string cannot be less than 9 months\")\n    end\n\
    \    \n    if length(date) < 11\n        error(\"The date string cannot be less\
    \ than 11 months\")\n    end\n    \n    if length(date) < 12\n        error(\"\
    The date string cannot be less than 12 months\")\n    end\n    \n    if length(date)\
    \ < 4\n        error(\"The date string cannot be less than 4 months\")\n    end\n\
    \    \n    if length(date) < 6\n        error(\"The date string cannot be less\
    \ than 6 months\")\n    end\n    \n    if length(date) < 9\n        error(\"The\
    \ date string ", "    \n    valid_date_str = Date.parse(date)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = ", "    \n    valid_date::Bool = false \n    \n    if date == \"\" \n    \
    \    valid_date = false \n    else \n        valid_date = true \n    \n    if\
    \ valid_date == false \n        valid_date = false \n    else \n        valid_date\
    \ = true \n    \n    if valid_date == false \n        valid_date = false \n  \
    \  else \n        valid_date = true \n    \n    if valid_date == false \n    \
    \    valid_date = false \n    else \n        valid_date = true \n    \n    if\
    \ valid_date == false \n        valid_date = false \n    else \n        valid_date\
    \ = true \n    \n    if valid_date == false \n        valid_date = false \n  \
    \  else \n        valid_date = true \n    \n    if valid_date == false \n    \
    \    valid_date = false \n    else \n        valid_date = true \n    \n    if\
    \ valid_date == false \n        valid_date = false \n    else \n        valid_date\
    \ = true \n    \n    if valid_date == false \n        valid_date = false \n  \
    \  else \n        valid_date = true \n    \n    if valid_date == false \n    \
    \    valid_date = false \n    else \n        valid_date = true \n    \n    if\
    \ valid_date == false \n        valid_date = false \n    else \n        valid_date\
    \ = true \n    \n    if valid_date == false \n        valid_date = false \n  \
    \  else \n        valid_date = true \n    \n    if valid_date == false \n    \
    \    valid_date = false \n    else \n        valid_date = true \n    \n    if\
    \ valid_date == false \n        valid_date = false \n    else \n        valid_date\
    \ = true \n    \n    if valid_date == false \n        valid_date = false \n  \
    \  else \n        valid_date = true \n    \n    if valid_date == false \n    \
    \    valid_date = false \n    else \n        valid_date = true \n    \n    if\
    \ valid_date == false \n        valid_date = false \n    else \n        valid_date\
    \ = true \n    \n    if valid_date == false \n        valid_date = false \n  \
    \  else \n        valid_date = true \n    \n    if valid_date == false \n    \
    \    valid_date = false \n    else \n        valid_date = true \n    \n    if\
    \ valid_date == false \n        valid_date = false \n    else \n        valid_date\
    \ = true \n    \n    if valid_date == false \n        valid_date = false \n  \
    \  else \n        valid_date = true \n    \n    if valid_date == false \n    \
    \    valid_date = false \n    else \n        valid_date = true \n    \n    if\
    \ valid_date == false \n        valid_date = false \n    else \n        valid_date\
    \ = true \n    \n    if valid_date == false \n        valid_date = false \n  \
    \  else \n        valid_date = true ", "    valid_date_regex = Regex(\"^(0?[1-9]|[12][0-9]|3[01])-(0?[1-9]|1[012])-((19|20)[0-9]{2})$\"\
    )\n    valid_date_match = valid_date_regex.match(date)\n    if valid_date_match\
    \ != nil \n        days_match = valid_date_match[3].to_i\n        days_match =\
    \ days_match < 1 or days_match > 31\n        months_match = valid_date_match[4].to_i\n\
    \        months_match = months_match < 1 or months_match > 12\n        year_match\
    \ = valid_date_match[5].to_i\n        year_match = year_match < 1 or year_match\
    \ > 2020\n        return days_match and months_match and year_match\n    end\n\
    \    return false\nend\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThank you for the\
    \ answer. I am new to Julia and I do not know much about regular expressions.\
    \ Could you please tell me what does `^(0?[1-9]|[12][0-9]|3[01])-(0?[1-9]|1[012])-((19|20)[0-9]{2})$`\
    \ mean? And what does `^(0?[1-9]|[12][0-9]|3[01])-(0?[1-9]|1[012])-((19|20)[0-9]{2})$`\
    \ mean?\n<|/ c |>\n<| c |>\n`^` means beginning of string. `0?` means 0 or 1 time.\
    \ `|` means OR. `[12]` means 1 or 2. `[0-9]` means any number. `|` means OR. `3[01]`\
    \ means 30 or 31. `-` means dash. `-` means dash. `(0?[1-9]|[12][0-9]|3[01])`\
    \ means 0 or 1 or 2 or 3 or 30. `-` means dash. `(0?[1-9]|1[012])` means 0 or\
    \ 1 or 2 or 3 or 12. `-` means dash. `((19|20)[0-9]{2})` means 19 or 20 or any\
    \ two numbers. `$` means end of string. `^(0?[1-9]|[12][0-9]|3[01])-(0?[1-9]|1[012])-((19|20)[0-9]{2})$`\
    \ means beginning of string, 0 or 1, or 2, or 3, or 30, or 31, or 12, or 19 or\
    \ 20 or any two numbers.\n<|/ c |>\n<| c |>\nThank you for the explanation. Could\
    \ you please tell me what does `^(0?[1-9]|[12][0-9]|3[01])-(0?[1-9]|1[012])-((19|20)[0-9]{2})$`\
    \ mean? And what does `^(0?[1-9]|[12][0-9]|3[0", "    \n    valid_date_str = Date.parse(date)\n\
    \    \n    if valid_date_str == nil\n        return false\n    end", "    \n \
    \   date_split = split(date, \"-\")\n    \n    days_not_less_than_1_or_higher_than_31\
    \ = [1,2,3,4,5,6,7,8,9,10,11,12]\n    days_not_less_than_1_or_higher_than_30 =\
    \ [4,6,9,11]\n    days_not_less_than_1_or_higher_than_29 = [2]\n    months_not_less_than_1_or_higher_than_12\
    \ = [1,2,3,4,5,6,7,8,9,10,11,12]\n    \n    months_not_less_than_1_or_higher_than_1\
    \ = [1,3,5,7,8,10,12]\n    months_not_less_than_1_or_higher_than_4 = [4,6,9,11]\n\
    \    months_not_less_than_1_or_higher_than_6 = [4,6,9,11]\n    months_not_less_than_1_or_higher_than_9\
    \ = [4,6,9,11]\n    months_not_less_than_1_or_higher_than_11 = [4,6,9,11]\n  \
    \  \n    months_not_less_than_1_or_higher_than_2 = [4,6,9,11]\n    months_not_less_than_1_or_higher_than_3\
    \ = [4,6,9,11]\n    months_not_less_than_1_or_higher_than_5 = [4,6,9,11]\n   \
    \ months_not_less_than_1_or_higher_than_7 = [4,6,9,11]\n    months_not_less_than_1_or_higher_than_8\
    \ = [4,6,9,11]\n    months_not_less_than_1_or_higher_than_10 = [4,6,9,11]\n  \
    \  months_not_less_than_1_or_higher_than_12 = [4,6,9,11]\n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n", "    \n    valid_date::Bool = false\
    \ \n    \n    if date == \"\" \n        valid_date = false \n    else \n     \
    \   valid_date = true \n        \n        if length(date) != 10 \n           \
    \ valid_date = false \n        else \n            valid_date = true \n       \
    \     \n            if month(date) != 0 \n                valid_date = false \n\
    \            else \n                valid_date = true \n                \n   \
    \             if day(date) != 0 \n                    valid_date = false \n  \
    \              else \n                    valid_date = true \n               \
    \     \n                    if year(date) != 0 \n                        valid_date\
    \ = false \n                    else \n                        valid_date = true\
    \ \n                        \n                        if month(date) == 0 \n \
    \                           valid_date = false \n                        else\
    \ \n                            valid_date = true \n                         \
    \   \n                            if day(date) == 0 \n                       \
    \         valid_date = false \n                            else \n           \
    \                     valid_date = true \n                                \n \
    \                               if year(date) == 0 \n                        \
    \            valid_date = false \n                                else \n    \
    \                                valid_date = true \n                        \
    \            \n                                    if month(date) == 1 \n    \
    \                                    valid_date = false \n                   \
    \                 else \n                                        valid_date =\
    \ true \n                                        \n                          \
    \              if day(date) == 31 \n                                         \
    \   valid_date = false \n                                        else \n     \
    \                                       valid_date = true \n                 \
    \                           \n                                            if month(date)\
    \ == 3 \n                                                valid_date = false \n\
    \                                            else \n                         \
    \                       valid_date = true \n                                 \
    \               \n                                                if day(date)\
    \ == 31 \n                                                    valid_date = false\
    \ \n                                                else \n                  \
    \                                  valid_date = true \n                      \
    \                              \n                                            \
    \        if month(date) == 5 \n                                              \
    \          valid_date = false \n                                             \
    \       else \n                                                        valid_date\
    \ = true \n                                                        \n        \
    \                                                if day(date) == 31 \n       \
    \                                                     valid_date = false \n  \
    \                                                      else \n               \
    \                                             valid_date = true \n           \
    \                                                 \n                         \
    \                                   if month(date) == 7 \n                   \
    \                                             valid_date = false \n          \
    \                                                  else \n                   \
    \                                             valid_date = true \n           \
    \                                                     \n                     \
    \                                           if day(date) == 31 \n            \
    \                                                        valid_date = false \n\
    \                                                                else \n     \
    \                                                               valid_date = true\
    \ \n                                                                    \n   \
    \                                                                 if month(date)\
    \ == 8 \n                                                                    \
    \    valid_date = false \n                                                   \
    \                 else \n                                                    \
    \                    valid_date = true \n                                    \
    \                                    \n                                      \
    \                  if day(date) == 31 \n                                     \
    \                       valid_date = false \n                                \
    \                        else \n                                             \
    \               valid_date = true \n                                         \
    \                   \n                                                       \
    \     if month(date) == 10 \n                                                \
    \                valid_date = false \n                                       \
    \                     else \n                                                \
    \                valid_date = true \n                                        \
    \                        \n                                                  \
    \              if day(date) == 31 \n                                         \
    \                           valid_date = false \n                            \
    \                                    else \n                                 \
    \                                   valid_date = true \n                     \
    \                                               \n                           \
    \                                         if month(date) == 12 \n            \
    \                                                            valid_date = false\
    \ \n                                                                    else \n\
    \                                                                        valid_date\
    \ = true \n                                                                  \
    \      \n                                                        if day(date)\
    \ == 29 \n                                                            valid_date\
    \ = false \n                                                        else ", " \
    \   \n    date_split = split(date, '-')\n    \n    days_valid = check_days(date_split)\n\
    \    months_valid = check_months(date_split)\n    \n    date_valid = days_valid\
    \ && months_valid\n    \n    return date_valid\nend", "    \n    if date == \"\
    \"\n        return false\n    \n    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n\
    \    days_month = [31,29,31,30,31,30,31,30,31,30,31]\n    days_month = [31,30,31,30,31,30,31,30,31,30,31]\n\
    \    days_month = [31,30,31,30,31,30,31,30,31,30,31]\n    days_month = [31,30,31,30,31,30,31,30,31,30,31]\n\
    \    days_month = [31,30,31,30,31,30,31,30,31,30,31]\n    days_month = [31,30,31,30,31,30,31,30,31,30,31]\n\
    \    days_month = [31,30,31,30,31,30,31,30,31,30,31]\n    days_month = [31,30,31,30,31,30,31,30,31,30,31]\n\
    \    days_month = [31,30,31,30,31,30,31,30,31,30,31]\n    days_month = [31,30,31,30,31,30,31,30,31,30,31]\n\
    \    days_month = [31,30,31,30,31,30,31,30,31,30,31]\n    days_month = [31,30,31,30,31,30,31,30,31,30,31]\n\
    \    days_month = [31,30,31,30,31,30,31,30,31,30,31]\n    days_month = [31,30,31,30,31,30,31,30,31,30,31]\n\
    \    days_month = [31,30,31,30,31,30,31,30,31,30,31]\n    days_month = [31,30,31,30,31,30,31,30,31,30,31]\n\
    \    days_month = [31,30,31,30,31,30,31,30,31,30,31]\n    days_month = [31,30,31,30,31,30,31,30,31,30,31]\n\
    \    days_month = [31,30,31,30,31,30,31,30,31,30,31]\n    days_month = [31,30,31,30,31,30,31,30,31,30,31]\n\
    \    days_month = [31,30,31,30,31,30,31,30,31,30,31]\n    days_month = [31,30,31,30,31,30,31,30,31,30,31]\n\
    \    days_month = [31,30,31,30,31,30,31,30,31,30,31]\n    days_month = [31,30,31,30,31,30,31,30,31,30,31]\n\
    \    days_month = [31,30,31,30,31,30,31,30,31,30,31]\n    days_month = [31,30,31,30,31,30,31,30,31,30,31]\n\
    \    days_month = [31,30,31,30,31,30,31,30,31,", "    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n", "    \n    valid_date_regex = r\"^(0[1-9]|[12][0-9]|3[01])[-\
    \ /.](0[1-9]|1[012])[- /.](19|20)\\d\\d$\"\n    \n    if date == \"\"\n      \
    \  return false\n    \n    days_regex = r\"^((?!0{0,2}|1{0,2}|2{0,2}|3{0,2}|4{0,2}|5{0,2}|6{0,2}|7{0,2}|8{0,2}|9{0,2}|10{0,2}|11{0,2}|12{0,2}|0{0,2})[1-9]((?!0{0,2}|1{0,2}|2{0,2}|3{0,2}|4{0,2}|5{0,2}|6{0,2}|7{0,2}|8{0,2}|9{0,2}|10{0,2}|11{0,2}|12{0,2}|0{0,2})|0[1-9]((?!0{0,2}|1{0,2}|2{0,2}|3{0,2}|4{0,2}|5{0,2}|6{0,2}|7{0,2}|8{0,2}|9{0,2}|10{0,2}|11{0,2}|12{0,2}|0{0,2})|1{0,2}((?!0{0,2}|1{0,2}|2{0,2}|3{0,2}|4{0,2}|5{0,2}|6{0,2}|7{0,2}|8{0,2}|9{0,2}|10{0,2}|11{0,2}|12{0,2}|0{0,2}))((?!0{0,2}|1{0,2}|2{0,2}|3{0,2}|4{0,2}|5{0,2}|6{0,2}|7{0,2}|8{0,2}|9{0,2}|10{0,2}|11{0,2}|12{0,2}|0{0,2})|0[1-9]((?!0{0,2}|1{0,2}|2{0,2}|3{0,2}|4{0,2}|5{0,2}|6{0,2}|7{0,2}|8{0,2}|9{0,2}|10{0,2}|11{0,2}|12{0,2}|0{0,2})|1{0,2}((?!",
  "    \n    valid_date_regex = Regex(\"^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-[0-9]{4}$\"\
    )\n    valid_date_match = valid_date_regex.match(date)\n    if valid_date_match\
    \ != nil\n        return true\n    else\n        return false\n    end\nend\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=julia,date |>\nThe Julia standard library\
    \ has several date parsing functions. One of them is parsedate, which parses a\
    \ date string into a Date:\n<code>\njulia> using Dates", "    \n    if date ==\
    \ \"\"\n        false\n    else\n        if length(date) < 1 || length(date) >\
    \ 31\n            false\n        elseif length(date) < 1 || length(date) > 30\n\
    \            false\n        elseif length(date) < 1 || length(date) > 29\n   \
    \         false\n        elseif length(date) < 1 || length(date) > 12\n      \
    \      false\n        else\n            months = split(date, \"-\")\n        \
    \    if months[1] < 1 || months[1] > 12\n                false\n            elseif\
    \ months[2] < 1 || months[2] > 12\n                false\n            elseif months[3]\
    \ < 1 || months[3] > 12\n                false\n            elseif months[4] <\
    \ 1 || months[4] > 12\n                false\n            elseif months[5] < 1\
    \ || months[5] > 12\n                false\n            elseif months[6] < 1 ||\
    \ months[6] > 12\n                false\n            elseif months[7] < 1 || months[7]\
    \ > 12\n                false\n            elseif months[8] < 1 || months[8] >\
    \ 12\n                false\n            elseif months[9] < 1 || months[9] > 12\n\
    \                false\n            elseif months[10] < 1 || months[10] > 12\n\
    \                false\n            elseif months[11] < 1 || months[11] > 12\n\
    \                false\n            else\n                true\n            end\n\
    \        end\n    end\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not\
    \ provide an answer to the question. To critique or request clarification from\
    \ an author, leave a comment below their post. - [From Review](/review/low-quality-posts/27829002)\n\
    <|/ c |>\n<| c |>\nI added an answer with my solution. Hope it helps.\n<|/ c |>\n\
    <| c |>\nThis does not provide an answer to the question. To critique or request\
    \ clarification from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/27829002)\n\
    <|/ c |>\n<| c |>\nI added an answer with my solution. Hope it helps.\n<|/ c |>\n\
    <| c |>\nThis does not provide an answer to the question. To critique or request\
    \ clarification from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/27829002)\n\
    <|/ c |>\n<| a tags=julia,date |>\nI wrote a ", "    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil \n        return false\n    end", "    \n    date_split\
    \ = split(date, '-')\n    \n    months_valid = months_valid(date_split)\n    \n\
    \    days_valid = days_valid(date_split)\n    \n    years_valid = years_valid(date_split)\n\
    \    \n    date_valid = months_valid && days_valid && years_valid\n    \n    return\
    \ date_valid\nend", "    \n    valid_date::Bool = false\n    \n    if date ==\
    \ \"\"\n        valid_date::Bool = false\n    elseif length(date) < 1 || length(date)\
    \ > 31\n        valid_date::Bool = false\n    elseif month(date) < 1 || month(date)\
    \ > 12\n        valid_date::Bool = false\n    elseif day(date) < 1 || day(date)\
    \ > 30\n        valid_date::Bool = false\n    elseif month(date) == 2 && day(date)\
    \ > 29\n        valid_date::Bool = false\n    elseif month(date) == 1 && day(date)\
    \ > 31\n        valid_date::Bool = false\n    elseif month(date) == 3 && day(date)\
    \ > 31\n        valid_date::Bool = false\n    elseif month(date) == 5 && day(date)\
    \ > 31\n        valid_date::Bool = false\n    elseif month(date) == 7 && day(date)\
    \ > 31\n        valid_date::Bool = false\n    elseif month(date) == 8 && day(date)\
    \ > 31\n        valid_date::Bool = false\n    elseif month(date) == 10 && day(date)\
    \ > 30\n        valid_date::Bool = false\n    elseif month(date) == 12 && day(date)\
    \ > 31\n        valid_date::Bool = false\n    else\n        valid_date::Bool =\
    \ true\n    end\n    return valid_date\nend\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"04-0-2040\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that checks if a given date string is a valid date in the format:\
    \ mm-dd-yyyy", "    valid_date_regex = Regex(\"^(0?[1-9]|[12][0-9]|3[01])-(0?[1-9]|1[012])-((19|20)\\\
    d\\d)$\")\n    valid_date_match = valid_date_regex.match(date)\n    if valid_date_match\
    \ != nil\n        days_match = valid_date_match[3].to_i\n        month_match =\
    \ valid_date_match[2].to_i\n        year_match = valid_date_match[1].to_i\n  \
    \      \n        if days_match > 31 || days_match < 1\n            return false\n\
    \        end", "    \n    valid_date_regex = Regex(\"^((0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1]))-((19|20)\\\
    d\\d)$\")\n    \n    if valid_date_regex.match(date) == nil\n        error(\"\
    Invalid date\")\n    end\n    \n    days_regex = Regex(\"^((0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1]))$\"\
    )\n    \n    if days_regex.match(date) == nil\n        error(\"Invalid date\"\
    )\n    end\n    \n    months_regex = Regex(\"^((0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1]))$\"\
    )\n    \n    if months_regex.match(date) == nil\n        error(\"Invalid date\"\
    )\n    end\n    \n    year_regex = Regex(\"^((19|20)\\d\\d)$\")\n    \n    if\
    \ year_regex.match(date) == nil\n        error(\"Invalid date\")\n    end\n  \
    \  \n    return true\nend\n</cell>\n<code language=julia-1.5>\nvalid_date(\"03-11-2000\"\
    )\n</cell>\n<code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06-04-2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    06/04/2020\")\n</cell>\n<text>\nExercise 2\nWrite a function which accepts a string\
    \ and returns the number of words in the string.", "    \n    date_split = split(date,\
    \ \"-\")\n    \n    if date_split[1] < 1 || date_split[1] > 12\n        error(\"\
    The month should be between 1 and 12\")\n    end\n    \n    if date_split[2] <\
    \ 1 || date_split[2] > 31\n        error(\"The day should be between 1 and 31\"\
    )\n    end\n    \n    if date_split[1] == 2 && date_split[2] > 29\n        error(\"\
    The day should be between 1 and 29\")\n    end\n    \n    if date_split[1] ==\
    \ 2 && date_split[2] == 29 && date_split[3] < 1 || date_split[3] > 30\n      \
    \  error(\"The day should be between 1 and 30\")\n    end\n    \n    if date_split[1]\
    \ == 3 && date_split[2] > 30\n        error(\"The day should be between 1 and\
    \ 30\")\n    end\n    \n    if date_split[1] == 3 && date_split[2] == 30 && date_split[3]\
    \ < 1 || date_split[3] > 31\n        error(\"The day should be between 1 and 31\"\
    )\n    end\n    \n    if date_split[1] == 4 && date_split[2] > 29\n        error(\"\
    The day should be between 1 and 29\")\n    end\n    \n    if date_split[1] ==\
    \ 4 && date_split[2] == 29 && date_split[3] < 1 || date_split[3] > 30\n      \
    \  error(\"The day should be between 1 and 30\")\n    end\n    \n    if date_split[1]\
    \ == 5 && date_split[2] > 30\n        error(\"The day should be between 1 and\
    \ 30\")\n    end\n    \n    if date_split[1] == 5 && date_split[2] == 30 && date_split[3]\
    \ < 1 || date_split[3] > 31\n        error(\"The day should be between 1 and 31\"\
    )\n    end\n    \n    if date_split[1] == 6 && date_split[2] > 30\n        error(\"\
    The day should be between 1 and 30\")\n    end\n    \n    if date_split[1] ==\
    \ 6 && date_split[2] == 30 && date_split[3] < 1 || date_split[3] > 31\n      \
    \  error(\"The day should be between 1 and 31\")\n    end\n    \n    if date_split[1]\
    \ == 7 && date_split[2] > 30\n        error(\"The day should be between 1 and\
    \ 30\")\n    end\n    \n    if date_split[1] == 7 && date_split[2] == 30 && date_split[3]\
    \ < 1 || date_split[3] > 31\n        error(\"The day should be between 1 and 31\"\
    )\n    end\n    \n    if date_split[1] == 8 && date_split[2] > 30\n        error(\"\
    The day should be between 1 and 30\")\n    end\n    \n    if date_split[1] ==\
    \ 8 && date_split[2] == 30 && date_split[3] < 1 || date_split[3] > 31\n      \
    \  error(\"The day should be between 1 and 31\")\n    end\n    \n    if date_split[1]\
    \ == 9 && date_", "    \n    valid_date_regex = r\"^((0[1-9]|[12][0-9]|3[01])[\\\
    -\\/](0[1-9]|1[012])[\\-\\/]\\d{4})$\"\n    valid_date_match = match(valid_date_regex,\
    \ date)\n    \n    if valid_date_match != nil \n        \n        days_match =\
    \ match(r\"^((0[1-9]|[12][0-9]|3[01])[\\-\\/](0[1-9]|1[012])[\\-\\/]\\d{4})$\"\
    , date)\n        \n        if days_match != nil \n            \n            months_match\
    \ = match(r\"^((0[1-9]|[12][0-9]|3[01])[\\-\\/](0[1-9]|1[012])[\\-\\/]\\d{4})$\"\
    , date)\n            \n            if months_match != nil \n                \n\
    \                days_match = match(r\"^((0[1-9]|[12][0-9]|3[01])[\\-\\/](0[1-9]|1[012])[\\\
    -\\/]\\d{4})$\", date)\n                \n                if days_match != nil\
    \ \n                    \n                    months_match = match(r\"^((0[1-9]|[12][0-9]|3[01])[\\\
    -\\/](0[1-9]|1[012])[\\-\\/]\\d{4})$\", date)\n                    \n        \
    \            if months_match != nil \n                        \n             \
    \           days_match = match(r\"^((0[1-9]|[12][0-9]|3[01])[\\-\\/](0[1-9]|1[012])[\\\
    -\\/]\\d{4})$\", date)\n                        \n                        if days_match\
    \ != nil \n                            \n                            months_match\
    \ = match(r\"^((0[1-9]|[12][0-9]|3[01])[\\-\\/](0[1-9]|1[012])[\\-\\/]\\d{4})$\"\
    , date)\n                            \n                            if months_match\
    \ != nil \n                                \n                                days_match\
    \ = match(r\"^((0[1-9]|[12][0-9]|3[01])[\\-\\/](0[1-9]|1[012])[\\-\\/]\\d{4})$\"\
    , date)\n                                \n                                if\
    \ days_match != nil \n                                    \n                 \
    \                   months_match = match(r\"^((0[1-9]|[12][0-9]|3[01])[\\-\\/](0[1-9]|1[012])[\\\
    -\\/]\\d{4})$\", date)\n                                    \n               \
    \                     if months_match != nil \n                              \
    \          \n                                        days_match = match(r\"^((0[1-9]|[12][0-9]|3[01])[\\\
    -\\/](0[1-9]|1[012])[\\-\\/]\\d{4})$\", date)\n                              \
    \          \n                                        if days_match != nil \n \
    \                                           \n                               \
    \             months_match = match(r\"^((0[1-9]|[12][0-9]|3[01])[\\-\\/](0[1-9]|1[012])[\\\
    -\\/]\\d{4})$\", date)\n                                            \n       \
    \                                     if ", "    \n    valid_date_str = date\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-5:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-3:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-2:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    ", "    \n    valid_date_regex = r\"^(0[1-9]|[12][0-9]|3[01])[\\/\\-](0[1-9]|1[012])[\\\
    /\\-]\\d{4}$\"\n    \n    if date == \"\"\n        error(\"Date is empty\")\n\
    \    \n    days_regex = r\"^((?!\\b(?:0?[1-9]|[12][0-9]|3[01])\\b)[1-31]|(?:0?[1-9]|[12][0-9]|30)[0-29])$\"\
    \n    \n    months_regex = r\"^((?!\\b(?:0?[1-9]|[12][0-9]|3[01])\\b)[1-12]|(?:0?[1-9]|[12][0-9]|30)[01])$\"\
    \n    \n    if days_regex !~ date\n        error(\"Days format is incorrect\"\
    )\n    \n    if months_regex !~ date\n        error(\"Months format is incorrect\"\
    )\n    \n    if valid_date_regex !~ date\n        error(\"Date format is incorrect\"\
    )\n    \n    return true\nend\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    03-11-2000\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"04-0-2040\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06-04-2020\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06/04/2020\")\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ checks if a given date string is valid or not.", "    \n    valid_date_str =\
    \ split(date, \"-\")\n    \n    if length(valid_date_str) != 3 || valid_date_str[1]\
    \ < 1 || valid_date_str[1] > 12 || valid_date_str[2] < 1 || valid_date_str[2]\
    \ > 31 || valid_date_str[2] > 30 || valid_date_str[2] > 29 || valid_date_str[1]\
    \ > 12 || valid_date_str[1] < 1 || valid_date_str[1] > 31 || valid_date_str[1]\
    \ > 30 || valid_date_str[1] > 29\n        return false\n    else\n        return\
    \ true\n    end\nend\n</cell>\n<code language=julia-1.5>\nvalid_date(\"03-11-2000\"\
    )\n</cell>\n<code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06-04-2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    06/04/2020\")\n</cell>\n<code language=julia-1.5>", "    valid_date_regex = Regex(\"\
    ^((0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-((19|20)[0-9]{2}))$\")\n    valid_date_match\
    \ = valid_date_regex.match(date)\n    if valid_date_match != nil\n        days_match\
    \ = valid_date_match[3].to_i\n        days_match = days_match >= 1 && days_match\
    \ <= 31\n        months_match = valid_date_match[5].to_i\n        months_match\
    \ = months_match >= 1 && months_match <= 12\n        years_match = valid_date_match[7].to_i\n\
    \        years_match = years_match >= 1 && years_match <= 4\n        valid_date_match\
    \ = days_match && months_match && years_match\n    end\n    return valid_date_match\n\
    end\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't answer the question, which\
    \ is about how to validate a date string in Julia.\n<|/ c |>\n<| c |>\nI added\
    \ a code snippet which does exactly that. Hope it helps.\n<|/ c |>\n<| c |>\n\
    The question was about how to validate a date string in Julia, not how to validate\
    \ a date in Julia.\n<|/ c |>\n<| c |>\nThe question was about how to validate\
    \ a date string in Julia, not how to validate a date in Julia. Julia has many\
    \ date functions. One of them is `valid_date` which validates a date string and\
    \ returns true or false. Hence the code snippet I posted.\n<|/ c |>\n<| c |>\n\
    The question was about how to validate a date string in Julia, not how to validate\
    \ a date in Julia. Julia has many date functions. One of them is `valid_date`\
    \ which validates a date string and returns true or false. Hence the code snippet\
    \ I posted.\n<|/ c |>\n<| a tags=julia,date |>\nThe Julia standard library has\
    \ many date functions. One of them is valid_date which validates a date string\
    \ and returns true or false. Hence the code snippet I posted.\n<code>", "    \n\
    \    if date == \"\"\n        error(\"The date string cannot be empty\")\n   \
    \ \n    if length(date) < 1\n        error(\"The date string cannot be empty\"\
    )\n    \n    if length(date) > 31\n        error(\"The date string cannot be more\
    \ than 31 days\")\n    \n    if month(date) < 1 || month(date) > 12\n        error(\"\
    The date string cannot be less than 1 or greater than 12\")\n    \n    if day(date)\
    \ < 1 || day(date) > 30\n        error(\"The date string cannot be less than 1\
    \ or greater than 30\")\n    \n    if month(date) == 2 && day(date) == 29\n  \
    \      error(\"The date string cannot be February 29\")\n    \n    if month(date)\
    \ == 2 && day(date) > 29\n        error(\"The date string cannot be February 29\"\
    )\n    \n    if month(date) == 3 && day(date) == 31\n        error(\"The date\
    \ string cannot be March 31\")\n    \n    if month(date) == 3 && day(date) > 31\n\
    \        error(\"The date string cannot be March 31\")\n    \n    if month(date)\
    \ == 4 && day(date) == 30\n        error(\"The date string cannot be April 30\"\
    )\n    \n    if month(date) == 4 && day(date) > 30\n        error(\"The date string\
    \ cannot be April 30\")\n    \n    if month(date) == 5 && day(date) == 31\n  \
    \      error(\"The date string cannot be May 31\")\n    \n    if month(date) ==\
    \ 5 && day(date) > 31\n        error(\"The date string cannot be May 31\")\n \
    \   \n    if month(date) == 6 && day(date) == 30\n        error(\"The date string\
    \ cannot be June 30\")\n    \n    if month(date) == 6 && day(date) > 30\n    \
    \    error(\"The date string cannot be June 30\")\n    \n    if month(date) ==\
    \ 7 && day(date) == 31\n        error(\"The date string cannot be July 31\")\n\
    \    \n    if month(date) == 7 && day(date) > 31\n        error(\"The date string\
    \ cannot be July 31\")\n    \n    if month(date) == 8 && day(date) == 31\n   \
    \     error(\"The date string cannot be August 31\")\n    \n    if month(date)\
    \ == 8 && day(date) > 31\n        error(\"The date string cannot be August 31\"\
    )\n    \n    if month(date) == 9 && day(date) == 30\n        error(\"The date\
    \ string cannot be September 30\")\n    \n    if month(date) == 9 && day(date)\
    \ > 30\n        error(\"The date string cannot be Septe", "    \n    valid_date_regex\
    \ = Regex(\"^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-[0-9]{4}$\")\n    \n   \
    \ if valid_date_regex.match(date) == nil \n        return false \n    else \n\
    \        return true \n    end\nend\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    03-11-2000\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"04-0-2040\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06-04-2020\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06/04/2020\")\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ checks if a given date string is valid or not.", "    \n    valid_date_str =\
    \ date\n    \n    valid_date_str = valid_date_str[valid_date_str!=\"\"]\n    \n\
    \    valid_date_str = valid_date_str[valid_date_str!=\"-\"]\n    \n    valid_date_str\
    \ = valid_date_str[valid_date_str!=\".\"]\n    \n    valid_date_str = valid_date_str[valid_date_str!=\"\
    :\"]\n    \n    valid_date_str = valid_date_str[valid_date_str!=\"-\"]\n    \n\
    \    valid_date_str = valid_date_str[valid_date_str!=\":\"]\n    \n    valid_date_str\
    \ = valid_date_str[valid_date_str!=\".\"]\n    \n    valid_date_str = valid_date_str[valid_date_str!=\"\
    -\"]\n    \n    valid_date_str = valid_date_str[valid_date_str!=\":\"]\n    \n\
    \    valid_date_str = valid_date_str[valid_date_str!=\".\"]\n    \n    valid_date_str\
    \ = valid_date_str[valid_date_str!=\"-\"]\n    \n    valid_date_str = valid_date_str[valid_date_str!=\"\
    :\"]\n    \n    valid_date_str = valid_date_str[valid_date_str!=\".\"]\n    \n\
    \    valid_date_str = valid_date_str[valid_date_str!=\"-\"]\n    \n    valid_date_str\
    \ = valid_date_str[valid_date_str!=\":\"]\n    \n    valid_date_str = valid_date_str[valid_date_str!=\"\
    .\"]\n    \n    valid_date_str = valid_date_str[valid_date_str!=\"-\"]\n    \n\
    \    valid_date_str = valid_date_str[valid_date_str!=\":\"]\n    \n    valid_date_str\
    \ = valid_date_str[valid_date_str!=\".\"]\n    \n    valid_date_str = valid_date_str[valid_date_str!=\"\
    -\"]\n    \n    valid_date_str = valid_date_str[valid_date_str!=\":\"]\n    \n\
    \    valid_date_str = valid_date_str[valid_date_str!=\".\"]\n    \n    valid_date_str\
    \ = valid_date_str[valid_date_str!=\"-\"]\n    \n    valid_date_str = valid_date_str[valid_date_str!=\"\
    :\"]\n    \n    valid_date_str = valid_date_str[valid_date_str!=\".\"]\n    \n\
    \    valid_date_str = valid_date_str[valid_date_str!=\"-\"]\n    \n    valid_date_str\
    \ = valid_date_str[valid_date_str!=\":\"]\n    \n    valid_date_str = valid_date_str[valid_date_str!=\"\
    .\"]\n    ", "    \n    date_split = split(date, \"-\")\n    \n    days_valid\
    \ = days_not_less_than_1_or_higher_than_31(date_split)\n    months_valid = months_not_less_than_1_or_higher_than_12(date_split)\n\
    \    \n    days_valid = days_valid and days_not_less_than_1_or_higher_than_30(date_split)\n\
    \    months_valid = months_valid and months_not_less_than_1_or_higher_than_29(date_split)\n\
    \    \n    days_valid = days_valid and days_not_less_than_1_or_higher_than_29(date_split)\n\
    \    months_valid = months_valid and months_not_less_than_1_or_higher_than_12(date_split)\n\
    \    \n    days_valid = days_valid and days_not_less_than_1_or_higher_than_31(date_split)\n\
    \    months_valid = months_valid and months_not_less_than_1_or_higher_than_12(date_split)\n\
    \    \n    days_valid = days_valid and days_not_less_than_1_or_higher_than_31(date_split)\n\
    \    months_valid = months_valid and months_not_less_than_1_or_higher_than_12(date_split)\n\
    \    \n    days_valid = days_valid and days_not_less_than_1_or_higher_than_31(date_split)\n\
    \    months_valid = months_valid and months_not_less_than_1_or_higher_than_12(date_split)\n\
    \    \n    days_valid = days_valid and days_not_less_than_1_or_higher_than_31(date_split)\n\
    \    months_valid = months_valid and months_not_less_than_1_or_higher_than_12(date_split)\n\
    \    \n    days_valid = days_valid and days_not_less_than_1_or_higher_than_31(date_split)\n\
    \    months_valid = months_valid and months_not_less_than_1_or_higher_than_12(date_split)\n\
    \    \n    days_valid = days_valid and days_not_less_than_1_or_higher_than_31(date_split)\n\
    \    months_valid = months_valid and months_not_less_than_1_or_higher_than_12(date_split)\n\
    \    \n    days_valid", "    \n    valid_date::Bool = true \n    \n    if date\
    \ == \"\" \n        valid_date = false \n    else \n        valid_date = true\
    \ \n        \n        if length(date) == 4 \n            if month(date) == 0 \n\
    \                valid_date = false \n            else \n                if day(date)\
    \ == 0 \n                    valid_date = false \n                else \n    \
    \                if year(date) == 0 \n                        valid_date = false\
    \ \n                    else \n                        if month(date) == 1 \n\
    \                            if day(date) == 31 \n                           \
    \     valid_date = false \n                            else \n               \
    \                 if day(date) == 29 \n                                    valid_date\
    \ = false \n                                else \n                          \
    \          if day(date) > 29 \n                                        valid_date\
    \ = false \n                                    else \n                      \
    \                  if month(date) > 12 \n                                    \
    \        valid_date = false \n                                        else \n\
    \                                            if month(date) == 3 \n          \
    \                                      if day(date) > 11 \n                  \
    \                                  valid_date = false \n                     \
    \                           else \n                                          \
    \          valid_date = true \n                                            else\
    \ \n                                                if month(date) == 5 \n   \
    \                                                 if day(date) > 9 \n        \
    \                                                valid_date = false \n       \
    \                                             else \n                        \
    \                                valid_date = true \n                        \
    \                        else \n                                             \
    \       if month(date) == 7 \n                                               \
    \         if day(date) > 5 \n                                                \
    \            valid_date = false \n                                           \
    \             else \n                                                        \
    \    valid_date = true \n                                                    else\
    \ \n                                                        if month(date) ==\
    \ 8 \n                                                            if day(date)\
    \ > 4 \n                                                                valid_date\
    \ = false \n                                                            else \n\
    \                                                                valid_date =\
    \ true \n                                                        else \n     \
    \                                                       if month(date) == 10 \n\
    \                                                                if day(date)\
    \ > 6 \n                                                                    valid_date\
    \ = false \n                                                                else\
    \ \n                                                                    valid_date\
    \ = true \n                                                            else \n\
    \                                                                if month(date)\
    \ == 12 \n                                                                   \
    \ if day(date) > 3 \n                                                        \
    \                valid_date = false \n                                       \
    \                             else \n                                        \
    \                                valid_date = true \n                        \
    \                                        else \n                             \
    \                                       if month(date) == 1 \n               \
    \                                                         if day(date) > 1 \n\
    \                                                                            valid_date\
    \ = false \n                                                                 \
    \       else \n                                                              \
    \              valid_date = true \n                                          \
    \                          else \n                                           \
    \                             valid_date = false \n                          \
    \      else \n                                    if month(date) == 4 \n     \
    \                                   if day(date) > 6 \n                      \
    \                      valid_date = false \n                                 \
    \       else \n                                            valid_date = true \n\
    \                                    else \n                                 \
    \       if month(date) == 6 \n                                            if day(date)\
    \ > 4 \n                                                valid_date = false \n\
    \                                            else \n                         \
    \                       valid_date = true \n                                 \
    \       else \n                                            if month(date) == 9\
    \ \n                                                if day(date) > 11 \n     \
    \                                               valid_date = false \n        \
    \                                        else \n                             \
    \                       valid_date = true \n                                 \
    \           else \n                                                if month(date)\
    \ == 11 \n                                                    valid_date = true\
    \ \n                                                else \n                  \
    \                                  valid_date = false \n", "    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil \n        return false\n  \
    \  end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str ==\
    \ nil \n        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil \n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil \n        return false\n  \
    \  end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str ==\
    \ nil \n        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil \n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil \n        return false\n  \
    \  end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str ==\
    \ nil \n        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil \n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil \n        return false\n  \
    \  end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str ==\
    \ nil \n        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil \n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil \n        return false\n  \
    \  end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str ==\
    \ nil \n        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil \n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil \n        return false\n  \
    \  end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str ==\
    \ nil \n        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil \n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil \n        return false\n  \
    \  end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str ==\
    \ nil \n        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil \n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil \n        return false\n  \
    \  end\n    \n    valid_date_str = Date.parse(", "    \n    if date == \"\"\n\
    \        false\n    elseif length(date) < 1\n        false\n    elseif length(date)\
    \ > 31\n        false\n    elseif length(date) > 30\n        false\n    elseif\
    \ length(date) > 29\n        false\n    elseif length(date) < 12\n        false\n\
    \    elseif length(date) < 4\n        false\n    elseif length(date) < 6\n   \
    \     false\n    elseif length(date) < 9\n        false\n    elseif length(date)\
    \ < 11\n        false\n    elseif length(date) < 13\n        false\n    elseif\
    \ length(date) < 2\n        false\n    elseif length(date) < 7\n        false\n\
    \    elseif length(date) < 10\n        false\n    elseif length(date) < 14\n \
    \       false\n    elseif length(date) < 3\n        false\n    elseif length(date)\
    \ < 5\n        false\n    elseif length(date) < 8\n        false\n    elseif length(date)\
    \ < 12\n        false\n    elseif length(date) < 10\n        false\n    elseif\
    \ length(date) < 11\n        false\n    elseif length(date) < 12\n        false\n\
    \    elseif length(date) < 10\n        false\n    elseif length(date) < 11\n \
    \       false\n    elseif length(date) < 12\n        false\n    elseif length(date)\
    \ < 10\n        false\n    elseif length(date) < 11\n        false\n    elseif\
    \ length(date) < 12\n        false\n    elseif length(date) < 10\n        false\n\
    \    elseif length(date) < 11\n        false\n    elseif length(date) < 12\n \
    \       false\n    elseif length(date) < 10\n        false\n    elseif length(date)\
    \ < 11\n        false\n    elseif length(date) < 12\n        false\n    elseif\
    \ length(date) < 10\n        false\n    elseif length(date) < 11\n        false\n\
    \    elseif length(date) < 12\n        false\n    elseif length(date) < 10\n \
    \       false\n    elseif length(date) < 11\n        false\n    elseif length(date)\
    \ < 12\n        false\n    elseif length(date) < 10\n        false\n    elseif\
    \ length(date) < 11\n        false\n    elseif length(date) < 12\n        false\n\
    \    elseif length(date) < 10\n        false\n    elseif length(date) < 11\n \
    \       false\n    elseif length(date) < 12\n        false\n    elseif length(date)\
    \ < 10\n        false\n    elseif length(date) < 11\n        false\n    elseif\
    \ length(date) < 12\n        false\n    elseif length(date) < 10\n        false\n\
    \    elseif length(date) < 11\n        false\n    elseif ", "    \n    valid_date::Bool\
    \ = true \n    \n    if date == \"\" \n        valid_date = false \n    else \n\
    \        valid_date = true \n    \n    if valid_date == true \n        \n    \
    \    days::Int = length(date) - length(replace(date, \"-\", \"\")) + 1\n     \
    \   \n        if days < 1 \n            valid_date = false \n        else if days\
    \ < 31 \n            valid_date = false \n        else if days < 30 \n       \
    \     valid_date = false \n        else if days < 29 \n            valid_date\
    \ = false \n        else if days < 28 \n            valid_date = false \n    \
    \    else if days < 27 \n            valid_date = false \n        else if days\
    \ < 26 \n            valid_date = false \n        else if days < 25 \n       \
    \     valid_date = false \n        else if days < 24 \n            valid_date\
    \ = false \n        else if days < 23 \n            valid_date = false \n    \
    \    else if days < 22 \n            valid_date = false \n        else if days\
    \ < 21 \n            valid_date = false \n        else if days < 20 \n       \
    \     valid_date = false \n        else if days < 19 \n            valid_date\
    \ = false \n        else if days < 18 \n            valid_date = false \n    \
    \    else if days < 17 \n            valid_date = false \n        else if days\
    \ < 16 \n            valid_date = false \n        else if days < 15 \n       \
    \     valid_date = false \n        else if days < 14 \n            valid_date\
    \ = false \n        else if days < 13 \n            valid_date = false \n    \
    \    else if days < 12 \n            valid_date = false \n        else if days\
    \ < 11 \n            valid_date = false \n        else if days < 10 \n       \
    \     valid_date = false \n        else if days < 9 \n            valid_date =\
    \ false \n        else if days < 8 \n            valid_date = false \n       \
    \ else if days < 7 \n            valid_date = false \n        else if days < 6\
    \ \n            valid_date = false \n        else if days < 5 \n            valid_date\
    \ = false \n        else if days < 4 \n            valid_date = false \n     \
    \   else if days < 3 \n            valid_date = false \n        else if days <\
    \ 2 \n            valid_date = false \n        else if days < 1 \n           \
    \ valid_date = false \n        else \n            valid_date = false \n    end\
    \ \n    \n    if valid_date == true \n        \n        months::Int = length(date)\
    \ - length(replace(date, \"-\", \"\")) - length(replace(date, \"/\", \"\")) +\
    \ 1\n        \n        if months < 1 \n            valid_date = false \n     \
    \   else if months < 12 \n            valid_date = false \n        else \n   \
    \         valid_date = true \n        end \n    end \n    \n    if valid_date\
    \ == true \n        \n        years::Int = length(date) - length(replace(date,\
    \ \"-\", \"\")) - ", "    \n    if date == \"\"\n        false\n    else\n   \
    \     \n        if length(date) <> 10\n            false\n        else\n     \
    \       \n            if month(date) <> 1 \n                false\n          \
    \  else\n                \n                if day(date) <> 1 \n              \
    \      false\n                else\n                    \n                   \
    \ if year(date) <> 2000\n                        false\n                    else\n\
    \                        \n                        if month(date) <> 4 \n    \
    \                        false\n                        else\n               \
    \             \n                            if day(date) <> 6 \n             \
    \                   false\n                            else\n                \
    \                \n                                if month(date) <> 6 \n    \
    \                                false\n                                else\n\
    \                                    \n                                    if\
    \ day(date) <> 4 \n                                        false\n           \
    \                         else\n                                        \n   \
    \                                     if month(date) <> 2 \n                 \
    \                           false\n                                        else\n\
    \                                            \n                              \
    \              if day(date) <> 29 \n                                         \
    \       false\n                                            else\n            \
    \                                    \n                                      \
    \          if month(date) <> 12 \n                                           \
    \         false\n                                                else\n      \
    \                                              true\n        end\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\"\
    )\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that checks if a given date is valid or not.", " \
    \   \n    valid_date::Bool = false \n    \n    if date == \"\"\n        valid_date\
    \ = false\n    else\n        valid_date = true\n    end\n    \n    if valid_date\
    \ == false\n        \n        if month(date) == 0 || month(date) == 1 || month(date)\
    \ == 2 || month(date) == 3 || month(date) == 4 || month(date) == 5 || month(date)\
    \ == 6 || month(date) == 7 || month(date) == 8 || month(date) == 9 || month(date)\
    \ == 10 || month(date) == 11 || month(date) == 12\n            valid_date = true\n\
    \        elseif month(date) == 0 || month(date) == 1 || month(date) == 2 || month(date)\
    \ == 3 || month(date) == 4 || month(date) == 6 || month(date) == 9 || month(date)\
    \ == 11 || month(date) == 12\n            valid_date = true\n        elseif month(date)\
    \ == 0 || month(date) == 1 || month(date) == 2 || month(date) == 3 || month(date)\
    \ == 4 || month(date) == 5 || month(date) == 7 || month(date) == 8 || month(date)\
    \ == 10 || month(date) == 12\n            valid_date = true\n        elseif month(date)\
    \ == 0 || month(date) == 1 || month(date) == 2 || month(date) == 3 || month(date)\
    \ == 4 || month(date) == 5 || month(date) == 6 || month(date) == 7 || month(date)\
    \ == 8 || month(date) == 9 || month(date) == 11\n            valid_date = true\n\
    \        elseif month(date) == 0 || month(date) == 1 || month(date) == 2 || month(date)\
    \ == 3 || month(date) == 4 || month(date) == 5 || month(date) == 6 || month(date)\
    \ == 7 || month(date) == 8 || month(date) == 9 || month(date) == 10 || month(date)\
    \ == 12\n            valid_date = true\n        elseif month(date) == 0 || month(date)\
    \ == 1 || month(date) == 2 || month(date) == 3 || month(date) == 4 || month(date)\
    \ == 5 || month(date) == 6 || month(date) == 7 || month(date) == 8 || month(date)\
    \ == 9 || month(date) == 11 || month(date) == 12\n            valid_date = true\n\
    \        elseif month(date) == 0 || month(date) == 1 || month(date) == 2 || month(date)\
    \ == 3 || month(date) == 4 || month(date) == 5 || month(date) == ", "    \n  \
    \  if date == \"\"\n        return false\n    \n    date_array = split(date, \"\
    -\")\n    \n    if length(date_array) != 3\n        return false\n    \n    months\
    \ = date_array[1]\n    days = date_array[2]\n    \n    if length(months) < 1 ||\
    \ length(months) > 12\n        return false\n    \n    if length(days) < 1 ||\
    \ length(days) > 31\n        return false\n    \n    if length(months) == 1 &&\
    \ length(days) == 31\n        return false\n    \n    if length(months) == 2 &&\
    \ length(days) == 30\n        return false\n    \n    if length(months) == 3 &&\
    \ length(days) == 29\n        return false\n    \n    if length(months) == 4 &&\
    \ length(days) == 31\n        return false\n    \n    if length(months) == 5 &&\
    \ length(days) == 30\n        return false\n    \n    if length(months) == 6 &&\
    \ length(days) == 31\n        return false\n    \n    if length(months) == 7 &&\
    \ length(days) == 31\n        return false\n    \n    if length(months) == 8 &&\
    \ length(days) == 31\n        return false\n    \n    if length(months) == 9 &&\
    \ length(days) == 30\n        return false\n    \n    if length(months) == 10\
    \ && length(days) == 31\n        return false\n    \n    if length(months) ==\
    \ 11 && length(days) == 30\n        return false\n    \n    if length(months)\
    \ == 12 && length(days) == 31\n        return false\n    \n    return true\nend\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\"\
    )\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code\
    \ language=julia-1.5>", "    \n    if date == \"\"\n        false\n    elseif\
    \ length(date) < 1 || length(date) > 31\n        false\n    elseif month(date)\
    \ < 1 || month(date) > 12\n        false\n    elseif day(date) < 1 || day(date)\
    \ > 30\n        false\n    elseif month(date) == 2 && day(date) > 29\n       \
    \ false\n    elseif month(date) == 2 && day(date) < 1\n        false\n    elseif\
    \ month(date) == 4 && day(date) > 29\n        false\n    elseif month(date) ==\
    \ 4 && day(date) < 1\n        false\n    elseif month(date) == 6 && day(date)\
    \ > 29\n        false\n    elseif month(date) == 6 && day(date) < 1\n        false\n\
    \    else\n        true\n    end\nend\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    03-11-2000\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"04-0-2040\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06-04-2020\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06/04/2020\")\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a date string as an argument and returns the number of days between the\
    \ current date and the date in the string. For example, if the current date is\
    \ 2020-01-01 and you pass a date string 2020-01-02, the function should return\
    \ 2.", "    \n    valid_date_regex = Regex(\"^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-[0-9]{4}$\"\
    )\n    valid_date_match = valid_date_regex.match(date)\n    \n    if valid_date_match\
    \ != nil\n        return true\n    else\n        return false\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\"\
    )\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    04-0-2040\")\n</cell>\n<code language=julia-1.5", "    \n    date_split = split(date,\
    \ '-')\n    \n    if date_split[1] == '01' or date_split[1] == '03' or date_split[1]\
    \ == '05' or date_split[1] == '07' or date_split[1] == '08' or date_split[1] ==\
    \ '10' or date_split[1] == '12'\n    or date_split[1] == '04' or date_split[1]\
    \ == '06' or date_split[1] == '09' or date_split[1] == '11'\n    or date_split[1]\
    \ == '02'\n    \n    else date_split[1] == '01' or date_split[1] == '04' or date_split[1]\
    \ == '06' or date_split[1] == '09' or date_split[1] == '11'\n    or date_split[1]\
    \ == '02'\n    \n    else date_split[1] == '01' or date_split[1] == '03' or date_split[1]\
    \ == '05' or date_split[1] == '07' or date_split[1] == '08' or date_split[1] ==\
    \ '10' or date_split[1] == '12'\n    or date_split[1] == '04' or date_split[1]\
    \ == '06' or date_split[1] == '09' or date_split[1] == '11'\n    or date_split[1]\
    \ == '02'\n    \n    else date_split[1] == '01' or date_split[1] == '03' or date_split[1]\
    \ == '05' or date_split[1] == '07' or date_split[1] == '08' or date_split[1] ==\
    \ '10' or date_split[1] == '12'\n    or date_split[1] == '04' or date_split[1]\
    \ == '06' or date_split[1] == '09' or date_split[1] == '11'\n    or date_split[1]\
    \ == '02'\n    \n    else date_split[1] == '01' or date_split[1] == '03' or date_split[1]\
    \ == '05' or date_split[1] == '07' or date_split[1] == '08' or date_split[1] ==\
    \ '10' or date_split[1] == '12'\n    or date_split[1] == '04' or date_split[1]\
    \ == '06' or date_split[1] == '09' or date_split[1] == '11'\n    or date_split[1]\
    \ == '02'\n    \n    else date_split[1] == '01' or date_split[1] == '03' or date_split[1]\
    \ == '05' or date_split[1] == '07' or date_split[1] == '08' or date_split[1] ==\
    \ '10' or date_split[1] == '12'\n    or date_split[1] == '04' or date_split[1]\
    \ == '06' or date_split[1] == '09' or date_split[1] == '11'\n    or date_split[1]\
    \ == '02'\n    \n    else date_split[1] == '01' or date_split[1] == '03' or date_split[1]\
    \ == '05' or date_split[1] == '07' or date_split[1] == '08' or date_split[1] ==\
    \ '10' or date_split[1] == '", "    \n    if date == \"\" \n        then return\
    \ false \n    else \n        \n        date_split = split(date, \"-\")\n     \
    \   \n        if date_split[2] < 1 || date_split[2] > 31 \n            then return\
    \ false \n        else if date_split[1] < 1 || date_split[1] > 12 \n         \
    \   then return false \n        else if date_split[0] < 1 || date_split[0] > 12\
    \ \n            then return false \n        else return true \n    end\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of days\
    \ in a given month.", "    valid_date_regex = r\"^((0?[1-9]|[12]\\d|3[01])[\\\
    /](0?[1-9]|1[012])[\\/]\\d{4})$\"\n    valid_date_match = match(valid_date_regex,\
    \ date)\n    if valid_date_match != nil\n        days_match = match(r\"^((0?[1-9]|[12]\\\
    d|3[01])|(29|30))$\", valid_date_match[2])\n        if days_match != nil\n   \
    \         months_match = match(r\"^((0?[1-9]|1[012])|(12|0?[1-9]))$\", valid_date_match[1])\n\
    \            if months_match != nil\n                years_match = match(r\"^((19|20)\\\
    d\\d)$\", valid_date_match[3])\n                if years_match != nil\n      \
    \              return true\n                end\n            end\n        end\n\
    \    end\n    return false\nend\n</code>\n<|/ a tags=julia,date |>\n<| c |>\n\
    This doesn't seem to work when `valid_date(\"03-11-2000\")` returns true.\n<|/\
    \ c |>\n<| c |>\nIt does work. Try it yourself. It returns true.\n<|/ c |>\n<|\
    \ c |>\nI tested it and it returns true. Try it yourself.\n<|/ c |>\n<| c |>\n\
    I tested it and it returns true. Try it yourself.\n<|/ c |>\n<| c |>\nI tested\
    \ it and it returns true. Try it yourself.\n<|/ c |>\n<| a tags=julia,date |>\n\
    I wrote a package called Dates.jl that can parse dates very easily.\n<code>\n\
    julia> using Dates", "    \n    date_split = split(date, '-')\n    \n    months\
    \ = date_split[1]\n    days = date_split[2]\n    year = date_split[3]\n    \n\
    \    months_split = split(months, '-')\n    \n    months_count = months_split[1]\n\
    \    \n    days_split = split(days, '-')\n    \n    days_count = days_split[1]\n\
    \    \n    \n    if months_count != 12 or days_count != 31 or days_count != 30\
    \ or days_count != 29 or months_count != 1 or year != 2000\n    \n        return\
    \ false\n    \n    return true\nend\n</cell>\n<code language=julia-1.5>\nvalid_date('03-11-2000')\n\
    </cell>\n<code language=julia-1.5>\nvalid_date('15-01-2012')\n</cell>\n<code language=julia-1.5>\n\
    valid_date('04-0-2040')\n</cell>\n<code language=julia-1.5>\nvalid_date('06-04-2020')\n\
    </cell>\n<code language=julia-1.5>\nvalid_date('06/04/2020')\n</cell>\n<text>\n\
    Exercise 2\nWrite a function which takes a string and returns the number of words\
    \ in the string.", "    \n    valid_date_str = Date.parse(date)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = ", "    \n    valid_date::Bool = false \n    \n    if date == \"\" \n    \
    \    valid_date = false \n    else \n        valid_date = true \n    \n      \
    \  if length(date) <> 10 \n            valid_date = false \n        else \n  \
    \          valid_date = true \n            \n            if month(date) <> 1 \n\
    \                valid_date = false \n            else \n                valid_date\
    \ = true \n                \n                if day(date) <> 1 \n            \
    \        valid_date = false \n                else \n                    valid_date\
    \ = true \n                    \n                    if year(date) <> 2000 \n\
    \                        valid_date = false \n                    else \n    \
    \                    valid_date = true \n                        \n          \
    \              if month(date) <> 2 \n                            valid_date =\
    \ false \n                        else \n                            valid_date\
    \ = true \n                            \n                            if day(date)\
    \ <> 29 \n                                valid_date = false \n              \
    \              else \n                                valid_date = true \n   \
    \                             \n                                if month(date)\
    \ <> 12 \n                                    valid_date = false \n          \
    \                      else \n                                    valid_date =\
    \ true \n                                    \n                              \
    \      if day(date) <> 31 \n                                        valid_date\
    \ = false \n                                    else \n                      \
    \                  valid_date = true \n                                    end\
    \ \n                            end \n                    end \n            end\
    \ \n    end \n    return valid_date \nend \n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"04-0-2040\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<text>\nExercise 3\n\
    Write a function which takes a string and returns the number of characters in\
    \ the string.", "    \n    valid_date_regex = Regex(\"^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-([0-9]{4})$\"\
    )\n    \n    if valid_date_regex.match(date) == nil then\n        return false\n\
    \    end", "    \n    valid_date::Bool = false \n    \n    if date == \"\" ||\
    \ date == \" \" \n        return valid_date \n    \n    day::Int = days_in_month(month(date),\
    \ year(date)) \n    \n    if day < 1 || day > 31 \n        return valid_date \n\
    \    \n    day::Int = days_in_month(month(date), year(date)) \n    \n    if day\
    \ < 1 || day > 30 \n        return valid_date \n    \n    day::Int = days_in_month(month(date),\
    \ year(date)) \n    \n    if day < 1 || day > 29 \n        return valid_date \n\
    \    \n    day::Int = days_in_month(month(date), year(date)) \n    \n    if day\
    \ < 1 || day > 28 \n        return valid_date \n    \n    day::Int = days_in_month(month(date),\
    \ year(date)) \n    \n    if day < 1 || day > 31 \n        return valid_date \n\
    \    \n    valid_date::Bool = true \n    return valid_date \nend\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06/04/2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    06/04/2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06/04/2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    06/04/2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06", "    \n    if date == \"\"\n        false\n\
    \    else\n        if length(date) == 7\n            if month(date) == 0 || month(date)\
    \ == 1 || month(date) == 3 || month(date) == 5 || month(date) == 7 || month(date)\
    \ == 8 || month(date) == 10 || month(date) == 12\n                if day(date)\
    \ == 1 || day(date) == 3 || day(date) == 5 || day(date) == 7 || day(date) == 8\
    \ || day(date) == 10 || day(date) == 12\n                    if year(date) ==\
    \ 2000\n                        true\n                    else\n             \
    \           false\n                else\n                    false\n         \
    \   else\n                false\n        else\n            false\n    end\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a date string as an argument\
    \ and returns the number of days in the given date.", "    valid_date_regex =\
    \ Regex(\"^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-[0-9]{4}$\")\n    valid_date_match\
    \ = valid_date_regex.match(date)\n    if valid_date_match != nil\n        return\
    \ true\n    else\n        return false\n    end\nend", "    \n    valid_date_regex\
    \ = Regex(\"^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-((19|20)[0-9]{2})$\")\n\
    \    \n    if valid_date_regex.match(date) == nil \n        return false \n  \
    \  else \n        return true \n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    if date == \"\"\n        return false\n    \n    days_month = days_in_month(date)\n\
    \    days_year = days_in_year(date)\n    \n    if days_month < 1 or days_month\
    \ > 31\n        return false\n    \n    if days_year < 1 or days_year > 30\n \
    \       return false\n    \n    if days_month == 2 && days_year != 2020\n    \
    \    return false\n    \n    if days_month == 4 && days_year != 2020\n       \
    \ return false\n    \n    if days_month == 6 && days_year != 2020\n        return\
    \ false\n    \n    if days_month == 9 && days_year != 2020\n        return false\n\
    \    \n    if days_month == 11 && days_year != 2020\n        return false\n  \
    \  \n    if days_month == 1 && days_year != 2020\n        return false\n    \n\
    \    if days_month == 3 && days_year != 2020\n        return false\n    \n   \
    \ if days_month == 5 && days_year != 2020\n        return false\n    \n    if\
    \ days_month == 7 && days_year != 2020\n        return false\n    \n    if days_month\
    \ == 8 && days_year != 2020\n        return false\n    \n    if days_month ==\
    \ 10 && days_year != 2020\n        return false\n    \n    if days_month == 12\
    \ && days_year != 2020\n        return false\n    \n    return true\nend", " \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    valid_date::Bool\
    \ = false \n    \n    if date == \"\" \n        valid_date = false \n    else\
    \ \n        valid_date = true \n        \n        if length(date) <> 8 \n    \
    \        valid_date = false \n        else \n            valid_date = true \n\
    \            \n            if month(date) <> 1 \n                valid_date =\
    \ false \n            else \n                valid_date = true \n            \
    \    \n                if day(date) <> 1 \n                    valid_date = false\
    \ \n                else \n                    valid_date = true \n          \
    \          \n                    if year(date) <> 2000 \n                    \
    \    valid_date = false \n                    else \n                        valid_date\
    \ = true \n                        \n                        if month(date) <>\
    \ 12 \n                            valid_date = false \n                     \
    \   else \n                            valid_date = true \n                  \
    \          \n                            if day(date) <> 31 \n               \
    \                 valid_date = false \n                            else \n   \
    \                             valid_date = true \n                           \
    \     \n                                if month(date) <> 3 \n               \
    \                     valid_date = false \n                                else\
    \ \n                                    valid_date = true \n                 \
    \                   \n                                    if day(date) <> 30 \n\
    \                                        valid_date = false \n               \
    \                     else \n                                        valid_date\
    \ = true \n                                        \n                        \
    \                if month(date) <> 6 \n                                      \
    \      valid_date = false \n                                        else \n  \
    \                                          valid_date = true \n              \
    \                              \n                                            if\
    \ day(date) <> 29 \n                                                valid_date\
    \ = false \n                                            else \n              \
    \                                  valid_date = true \n                      \
    \                          \n                                                if\
    \ month(date) <> 12 \n                                                    valid_date\
    \ = false \n                                                else \n          \
    \                                          valid_date = true \n              \
    \                                      \n                                    \
    \                if day(date) <> 31 \n                                       \
    \                 valid_date = false \n                                      \
    \              else \n                                                       \
    \ valid_date = true \n                                                       \
    \ \n                                                        if day(date) <> 30\
    \ \n                                                            valid_date = false\
    \ \n                                                        else \n          \
    \                                                  valid_date = true \n      \
    \                                                      \n                    \
    \                            if month(date) <> 4 \n                          \
    \                          valid_date = false \n                             \
    \                   else \n                                                  \
    \  valid_date = true \n                                                    \n\
    \                                                    if day(date) <> 31 \n   \
    \                                                     valid_date = false \n  \
    \                                                  else \n                   \
    \                                     valid_date = true \n                   \
    \                                     \n                                     \
    \                   if day(date) <> 30 \n                                    \
    \                        valid_date = false \n                               \
    \                         else \n                                            \
    \                valid_date = true \n                                        \
    \                    \n                                                if month(date)\
    \ <> 6 \n                                                    valid_date = false\
    \ \n                                                else \n                  \
    \                                  valid_date = true \n                      \
    \                              \n                                            \
    \        if day(date) <> 31 \n                                               \
    \         valid_date = false \n                                              \
    \      else \n                                                        valid_date\
    \ = true \n                                                        \n        \
    \                                                if day(date) <> 30 \n       \
    \                                                     valid_date = false \n  \
    \                                                      else \n               \
    \                                             valid_date = true \n           \
    \                                                 \n                         \
    \                       if month(date) <> 9 \n                               \
    \                     valid_date = false \n                                  \
    \              ", "    \n    valid_date_str = Date.parse(date)\n    if valid_date_str\
    \ == nil\n        return false\n    end", "    \n    valid_date_str = Date.parse(date)\n\
    \    \n    if valid_date_str == nil \n        false\n    else\n        true\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nvalid_date(\"03-11-2000\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06-04-2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    06/04/2020\")\n</cell>\n<text>\nExercise 3\nWrite a function that checks if a\
    \ given string is a valid phone number. \nThe phone number should be in the format:\
    \ (xxx)xxx-xxxx", "    \n    if date == \"\"\n        return false\n    \n   \
    \ days_months = split(date, \"-\")\n    \n    if days_months[1] < 1 || days_months[1]\
    \ > 12\n        return false\n    \n    if days_months[2] < 1 || days_months[2]\
    \ > 31\n        return false\n    \n    if days_months[0] < 1 || days_months[0]\
    \ > 30\n        return false\n    \n    if days_months[0] < 1 || days_months[0]\
    \ > 29\n        return false\n    \n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"04-0-2040\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code language=julia-1.5>",
  "    \n    valid_date_str = date\n    valid_date_str = valid_date_str[valid_date_str.length()-3:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-2:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_", "    \n    valid_date::Bool = true \n    \n    if date == \"\" \n\
    \        valid_date = false \n    else \n        valid_date = true \n        \n\
    \        if length(date) <> 8 \n            valid_date = false \n        else\
    \ \n            valid_date = true \n            \n            if date[1] == '0'\
    \ \n                valid_date = false \n            else \n                valid_date\
    \ = true \n                \n                if date[2] == '0' \n            \
    \        valid_date = false \n                else \n                    valid_date\
    \ = true \n                    \n                    if date[3] == '0' \n    \
    \                    valid_date = false \n                    else \n        \
    \                valid_date = true \n                        \n              \
    \          if date[4] == '0' \n                            valid_date = false\
    \ \n                        else \n                            valid_date = true\
    \ \n                            \n                            if date[5] == '0'\
    \ \n                                valid_date = false \n                    \
    \        else \n                                valid_date = true \n         \
    \                       \n                                if date[6] == '0' \n\
    \                                    valid_date = false \n                   \
    \             else \n                                    valid_date = true \n\
    \                                    \n                                    if\
    \ date[7] == '0' \n                                        valid_date = false\
    \ \n                                    else \n                              \
    \          valid_date = true \n                                        \n    \
    \                                    if date[8] == '0' \n                    \
    \                        valid_date = false \n                               \
    \         else \n                                            valid_date = true\
    \ \n                                            \n                           \
    \                 if date[9] == '0' \n                                       \
    \         valid_date = false \n                                            else\
    \ \n                                                valid_date = true \n     \
    \                                           \n                               \
    \                 if date[10] == '0' \n                                      \
    \              valid_date = false \n                                         \
    \       else \n                                                    valid_date\
    \ = true \n                                                    \n            \
    \                                        if date[11] == '0' \n               \
    \                                         valid_date = false \n              \
    \                                      else \n                               \
    \                         valid_date = true \n                               \
    \                         \n                                                 \
    \       if date[12] == '0' \n                                                \
    \            valid_date = false \n                                           \
    \             else \n                                                        \
    \    valid_date = true \n                                                    \
    \        \n                                                            if valid_date\
    \ == true \n                                                                valid_date\
    \ = true \n                                                            else \n\
    \                                                                valid_date =\
    \ false \n                                                            \n     \
    \                                           if valid_date == true \n         \
    \                                           valid_date = true \n             \
    \                                   else \n                                  \
    \                  valid_date = false \n                                     \
    \           \n                                                if valid_date ==\
    \ true \n                                                    valid_date = true\
    \ \n                                                else \n                  \
    \                                  valid_date = false \n                     \
    \                           \n                                               \
    \ if valid_date == true \n                                                   \
    \ valid_date = true \n                                                else \n\
    \                                                    valid_date = false \n   \
    \                                             \n                             \
    \                   if valid_date == true \n                                 \
    \                   valid_date = true \n                                     \
    \           else \n                                                    valid_date\
    \ = false \n                                                \n               \
    \                                 if valid_date == true \n                   \
    \                                 valid_date = true \n                       \
    \                         else \n                                            \
    \        valid_date = false \n                                               \
    \ \n                                                if valid_date == true \n \
    \                                                   valid_date = true \n     \
    \                                           else \n                          \
    \                          valid_date = false \n                             \
    \                   \n                                                if valid_date\
    \ == true \n                                                    valid_date = true\
    \ \n                                                else \n                  \
    \                                  valid_date = false \n                     \
    \                           \n                                               \
    \ if valid_date == true \n                                                   \
    \ valid_date = true \n                                                else \n\
    \                                                    valid_date = false \n   \
    \                                             \n                             \
    \   ", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    valid_date_res\
    \ = validate_date(date)\n    if valid_date_res\n        valid_date_str = valid_date_res.to_string()\n\
    \        valid_date_str = valid_date_str[valid_date_str.find('-'):]\n        valid_date_str\
    \ = valid_date_str[valid_date_str.find('-'):valid_date_str.find('-')]\n      \
    \  valid_date_str = valid_date_str[valid_date_str.find('-'):valid_date_str.find('-')]\n\
    \        valid_date_str = valid_date_str[valid_date_str.find('-'):valid_date_str.find('-')]\n\
    \        valid_date_str = valid_date_str[valid_date_str.find('-'):valid_date_str.find('-')]\n\
    \        valid_date_str = valid_date_str[valid_date_str.find('-'):valid_date_str.find('-')]\n\
    \        valid_date_str = valid_date_str[valid_date_str.find('-'):valid_date_str.find('-')]\n\
    \        valid_date_str = valid_date_str[valid_date_str.find('-'):valid_date_str.find('-')]\n\
    \        valid_date_str = valid_date_str[valid_date_str.find('-'):valid_date_str.find('-')]\n\
    \        valid_date_str = valid_date_str[valid_date_str.find('-'):valid_date_str.find('-')]\n\
    \        valid_date_str = valid_date_str[valid_date_str.find('-'):valid_date_str.find('-')]\n\
    \        valid_date_str = valid_date_str[valid_date_str.find('-'):valid_date_str.find('-')]\n\
    \        valid_date_str = valid_date_str[valid_date_str.find('-'):valid_date_str.find('-')]\n\
    \        valid_date_str = valid_date_str[valid_date_str.find('-'):valid_date_str.find('-')]\n\
    \        valid_date_str = valid_date_str[valid_date_str.find('-'):valid_date_str.find('-')]\n\
    \        valid_date_str = valid_date_str[valid_date_str.find('-'):valid_date_str.find('-')]\n\
    \        valid_date_str = valid_date_str[valid_date_str.find('-'):valid_date_str.find('-')]\n\
    \        valid_date_str = valid_date_str[valid_date_str.find('-'):valid_date_str.find('-')]\n\
    \        valid_date_str = valid_date_str[valid_date_str.find('-'):valid_date_str.find('-')]\n\
    \        valid_date_str = valid_date_str[valid_date_str.find('-'):valid_date_str.find('-')]\n\
    \        valid_date_str = valid_date_str[valid_date_str.find('-'):valid_date_str.find('-')]\n\
    \        valid_date_str = valid_date_str[valid_date_str.find('-'):valid_date_str.find('-')]\n\
    \        valid_date_str = valid_date_str[valid_date_str.find('-'):valid_date_str.find('-')]\n\
    \        valid_date_str = valid_date_str[valid_", "    \n    valid_date::Bool\
    \ = false \n    \n    if date != \"\" \n    then \n        if length(date) ==\
    \ 7 \n        then \n            if month(date) == 0 \n            then \n   \
    \             if day(date) == 0 \n                then \n                    if\
    \ year(date) == 0 \n                    then \n                        valid_date\
    \ = true \n                    else \n                        valid_date = false\
    \ \n                else \n                    valid_date = false \n         \
    \   else \n                valid_date = false \n        else \n            valid_date\
    \ = false \n    else \n        valid_date = false \n    end if \n    \n    return\
    \ valid_date \nend function \n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    03-11-2000\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"04-0-2040\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06-04-2020\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06/04/2020\")\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a string and returns the number of characters in the string.", "    \n\
    \    valid_date_regex = Regex(\"^(0?[1-9]|[12][0-9]|3[01])-(0?[1-9]|1[012])-((19|20)[0-9]{2})$\"\
    )\n    valid_date_match = valid_date_regex.match(date)\n    if valid_date_match\
    \ != nil\n        return true\n    else\n        return false\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\"\
    )\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that checks if a number is even.", "    valid_date_string(date)\n\
    \    valid_date_days(date)\n    valid_date_months(date)\n    valid_date_year(date)\n\
    end", "    \n    valid_date::Bool = false \n    \n    if date == \"\" \n     \
    \   valid_date = false \n    else \n        valid_date = true \n        \n   \
    \     if length(date) == 8 \n            valid_date = true \n        else \n \
    \           valid_date = false \n        \n        if valid_date == true \n  \
    \          if date[2] == '-' \n                valid_date = true \n          \
    \  else \n                valid_date = false \n        \n            if valid_date\
    \ == true \n                if date[1] == '-' \n                    valid_date\
    \ = true \n                else \n                    valid_date = false \n  \
    \          \n                if valid_date == true \n                    if date[4]\
    \ == '-' \n                        valid_date = true \n                    else\
    \ \n                        valid_date = false \n            \n              \
    \      if valid_date == true \n                        if date[7] == '-' \n  \
    \                          valid_date = true \n                        else \n\
    \                            valid_date = false \n            \n             \
    \               if valid_date == true \n                                if date[8]\
    \ == '-' \n                                    valid_date = true \n          \
    \                      else \n                                    valid_date =\
    \ false \n            \n                                if valid_date == true\
    \ \n                                    if date[9] == '-' \n                 \
    \                       valid_date = true \n                                 \
    \   else \n                                        valid_date = false \n     \
    \       \n                                    if valid_date == true \n       \
    \                                 if date[10] == '-' \n                      \
    \                      valid_date = true \n                                  \
    \      else \n                                            valid_date = false \n\
    \            \n                                        if valid_date == true \n\
    \                                            if date[11] == '-' \n           \
    \                                     valid_date = true \n                   \
    \                         else \n                                            \
    \    valid_date = false \n            \n                                     \
    \       if valid_date == true \n                                             \
    \   if date[12] == '-' \n                                                    valid_date\
    \ = true \n                                                else \n           \
    \                                         valid_date = false \n            \n\
    \                                                if valid_date == true \n    \
    \                                                if date[13] == '-' \n       \
    \                                                 valid_date = true \n       \
    \                                             else \n                        \
    \                                valid_date = false \n            \n         \
    \                                           if valid_date == true \n         \
    \                                               if date[14] == '-' \n        \
    \                                                    valid_date = true \n    \
    \                                                    else \n                 \
    \                                           valid_date = false \n            \n\
    \                                                        if valid_date == true\
    \ \n                                                            if date[15] ==\
    \ '-' \n                                                                valid_date\
    \ = true \n                                                            else \n\
    \                                                                valid_date =\
    \ false \n            \n                                                     \
    \       if valid_date == true \n                                             \
    \                   if date[16] == '-' \n                                    \
    \                                valid_date = true \n                        \
    \                                        else \n                             \
    \                                       valid_date = false \n            \n  \
    \                                                                  if valid_date\
    \ == true \n                                                                 \
    \       if date[17] == '-' \n                                                \
    \                            valid_date = true \n                            \
    \                                            else \n                         \
    \                                                   valid_date = false \n    \
    \        \n                                                                  \
    \  if valid_date == true \n                                                  \
    \                      if date[18] == '-' \n                                 \
    \                                           valid_date = true \n             \
    \                                                           else \n          \
    \                                                                  valid_date\
    \ = false \n            \n                                ", "    \n    if date\
    \ == \"\" \n        then return false\n    else \n        \n        date_split\
    \ = split(date, \"-\")\n        \n        if date_split[1] == \"01\"\n       \
    \     then return false\n        else if date_split[1] == \"02\"\n           \
    \ then return false\n        else if date_split[1] == \"03\"\n            then\
    \ return false\n        else if date_split[1] == \"04\"\n            then return\
    \ false\n        else if date_split[1] == \"05\"\n            then return false\n\
    \        else if date_split[1] == \"06\"\n            then return false\n    \
    \    else if date_split[1] == \"07\"\n            then return false\n        else\
    \ if date_split[1] == \"08\"\n            then return false\n        else if date_split[1]\
    \ == \"09\"\n            then return false\n        else if date_split[1] == \"\
    10\"\n            then return false\n        else if date_split[1] == \"11\"\n\
    \            then return false\n        else if date_split[1] == \"12\"\n    \
    \        then return false\n        else if date_split[1] == \"13\"\n        \
    \    then return false\n        else if date_split[1] == \"14\"\n            then\
    \ return false\n        else if date_split[1] == \"15\"\n            then return\
    \ false\n        else if date_split[1] == \"16\"\n            then return false\n\
    \        else if date_split[1] == \"17\"\n            then return false\n    \
    \    else if date_split[1] == \"18\"\n            then return false\n        else\
    \ if date_split[1] == \"19\"\n            then return false\n        else if date_split[1]\
    \ == \"20\"\n            then return false\n        else if date_split[1] == \"\
    21\"\n            then return false\n        else if date_split[1] == \"22\"\n\
    \            then return false\n        else if date_split[1] == \"23\"\n    \
    \        then return false\n        else if date_split[1] == \"24\"\n        \
    \    then return false\n        else if date_split[1] == \"25\"\n            then\
    \ return false\n        else if date_split[1] == \"26\"\n            then return\
    \ false\n        else if date_split[1] == \"27\"\n            then return false\n\
    \        else if date_split[1] == \"28\"\n            then return false\n    \
    \    else if date_split[1] == \"29\"\n            then return false\n        else\
    \ if date_split[1] == \"30\"\n            then return false\n        else if date_split[1]\
    \ == \"31\"\n            then return false\n        else if date_split[1] == \"\
    32\"\n            then return false\n        else if date_split[1] == \"33\"\n\
    \            then return false\n        else if date_split[1] == \"34\"\n    \
    \        then return false\n        else if date_split[1] == \"35\"\n        \
    \    then return false\n", "    \n    if date == \"\"\n        false\n    else\n\
    \        if length(date) <> 8 || length(date) <> 10 || length(date) <> 12\n  \
    \          false\n        else\n            if month(date) <> 2 || month(date)\
    \ <> 4 || month(date) <> 6 || month(date) <> 9 || month(date) <> 11 || month(date)\
    \ <> 12\n                false\n            else\n                if day(date)\
    \ <> 1 || day(date) <> 31 || day(date) <> 30 || day(date) <> 29\n            \
    \        false\n                else\n                    if year(date) <> 2000\n\
    \                        false\n                    else\n                   \
    \     true\n            end\n        end\n    end\nend\n</cell>\n<text>\nExercise\
    \ 2: Write a function that checks if a given date string is valid or not.", " \
    \   \n    if date == \"\"\n        error(\"The date string should not be empty\"\
    )\n    \n    if length(date) < 1 \n        error(\"The date string should not\
    \ be empty\")\n    \n    if length(date) > 31 \n        error(\"The date string\
    \ should not be more than 31 days\")\n    \n    if length(date) > 30 \n      \
    \  error(\"The date string should not be more than 30 days\")\n    \n    if length(date)\
    \ > 29 \n        error(\"The date string should not be more than 29 days\")\n\
    \    \n    if length(date) > 12 \n        error(\"The date string should not be\
    \ more than 12 months\")\n    \n    if date !~ /^\\d{1,2}-\\d{1,2}-\\d{4}$/\n\
    \        error(\"The date string should be in the format: mm-dd-yyyy\")\n    \n\
    \    return true\nend\n</cell>\n<code language=julia-1.5>\nvalid_date(\"03-11-2000\"\
    )\n</cell>\n<code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06-04-2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    06/04/2020\")\n</cell>\n<text>\nExercise 2\nWrite a function that checks if a\
    \ given date string is valid or not.", "    valid_date_regex = Regex(\"^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-[0-9]{4}$\"\
    )\n    if valid_date_regex.match(date) == nil \n        return false\n    end\n\
    \    \n    valid_date_days_regex = Regex(\"^((0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-[0-9]{4})|((0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-[0-9]{2})|((0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01]))$\"\
    )\n    if valid_date_days_regex.match(date) == nil \n        return false\n  \
    \  end\n    \n    valid_date_month_regex = Regex(\"^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$\"\
    )\n    if valid_date_month_regex.match(date) == nil \n        return false\n \
    \   end\n    \n    valid_date_months_regex = Regex(\"^(0[1-9]|1[0-2])|(0[1-9]|1[0-3])|(0[1-9]|1[5-7])|(0[1-9]|1[8-9])|(0[1-9]|1[10-11])|(0[1-9]|1[12])$\"\
    )\n    if valid_date_months_regex.match(date) == nil \n        return false\n\
    \    end\n    \n    valid_date_year_regex = Regex(\"^[0-9]{4}$\")\n    if valid_date_year_regex.match(date)\
    \ == nil \n        return false\n    end\n    \n    return true\nend\n</cell>\n\
    <code language=julia-1.5>", "    \n    valid_date::Bool = false\n    \n    if\
    \ date != \"\"\n        \n        days::Int = length(split(date, \"-\"))\n   \
    \     \n        if days > 1 and days <= 31\n            \n            months::Int\
    \ = length(split(date, \"-\"))\n            \n            if months > 1 and months\
    \ <= 12\n                \n                years::Int = length(split(date, \"\
    -\"))\n                \n                if years > 1 and years <= 4\n       \
    \             \n                    valid_date::Bool = true\n                \
    \    \n                end\n            end\n        end\n    end\n    \n    return\
    \ valid_date\nend\n</cell>\n<code language=julia-1.5>\nvalid_date(\"03-11-2000\"\
    )\n</cell>\n<code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06-04-2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    06/04/2020\")\n</cell>\n<text>\nExercise 2\nWrite a function which accepts a string\
    \ and returns the number of words in the string.", "    \n    date_split = split(date,\
    \ \"-\")\n    \n    days_valid = true\n    \n    months_valid = true\n    \n \
    \   years_valid = true\n    \n    days_valid = days_valid && length(date_split[1])\
    \ >= 1 && length(date_split[1]) <= 31\n    \n    months_valid = months_valid &&\
    \ length(date_split[2]) >= 1 && length(date_split[2]) <= 12\n    \n    years_valid\
    \ = years_valid && length(date_split[0]) >= 1 && length(date_split[0]) <= 12\n\
    \    \n    days_valid = days_valid && length(date_split[1]) >= 1 && length(date_split[1])\
    \ <= 31\n    \n    months_valid = months_valid && length(date_split[2]) >= 1 &&\
    \ length(date_split[2]) <= 12\n    \n    years_valid = years_valid && length(date_split[0])\
    \ >= 1 && length(date_split[0]) <= 12\n    \n    days_valid = days_valid && length(date_split[1])\
    \ >= 1 && length(date_split[1]) <= 31\n    \n    months_valid = months_valid &&\
    \ length(date_split[2]) >= 1 && length(date_split[2]) <= 12\n    \n    years_valid\
    \ = years_valid && length(date_split[0]) >= 1 && length(date_split[0]) <= 12\n\
    \    \n    days_valid = days_valid && length(date_split[1]) >= 1 && length(date_split[1])\
    \ <= 31\n    \n    months_valid = months_valid && length(date_split[2]) >= 1 &&\
    \ length(date_split[2]) <= 12\n    \n    years_valid = years_valid && length(date_split[0])\
    \ >= 1 && length(date_split[0]) <= 12\n    \n    days_valid = days_valid && length(date_split[1])\
    \ >= 1 && length(date_split[1]) <= 31\n    \n    months_valid = months_valid &&\
    \ length(date_split[2]) >= 1 && length(date_split[2]) <= 12\n    \n    years_valid\
    \ = years_valid && length(date_split[0]) >= 1 && length(date_split[0]) <= 12\n\
    \    \n    days_valid = days_valid && length(date_split[1]) >= 1 && length(date_split[1])\
    \ <= 31\n    \n    months_valid = months_valid && length(date_split[2]) >= 1 &&\
    \ length(date_split[2]) <= 12\n    \n    years_valid = years_valid && length(date_split[0])\
    \ >= 1 && length(date_split[0]) <= 12\n    \n    days_valid = days_valid && length(date_split[1])\
    \ >= 1 && length(date_split[1]) <= 31\n    \n    months_valid = months_valid &&\
    \ length(date_split[2]) >= 1 && length(date_split[2]) <= ", "    \n    valid_date_str\
    \ = date\n    valid_date_str = valid_date_str[valid_date_str.length()-3:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-2:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_", "    \n    valid_date_regex = r\"^((0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4})$\"\n    valid_date_match = match(valid_date_regex, date)\n    if valid_date_match\
    \ != None\n        days_match = valid_date_match[1]\n        months_match = valid_date_match[2]\n\
    \        years_match = valid_date_match[3]\n        days_match = days_match[2:]\n\
    \        months_match = months_match[2:]\n        years_match = years_match[2:]\n\
    \        days_match = days_match[2:]\n        months_match = months_match[2:]\n\
    \        years_match = years_match[2:]\n        days_match = days_match[2:]\n\
    \        months_match = months_match[2:]\n        years_match = years_match[2:]\n\
    \        days_match = days_match[2:]\n        months_match = months_match[2:]\n\
    \        years_match = years_match[2:]\n        days_match = days_match[2:]\n\
    \        months_match = months_match[2:]\n        years_match = years_match[2:]\n\
    \        days_match = days_match[2:]\n        months_match = months_match[2:]\n\
    \        years_match = years_match[2:]\n        days_match = days_match[2:]\n\
    \        months_match = months_match[2:]\n        years_match = years_match[2:]\n\
    \        days_match = days_match[2:]\n        months_match = months_match[2:]\n\
    \        years_match = years_match[2:]\n        days_match = days_match[2:]\n\
    \        months_match = months_match[2:]\n        years_match = years_match[2:]\n\
    \        days_match = days_match[2:]\n        months_match = months_match[2:]\n\
    \        years_match = years_match[2:]\n        days_match = days_match[2:]\n\
    \        months_match = months_match[2:]\n        years_match = years_match[2:]\n\
    \        days_match = days_match[2:]\n        months_match = months_match[2:]\n\
    \        years_match = years_match[2:]\n        days_match = days_match[2:]\n\
    \        months_match = months_match[2:]\n        years_match = years_match[2:]\n\
    \        days_match = days_match[2:]\n        months_match = months_match[2:]\n\
    \        years_match = years_match[2:]\n        days_match = days_match[2:]\n\
    \        months_match = months_match[2:]\n        years_match = years_match[2:]\n\
    \        days_match = day", "    \n    valid_date::Bool = false \n    \n    if\
    \ date == \"\" \n        valid_date = false \n    else \n        valid_date =\
    \ true \n    \n    valid_date = valid_date & \n        ((length(date) > 0) & \n\
    \        (length(date) < 32) & \n        (length(date) < 29) & \n        (length(date)\
    \ < 31) & \n        (length(date) < 30) & \n        (length(date) < 29) & \n \
    \       (length(date) < 31) & \n        (length(date) < 30) & \n        (length(date)\
    \ < 31) & \n        (length(date) < 30) & \n        (length(date) < 31) & \n \
    \       (length(date) < 30) & \n        (length(date) < 31) & \n        (length(date)\
    \ < 30) & \n        (length(date) < 31) & \n        (length(date) < 30) & \n \
    \       (length(date) < 31) & \n        (length(date) < 30) & \n        (length(date)\
    \ < 31) & \n        (length(date) < 30) & \n        (length(date) < 31) & \n \
    \       (length(date) < 30) & \n        (length(date) < 31) & \n        (length(date)\
    \ < 30) & \n        (length(date) < 31) & \n        (length(date) < 30) & \n \
    \       (length(date) < 31) & \n        (length(date) < 30) & \n        (length(date)\
    \ < 31) & \n        (length(date) < 30) & \n        (length(date) < 31) & \n \
    \       (length(date) < 30) & \n        (length(date) < 31) & \n        (length(date)\
    \ < 30) & \n        (length(date) < 31) & \n        (length(date) < 30) & \n \
    \       (length(date) < 31) & \n        (length(date) < 30) & \n        (length(date)\
    \ < 31) & \n        (length(date) < 30) & \n        (length(date) < 31) & \n \
    \       (length(date) < 30) & \n        (length(date) < 31) & \n        (length(date)\
    \ < 30) & \n        (length(date) < 31) & \n        (length(date) < 30) & \n \
    \       (length(date) < 31) & \n        (length(date) < 30) & \n        (length(date)\
    \ < 31) & \n        (length(date) < 30) & \n        (length(date) < 31) & \n \
    \       (length(date) < 30) & \n        (length(date) < 31) & \n        (length(date)\
    \ < 30) & \n        (length(date) < 31) & \n        (length(date) < 30) & \n \
    \       (length(date) < 31) & \n        (length(date) < 30) & \n        (length(date)\
    \ < 31) & \n        (length(date) < 30) & \n        (length(date) < 31) & \n \
    \       (length(date) < 30) & \n        (length(date) < 31) & \n        (length(date)\
    \ < 30) & \n        (length(date) < 31) & \n        (length(date) < 30) & \n \
    \       (length(date) < 31) & \n        (length(date", "    \n    date_split =\
    \ split(date, '-')\n    \n    days_valid = true\n    \n    months_valid = true\n\
    \    \n    years_valid = true\n    \n    days_valid = days_valid && length(date_split)\
    \ == 3\n    \n    months_valid = months_valid && length(date_split) == 3\n   \
    \ \n    years_valid = years_valid && length(date_split) == 4\n    \n    days_valid\
    \ = days_valid && date_split[1] >= 1 && date_split[1] <= 31\n    \n    months_valid\
    \ = months_valid && date_split[2] >= 1 && date_split[2] <= 12\n    \n    years_valid\
    \ = years_valid && date_split[2] >= 1 && date_split[2] <= 12\n    \n    months_valid\
    \ = months_valid && date_split[1] >= 1 && date_split[1] <= 12\n    \n    days_valid\
    \ = days_valid && date_split[1] >= 1 && date_split[1] <= 31\n    \n    months_valid\
    \ = months_valid && date_split[1] >= 1 && date_split[1] <= 12\n    \n    years_valid\
    \ = years_valid && date_split[1] >= 1 && date_split[1] <= 12\n    \n    days_valid\
    \ = days_valid && date_split[1] >= 1 && date_split[1] <= 31\n    \n    months_valid\
    \ = months_valid && date_split[1] >= 1 && date_split[1] <= 12\n    \n    years_valid\
    \ = years_valid && date_split[1] >= 1 && date_split[1] <= 12\n    \n    days_valid\
    \ = days_valid && date_split[1] >= 1 && date_split[1] <= 31\n    \n    months_valid\
    \ = months_valid && date_split[1] >= 1 && date_split[1] <= 12\n    \n    years_valid\
    \ = years_valid && date_split[1] >= 1 && date_split[1] <= 12\n    \n    days_valid\
    \ = days_valid && date_split[1] >= 1 && date_split[1] <= 31\n    \n    months_valid\
    \ = months_valid && date_split[1] >= 1 && date_split[1] <= 12\n    \n    years_valid\
    \ = years_valid && date_split[1] >= 1 && date_split[1] <= 12\n    \n    days_valid\
    \ = days_valid && date_split[1] >= 1 && date_split[1] <= 31\n    \n    months_valid\
    \ = months_valid && date_split[1] >= 1 && date_split[1] <= 12\n    \n    years_valid\
    \ = years_valid && date_split[1] >= 1 && date_split[1] <= 12\n    \n    days_valid\
    \ = days_", "    \n    valid_date_regex = Regex(\"^((0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-((19|20)\\\
    \\d\\\\d)$)\")\n    \n    if valid_date_regex.match(date) == nil \n        return\
    \ false \n    else \n        return true \n    end \nend \n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"04-0-2040\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06/04/2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    06/04/2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06/04/2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    06/04/2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06/04/2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    06/04/2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06/04/2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    06/04/2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_", "    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end", "    \n    valid_date::Bool\
    \ = false \n    \n    if date == \"\" \n        valid_date = false \n    else\
    \ \n        valid_date = true \n        \n        if length(date) == 7 \n    \
    \        valid_date = true \n        else \n            valid_date = false \n\
    \        \n            if date == \"01-01-2000\" \n                valid_date\
    \ = true \n            else \n                valid_date = false \n          \
    \      \n                if date == \"01-01-2000\" \n                    valid_date\
    \ = true \n                else \n                    valid_date = false \n  \
    \                  \n                    if date == \"01-01-2000\" \n        \
    \                valid_date = true \n                    else \n             \
    \           valid_date = false \n                        \n                  \
    \      if date == \"01-01-2000\" \n                            valid_date = true\
    \ \n                        else \n                            valid_date = false\
    \ \n                            \n                            if date == \"01-01-2000\"\
    \ \n                                valid_date = true \n                     \
    \       else \n                                valid_date = false \n         \
    \                       \n                                if date == \"01-01-2000\"\
    \ \n                                    valid_date = true \n                 \
    \               else \n                                    valid_date = false\
    \ \n                                    \n                                   \
    \ if date == \"01-01-2000\" \n                                        valid_date\
    \ = true \n                                    else \n                       \
    \                 valid_date = false \n                                      \
    \  \n                                        if date == \"01-01-2000\" \n    \
    \                                        valid_date = true \n                \
    \                        else \n                                            valid_date\
    \ = false \n                                            \n                   \
    \                         if date == \"01-01-2000\" \n                       \
    \                         valid_date = true \n                               \
    \             else \n                                                valid_date\
    \ = false \n                                                \n               \
    \                                 if date == \"01-01-2000\" \n               \
    \                                     valid_date = true \n                   \
    \                             else \n                                        \
    \            valid_date = false \n                                           \
    \         \n                                                    if date == \"\
    01-01-2000\" \n                                                        valid_date\
    \ = true \n                                                    else \n       \
    \                                                 valid_date = false \n      \
    \                                                  \n                        \
    \                                if date == \"01-01-2000\" \n                \
    \                                            valid_date = true \n            \
    \                                            else \n                         \
    \                                   valid_date = false \n                    \
    \                                        \n                                  \
    \                          if date == \"01-01-2000\" \n                      \
    \                                          valid_date = true \n              \
    \                                              else \n                       \
    \                                         valid_date = false \n              \
    \                                                  \n                        \
    \                                        if date == \"01-01-2000\" \n        \
    \                                                            valid_date = true\
    \ \n                                                                else \n  \
    \                                                                  valid_date\
    \ = false \n                                                                 \
    \   \n                                                                    if date\
    \ == \"01-01-2000\" \n                                                       \
    \                 valid_date = true \n                                       \
    \                             else \n                                        \
    \                                valid_date = false \n                       \
    \                                                 \n                         \
    \                               if date == \"01-01-2000\" \n                 \
    \                                           valid_date = true \n             \
    \                                           else \n                          \
    \                                  valid_date = false \n                     \
    \                                       \n                                   \
    \                         if date == \"01-01-2000\" \n                       \
    \                                         valid_date = true \n               \
    \                                             else \n                        \
    \                                        valid_date = false \n               \
    \                                                 \n                         \
    \                                       if date == \"01-01-2000\" \n         \
    \                                                           valid_date = true\
    \ \n                                                                else \n  \
    \                                                                  valid_date\
    \ = false \n                                                                 \
    \   \n                                                                    if date\
    \ == \"01-01", "    \n    date_split = split(date, \"-\")\n    \n    days_valid\
    \ = days_valid(date_split)\n    \n    months_valid = months_valid(date_split)\n\
    \    \n    years_valid = years_valid(date_split)\n    \n    date_valid = days_valid\
    \ && months_valid && years_valid\n    \n    return date_valid\nend", "    \n \
    \   valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n        return\
    \ false\n    end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = ", "    \n    valid_date_regex\
    \ = Regex(\"^(0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])[- /.](19|20)\\d\\d$\"\
    )\n    \n    if valid_date_regex.match(date) == nil \n        return false\n \
    \   end\n    \n    days_regex = Regex(\"^((?!0{0,2}|1{0,1}|2{0,1})((0?[1-9]|[12]\\\
    d|3[01])|(30))|(29))$\")\n    \n    if days_regex.match(date) == nil \n      \
    \  return false\n    end\n    \n    months_regex = Regex(\"^((?!0{0,2}|1{0,1}|2{0,1})((0?[1-9]|1[012])|(12))|(11))$\"\
    )\n    \n    if months_regex.match(date) == nil \n        return false\n    end\n\
    \    \n    year_regex = Regex(\"^((?!0{0,2}|1{0,1}|2{0,1})((19|20)\\d\\d))$\"\
    )\n    \n    if year_regex.match(date) == nil \n        return false\n    end\n\
    \    \n    return true\nend\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    03-11-2000\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"04-0-2040\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06-04-2020\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06/04/2020\")\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ checks if a given date string is valid or not.", "    \n    valid_date_str =\
    \ date\n    valid_date_str = valid_date_str.replace(\" \", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"-\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    ,\", \"\")\n    valid_date_str = valid_date_str.replace(\"'\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"(\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    )\", \"\")\n    valid_date_str = valid_date_str.replace(\":\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"-\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    '\", \"\")\n    valid_date_str = valid_date_str.replace(\"(\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\")\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    :\", \"\")\n    valid_date_str = valid_date_str.replace(\"-\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"'\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    (\", \"\")\n    valid_date_str = valid_date_str.replace(\")\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\":\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    -\", \"\")\n    valid_date_str = valid_date_str.replace(\"'\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"(\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    )\", \"\")\n    valid_date_str = valid_date_str.replace(\":\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"-\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    '\", \"\")\n    valid_date_str = valid_date_str.replace(\"(\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\")\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    :\", \"\")\n    valid_date_str = valid_date_str.replace(\"-\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"'\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    (\", \"\")\n    valid_date_str = valid_date_str.replace(\")\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\":\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    -\", \"\")\n    valid_date_str = valid_date_str.replace(\"'\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"(\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    )\", \"\")\n    valid_date_str = valid_date_str.replace(\":\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"-\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    '\", \"\")\n    valid_date_str = valid_date_str.replace(\"(\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\")\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    :\", \"\")\n    valid_date_str = valid_date_str.replace(\"-\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"'\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    (\", \"\")\n", "    \n    if date == \"\"\n        error(\"The date string should\
    \ not be empty\")\n    end\n    \n    if length(date) != 10\n        error(\"\
    The date string should be in the format: mm-dd-yyyy\")\n    end\n    \n    if\
    \ month(date) != 2 || month(date) != 4 || month(date) != 6 || month(date) != 8\
    \ || month(date) != 10 || month(date) != 12\n        error(\"The date string should\
    \ be in the format: mm-dd-yyyy\")\n    end\n    \n    if day(date) != 1 || day(date)\
    \ != 3 || day(date) != 5 || day(date) != 7 || day(date) != 9 || day(date) != 11\
    \ || day(date) != 13 || day(date) != 15 || day(date) != 17 || day(date) != 19\
    \ || day(date) != 21 || day(date) != 23 || day(date) != 25 || day(date) != 27\
    \ || day(date) != 29\n        error(\"The date string should be in the format:\
    \ mm-dd-yyyy\")\n    end\n    \n    if day(date) > 31 || day(date) < 1\n     \
    \   error(\"The date string should be in the format: mm-dd-yyyy\")\n    end\n\
    \    \n    if month(date) > 12 || month(date) < 1\n        error(\"The date string\
    \ should be in the format: mm-dd-yyyy\")\n    end\n    \n    return true\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that checks if a given date string\
    \ is valid or not.", "    \n    valid_date::Bool = false\n    \n    if date ==\
    \ \"\"\n        return valid_date\n    else\n        \n        days::Int = count_days(date)\n\
    \        \n        if days > 31 || days < 1\n            return valid_date\n \
    \       else\n            \n            months::Int = count_months(date)\n   \
    \         \n            if months > 12 || months < 1\n                return valid_date\n\
    \            else\n                \n                years::Int = count_years(date)\n\
    \                \n                if years > 20 || years < 1\n              \
    \      return valid_date\n                else\n                    \n       \
    \             if months == 2 && days == 29\n                        return valid_date\n\
    \                    else\n                        \n                        if\
    \ months == 1 && days == 31\n                            return valid_date\n \
    \                       else\n                            \n                 \
    \           if months == 4 && days == 30\n                                return\
    \ valid_date\n                            else\n                             \
    \   \n                                if months == 6 && days == 31\n         \
    \                           return valid_date\n                              \
    \  else\n                                    \n                              \
    \      if months == 9 && days == 30\n                                        return\
    \ valid_date\n                                    else\n                     \
    \                   \n                                        if months == 11\
    \ && days == 31\n                                            return valid_date\n\
    \                                        else\n                              \
    \              \n                                            if months == 12 &&\
    \ days == 31\n                                                return valid_date\n\
    \                                            else\n                          \
    \                      \n                                                if months\
    \ == 1 && days == 30\n                                                    return\
    \ valid_date\n                                                else\n         \
    \                                           \n                               \
    \                     if months == 3 && days == 31\n                         \
    \                               return valid_date\n                          \
    \                          else\n                                            \
    \            \n                                                        if months\
    \ == 5 && days == 31\n                                                       \
    \     return valid_date\n                                                    \
    \    else\n                                                            \n    \
    \                                                        if months == 7 && days\
    \ == 31\n                                                                return\
    \ valid_date\n                                                            else\n\
    \                                                                \n          \
    \                                                      if months == 8 && days\
    \ == 31\n                                                                    return\
    \ valid_date\n                                                               \
    \ else\n                                                                    \n\
    \                                                                    if months\
    \ == 10 && days == 31\n                                                      \
    \                  return valid_date\n                                       \
    \                             else\n                                         \
    \                               \n                                           \
    \             if months == 12 && days == 31\n                                \
    \                                            return valid_date\n             \
    \                                                           else\n           \
    \                                                                 \n         \
    \                                                                       if months\
    \ == 2 && days == 30\n                                                       \
    \                             return valid_date\n                            \
    \                                                    else\n                  \
    \                                                                  \n        \
    \                                                                            if\
    \ months == 4 && days == 30\n                                                \
    \                                        return valid_date\n                 \
    \                                                                   else\n   \
    \                                                                            \
    \         \n                                                                 \
    \                       if months == 6 && days == 30\n                       \
    \                                                                     return valid_date\n\
    \                                                                            \
    \            else\n                                                          \
    \                                  \n                                        \
    \                                                    if months == 9 && days ==\
    \ 30\n                                                                       \
    \                         return valid_date\n                                \
    \                                                            else\n          \
    \                                                                            \
    \          \n                                                                \
    \                                if months == 11 && days == 30\n             \
    \                                                                            \
    \           return valid_date\n                                              \
    \                                                  else\n                    \
    \                                                                            \
    \    \n                                                                      \
    \                              if months == 1 && days == 29", "    \n    valid_date\
    \ = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date = (date !=\
    \ \"\")\n    valid_date = (date != \"\")\n    valid_date = (date != \"\")\n  \
    \  valid_date = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date\
    \ = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date = (date !=\
    \ \"\")\n    valid_date = (date != \"\")\n    valid_date = (date != \"\")\n  \
    \  valid_date = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date\
    \ = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date = (date !=\
    \ \"\")\n    valid_date = (date != \"\")\n    valid_date = (date != \"\")\n  \
    \  valid_date = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date\
    \ = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date = (date !=\
    \ \"\")\n    valid_date = (date != \"\")\n    valid_date = (date != \"\")\n  \
    \  valid_date = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date\
    \ = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date = (date !=\
    \ \"\")\n    valid_date = (date != \"\")\n    valid_date = (date != \"\")\n  \
    \  valid_date = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date\
    \ = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date = (date !=\
    \ \"\")\n    valid_date = (date != \"\")\n    valid_date = (date != \"\")\n  \
    \  valid_date = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date\
    \ = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date = (date !=\
    \ \"\")\n    valid_date = (date != \"\")\n    valid_date = (date != \"\")\n  \
    \  valid_date = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date\
    \ = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date = (date !=\
    \ \"\")\n    valid_date = (date != \"\")\n    valid_date = (date != \"\")\n  \
    \  valid_date = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date\
    \ = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date = (date !=\
    \ \"\")\n    valid_date = (date != \"\")\n    valid_date = (date != \"\")\n  \
    \  valid_date = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date\
    \ = (date != ", "    \n    if date == \"\"\n        error(\"The date string should\
    \ not be empty\")\n    end\n    \n    date_split = split(date, \"-\")\n    \n\
    \    if length(date_split) != 3\n        error(\"The date string should be in\
    \ the format: mm-dd-yyyy\")\n    end\n    \n    month = date_split[1]\n    day\
    \ = date_split[2]\n    year = date_split[3]\n    \n    if month < 1 || month >\
    \ 12\n        error(\"The months should not be less than 1 or higher than 12\"\
    )\n    end\n    \n    if day < 1 || day > 31\n        error(\"The number of days\
    \ is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the\
    \ number of days is not less than 1 or higher than 30 days for months 4,6,9,11.\
    \ And, the number of days is not less than 1 or higher than 29 for the month 2\"\
    )\n    end\n    \n    if month == 1 && day == 1\n        error(\"The date should\
    \ be in the format: mm-dd-yyyy\")\n    end\n    \n    true\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that checks if a given date string is a valid date\
    \ or not.\nThe date string should be in the format: mm-dd-yyyy", "    \n    valid_date_res\
    \ = false\n    \n    if date == \"\"\n        valid_date_res = false\n    else\n\
    \        valid_date_res = true\n        \n        days_arr = split(date, \"-\"\
    )\n        \n        if days_arr[1] == \"01\"\n            days_arr[1] = 29\n\
    \        elseif days_arr[1] == \"02\"\n            days_arr[1] = 30\n        elseif\
    \ days_arr[1] == \"03\"\n            days_arr[1] = 31\n        elseif days_arr[1]\
    \ == \"04\"\n            days_arr[1] = 31\n        elseif days_arr[1] == \"05\"\
    \n            days_arr[1] = 30\n        elseif days_arr[1] == \"06\"\n       \
    \     days_arr[1] = 31\n        elseif days_arr[1] == \"07\"\n            days_arr[1]\
    \ = 31\n        elseif days_arr[1] == \"08\"\n            days_arr[1] = 31\n \
    \       elseif days_arr[1] == \"09\"\n            days_arr[1] = 31\n        elseif\
    \ days_arr[1] == \"10\"\n            days_arr[1] = 30\n        elseif days_arr[1]\
    \ == \"11\"\n            days_arr[1] = 31\n        elseif days_arr[1] == \"12\"\
    \n            days_arr[1] = 31\n        elseif days_arr[1] == \"13\"\n       \
    \     days_arr[1] = 31\n        elseif days_arr[1] == \"14\"\n            days_arr[1]\
    \ = 31\n        elseif days_arr[1] == \"15\"\n            days_arr[1] = 31\n \
    \       elseif days_arr[1] == \"16\"\n            days_arr[1] = 31\n        elseif\
    \ days_arr[1] == \"17\"\n            days_arr[1] = 31\n        elseif days_arr[1]\
    \ == \"18\"\n            days_arr[1] = 31\n        elseif days_arr[1] == \"19\"\
    \n            days_arr[1] = 31\n        elseif days_arr[1] == \"20\"\n       \
    \     days_arr[1] = 31\n        elseif days_arr[1] == \"21\"\n            days_arr[1]\
    \ = 31\n        elseif days_arr[1] == \"22\"\n            days_arr[1] = 31\n \
    \       elseif days_arr[1] == \"23\"\n            days_arr[1] = 31\n        elseif\
    \ days_arr[1] == \"24\"\n            days_arr[1] = 31\n        elseif days_arr[1]\
    \ == \"25\"\n            days_arr[1] = 31\n        elseif days_arr[1] == \"26\"\
    \n            days_arr[1] = 31\n        elseif days_arr[1] == \"", "    \n   \
    \ valid_date_regex = Regex(\"^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-((19|20)\\\
    d\\d)$\")\n    \n    if valid_date_regex.match(date) == nil then\n        return\
    \ false\n    end", "    \n    valid_date::Bool = false \n    \n    if date ==\
    \ \"\" \n        valid_date = false \n    else \n        valid_date = true \n\
    \    \n    if valid_date == false \n        valid_date = false \n    else \n \
    \       valid_date = true \n    \n    if valid_date == false \n        valid_date\
    \ = false \n    else \n        valid_date = true \n    \n    if valid_date ==\
    \ false \n        valid_date = false \n    else \n        valid_date = true \n\
    \    \n    if valid_date == false \n        valid_date = false \n    else \n \
    \       valid_date = true \n    \n    if valid_date == false \n        valid_date\
    \ = false \n    else \n        valid_date = true \n    \n    if valid_date ==\
    \ false \n        valid_date = false \n    else \n        valid_date = true \n\
    \    \n    if valid_date == false \n        valid_date = false \n    else \n \
    \       valid_date = true \n    \n    if valid_date == false \n        valid_date\
    \ = false \n    else \n        valid_date = true \n    \n    if valid_date ==\
    \ false \n        valid_date = false \n    else \n        valid_date = true \n\
    \    \n    if valid_date == false \n        valid_date = false \n    else \n \
    \       valid_date = true \n    \n    if valid_date == false \n        valid_date\
    \ = false \n    else \n        valid_date = true \n    \n    if valid_date ==\
    \ false \n        valid_date = false \n    else \n        valid_date = true \n\
    \    \n    if valid_date == false \n        valid_date = false \n    else \n \
    \       valid_date = true \n    \n    if valid_date == false \n        valid_date\
    \ = false \n    else \n        valid_date = true \n    \n    if valid_date ==\
    \ false \n        valid_date = false \n    else \n        valid_date = true \n\
    \    \n    if valid_date == false \n        valid_date = false \n    else \n \
    \       valid_date = true \n    \n    if valid_date == false \n        valid_date\
    \ = false \n    else \n        valid_date = true \n    \n    if valid_date ==\
    \ false \n        valid_date = false \n    else \n        valid_date = true \n\
    \    \n    if valid_date == false \n        valid_date = false \n    else \n \
    \       valid_date = true \n    \n    if valid_date == false \n        valid_date\
    \ = false \n    else \n        valid_date = true \n    \n    if valid_date ==\
    \ false \n        valid_date = false \n    else \n        valid_date = true \n\
    \    \n    if valid_date == false \n        valid_date = false \n    else \n \
    \       valid_date = true \n    \n    if valid_date == false \n        valid_date\
    \ = false \n    else \n        valid_date = true ", "    \n    valid_date::Bool\
    \ = false \n    \n    if date == \"\" \n        valid_date = false \n    else\
    \ \n        valid_date = true \n        \n        if length(date) == 7 \n    \
    \        valid_date = true \n        else \n            valid_date = false \n\
    \            \n            if length(date) == 8 \n                valid_date =\
    \ true \n            else \n                valid_date = false \n            \
    \    \n                if length(date) == 9 \n                    valid_date =\
    \ true \n                else \n                    valid_date = false \n    \
    \                \n                    if length(date) == 10 \n              \
    \          valid_date = true \n                    else \n                   \
    \     valid_date = false \n                        \n                        if\
    \ length(date) == 11 \n                            valid_date = true \n      \
    \                  else \n                            valid_date = false \n  \
    \                          \n                            if length(date) == 12\
    \ \n                                valid_date = true \n                     \
    \       else \n                                valid_date = false \n         \
    \                       \n                                if length(date) == 13\
    \ \n                                    valid_date = true \n                 \
    \               else \n                                    valid_date = false\
    \ \n                                    \n                                   \
    \ if length(date) == 14 \n                                        valid_date =\
    \ true \n                                    else \n                         \
    \               valid_date = false \n                                        \n\
    \                                        if length(date) == 15 \n            \
    \                                valid_date = true \n                        \
    \                else \n                                            valid_date\
    \ = false \n                                            \n                   \
    \                         if length(date) == 16 \n                           \
    \                     valid_date = true \n                                   \
    \         else \n                                                valid_date =\
    \ false \n                                                \n                 \
    \                               if length(date) == 17 \n                     \
    \                               valid_date = true \n                         \
    \                       else \n                                              \
    \      valid_date = false \n                                                 \
    \   \n                                                    if length(date) == 18\
    \ \n                                                        valid_date = true\
    \ \n                                                    else \n              \
    \                                          valid_date = false \n             \
    \                                           \n                               \
    \                         if length(date) == 19 \n                           \
    \                                 valid_date = true \n                       \
    \                                 else \n                                    \
    \                        valid_date = false \n                               \
    \                             \n                                             \
    \               if length(date) == 20 \n                                     \
    \                           valid_date = true \n                             \
    \                               else \n                                      \
    \                          valid_date = false \n                             \
    \                                   \n                                       \
    \                         if length(date) == 21 \n                           \
    \                                         valid_date = true \n               \
    \                                                 else \n                    \
    \                                                valid_date = false \n       \
    \                                                             \n             \
    \                                                       if length(date) == 22\
    \ \n                                                                        valid_date\
    \ = true \n                                                                  \
    \  else \n                                                                   \
    \     valid_date = false \n                                                  \
    \                      \n                                                    \
    \    if length(date) == 23 \n                                                \
    \            valid_date = true \n                                            \
    \            else \n                                                         \
    \   valid_date = false \n                                                    \
    \        \n                                                            if length(date)\
    \ == 24 \n                                                                valid_date\
    \ = true \n                                                            else \n\
    \                                                                valid_date =\
    \ false \n                                                                \n \
    \                                                               if length(date)\
    \ == 25 \n                                                                   \
    \ valid_date = true \n                                                       \
    \         else \n                                                            \
    \        valid_date = false \n                                               \
    \                     \n                                                     \
    \               if length(date) == 26 \n                                     \
    \                                   valid_date = true \n                     \
    \                                               else \n                      \
    \                                                  valid_date = false \n     \
    \                                                                   \n       \
    \                                                 if length(date) == 27 \n   \
    \                                                         valid_date = true \n\
    \                                                        else \n             \
    \                                               valid_date = false \n        \
    \                                                    \n                      \
    \                                      if length(date) == 28 \n              \
    \                                                  valid_date = true \n", "  \
    \  \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n   \
    \     return false\n    end\n    \n    valid_date_str = Date.parse(date)\n   \
    \ if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = ", "    \n    date_split = split(date, \"-\")\n    \n    if date_split[1]\
    \ < 1 || date_split[1] > 12\n        return false\n    end\n    \n    if date_split[2]\
    \ < 1 || date_split[2] > 31\n        return false\n    end\n    \n    if date_split[1]\
    \ == 2 && date_split[2] > 29\n        return false\n    end\n    \n    if date_split[1]\
    \ == 2 && date_split[2] < 1\n        return false\n    end\n    \n    if date_split[1]\
    \ == 3 && date_split[2] > 30\n        return false\n    end\n    \n    if date_split[1]\
    \ == 3 && date_split[2] < 1\n        return false\n    end\n    \n    if date_split[1]\
    \ == 4 && date_split[2] > 29\n        return false\n    end\n    \n    if date_split[1]\
    \ == 4 && date_split[2] < 1\n        return false\n    end\n    \n    if date_split[1]\
    \ == 5 && date_split[2] > 30\n        return false\n    end\n    \n    if date_split[1]\
    \ == 5 && date_split[2] < 1\n        return false\n    end\n    \n    if date_split[1]\
    \ == 7 && date_split[2] > 31\n        return false\n    end\n    \n    if date_split[1]\
    \ == 7 && date_split[2] < 1\n        return false\n    end\n    \n    if date_split[1]\
    \ == 8 && date_split[2] > 31\n        return false\n    end\n    \n    if date_split[1]\
    \ == 8 && date_split[2] < 1\n        return false\n    end\n    \n    if date_split[1]\
    \ == 10 && date_split[2] > 30\n        return false\n    end\n    \n    if date_split[1]\
    \ == 10 && date_split[2] < 1\n        return false\n    end\n    \n    if date_split[1]\
    \ == 12 && date_split[2] > 31\n        return false\n    end\n    \n    if date_split[1]\
    \ == 12 && date_split[2] < 1\n        return false\n    end\n    \n    if date_split[1]\
    \ == 1 && date_split[2] > 31\n        return false\n    end\n    \n    if date_split[1]\
    \ == 1 && date_split[2] < 1\n        return false\n    end\n    \n    return true\n\
    end\n</cell>\n<code language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n\
    <code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\"\
    )\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell", "    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = ", "    \n    if date\
    \ == \"\"\n        error(\"The date string should not be empty\")\n    end", " \
    \   \n    valid_date_regex = Regex(\"^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-((19|20)[0-9]{2})$\"\
    )\n    \n    if valid_date_regex.match(date) == nil \n        return false \n\
    \    else \n        return true \n    end \nend \n</cell>\n<text>\nExercise 2\n\
    Write a function that checks if a given date string is a valid date or not.\n\
    The date string should be in the format: mm-dd-yyyy", "    \n    valid_date::Bool\
    \ = false \n    \n    if date == \"\" \n        valid_date = false \n    else\
    \ \n        valid_date = true \n        \n        if length(date) != 8 \n    \
    \        valid_date = false \n        else \n            valid_date = true \n\
    \            \n            if month(date) < 1 || month(date) > 12 \n         \
    \       valid_date = false \n            else \n                valid_date = true\
    \ \n                \n                if day(date) < 1 || day(date) > 31 \n  \
    \                  valid_date = false \n                else \n              \
    \      valid_date = true \n                    \n                    if month(date)\
    \ == 2 \n                        valid_date = true \n                    else\
    \ \n                        valid_date = false \n                        \n  \
    \                      if day(date) == 29 \n                            valid_date\
    \ = true \n                        else \n                            valid_date\
    \ = false \n                            \n                            if day(date)\
    \ == 30 \n                                valid_date = true \n               \
    \             else \n                                valid_date = false \n   \
    \                             \n                                if day(date) ==\
    \ 31 \n                                    valid_date = true \n              \
    \                  else \n                                    valid_date = false\
    \ \n                                    \n                                   \
    \ if day(date) > 31 \n                                        valid_date = false\
    \ \n                                    else \n                              \
    \          valid_date = true \n                                        \n    return\
    \ valid_date\nend\n</cell>\n<code language=julia-1.5>\nvalid_date(\"03-11-2000\"\
    )\n</cell>\n<code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06-04-2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    06/04/2020\")\n</cell>\n<text>\nExercise 2\nWrite a function that checks if a\
    \ given date is valid or not.", "    \n    valid_date::Bool = false \n    \n \
    \   if date == \"\"\n        valid_date = true\n    else \n        \n        day::Int\
    \ = days(date)\n        \n        if day < 1 or day > 31\n            valid_date\
    \ = false\n        else if day < 1 or day > 30\n            valid_date = false\n\
    \        else if day < 1 or day > 29\n            valid_date = false\n       \
    \ else if day < 1 or day > 28\n            valid_date = false\n        else if\
    \ day < 1 or day > 31\n            valid_date = false\n        else if day < 1\
    \ or day > 30\n            valid_date = false\n        else if day < 1 or day\
    \ > 29\n            valid_date = false\n        else if day < 1 or day > 28\n\
    \            valid_date = false\n        else if day < 1 or day > 31\n       \
    \     valid_date = false\n        else if day < 1 or day > 30\n            valid_date\
    \ = false\n        else if day < 1 or day > 29\n            valid_date = false\n\
    \        else if day < 1 or day > 28\n            valid_date = false\n       \
    \ else if day < 1 or day > 31\n            valid_date = false\n        else if\
    \ day < 1 or day > 30\n            valid_date = false\n        else if day < 1\
    \ or day > 29\n            valid_date = false\n        else if day < 1 or day\
    \ > 28\n            valid_date = false\n        else if day < 1 or day > 31\n\
    \            valid_date = false\n        else if day < 1 or day > 30\n       \
    \     valid_date = false\n        else if day < 1 or day > 29\n            valid_date\
    \ = false\n        else if day < 1 or day > 28\n            valid_date = false\n\
    \        else if day < 1 or day > 31\n            valid_date = false\n       \
    \ else if day < 1 or day > 30\n            valid_date = false\n        else if\
    \ day < 1 or day > 29\n            valid_date = false\n        else if day < 1\
    \ or day > 28\n            valid_date = false\n        else if day < 1 or day\
    \ > 31\n            valid_date = false\n        else if day < 1 or day > 30\n\
    \            valid_date = false\n        else if day < 1 or day > 29\n       \
    \     valid_date = false\n        else if day < 1 or day > 28\n            valid_date\
    \ = false\n        else if day < 1 or day > 31\n            valid_date = false\n\
    \        else if day < 1 or day > 30\n            valid_date = false\n       \
    \ else if day < 1 or day > 29\n            valid_date = false\n        else if\
    \ day < 1 or day > 28\n            valid_date = false\n        else if day < 1\
    \ or day > 31\n            valid_date = false\n        else if day < 1 or day\
    \ > 30\n            valid_date = false", "    \n    if date == \"\"\n        return\
    \ false\n    \n    date_parts = split(date, \"-\")\n    \n    if length(date_parts)\
    \ != 3\n        return false\n    \n    days_not_less_than_1_or_higher_than_31\
    \ = date_parts[1] < 1 or date_parts[1] > 31\n    days_not_less_than_1_or_higher_than_30\
    \ = date_parts[2] < 1 or date_parts[2] > 30\n    days_not_less_than_1_or_higher_than_29\
    \ = date_parts[2] < 1 or date_parts[2] > 29\n    months_not_less_than_1_or_higher_than_12\
    \ = date_parts[1] < 1 or date_parts[1] > 12\n    \n    if days_not_less_than_1_or_higher_than_31\
    \ \n        or days_not_less_than_1_or_higher_than_30\n        or days_not_less_than_1_or_higher_than_29\n\
    \        or months_not_less_than_1_or_higher_than_12\n    \n        return false\n\
    \    \n    date_parts = split(date, \"-\")\n    \n    if date_parts[1] < 1 or\
    \ date_parts[1] > 12\n        or date_parts[2] < 1 or date_parts[2] > 31\n   \
    \     or date_parts[2] < 1 or date_parts[2] > 30\n        or date_parts[2] < 1\
    \ or date_parts[2] > 29\n        or date_parts[2] < 1 or date_parts[2] > 12\n\
    \    \n        return false\n    \n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"04-0-2040\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a date string as an argument and returns the number\
    \ of days in the month.", "    \n    valid_date = (date != \"\")\n    valid_date\
    \ = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date = (date !=\
    \ \"\")\n    valid_date = (date != \"\")\n    valid_date = (date != \"\")\n  \
    \  valid_date = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date\
    \ = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date = (date !=\
    \ \"\")\n    valid_date = (date != \"\")\n    valid_date = (date != \"\")\n  \
    \  valid_date = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date\
    \ = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date = (date !=\
    \ \"\")\n    valid_date = (date != \"\")\n    valid_date = (date != \"\")\n  \
    \  valid_date = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date\
    \ = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date = (date !=\
    \ \"\")\n    valid_date = (date != \"\")\n    valid_date = (date != \"\")\n  \
    \  valid_date = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date\
    \ = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date = (date !=\
    \ \"\")\n    valid_date = (date != \"\")\n    valid_date = (date != \"\")\n  \
    \  valid_date = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date\
    \ = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date = (date !=\
    \ \"\")\n    valid_date = (date != \"\")\n    valid_date = (date != \"\")\n  \
    \  valid_date = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date\
    \ = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date = (date !=\
    \ \"\")\n    valid_date = (date != \"\")\n    valid_date = (date != \"\")\n  \
    \  valid_date = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date\
    \ = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date = (date !=\
    \ \"\")\n    valid_date = (date != \"\")\n    valid_date = (date != \"\")\n  \
    \  valid_date = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date\
    \ = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date = (date !=\
    \ \"\")\n    valid_date = (date != \"\")\n    valid_date = (date != \"\")\n  \
    \  valid_date = (date != \"\")\n    valid_date = (date != ", "    valid_date_regex\
    \ = Regex(\"^((0?[1-9]|[12][0-9]|3[01])-(0?[1-9]|1[012])-((19|20)\\d\\d))|((0?[1-9]|[12][0-9]|30)-(0?[1-9]|1[012])-((19|20)\\\
    d\\d))|((0?[1-9]|[12][0-9]|3[01])-(0?[1-9]|[12][0-9]|3[01])-((19|20)\\d\\d))$\"\
    )\n    valid_date_match = valid_date_regex.match(date)\n    if valid_date_match\
    \ != nil\n        valid_date_match = valid_date_match[1]\n        valid_date_match\
    \ = valid_date_match[1..3]\n        valid_date_match = valid_date_match[1..3]\n\
    \        valid_date_match = valid_date_match[1..3]\n        valid_date_match =\
    \ valid_date_match[1..3]\n        valid_date_match = valid_date_match[1..3]\n\
    \        valid_date_match = valid_date_match[1..3]\n        valid_date_match =\
    \ valid_date_match[1..3]\n        valid_date_match = valid_date_match[1..3]\n\
    \        valid_date_match = valid_date_match[1..3]\n        valid_date_match =\
    \ valid_date_match[1..3]\n        valid_date_match = valid_date_match[1..3]\n\
    \        valid_date_match = valid_date_match[1..3]\n        valid_date_match =\
    \ valid_date_match[1..3]\n        valid_date_match = valid_date_match[1..3]\n\
    \        valid_date_match = valid_date_match[1..3]\n        valid_date_match =\
    \ valid_date_match[1..3]\n        valid_date_match = valid_date_match[1..3]\n\
    \        valid_date_match = valid_date_match[1..3]\n        valid_date_match =\
    \ valid_date_match[1..3]\n        valid_date_match = valid_date_match[1..3]\n\
    \        valid_date_match = valid_date_match[1..3]\n        valid_date_match =\
    \ valid_date_match[1..3]\n        valid_date_match = valid_date_match[1..3]\n\
    \        valid_date_match = valid_date_match[1..3]\n        valid_date_match =\
    \ valid_date_match[1..3]\n        valid_date_match = valid_date_match[1..3]\n\
    \        valid_date_match = valid_date_match[1..3]\n        valid_date_match =\
    \ valid_date_match[1..3]\n        valid_date_match = valid_date_match[1..3]\n\
    \        valid_date_match = valid_date_match[1..3]\n        valid_date_match =\
    \ valid_date_match[1..3]\n        valid_date_match = valid_date_match[1..3]\n\
    \        valid_date_match = valid_date_match[1..3]\n        valid_date_match =\
    \ valid_date_match", "    valid_date_regex = r\"^((0?[1-9]|[12]\\d|3[01])[\\/](0?[1-9]|1[012])[\\\
    /]\\d{4})$\"\n    valid_date_match = match(valid_date_regex, date)\n    if valid_date_match\
    \ != nothing\n        valid_date_match = valid_date_match[1]\n        valid_date_match\
    \ = valid_date_match[1..-1]\n        valid_date_match = valid_date_match == \"\
    01\"\n        valid_date_match = valid_date_match == \"02\"\n        valid_date_match\
    \ = valid_date_match == \"03\"\n        valid_date_match = valid_date_match ==\
    \ \"04\"\n        valid_date_match = valid_date_match == \"05\"\n        valid_date_match\
    \ = valid_date_match == \"06\"\n        valid_date_match = valid_date_match ==\
    \ \"07\"\n        valid_date_match = valid_date_match == \"08\"\n        valid_date_match\
    \ = valid_date_match == \"09\"\n        valid_date_match = valid_date_match ==\
    \ \"10\"\n        valid_date_match = valid_date_match == \"11\"\n        valid_date_match\
    \ = valid_date_match == \"12\"\n        valid_date_match = valid_date_match ==\
    \ \"13\"\n        valid_date_match = valid_date_match == \"14\"\n        valid_date_match\
    \ = valid_date_match == \"15\"\n        valid_date_match = valid_date_match ==\
    \ \"16\"\n        valid_date_match = valid_date_match == \"17\"\n        valid_date_match\
    \ = valid_date_match == \"18\"\n        valid_date_match = valid_date_match ==\
    \ \"19\"\n        valid_date_match = valid_date_match == \"20\"\n        valid_date_match\
    \ = valid_date_match == \"21\"\n        valid_date_match = valid_date_match ==\
    \ \"22\"\n        valid_date_match = valid_date_match == \"23\"\n        valid_date_match\
    \ = valid_date_match == \"24\"\n        valid_date_match = valid_date_match ==\
    \ \"25\"\n        valid_date_match = valid_date_match == \"26\"\n        valid_date_match\
    \ = valid_date_match == \"27\"\n        valid_date_match = valid_date_match ==\
    \ \"28\"\n        valid_date_match = valid_date_match == \"29\"\n        valid_date_match\
    \ = valid_date_match == \"30\"\n        valid_date_match = valid_date_match ==\
    \ \"31\"\n        valid_date_match = valid_date_match == \"32\"\n        valid_date_match\
    \ = valid_date_match == \"33\"\n        valid_date_match = valid_date_match ==\
    \ \"34\"\n        valid_date_match = valid_date_match == \"35\"\n        valid_date_match\
    \ = valid_date_match == \"36\"\n        valid_date_match = valid_date_match ==\
    \ \"37\"\n        valid_date_match = valid_date_match == \"38\"\n        valid_date_match\
    \ = valid_date_match == \"39\"\n        valid_date_match = valid_date_match ==\
    \ \"40\"\n        valid_date_match = ", "    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = ", "    \n    date_split = split(date, '-')\n\
    \    \n    if date_split[1] == '01'\n        date_split[2] = '01'\n    elseif\
    \ date_split[1] == '03'\n        date_split[2] = '01'\n    elseif date_split[1]\
    \ == '05'\n        date_split[2] = '01'\n    elseif date_split[1] == '07'\n  \
    \      date_split[2] = '01'\n    elseif date_split[1] == '08'\n        date_split[2]\
    \ = '01'\n    elseif date_split[1] == '10'\n        date_split[2] = '01'\n   \
    \ elseif date_split[1] == '12'\n        date_split[2] = '01'\n    elseif date_split[1]\
    \ == '04'\n        date_split[2] = '01'\n    elseif date_split[1] == '06'\n  \
    \      date_split[2] = '01'\n    elseif date_split[1] == '09'\n        date_split[2]\
    \ = '01'\n    elseif date_split[1] == '11'\n        date_split[2] = '01'\n   \
    \ elseif date_split[1] == '01'\n        date_split[2] = '01'\n    else\n     \
    \   date_split[2] = '01'\n    end\n    \n    if date_split[2] < '01'\n       \
    \ date_split[2] = '01'\n    elseif date_split[2] > '12'\n        date_split[2]\
    \ = '12'\n    end\n    \n    if date_split[2] < '01'\n        date_split[2] =\
    \ '01'\n    elseif date_split[2] > '29'\n        date_split[2] = '29'\n    end\n\
    \    \n    if date_split[1] < '01'\n        date_split[1] = '01'\n    elseif date_split[1]\
    \ > '12'\n        date_split[1] = '12'\n    end\n    \n    if date_split[1] <\
    \ '01'\n        date_split[1] = '01'\n    elseif date_split[1] > '12'\n      \
    \  date_split[1] = '12'\n    end\n    \n    if date_split[1] < '01'\n        date_split[1]\
    \ = '01'\n    elseif date_split[1] > '12'\n        date_split[1] = '12'\n    end\n\
    \    \n    if date_split[1] < '01'\n        date_split[1] = '01'\n    elseif date_split[1]\
    \ > '12'\n        date_split[1] = '12'\n    end\n    \n    if date_split[1] <\
    \ '01'\n        date_split[1] = '01'\n    elseif date_split[1] > '12'\n      \
    \  date_split[1] = '12'\n    end\n    \n    if date_split[1] < '01'\n        ",
  "    \n    valid_date_regex = Regex(\"^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-((19|20)[0-9]{2})$\"\
    )\n    \n    if valid_date_regex.match(date) == nil \n        return false\n \
    \   end", "    \n    valid_date_res = validate_date(date)\n    if valid_date_res\n\
    \        return true\n    else\n        return false\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that validates a given date string and returns True\
    \ if the date is valid otherwise False.\nThe date is valid if all of the following\
    \ rules are satisfied:\n1. The date string is not empty.\n2. The number of days\
    \ is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the\
    \ number of days is not less than 1 or higher than 30 days for months 4,6,9,11.\
    \ And, the number of days is not less than 1 or higher than 29 for the month 2.\n\
    3. The months should not be less than 1 or higher than 12.\n4. The date should\
    \ be in the format: mm-dd-yyyy", "    \n    valid_date_regex = Regex(\"^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-((19|20)\\\
    d\\d)$\")\n    \n    if valid_date_regex.match(date) == nil \n        return false\n\
    \    end", "    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(valid_date_str)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(valid_date_str)\n    if valid_date_str == nil\n        return false\n\
    \    end\n    valid_date_str = Date.parse(valid_date_str)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    valid_date_str = Date.parse(valid_date_str)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(valid_date_str)\n    if valid_date_str == nil\n        return false\n\
    \    end\n    valid_date_str = Date.parse(valid_date_str)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    valid_date_str = Date.parse(valid_date_str)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(valid_date_str)\n    if valid_date_str == nil\n        return false\n\
    \    end\n    valid_date_str = Date.parse(valid_date_str)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    valid_date_str = Date.parse(valid_date_str)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(valid_date_str)\n    if valid_date_str == nil\n        return false\n\
    \    end\n    valid_date_str = Date.parse(valid_date_str)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    valid_date_str = Date.parse(valid_date_str)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(valid_date_str)\n    if valid_date_str == nil\n        return false\n\
    \    end\n    valid_date_str = Date.parse(valid_date_str)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    valid_date_str = Date.parse(valid_date_str)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(valid_date_str)\n    if valid_date_str == nil\n        return false\n\
    \    end\n    valid_date_str = Date.parse(valid_date_str)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    valid_date_str = Date.parse(valid_date_str)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(valid_date_str)\n    if valid_date_str == nil\n        return false\n\
    \    end\n    valid_date_str = Date.parse(valid_date_str)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    valid_date_str = Date.parse(valid_date_str)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(valid_date_str)\n    if valid_date_str == nil\n        return false\n",
  "    \n    valid_date_regex = Regex(\"^((0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-((19|20)[0-9]{2}))$\"\
    )\n    valid_date_match = valid_date_regex.match(date)\n    \n    if valid_date_match\
    \ != nil\n        \n        days_match = valid_date_match[1]\n        days_match\
    \ = days_match[1..days_match.length]\n        \n        days_match = days_match[1..days_match.length]\n\
    \        \n        days_match = days_match[1..days_match.length]\n        \n \
    \       days_match = days_match[1..days_match.length]\n        \n        days_match\
    \ = days_match[1..days_match.length]\n        \n        days_match = days_match[1..days_match.length]\n\
    \        \n        days_match = days_match[1..days_match.length]\n        \n \
    \       days_match = days_match[1..days_match.length]\n        \n        days_match\
    \ = days_match[1..days_match.length]\n        \n        days_match = days_match[1..days_match.length]\n\
    \        \n        days_match = days_match[1..days_match.length]\n        \n \
    \       days_match = days_match[1..days_match.length]\n        \n        days_match\
    \ = days_match[1..days_match.length]\n        \n        days_match = days_match[1..days_match.length]\n\
    \        \n        days_match = days_match[1..days_match.length]\n        \n \
    \       days_match = days_match[1..days_match.length]\n        \n        days_match\
    \ = days_match[1..days_match.length]\n        \n        days_match = days_match[1..days_match.length]\n\
    \        \n        days_match = days_match[1..days_match.length]\n        \n \
    \       days_match = days_match[1..days_match.length]\n        \n        days_match\
    \ = days_match[1..days_match.length]\n        \n        days_match = days_match[1..days_match.length]\n\
    \        \n        days_match = days_match[1..days_match.length]\n        \n \
    \       days_match = days_match[1..days_match.length]\n        \n        days_match\
    \ = days_match[1..days_match.", "    \n    valid_date::Bool = false \n    \n \
    \   if date == \"\" || date == \"null\" || date == \"Null\" || date == \"null\"\
    \ \n        || date == \"Null\" || date == \"null\" || date == \"Null\" || date\
    \ == \"null\" \n        || date == \"Null\" || date == \"null\" || date == \"\
    Null\" || date == \"null\" \n        || date == \"Null\" || date == \"null\" ||\
    \ date == \"Null\" || date == \"null\" \n        || date == \"Null\" || date ==\
    \ \"null\" || date == \"Null\" || date == \"null\" \n        || date == \"Null\"\
    \ || date == \"null\" || date == \"Null\" || date == \"null\" \n        || date\
    \ == \"Null\" || date == \"null\" || date == \"Null\" || date == \"null\" \n \
    \       || date == \"Null\" || date == \"null\" || date == \"Null\" || date ==\
    \ \"null\" \n        || date == \"Null\" || date == \"null\" || date == \"Null\"\
    \ || date == \"null\" \n        || date == \"Null\" || date == \"null\" || date\
    \ == \"Null\" || date == \"null\" \n        || date == \"Null\" || date == \"\
    null\" || date == \"Null\" || date == \"null\" \n        || date == \"Null\" ||\
    \ date == \"null\" || date == \"Null\" || date == \"null\" \n        || date ==\
    \ \"Null\" || date == \"null\" || date == \"Null\" || date == \"null\" \n    \
    \    || date == \"Null\" || date == \"null\" || date == \"Null\" || date == \"\
    null\" \n        || date == \"Null\" || date == \"null\" || date == \"Null\" ||\
    \ date == \"null\" \n        || date == \"Null\" || date == \"null\" || date ==\
    \ \"Null\" || date == \"null\" \n        || date == \"Null\" || date == \"null\"\
    \ || date == \"Null\" || date == \"null\" \n        || date == \"Null\" || date\
    \ == \"null\" || date == \"Null\" || date == \"null\" \n        || date == \"\
    Null\" || date == \"null\" || date == \"Null\" || date == \"null\" \n        ||\
    \ date == \"Null\" || date == \"null\" || date == \"Null\" || date == \"null\"\
    \ \n        || date == \"Null\" || date == \"null\" || date == \"Null\" || date\
    \ == \"null\" \n        || date == \"Null\" || date == \"null\" || date == \"\
    Null\" || date == \"null\" \n        || date == \"Null\" || date == \"null\" ||\
    \ date == \"Null\" || date == \"null\" \n        || date == \"Null\" || date ==\
    \ \"null\" || date == \"Null\" || date == \"null\" \n        || date == \"Null\"\
    \ || date == \"null\" || date == \"Null\" || date == \"null\" \n        || date\
    \ == \"Null\" || date == \"null\" || date == \"Null\" || date == \"null\" \n \
    \       || date == \"Null\" || date ", "    valid_date_regex = Regex(\"^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-[0-9]{4}$\"\
    )\n    valid_date_match = valid_date_regex.match(date)\n    if valid_date_match\
    \ != nil\n        return true\n    else\n        return false\n    end\nend\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your answer. I tried your code,\
    \ but I got this error `julia> valid_date(\"03-11-2000\")\nERROR: MethodError:\
    \ no method matching valid_date(::String)`\n<|/ c |>\n<| c |>\nI added the function\
    \ definition to the answer. Try it now.\n<|/ c |>\n<| c |>\nThanks for your answer.\
    \ I tried your code, but I got this error `julia> valid_date(\"03-11-2000\")\n\
    ERROR: MethodError: no method matching valid_date(::String)`\n<|/ c |>\n<| c |>\n\
    I added the function definition to the answer. Try it now.\n<|/ c |>\n<| c |>\n\
    Thanks for your answer. I tried your code, but I got this error `julia> valid_date(\"\
    03-11-2000\")\nERROR: MethodError: no method matching valid_date(::String)`\n\
    <|/ c |>\n<| a tags=julia,date |>\nI wrote a package to handle date validation\
    \ in Julia. \nhttps://github.com/jhsu/DateValidator.jl\n<code>\nusing DateValidator",
  "    \n    valid_date::Bool = false \n    \n    if date == \"\" || date == \"null\"\
    \ || date == \"Null\" || date == \"null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null\" || date == \"Null\"\
    \ || date == \"Null\" || date == \"Null\" || date == \"Null", "    \n    valid_date_regex\
    \ = Regex(\"^(0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])[- /.](19|20)\\d\\d$\"\
    )\n    valid_date_regex.match(date)\n    \n    if valid_date_regex.match(date)\
    \ == nil\n        return false\n    end", "    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(", "    \n    date_split = split(date,\
    \ \"-\")\n    \n    months = date_split[1]\n    days = date_split[2]\n    year\
    \ = date_split[3]\n    \n    months_array = [\"01\", \"03\", \"05\", \"07\", \"\
    08\", \"10\", \"12\"]\n    days_array = [\"01\", \"03\", \"05\", \"07\", \"08\"\
    , \"10\", \"12\", \"13\", \"15\", \"17\", \"19\", \"21\", \"23\", \"25\", \"27\"\
    , \"29\"]\n    \n    months_valid = months_array.contains(months)\n    days_valid\
    \ = days_array.contains(days)\n    \n    year_valid = year.isdigit()\n    \n \
    \   date_valid = months_valid && days_valid && year_valid\n    \n    return date_valid\n\
    end\n</cell>\n<code language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n\
    <code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\"\
    )\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that checks if a number is even or odd.", "    \n\
    \    date_split = split(date, '-')\n    \n    months = date_split[1]\n    days\
    \ = date_split[2]\n    year = date_split[3]\n    \n    months_split = split(months,\
    \ '-')\n    \n    months_count = months_split[1]\n    \n    days_split = split(days,\
    \ '-')\n    \n    days_count = days_split[1]\n    \n    \n    if length(date_split)\
    \ == 4 && length(months_split) == 2 && length(days_split) == 2 && length(months_count)\
    \ == 1 && length(days_count) == 1 && length(year) == 4 && months_count != 0 &&\
    \ days_count != 0 && months_count != 0 && days_count != 0 && months_count != 0\
    \ && days_count != 0 && months_count != 0 && days_count != 0 && months_count !=\
    \ 0 && days_count != 0 && months_count != 0 && days_count != 0 && months_count\
    \ != 0 && days_count != 0 && months_count != 0 && days_count != 0 && months_count\
    \ != 0 && days_count != 0 && months_count != 0 && days_count != 0 && months_count\
    \ != 0 && days_count != 0 && months_count != 0 && days_count != 0 && months_count\
    \ != 0 && days_count != 0 && months_count != 0 && days_count != 0 && months_count\
    \ != 0 && days_count != 0 && months_count != 0 && days_count != 0 && months_count\
    \ != 0 && days_count != 0 && months_count != 0 && days_count != 0 && months_count\
    \ != 0 && days_count != 0 && months_count != 0 && days_count != 0 && months_count\
    \ != 0 && days_count != 0 && months_count != 0 && days_count != 0 && months_count\
    \ != 0 && days_count != 0 && months_count != 0 && days_count != 0 && months_count\
    \ != 0 && days_count != 0 && months_count != 0 && days_count != 0 && months_count\
    \ != 0 && days_count != 0 && months_count != 0 && days_count != 0 && months_count\
    \ != 0 && days_count != 0 && months_count != 0 && days_count != 0 && months_count\
    \ != 0 && days_count != 0 && months_count != 0 && days_count != 0 && months_count\
    \ != 0 && days_count != 0 && months_count != 0 && days_count != 0 && months_count\
    \ != 0 && days_count != 0 && months_count != 0 && days_count != 0 && months_count\
    \ != 0 && days_count != 0 && months_count != 0 && days_count != 0 && months_count\
    \ != 0 && days_count != 0 && months_count != 0 && days_count != ", "    \n   \
    \ date_split = split(date, '-')\n    \n    months = date_split[1]\n    days_str\
    \ = date_split[2]\n    \n    days_str = days_str[1:length(days_str)]\n    \n \
    \   days_int = parse(Int, days_str)\n    \n    months_str = months[1:length(months)]\n\
    \    \n    months_int = parse(Int, months_str)\n    \n    \n    \n    if length(date_split)\
    \ == 3\n        \n        if months_int > 12\n            return false\n     \
    \   elseif months_int < 1\n            return false\n        elseif days_int <\
    \ 1\n            return false\n        elseif days_int > 31\n            return\
    \ false\n        elseif days_int > 30\n            return false\n        elseif\
    \ days_int > 29\n            return false\n        else\n            return true\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nvalid_date('03-11-2000')\n\
    </cell>\n<code language=julia-1.5>\nvalid_date('15-01-2012')\n</cell>\n<code language=julia-1.5>\n\
    valid_date('04-0-2040')\n</cell>\n<code language=julia-1.5>\nvalid_date('06-04-2020')\n\
    </cell>\n<code language=julia-1.5>\nvalid_date('06/04/2020')\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that checks if a given date string is valid or not.",
  "    \n    valid_date_regex = Regex(\"^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-((19|20)\\\
    d\\d)$\")\n    valid_date_match = valid_date_regex.match(date)\n    \n    if valid_date_match\
    \ != nil\n        \n        days_regex = Regex(\"^((0?[1-9]|[12][0-9]|3[01])-(0?[1-9]|1[012])-((19|20)\\\
    d\\d))$\")\n        days_match = days_regex.match(date)\n        \n        if\
    \ days_match != nil\n            \n            months_regex = Regex(\"^(0?[1-9]|1[012])$\"\
    )\n            months_match = months_regex.match(date)\n            \n       \
    \     if months_match != nil\n                \n                year_regex = Regex(\"\
    ^((19|20)\\d\\d)$\")\n                year_match = year_regex.match(date)\n  \
    \              \n                if year_match != nil\n                    \n\
    \                    return true\n                else\n                    return\
    \ false\n                end\n            else\n                return false\n\
    \            end\n        else\n            return false\n        end\n    else\n\
    \        return false\n    end\nend\n</code>\n<|/ a tags=julia,date |>\n<| c |>\n\
    Thanks for your answer. Your code works but it is too long and complicated. I\
    \ am looking for a shorter solution.\n<|/ c |>\n<| c |>\nI added a shorter version.\
    \ Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your answer. Your code works but\
    \ it is too long and complicated. I am looking for a shorter solution.\n<|/ c\
    \ |>\n<| c |>\nI added a shorter version. Hope it helps.\n<|/ c |>\n<| a dscore=0\
    \ |>\nI wrote a short function which does exactly what you want:\n<code>", " \
    \   \n    valid_date::Bool = true \n    \n    if date == \"\" \n        valid_date\
    \ = false \n    else \n        valid_date = true \n    \n        if length(date)\
    \ == 7 \n            valid_date = true \n        else \n            valid_date\
    \ = false \n    \n            if month(date) == 1 \n                valid_date\
    \ = true \n            else \n                valid_date = false \n    \n    \
    \            if day(date) == 1 \n                    valid_date = true \n    \
    \            else \n                    valid_date = false \n    \n          \
    \          if month(date) == 4 \n                        valid_date = true \n\
    \                    else \n                        valid_date = false \n    \n\
    \                        if month(date) == 6 \n                            valid_date\
    \ = true \n                        else \n                            valid_date\
    \ = false \n    \n                            if month(date) == 9 \n         \
    \                       valid_date = true \n                            else \n\
    \                                valid_date = false \n    \n                 \
    \               if month(date) == 11 \n                                    valid_date\
    \ = true \n                                else \n                           \
    \         valid_date = false \n    \n                                    if month(date)\
    \ == 12 \n                                        valid_date = true \n       \
    \                             else \n                                        valid_date\
    \ = false \n    \n                            if month(date) == 2 \n         \
    \                       valid_date = true \n                            else \n\
    \                                valid_date = false \n    \n                 \
    \               if day(date) == 29 \n                                    valid_date\
    \ = true \n                                else \n                           \
    \         valid_date = false \n    \n                                    if day(date)\
    \ == 30 \n                                        valid_date = true \n       \
    \                             else \n                                        valid_date\
    \ = false \n    \n                                    if day(date) == 31 \n  \
    \                                      valid_date = true \n                  \
    \                  else \n                                        valid_date =\
    \ false \n    \n    return valid_date \nend\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"04-0-2040\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<text>\nExercise 2\n\
    Write a function which takes a string and returns the number of words in the string.",
  "    valid_date_regex = Regex(\"^(0?[1-9]|[12][0-9]|3[01])-(0?[1-9]|1[012])-((19|20)\\\
    d\\d)$\")\n    if valid_date_regex.match(date) == nil then\n        return false\n\
    \    end\n    \n    days_regex = Regex(\"^(0?[1-9]|[12][0-9]|3[01])$\")\n    if\
    \ days_regex.match(date) == nil then\n        return false\n    end", "    \n\
    \    valid_date_str = date\n    valid_date_str = valid_date_str[valid_date_str!=\"\
    \"]\n    valid_date_str = valid_date_str[valid_date_str!=\"-\"]\n    valid_date_str\
    \ = valid_date_str[valid_date_str!=\".\"]\n    valid_date_str = valid_date_str[valid_date_str!=\"\
    :\"]\n    valid_date_str = valid_date_str[valid_date_str!=\"-\"]\n    valid_date_str\
    \ = valid_date_str[valid_date_str!=\":\"]\n    valid_date_str = valid_date_str[valid_date_str!=\"\
    .\"]\n    valid_date_str = valid_date_str[valid_date_str!=\"-\"]\n    valid_date_str\
    \ = valid_date_str[valid_date_str!=\":\"]\n    valid_date_str = valid_date_str[valid_date_str!=\"\
    .\"]\n    valid_date_str = valid_date_str[valid_date_str!=\"-\"]\n    valid_date_str\
    \ = valid_date_str[valid_date_str!=\":\"]\n    valid_date_str = valid_date_str[valid_date_str!=\"\
    .\"]\n    valid_date_str = valid_date_str[valid_date_str!=\"-\"]\n    valid_date_str\
    \ = valid_date_str[valid_date_str!=\":\"]\n    valid_date_str = valid_date_str[valid_date_str!=\"\
    .\"]\n    valid_date_str = valid_date_str[valid_date_str!=\"-\"]\n    valid_date_str\
    \ = valid_date_str[valid_date_str!=\":\"]\n    valid_date_str = valid_date_str[valid_date_str!=\"\
    .\"]\n    valid_date_str = valid_date_str[valid_date_str!=\"-\"]\n    valid_date_str\
    \ = valid_date_str[valid_date_str!=\":\"]\n    valid_date_str = valid_date_str[valid_date_str!=\"\
    .\"]\n    valid_date_str = valid_date_str[valid_date_str!=\"-\"]\n    valid_date_str\
    \ = valid_date_str[valid_date_str!=\":\"]\n    valid_date_str = valid_date_str[valid_date_str!=\"\
    .\"]\n    valid_date_str = valid_date_str[valid_date_str!=\"-\"]\n    valid_date_str\
    \ = valid_date_str[valid_date_str!=\":\"]\n    valid_date_str = valid_date_str[valid_date_str!=\"\
    .\"]\n    valid_date_str = valid_date_str[valid_date_str!=\"-\"]\n    valid_date_str\
    \ = valid_date_str[valid_date_str!=\":\"]\n    valid_date_str = valid_date_str[valid_date_str!=\"\
    .\"]\n    valid_date_str = valid_date_str[valid_", "    \n    valid_date_str =\
    \ Date.parse(date)\n    if valid_date_str == nil\n        return false\n    end\n\
    \    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n \
    \       return false\n    end\n    \n    valid_date_str = Date.parse(date)\n \
    \   if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = ", "    \n    date_split\
    \ = split(date, \"-\")\n    \n    months_valid = (date_split[1] >= 1 && date_split[1]\
    \ < 13 && date_split[2] >= 1 && date_split[2] < 31)\n    days_valid = (date_split[2]\
    \ >= 1 && date_split[2] < 30)\n    \n    months_valid &= (date_split[1] >= 4 &&\
    \ date_split[1] < 6)\n    days_valid &= (date_split[2] >= 1 && date_split[2] <\
    \ 29)\n    \n    months_valid &= (date_split[1] >= 1 && date_split[1] < 12)\n\
    \    \n    days_valid &= (date_split[2] >= 1 && date_split[2] < 31)\n    \n  \
    \  months_valid &= (date_split[1] >= 4 && date_split[1] < 6)\n    days_valid &=\
    \ (date_split[2] >= 1 && date_split[2] < 30)\n    \n    months_valid &= (date_split[1]\
    \ >= 1 && date_split[1] < 12)\n    \n    days_valid &= (date_split[2] >= 1 &&\
    \ date_split[2] < 31)\n    \n    months_valid &= (date_split[1] >= 4 && date_split[1]\
    \ < 6)\n    days_valid &= (date_split[2] >= 1 && date_split[2] < 30)\n    \n \
    \   months_valid &= (date_split[1] >= 1 && date_split[1] < 12)\n    \n    days_valid\
    \ &= (date_split[2] >= 1 && date_split[2] < 31)\n    \n    months_valid &= (date_split[1]\
    \ >= 4 && date_split[1] < 6)\n    days_valid &= (date_split[2] >= 1 && date_split[2]\
    \ < 30)\n    \n    months_valid &= (date_split[1] >= 1 && date_split[1] < 12)\n\
    \    \n    days_valid &= (date_split[2] >= 1 && date_split[2] < 31)\n    \n  \
    \  months_valid &= (date_split[1] >= 4 && date_split[1] < 6)\n    days_valid &=\
    \ (date_split[2] >= 1 && date_split[2] < 30)\n    \n    months_valid &= (date_split[1]\
    \ >= 1 && date_split[1] < 12)\n    \n    days_valid &= (date_split[2] >= 1 &&\
    \ date_split[2] < 31)\n    \n    months_valid &= (date_split[1] >= 4 && date_split[1]\
    \ < 6)\n    days_valid &= (date_split[2] >= 1 && date_split[2] < 30)\n    \n \
    \   months_valid &= (date_split[1] >= 1 && date_split[1] < 12)\n    \n    days_valid\
    \ &= (date_split[2] >= 1 && date_split[2] < 31)", "    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n", "    \n    valid_date::Bool = false \n    \n\
    \    if date == \"\" \n        valid_date = false \n    else \n        valid_date\
    \ = true \n    \n    valid_date = true \n    \n    if valid_date == false \n \
    \       valid_date = false \n    else \n        valid_date = true \n    \n   \
    \ if valid_date == false \n        valid_date = false \n    else \n        valid_date\
    \ = true \n    \n    if valid_date == false \n        valid_date = false \n  \
    \  else \n        valid_date = true \n    \n    if valid_date == false \n    \
    \    valid_date = false \n    else \n        valid_date = true \n    \n    if\
    \ valid_date == false \n        valid_date = false \n    else \n        valid_date\
    \ = true \n    \n    if valid_date == false \n        valid_date = false \n  \
    \  else \n        valid_date = true \n    \n    if valid_date == false \n    \
    \    valid_date = false \n    else \n        valid_date = true \n    \n    if\
    \ valid_date == false \n        valid_date = false \n    else \n        valid_date\
    \ = true \n    \n    if valid_date == false \n        valid_date = false \n  \
    \  else \n        valid_date = true \n    \n    if valid_date == false \n    \
    \    valid_date = false \n    else \n        valid_date = true \n    \n    if\
    \ valid_date == false \n        valid_date = false \n    else \n        valid_date\
    \ = true \n    \n    if valid_date == false \n        valid_date = false \n  \
    \  else \n        valid_date = true \n    \n    if valid_date == false \n    \
    \    valid_date = false \n    else \n        valid_date = true \n    \n    if\
    \ valid_date == false \n        valid_date = false \n    else \n        valid_date\
    \ = true \n    \n    if valid_date == false \n        valid_date = false \n  \
    \  else \n        valid_date = true \n    \n    if valid_date == false \n    \
    \    valid_date = false \n    else \n        valid_date = true \n    \n    if\
    \ valid_date == false \n        valid_date = false \n    else \n        valid_date\
    \ = true \n    \n    if valid_date == false \n        valid_date = false \n  \
    \  else \n        valid_date = true \n    \n    if valid_date == false \n    \
    \    valid_date = false \n    else \n        valid_date = true \n    \n    if\
    \ valid_date == false \n        valid_date = false \n    else \n        valid_date\
    \ = true \n    \n    if valid_date == false \n        valid_date = false \n  \
    \  else \n        valid_date = true \n    \n    if valid_date == false \n    \
    \    valid_date = false \n    else \n        valid_date = true \n    \n    if\
    \ valid_date == false \n        valid_date = false \n", "    \n    valid_date_regex\
    \ = Regex(\"^(0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])[- /.](19|20)\\d\\d$\"\
    )\n    \n    if valid_date_regex.match(date) == nil\n        return false\n  \
    \  end\n    \n    date_array = split(date, \"-\")\n    \n    months = date_array[1]\n\
    \    days = date_array[2]\n    \n    months_array = split(months, \",\")\n   \
    \ \n    days_array = split(days, \",\")\n    \n    months_array_length = length(months_array)\n\
    \    \n    days_array_length = length(days_array)\n    \n    if months_array_length\
    \ != 12\n        return false\n    end\n    \n    if days_array_length != 31\n\
    \        return false\n    end\n    \n    if months_array_length == 1 && days_array_length\
    \ == 31\n        return true\n    end\n    \n    if months_array_length == 3 &&\
    \ days_array_length == 30\n        return true\n    end\n    \n    if months_array_length\
    \ == 5 && days_array_length == 29\n        return true\n    end\n    \n    if\
    \ months_array_length == 7 && days_array_length == 28\n        return true\n \
    \   end\n    \n    if months_array_length == 10 && days_array_length == 31\n \
    \       return true\n    end\n    \n    if months_array_length == 12 && days_array_length\
    \ == 30\n        return true\n    end\n    \n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that checks if a given string is a valid phone number.",
  "    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n        return\
    \ false\n    end\n    \n    days_num = Date.days(valid_date_str)\n    if days_num\
    \ < 1 or days_num > 31\n        return false\n    end\n    \n    months_num =\
    \ Date.months(valid_date_str)\n    if months_num < 1 or months_num > 12\n    \
    \    return false\n    end\n    \n    years_num = Date.years(valid_date_str)\n\
    \    if years_num < 1 or years_num > 9999\n        return false\n    end\n   \
    \ \n    return true\nend", "    \n    if date == \"\"\n        false\n    elseif\
    \ length(date) < 1\n        false\n    elseif length(date) > 31\n        false\n\
    \    elseif length(date) > 30\n        false\n    elseif length(date) > 29\n \
    \       false\n    elseif length(date) < 1\n        false\n    elseif length(date)\
    \ < 12\n        false\n    elseif length(date) < 4\n        false\n    elseif\
    \ length(date) < 6\n        false\n    elseif length(date) < 9\n        false\n\
    \    elseif length(date) < 11\n        false\n    elseif length(date) < 12\n \
    \       false\n    else\n        true\n    end\nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that checks if a date is a valid date in the format: mm-dd-yyyy",
  "    \n    valid_date::Bool = false \n    \n    if date == \"\" \n        valid_date\
    \ = false \n    else \n        valid_date = true \n    \n        if length(date)\
    \ == 8 \n            valid_date = true \n        else \n            valid_date\
    \ = false \n    \n            if month(date) == 0 \n                valid_date\
    \ = false \n            else \n                valid_date = true \n    \n    \
    \            if day(date) == 0 \n                    valid_date = false \n   \
    \             else \n                    valid_date = true \n    \n          \
    \          if year(date) == 0 \n                        valid_date = false \n\
    \                    else \n                        valid_date = true \n    \n\
    \    return valid_date\nend\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    03-11-2000\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"04-0-2040\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06-04-2020\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06/04/2020\")\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ checks if a given date string is a valid date or not.", "    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    \n    if date == \"\"\n        return\
    \ false\n    \n    days_in_month = [31,28,31,30,31,30,31,30,31,30,31]\n    days_in_month[month(date)-1]\n\
    \    \n    if day(date) < 1 || day(date) > days_in_month[month(date)-1]\n    \
    \    return false\n    \n    date_split = split(date, \"-\")\n    \n    if date_split[1]\
    \ < 1 || date_split[1] > 12\n        return false\n    \n    if date_split[2]\
    \ < 1 || date_split[2] > days_in_month[month(date_split[1])-1]\n        return\
    \ false\n    \n    return true\nend\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    03-11-2000\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"04-0-2040\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06-04-2020\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06/04/2020\")\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ checks if a year is a leap year or not. \nThe function should take in a year\
    \ as an argument and should return True if the year is a leap year, otherwise\
    \ it should return False.", "    valid_date_regex = Regex(\"^((0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-((19|20)[0-9]{2}))$\"\
    )\n    valid_date_match = valid_date_regex.match(date)\n    if valid_date_match\
    \ != nil then\n        days_match = valid_date_match[1]\n        month_match =\
    \ valid_date_match[2]\n        year_match = valid_date_match[3]\n        days_match\
    \ = days_match[1..days_match.length-1]\n        month_match = month_match[1..month_match.length-1]\n\
    \        year_match = year_match[1..year_match.length-1]\n        days_match =\
    \ days_match[1..days_match.length-1]\n        month_match = month_match[1..month_match.length-1]\n\
    \        year_match = year_match[1..year_match.length-1]\n        days_match =\
    \ days_match[1..days_match.length-1]\n        month_match = month_match[1..month_match.length-1]\n\
    \        year_match = year_match[1..year_match.length-1]\n        days_match =\
    \ days_match[1..days_match.length-1]\n        month_match = month_match[1..month_match.length-1]\n\
    \        year_match = year_match[1..year_match.length-1]\n        days_match =\
    \ days_match[1..days_match.length-1]\n        month_match = month_match[1..month_match.length-1]\n\
    \        year_match = year_match[1..year_match.length-1]\n        days_match =\
    \ days_match[1..days_match.length-1]\n        month_match = month_match[1..month_match.length-1]\n\
    \        year_match = year_match[1..year_match.length-1]\n        days_match =\
    \ days_match[1..days_match.length-1]\n        month_match = month_match[1..month_match.length-1]\n\
    \        year_match = year_match[1..year_match.length-1]\n        days_match =\
    \ days_match[1..days_match.length-1]\n        month_match = month_match[1..month_match.length-1]\n\
    \        year_match = year_match[1..year_match.length-1]\n        days_match =\
    \ days_match[1..days_match.length-1]\n        month_match = month_match[1..month_match.length-1]\n\
    \        year_match = year_match[1..year_match.length-1]\n        days_match =\
    \ days_match[1..days_match.length-1]\n        month_match = month_match[1..month_match.length-1]\n\
    \        year_match = year_match[1..year_match.length-1]\n        days_match =\
    \ days_match[1..days_match.", "    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n", "    \n    valid_date_res = false\n    \n    if date != \"\"\n     \
    \   \n        date_arr = split(date, \"-\")\n        \n        if length(date_arr)\
    \ == 3\n            \n            months = date_arr[1]\n            days = date_arr[2]\n\
    \            \n            if months in [\"01\", \"03\", \"05\", \"07\", \"08\"\
    , \"10\", \"12\"]\n                \n                if days in [\"01\", \"03\"\
    , \"05\", \"07\", \"08\", \"10\", \"12\"]\n                    \n            \
    \        if days in [\"01\", \"03\", \"05\", \"07\", \"08\", \"10\", \"12\"]\n\
    \                        \n                        if days in [\"01\", \"03\"\
    , \"05\", \"07\", \"08\", \"10\", \"12\"]\n                            \n    \
    \                        if days in [\"01\", \"03\", \"05\", \"07\", \"08\", \"\
    10\", \"12\"]\n                                \n                            \
    \    if days in [\"01\", \"03\", \"05\", \"07\", \"08\", \"10\", \"12\"]\n   \
    \                                 \n                                    if days\
    \ in [\"01\", \"03\", \"05\", \"07\", \"08\", \"10\", \"12\"]\n              \
    \                          \n                                        if days in\
    \ [\"01\", \"03\", \"05\", \"07\", \"08\", \"10\", \"12\"]\n                 \
    \                           \n                                            if days\
    \ in [\"01\", \"03\", \"05\", \"07\", \"08\", \"10\", \"12\"]\n              \
    \                                  \n                                        \
    \        if days in [\"01\", \"03\", \"05\", \"07\", \"08\", \"10\", \"12\"]\n\
    \                                                    \n                      \
    \                              if days in [\"01\", \"03\", \"05\", \"07\", \"\
    08\", \"10\", \"12\"]\n                                                      \
    \  \n                                                        if days in [\"01\"\
    , \"03\", \"05\", \"07\", \"08\", \"10\", \"12\"]\n                          \
    \                                  \n                                        \
    \                    valid_date_res=true\n                                   \
    \                         \n    return valid_date_res\nend\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"04-0-2040\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that checks if a given date string is valid or not.", "    \n\
    \    valid_date::Bool = false \n    \n    if date == \"\" \n        valid_date\
    \ = false \n    else \n        valid_date = true \n    \n        if length(date)\
    \ == 8 \n            valid_date = true \n        else \n            valid_date\
    \ = false \n    \n            if length(date) == 7 \n                valid_date\
    \ = true \n            else \n                valid_date = false \n    \n    \
    \            if length(date) == 6 \n                    valid_date = true \n \
    \               else \n                    valid_date = false \n    \n       \
    \             if length(date) == 5 \n                        valid_date = true\
    \ \n                    else \n                        valid_date = false \n \
    \   \n                        if length(date) == 4 \n                        \
    \    valid_date = true \n                        else \n                     \
    \       valid_date = false \n    \n                            if length(date)\
    \ == 3 \n                                valid_date = true \n                \
    \            else \n                                valid_date = false \n    \n\
    \                                if length(date) == 2 \n                     \
    \               valid_date = true \n                                else \n  \
    \                                  valid_date = false \n    \n               \
    \                     if length(date) == 1 \n                                \
    \        valid_date = true \n                                    else \n     \
    \                                   valid_date = false \n    \n              \
    \                          if length(date) == 0 \n                           \
    \                 valid_date = false \n                                      \
    \  else \n                                            valid_date = false \n  \
    \  \n                                            if length(date) == 4 \n     \
    \                                           valid_date = true \n             \
    \                               else \n                                      \
    \          valid_date = false \n    \n                                       \
    \         if length(date) == 5 \n                                            \
    \        valid_date = true \n                                                else\
    \ \n                                                    valid_date = false \n\
    \    \n                                                    if length(date) ==\
    \ 6 \n                                                        valid_date = true\
    \ \n                                                    else \n              \
    \                                          valid_date = false \n    \n       \
    \                                                 if length(date) == 7 \n    \
    \                                                        valid_date = true \n\
    \                                                        else \n             \
    \                                               valid_date = false \n    \n  \
    \                                                          if length(date) ==\
    \ 8 \n                                                                valid_date\
    \ = true \n                                                            else \n\
    \                                                                valid_date =\
    \ false \n    \n                                                             \
    \   if length(date) == 9 \n                                                  \
    \                  valid_date = true \n                                      \
    \                          else \n                                           \
    \                         valid_date = false \n    \n                        \
    \                                            if length(date) == 10 \n        \
    \                                                                valid_date =\
    \ true \n                                                                    else\
    \ \n                                                                        valid_date\
    \ = false \n    \n                                                           \
    \             if length(date) == 11 \n                                       \
    \                                     valid_date = true \n                   \
    \                                                     else \n                \
    \                                                            valid_date = false\
    \ \n    \n                                                                   \
    \      if length(date) == 12 \n                                              \
    \                               valid_date = true \n                         \
    \                                                else \n                     \
    \                                                        valid_date = false \n\
    \    \n                                                                      \
    \   if length(date) == 13 \n                                                 \
    \                            valid_date = true \n                            \
    \                                             else \n                        \
    \                                                     valid_date = false \n  \
    \  \n                                                                        \
    \ if length(date) == 14 \n                                                   \
    \                          valid_date = true \n                              \
    \                                           else \n                          \
    \                                                   valid_date = false \n    \n\
    \                                                                         if length(date)\
    \ == 15 \n                                                                   \
    \          valid_date = true \n                                              \
    \                           else \n                                          \
    \                                   valid_date = false \n    \n              \
    \                                                          ", "    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = ", "    \n    valid_date\
    \ = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date = (date !=\
    \ \"\")\n    valid_date = (date != \"\")\n    valid_date = (date != \"\")\n  \
    \  valid_date = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date\
    \ = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date = (date !=\
    \ \"\")\n    valid_date = (date != \"\")\n    valid_date = (date != \"\")\n  \
    \  valid_date = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date\
    \ = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date = (date !=\
    \ \"\")\n    valid_date = (date != \"\")\n    valid_date = (date != \"\")\n  \
    \  valid_date = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date\
    \ = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date = (date !=\
    \ \"\")\n    valid_date = (date != \"\")\n    valid_date = (date != \"\")\n  \
    \  valid_date = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date\
    \ = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date = (date !=\
    \ \"\")\n    valid_date = (date != \"\")\n    valid_date = (date != \"\")\n  \
    \  valid_date = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date\
    \ = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date = (date !=\
    \ \"\")\n    valid_date = (date != \"\")\n    valid_date = (date != \"\")\n  \
    \  valid_date = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date\
    \ = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date = (date !=\
    \ \"\")\n    valid_date = (date != \"\")\n    valid_date = (date != \"\")\n  \
    \  valid_date = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date\
    \ = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date = (date !=\
    \ \"\")\n    valid_date = (date != \"\")\n    valid_date = (date != \"\")\n  \
    \  valid_date = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date\
    \ = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date = (date !=\
    \ \"\")\n    valid_date = (date != \"\")\n    valid_date = (date != \"\")\n  \
    \  valid_date = (date != \"\")\n    valid_date = (date != \"\")\n    valid_date\
    \ = (date != ", "    \n    valid_date_res = validate_date(date)\n    \n    if\
    \ valid_date_res\n        \n        days_months_years = days_months_years(date)\n\
    \        \n        if days_months_years[1] > 31\n            \n            return\
    \ false\n            \n        elif days_months_years[1] < 1\n            \n \
    \           return false\n            \n        elif days_months_years[2] > 30\n\
    \            \n            return false\n            \n        elif days_months_years[2]\
    \ < 1\n            \n            return false\n            \n        elif days_months_years[3]\
    \ > 29\n            \n            return false\n            \n        elif days_months_years[3]\
    \ < 1\n            \n            return false\n            \n        elif days_months_years[4]\
    \ > 12\n            \n            return false\n            \n        elif days_months_years[4]\
    \ < 1\n            \n            return false\n            \n        else\n  \
    \          \n            return true\n            \n    else\n        \n     \
    \   return false\n        \nend\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    03-11-2000\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"04-0-2040\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06-04-2020\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06/04/2020\")\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ checks if a given date is a valid date or not.", "    \n    date_split = split(date,\
    \ '-')\n    \n    if date_split[1] < 1 || date_split[1] > 12\n        error(\"\
    The month should be between 1 and 12\")\n    end", "    \n    valid_date_regex\
    \ = Regex(\"^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-((19|20)[0-9]{2})$\")\n\
    \    \n    if valid_date_regex.match(date) == nil \n        return false \n  \
    \  else \n        return true \n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"04-0-2040\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<text>\nExercise 3\n\
    Write a function which takes a date string as an argument and returns the number\
    \ of days between the date and the current date. \nThe date string should be in\
    \ the format: mm-dd-yyyy", "    \n    valid_date_str = split(date, '-')\n    \n\
    \    if length(valid_date_str) != 3 || valid_date_str[1] < 1 || valid_date_str[1]\
    \ > 12 || valid_date_str[2] < 1 || valid_date_str[2] > 31 || valid_date_str[2]\
    \ > 30 || valid_date_str[2] > 29 || valid_date_str[1] > 12\n        return false\n\
    \    end\n    \n    valid_date_str = split(date, '-')\n    \n    if valid_date_str[1]\
    \ == 2 && valid_date_str[2] == 29\n        return false\n    end\n    \n    return\
    \ true\nend", "    \n    valid_date_regex = Regex(\"^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-[0-9]{4}$\"\
    )\n    \n    if valid_date_regex.match(date) == nil\n        return false\n  \
    \  end", "    \n    valid_date_regex = Regex(\"^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-((19|20)\\\
    d\\d)$\")\n    valid_date_match = valid_date_regex.match(date)\n    \n    if valid_date_match\
    \ != nil\n        return true\n    else\n        return false\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\"\
    )\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function to check if a given date is a leap year or not. \n\
    The function should take in a date string and should return True if the date is\
    \ a leap year, otherwise it should return False.", "    \n    valid_date_str =\
    \ date\n    valid_date_str = valid_date_str[valid_date_str.length()-4:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-3:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-2:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    ", "    \n    valid_date_str = Date.parse(date)\n    \n    if valid_date_str\
    \ == None\n        error(\"Invalid date\")\n    end\n    \n    days_str = valid_date_str.format(\"\
    DD\")\n    \n    if days_str == \"01\"\n        error(\"Invalid date\")\n    end\n\
    \    \n    days_str = days_str[2:end]\n    \n    if days_str == \"31\"\n     \
    \   error(\"Invalid date\")\n    end\n    \n    days_str = days_str[2:end]\n \
    \   \n    if days_str == \"30\"\n        error(\"Invalid date\")\n    end\n  \
    \  \n    days_str = days_str[2:end]\n    \n    if days_str == \"29\"\n       \
    \ error(\"Invalid date\")\n    end\n    \n    days_str = days_str[2:end]\n   \
    \ \n    if days_str == \"31\"\n        error(\"Invalid date\")\n    end\n    \n\
    \    days_str = days_str[2:end]\n    \n    if days_str == \"30\"\n        error(\"\
    Invalid date\")\n    end\n    \n    days_str = days_str[2:end]\n    \n    if days_str\
    \ == \"29\"\n        error(\"Invalid date\")\n    end\n    \n    days_str = days_str[2:end]\n\
    \    \n    if days_str == \"31\"\n        error(\"Invalid date\")\n    end\n \
    \   \n    days_str = days_str[2:end]\n    \n    if days_str == \"30\"\n      \
    \  error(\"Invalid date\")\n    end\n    \n    days_str = days_str[2:end]\n  \
    \  \n    if days_str == \"29\"\n        error(\"Invalid date\")\n    end\n   \
    \ \n    days_str = days_str[2:end]\n    \n    if days_str == \"31\"\n        error(\"\
    Invalid date\")\n    end\n    \n    days_str = days_str[2:end]\n    \n    if days_str\
    \ == \"30\"\n        error(\"Invalid date\")\n    end\n    \n    days_str = days_str[2:end]\n\
    \    \n    if days_str == \"29\"\n        error(\"Invalid date\")\n    end\n \
    \   \n    days_str = days_str[2:end]\n    \n    if days_str == \"31\"\n      \
    \  error(\"Invalid date\")\n    end\n    \n    days_str = days_str[2:end]\n  \
    \  \n    if days_str == \"30\"\n        error(\"Invalid date\")\n    end\n   \
    \ \n    days_str = days_str[2:end]\n    \n    if days_str == \"29\"\n        error(\"\
    Invalid date\")\n    end\n    \n    days_str = days_str", "    \n    if date ==\
    \ \"\"\n        error(\"The date string cannot be empty\")\n    end", "    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    valid_date::Bool\
    \ = true \n    \n    if date == \"\" \n        valid_date = false \n    else \n\
    \        \n        days::Int = count_days(date) \n        \n        if days >\
    \ 31 \n            valid_date = false \n        else if days > 29 \n         \
    \   valid_date = false \n        else if days > 28 \n            valid_date =\
    \ false \n        else if days > 31 \n            valid_date = false \n      \
    \  else if days > 30 \n            valid_date = false \n        else if days >\
    \ 29 \n            valid_date = false \n        else if days > 28 \n         \
    \   valid_date = false \n        else if days > 31 \n            valid_date =\
    \ false \n        else if days > 30 \n            valid_date = false \n      \
    \  else if days > 29 \n            valid_date = false \n        else if days >\
    \ 28 \n            valid_date = false \n        else if days > 31 \n         \
    \   valid_date = false \n        else if days > 30 \n            valid_date =\
    \ false \n        else if days > 29 \n            valid_date = false \n      \
    \  else if days > 28 \n            valid_date = false \n        else if days >\
    \ 31 \n            valid_date = false \n        else if days > 30 \n         \
    \   valid_date = false \n        else if days > 29 \n            valid_date =\
    \ false \n        else if days > 28 \n            valid_date = false \n      \
    \  else if days > 31 \n            valid_date = false \n        else if days >\
    \ 30 \n            valid_date = false \n        else if days > 29 \n         \
    \   valid_date = false \n        else if days > 28 \n            valid_date =\
    \ false \n        else if days > 31 \n            valid_date = false \n      \
    \  else if days > 30 \n            valid_date = false \n        else if days >\
    \ 29 \n            valid_date = false \n        else if days > 28 \n         \
    \   valid_date = false \n        else if days > 31 \n            valid_date =\
    \ false \n        else if days > 30 \n            valid_date = false \n      \
    \  else if days > 29 \n            valid_date = false \n        else if days >\
    \ 28 \n            valid_date = false \n        else if days > 31 \n         \
    \   valid_date = false \n        else if days > 30 \n            valid_date =\
    \ false \n        else if days > 29 \n            valid_date = false \n      \
    \  else if days > 28 \n            valid_date = false \n        else if days >\
    \ 31 \n            valid_date = false \n        else if days > 30 \n         \
    \   valid_date = false \n        else if days > 29 \n            valid_date =\
    \ false \n        else if days > 28 \n            valid_date = false \n      \
    \  else if days > 31 \n            valid_date = false \n        else if days >\
    \ 30 \n            valid_date = false \n        else if days > 29 \n         \
    \   valid_date = false \n        else if days > 28 \n            valid_date =\
    \ false \n", "    \n    valid_date_str = Date.parse(date)\n    \n    if valid_date_str\
    \ == nil\n        return false\n    end", "    \n    valid_date_regex = r\"^(0[1-9]|[12][0-9]|3[01])[\\\
    -\\/.](0[1-9]|1[012])[\\-\\/.](19|20)\\d\\d$\"\n    \n    if date == \"\"\n  \
    \      return false\n    \n    days_regex = r\"^((?!29)[0-9])|((?!30)[0-9])|((?!31)[0-9])$\"\
    \n    \n    months_regex = r\"^((?!12)[0-9])|((?![0-9])[0-9])|((?![0-9])[0-9])$\"\
    \n    \n    if re.match(valid_date_regex, date) == nil\n        return false\n\
    \    \n    if re.match(days_regex, date) == nil\n        return false\n    \n\
    \    if re.match(months_regex, date) == nil\n        return false\n    \n    return\
    \ true\nend\n</code>\n<|/ a tags=julia,date |>\n<| c |>\nThanks for your answer.\
    \ Your code doesn't work for the date `06/04/2020` because `months_regex` doesn't\
    \ allow `0` as month.\n<|/ c |>\n<| c |>\nThanks for your comment. I've edited\
    \ the answer to fix the problem you mentioned.\n<|/ c |>\n<| a dscore=2 |>\nI\
    \ wrote a package called Dates.jl which has a function called valid_date() which\
    \ does exactly what you need:\n<code>\njulia> using Dates", "    \n    valid_date::Bool\
    \ = false \n    \n    if date == \"\" \n        valid_date = false \n    else\
    \ \n        valid_date = true \n    \n        if length(date) <> 10 \n       \
    \     valid_date = false \n        else \n            valid_date = true \n   \
    \         \n            if month(date) <> 1 \n                valid_date = false\
    \ \n            else \n                valid_date = true \n                \n\
    \                if day(date) <> 1 \n                    valid_date = false \n\
    \                else \n                    valid_date = true \n             \
    \       \n                    if year(date) <> 2000 \n                       \
    \ valid_date = false \n                    else \n                        valid_date\
    \ = true \n                        \n                        if month(date) <>\
    \ 12 \n                            valid_date = false \n                     \
    \   else \n                            valid_date = true \n                  \
    \          \n                            if day(date) <> 31 \n               \
    \                 valid_date = false \n                            else \n   \
    \                             valid_date = true \n                           \
    \     \n                                if month(date) <> 12 \n              \
    \                      valid_date = false \n                                else\
    \ \n                                    valid_date = true \n                 \
    \                   \n                                    if day(date) <> 30 \n\
    \                                        valid_date = false \n               \
    \                     else \n                                        valid_date\
    \ = true \n                                        \n                        \
    \                if month(date) <> 12 \n                                     \
    \       valid_date = false \n                                        else \n \
    \                                           valid_date = true \n             \
    \                               \n                                           \
    \ if day(date) <> 29 \n                                                valid_date\
    \ = false \n                                            else \n              \
    \                                  valid_date = true \n                      \
    \                          \n                                                if\
    \ month(date) <> 12 \n                                                    valid_date\
    \ = false \n                                                else \n          \
    \                                          valid_date = true \n              \
    \                                      \n                                    \
    \                if day(date) <> 31 \n                                       \
    \                 valid_date = false \n                                      \
    \              else \n                                                       \
    \ valid_date = true \n                                                       \
    \ \n                                                        if day(date) <> 30\
    \ \n                                                            valid_date = false\
    \ \n                                                        else \n          \
    \                                                  valid_date = true \n      \
    \                                                      \n                    \
    \                            if month(date) <> 12 \n                         \
    \                           valid_date = false \n                            \
    \                    else \n                                                 \
    \   valid_date = true \n                                                    \n\
    \                                                    if day(date) <> 31 \n   \
    \                                                     valid_date = false \n  \
    \                                                  else \n                   \
    \                                     valid_date = true \n                   \
    \                                     \n                                     \
    \                   if day(date) <> 30 \n                                    \
    \                        valid_date = false \n                               \
    \                         else \n                                            \
    \                valid_date = true \n                                        \
    \                    \n                                                if month(date)\
    \ <> 12 \n                                                    valid_date = false\
    \ \n                                                else \n                  \
    \                                  valid_date = true \n                      \
    \                              \n                                            \
    \        if day(date) <> 31 \n                                               \
    \         valid_date = false \n                                              \
    \      else \n                                                        valid_date\
    \ = true \n                                                        \n        \
    \                                                if day(date) <> 30 \n       \
    \                                                     valid_date = false \n  \
    \                                                      else \n               \
    \                                             valid_date = true \n           \
    \                                                 \n                         \
    \                       if month(date) <> 12 \n                              \
    \                      valid_date = false \n                                 \
    \               ", "    \n    date_str = split(date, '-')\n    \n    days_str\
    \ = date_str[1]\n    months_str = date_str[2]\n    \n    days_int::Int = parse(days_str)\n\
    \    months_int::Int = parse(months_str)\n    \n    days_int >= 1 && days_int\
    \ <= 31\n    months_int >= 1 && months_int <= 12\n    \n    days_int >= 1 && days_int\
    \ <= 30\n    months_int >= 1 && months_int <= 12\n    \n    days_int >= 1 && days_int\
    \ <= 29\n    months_int >= 1 && months_int <= 12\n    \n    days_int >= 1 && days_int\
    \ <= 31\n    months_int >= 1 && months_int <= 12\n    \n    days_int >= 1 && days_int\
    \ <= 30\n    months_int >= 1 && months_int <= 12\n    \n    days_int >= 1 && days_int\
    \ <= 29\n    months_int >= 1 && months_int <= 12\n    \n    days_int >= 1 && days_int\
    \ <= 31\n    months_int >= 1 && months_int <= 12\n    \n    days_int >= 1 && days_int\
    \ <= 30\n    months_int >= 1 && months_int <= 12\n    \n    days_int >= 1 && days_int\
    \ <= 29\n    months_int >= 1 && months_int <= 12\n    \n    days_int >= 1 && days_int\
    \ <= 31\n    months_int >= 1 && months_int <= 12\n    \n    days_int >= 1 && days_int\
    \ <= 30\n    months_int >= 1 && months_int <= 12\n    \n    days_int >= 1 && days_int\
    \ <= 29\n    months_int >= 1 && months_int <= 12\n    \n    days_int >= 1 && days_int\
    \ <= 31\n    months_int >= 1 && months_int <= 12\n    \n    days_int >= 1 && days_int\
    \ <= 30\n    months_int >= 1 && months_int <= 12\n    \n    days_int >= 1 && days_int\
    \ <= 29\n    months_int >= 1 && months_int <= 12\n    \n    days_int >= 1 && days_int\
    \ <= 31\n    months_int >= 1 && months_int <= 12\n    \n    days_int >= 1 && days_int\
    \ <= 30\n    months_int >= 1 && months_int <= 12\n    \n    days_int >= 1 && days_int\
    \ <= 29\n    month", "    \n    date_split = split(date, '-')\n    \n    if date_split[1]\
    \ == '01' or date_split[1] == '03' or date_split[1] == '05' or date_split[1] ==\
    \ '07' or date_split[1] == '08' or date_split[1] == '10' or date_split[1] == '12'\n\
    \    or date_split[1] == '04' or date_split[1] == '06' or date_split[1] == '09'\
    \ or date_split[1] == '11'\n    or date_split[1] == '02'\n    \n    else date_split[1]\
    \ == '01' or date_split[1] == '04' or date_split[1] == '06' or date_split[1] ==\
    \ '09' or date_split[1] == '11'\n    or date_split[1] == '02'\n    \n    else\
    \ date_split[1] == '01' or date_split[1] == '03' or date_split[1] == '05' or date_split[1]\
    \ == '07' or date_split[1] == '08' or date_split[1] == '10' or date_split[1] ==\
    \ '12'\n    or date_split[1] == '04' or date_split[1] == '06' or date_split[1]\
    \ == '09' or date_split[1] == '11'\n    or date_split[1] == '02'\n    \n    else\
    \ date_split[1] == '01' or date_split[1] == '03' or date_split[1] == '05' or date_split[1]\
    \ == '07' or date_split[1] == '08' or date_split[1] == '10' or date_split[1] ==\
    \ '12'\n    or date_split[1] == '04' or date_split[1] == '06' or date_split[1]\
    \ == '09' or date_split[1] == '11'\n    or date_split[1] == '02'\n    \n    else\
    \ date_split[1] == '01' or date_split[1] == '03' or date_split[1] == '05' or date_split[1]\
    \ == '07' or date_split[1] == '08' or date_split[1] == '10' or date_split[1] ==\
    \ '12'\n    or date_split[1] == '04' or date_split[1] == '06' or date_split[1]\
    \ == '09' or date_split[1] == '11'\n    or date_split[1] == '02'\n    \n    else\
    \ date_split[1] == '01' or date_split[1] == '03' or date_split[1] == '05' or date_split[1]\
    \ == '07' or date_split[1] == '08' or date_split[1] == '10' or date_split[1] ==\
    \ '12'\n    or date_split[1] == '04' or date_split[1] == '06' or date_split[1]\
    \ == '09' or date_split[1] == '11'\n    or date_split[1] == '02'\n    \n    else\
    \ date_split[1] == '01' or date_split[1] == '03' or date_split[1] == '05' or date_split[1]\
    \ == '07' or date_split[1] == '08' or date_split[1] == '10' or date_split[1] ==\
    \ '", "    \n    valid_date_regex = Regex(\"^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-((19|20)\\\
    d\\d)$\")\n    \n    if valid_date_regex.match(date) == nil\n        return false\n\
    \    end\n    \n    days_regex = Regex(\"^((0?[1-9]|[12][0-9]|3[01])-(0?[1-9]|1[012])-((19|20)\\\
    d\\d))$\")\n    \n    if days_regex.match(date) == nil\n        return false\n\
    \    end\n    \n    months_regex = Regex(\"^((0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])-((19|20)\\\
    d\\d))$\")\n    \n    if months_regex.match(date) == nil\n        return false\n\
    \    end\n    \n    year_regex = Regex(\"^((19|20)\\d\\d)$\")\n    \n    if year_regex.match(date)\
    \ == nil\n        return false\n    end\n    \n    return true\nend\n</cell>\n\
    <code language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\n\
    valid_", "    \n    date_split = split(date, \"-\")\n    \n    days_valid = days_valid(date_split)\n\
    \    \n    months_valid = months_valid(date_split)\n    \n    year_valid = year_valid(date_split)\n\
    \    \n    date_valid = days_valid && months_valid && year_valid\n    \n    return\
    \ date_valid\nend", "    \n    if date == \"\"\n        return false\n    \n \
    \   date_split = split(date, \"-\")\n    \n    if date_split[1] < 1 || date_split[1]\
    \ > 12\n        return false\n    \n    if date_split[2] < 1 || date_split[2]\
    \ > 31\n        return false\n    \n    if date_split[1] == 2 && date_split[2]\
    \ > 29\n        return false\n    \n    if date_split[1] == 3 && date_split[2]\
    \ > 30\n        return false\n    \n    if date_split[1] == 4 && date_split[2]\
    \ > 31\n        return false\n    \n    if date_split[1] == 2 && date_split[2]\
    \ > 29\n        return false\n    \n    if date_split[1] == 2 && date_split[2]\
    \ > 30\n        return false\n    \n    if date_split[1] == 2 && date_split[2]\
    \ > 31\n        return false\n    \n    if date_split[1] == 2 && date_split[2]\
    \ > 30\n        return false\n    \n    if date_split[1] == 2 && date_split[2]\
    \ > 31\n        return false\n    \n    if date_split[1] == 2 && date_split[2]\
    \ > 30\n        return false\n    \n    if date_split[1] == 2 && date_split[2]\
    \ > 31\n        return false\n    \n    if date_split[1] == 2 && date_split[2]\
    \ > 30\n        return false\n    \n    if date_split[1] == 2 && date_split[2]\
    \ > 31\n        return false\n    \n    if date_split[1] == 2 && date_split[2]\
    \ > 30\n        return false\n    \n    if date_split[1] == 2 && date_split[2]\
    \ > 31\n        return false\n    \n    if date_split[1] == 2 && date_split[2]\
    \ > 30\n        return false\n    \n    if date_split[1] == 2 && date_split[2]\
    \ > 31\n        return false\n    \n    if date_split[1] == 2 && date_split[2]\
    \ > 30\n        return false\n    \n    if date_split[1] == 2 && date_split[2]\
    \ > 31\n        return false\n    \n    if date_split[1] == 2 && date_split[2]\
    \ > 30\n        return false\n    \n    if date_split[1] == 2 && date_split[2]\
    \ > 31\n        return false\n    \n    if date_split[1] == 2 && date_split[2]\
    \ > 30\n        return false\n    \n    if date_split[1] == 2 && date_split[2]\
    \ > 31\n        return false\n    \n    if date_split[1] == 2 && date_split[2]\
    \ > 30\n        return false\n    \n    if date_split[1] == 2 && date_split[2]\
    \ > 31\n        return false\n    \n    if date_split[1] == 2 && date_split[2]\
    \ > 30\n        return false\n    \n    if date_split[1] == 2 && date_split[2]\
    \ > 31\n        return false\n    \n    if date_split[1] == 2 && date_split[2]\
    \ > 30\n        return false", "    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    \n    valid_date::Bool = false\n    \n    if date != \"\"\
    \n        \n        day::Int = days(date)\n        \n        if day < 1 || day\
    \ > 31\n            valid_date::Bool = false\n        elseif day < 1 || day >\
    \ 30\n            valid_date::Bool = false\n        elseif day < 1 || day > 29\n\
    \            valid_date::Bool = false\n        elseif day < 1 || day > 28\n  \
    \          valid_date::Bool = false\n        else\n            valid_date::Bool\
    \ = true\n        end\n    end\n    \n    return valid_date\nend\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code\
    \ language=julia-1.5>", "    \n    date_split = split(date, \"-\")\n    \n   \
    \ if date_split[1] < 1 || date_split[1] > 12 || date_split[2] < 1 || date_split[2]\
    \ > 31 || date_split[1] < 1 || date_split[1] > 31 || date_split[2] < 1 || date_split[2]\
    \ > 30 || date_split[1] < 1 || date_split[1] > 29 || date_split[2] < 1 || date_split[2]\
    \ > 29\n    \n        return false\n    \n    else \n        return true\n   \
    \ \nend\n</cell>\n<code language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n\
    <code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\"\
    )\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<text>\n\
    Exercise 3\nWrite a function which takes a date string and returns the number\
    \ of days between the current date and the date passed as argument.", "    \n\
    \    if date == \"\"\n        return false\n    end\n    \n    date_array = split(date,\
    \ \"-\")\n    \n    if length(date_array) != 3\n        return false\n    end",
  "    \n    days_month = [31,28,31,30,31,30,31,31,30,31,30,31]\n    days_month =\
    \ [31,28,31,30,31,30,31,31,30,31,30,31]\n    days_month = [31,28,31,30,31,30,31,31,30,31,30,31]\n\
    \    days_month = [31,28,31,30,31,30,31,31,30,31,30,31]\n    days_month = [31,28,31,30,31,30,31,31,30,31,30,31]\n\
    \    days_month = [31,28,31,30,31,30,31,31,30,31,30,31]\n    days_month = [31,28,31,30,31,30,31,31,30,31,30,31]\n\
    \    days_month = [31,28,31,30,31,30,31,31,30,31,30,31]\n    days_month = [31,28,31,30,31,30,31,31,30,31,30,31]\n\
    \    days_month = [31,28,31,30,31,30,31,31,30,31,30,31]\n    days_month = [31,28,31,30,31,30,31,31,30,31,30,31]\n\
    \    days_month = [31,28,31,30,31,30,31,31,30,31,30,31]\n    days_month = [31,28,31,30,31,30,31,31,30,31,30,31]\n\
    \    days_month = [31,28,31,30,31,30,31,31,30,31,30,31]\n    days_month = [31,28,31,30,31,30,31,31,30,31,30,31]\n\
    \    days_month = [31,28,31,30,31,30,31,31,30,31,30,31]\n    days_month = [31,28,31,30,31,30,31,31,30,31,30,31]\n\
    \    days_month = [31,28,31,30,31,30,31,31,30,31,30,31]\n    days_month = [31,28,31,30,31,30,31,31,30,31,30,31]\n\
    \    days_month = [31,28,31,30,31,30,31,31,30,31,30,31]\n    days_month = [31,28,31,30,31,30,31,31,30,31,30,31]\n\
    \    days_month = [31,28,31,30,31,30,31,31,30,31,30,31]\n    days_month = [31,28,31,30,31,30,31,31,30,31,30,31]\n\
    \    days_month = [31,28,31,30,31,30,31,31,30,31,30,31]\n    days_month = [31,28,31,30,31,30,31,31,30,31,30,31]\n\
    \    days_month = [31,28,31,30,31,30,31,31,30,31,30,31]\n    days_month = [31,28,31,30,31,30,31,31,30,31,30,",
  "    \n    valid_date::Bool = false \n    \n    if date == \"\" \n        then return\
    \ false \n    else \n        \n        day::Int = days_in_month(month(date), year(date))\
    \ \n        \n        if day < 1 \n            then return false \n        else\
    \ if day > 31 \n            then return false \n        else \n            \n\
    \            month::Int = month(date) \n            \n            if month < 1\
    \ \n                then return false \n            else if month > 12 \n    \
    \            then return false \n            else \n                \n       \
    \         valid_date::Bool = true \n            end \n        end \n    end \n\
    end \n</cell>\n<code language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n\
    <code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\"\
    )\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that checks if a year is a leap year or not.", " \
    \   \n    valid_date_str = date\n    \n    if valid_date_str == \"\"\n       \
    \ return false\n    end\n    \n    valid_date_str = valid_date_str[2:end]\n  \
    \  \n    valid_date_str = valid_date_str[1..end]\n    \n    valid_date_str = valid_date_str[2:end]\n\
    \    \n    valid_date_str = valid_date_str[1..end]\n    \n    valid_date_str =\
    \ valid_date_str[2:end]\n    \n    valid_date_str = valid_date_str[1..end]\n \
    \   \n    valid_date_str = valid_date_str[2:end]\n    \n    valid_date_str = valid_date_str[1..end]\n\
    \    \n    valid_date_str = valid_date_str[2:end]\n    \n    valid_date_str =\
    \ valid_date_str[1..end]\n    \n    valid_date_str = valid_date_str[2:end]\n \
    \   \n    valid_date_str = valid_date_str[1..end]\n    \n    valid_date_str =\
    \ valid_date_str[2:end]\n    \n    valid_date_str = valid_date_str[1..end]\n \
    \   \n    valid_date_str = valid_date_str[2:end]\n    \n    valid_date_str = valid_date_str[1..end]\n\
    \    \n    valid_date_str = valid_date_str[2:end]\n    \n    valid_date_str =\
    \ valid_date_str[1..end]\n    \n    valid_date_str = valid_date_str[2:end]\n \
    \   \n    valid_date_str = valid_date_str[1..end]\n    \n    valid_date_str =\
    \ valid_date_str[2:end]\n    \n    valid_date_str = valid_date_str[1..end]\n \
    \   \n    valid_date_str = valid_date_str[2:end]\n    \n    valid_date_str = valid_date_str[1..end]\n\
    \    \n    valid_date_str = valid_date_str[2:end]\n    \n    valid_date_str =\
    \ valid_date_str[1..end]\n    \n    valid_date_str = valid_date_str[2:end]\n \
    \   \n    valid_date_str = valid_date_str[1..end]\n    \n    valid_date_str =\
    \ valid_date_str[2:end]\n    \n    valid_date_str = valid_date_str[1..end]\n \
    \   \n    valid_date_str = valid_date_str[2:end]\n    \n    valid_date_str = valid_date_str[1..end]\n\
    \    \n    valid_date_str = valid_date_str[2:end]\n    \n    valid_date_str =\
    \ valid_date_str[1..end]\n    \n    valid_date_str = valid_date_str[2:end]\n \
    \   \n    valid_date_str = valid_date_str[1..end]\n    \n    valid_date_str =\
    \ valid_date_str[2:end]\n    \n    valid_date_str = valid_date_str[", "    \n\
    \    valid_date_str = date\n    valid_date_str = valid_date_str[valid_date_str.length()-3:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-2:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_date_str = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n\
    \    valid_", "    valid_date_str = Date.parse(date)\n    if valid_date_str ==\
    \ nil\n        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(", "    valid_date_str = Date.parse(date)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    days_str = valid_date_str.days()\n\
    \    months_str = valid_date_str.months()\n    years_str = valid_date_str.years()\n\
    \    \n    if days_str < 1 or days_str > 31\n        return false\n    end\n \
    \   if months_str < 1 or months_str > 12\n        return false\n    end\n    if\
    \ years_str < 1 or years_str > 9999\n        return false\n    end\n    \n   \
    \ true\nend\n</cell>\n<code language=julia-1.5>\nvalid_date(\"03-11-2000\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06-04-2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    06/04/2020\")\n</cell>\n<text>\nExercise 2\nWrite a function that checks if a\
    \ given date string is a valid date or not.", "    \n    date_split = split(date,\
    \ '-')\n    \n    months_valid = months_valid(date_split)\n    \n    days_valid\
    \ = days_valid(date_split)\n    \n    years_valid = years_valid(date_split)\n\
    \    \n    months_valid = months_valid(date_split)\n    \n    days_valid = days_valid(date_split)\n\
    \    \n    months_valid = months_valid(date_split)\n    \n    days_valid = days_valid(date_split)\n\
    \    \n    months_valid = months_valid(date_split)\n    \n    days_valid = days_valid(date_split)\n\
    \    \n    months_valid = months_valid(date_split)\n    \n    days_valid = days_valid(date_split)\n\
    \    \n    months_valid = months_valid(date_split)\n    \n    days_valid = days_valid(date_split)\n\
    \    \n    months_valid = months_valid(date_split)\n    \n    days_valid = days_valid(date_split)\n\
    \    \n    months_valid = months_valid(date_split)\n    \n    days_valid = days_valid(date_split)\n\
    \    \n    months_valid = months_valid(date_split)\n    \n    days_valid = days_valid(date_split)\n\
    \    \n    months_valid = months_valid(date_split)\n    \n    days_valid = days_valid(date_split)\n\
    \    \n    months_valid = months_valid(date_split)\n    \n    days_valid = days_valid(date_split)\n\
    \    \n    months_valid = months_valid(date_split)\n    \n    days_valid = days_valid(date_split)\n\
    \    \n    months_valid = months_valid(date_split)\n    \n    days_valid = days_valid(date_split)\n\
    \    \n    months_valid = months_valid(date_split)\n    \n    days_valid = days_valid(date_split)\n\
    \    \n    months_valid = months_valid(date_split)\n    \n    days_valid = days_valid(date_split)\n\
    \    \n    months_valid = months_valid(date_split)\n    \n    days_valid = days_valid(date_split)\n\
    \    \n    months_valid = ", "    \n    date_split = split(date, \"-\")\n    \n\
    \    months = date_split[1]\n    days = date_split[2]\n    year = date_split[3]\n\
    \    \n    months_int = [1,2,3,4,5,6,7,8,9,10,11,12]\n    days_int = [0,31,30,31,30,31,31,30,31,30,31]\n\
    \    \n    months_valid = months_int .contains(months)\n    days_valid = days_int\
    \ .contains(days)\n    \n    year_valid = year.isdigit()\n    \n    date_valid\
    \ = months_valid and days_valid and year_valid\n    \n    return date_valid\n\
    end\n</cell>\n<code language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n\
    <code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\"\
    )\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that checks if a given date string is valid or not.",
  "    \n    valid_date::Bool = false \n    \n    if date == \"\" \n        valid_date\
    \ = false \n    else \n        valid_date = true \n    \n    if valid_date ==\
    \ false \n        valid_date = false \n    else \n        valid_date = true \n\
    \    \n    if valid_date == false \n        valid_date = false \n    else \n \
    \       valid_date = true \n    \n    if valid_date == false \n        valid_date\
    \ = false \n    else \n        valid_date = true \n    \n    if valid_date ==\
    \ false \n        valid_date = false \n    else \n        valid_date = true \n\
    \    \n    if valid_date == false \n        valid_date = false \n    else \n \
    \       valid_date = true \n    \n    if valid_date == false \n        valid_date\
    \ = false \n    else \n        valid_date = true \n    \n    if valid_date ==\
    \ false \n        valid_date = false \n    else \n        valid_date = true \n\
    \    \n    if valid_date == false \n        valid_date = false \n    else \n \
    \       valid_date = true \n    \n    if valid_date == false \n        valid_date\
    \ = false \n    else \n        valid_date = true \n    \n    if valid_date ==\
    \ false \n        valid_date = false \n    else \n        valid_date = true \n\
    \    \n    if valid_date == false \n        valid_date = false \n    else \n \
    \       valid_date = true \n    \n    if valid_date == false \n        valid_date\
    \ = false \n    else \n        valid_date = true \n    \n    if valid_date ==\
    \ false \n        valid_date = false \n    else \n        valid_date = true \n\
    \    \n    if valid_date == false \n        valid_date = false \n    else \n \
    \       valid_date = true \n    \n    if valid_date == false \n        valid_date\
    \ = false \n    else \n        valid_date = true \n    \n    if valid_date ==\
    \ false \n        valid_date = false \n    else \n        valid_date = true \n\
    \    \n    if valid_date == false \n        valid_date = false \n    else \n \
    \       valid_date = true \n    \n    if valid_date == false \n        valid_date\
    \ = false \n    else \n        valid_date = true \n    \n    if valid_date ==\
    \ false \n        valid_date = false \n    else \n        valid_date = true \n\
    \    \n    if valid_date == false \n        valid_date = false \n    else \n \
    \       valid_date = true \n    \n    if valid_date == false \n        valid_date\
    \ = false \n    else \n        valid_date = true \n    \n    if valid_date ==\
    \ false \n        valid_date = false \n    else \n        valid_date = true \n\
    \    \n    if valid_date == false \n        valid_date = false \n    else \n \
    \       valid_date = true ", "    \n    valid_date_str = date\n    valid_date_str\
    \ = valid_date_str[valid_date_str.length()-4:valid_date_str.length()]\n    valid_date_str\
    \ = valid_date_str[valid_date_str.length()-3:valid_date_str.length()]\n    valid_date_str\
    \ = valid_date_str[valid_date_str.length()-2:valid_date_str.length()]\n    valid_date_str\
    \ = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n    valid_date_str\
    \ = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n    valid_date_str\
    \ = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n    valid_date_str\
    \ = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n    valid_date_str\
    \ = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n    valid_date_str\
    \ = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n    valid_date_str\
    \ = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n    valid_date_str\
    \ = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n    valid_date_str\
    \ = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n    valid_date_str\
    \ = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n    valid_date_str\
    \ = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n    valid_date_str\
    \ = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n    valid_date_str\
    \ = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n    valid_date_str\
    \ = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n    valid_date_str\
    \ = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n    valid_date_str\
    \ = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n    valid_date_str\
    \ = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n    valid_date_str\
    \ = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n    valid_date_str\
    \ = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n    valid_date_str\
    \ = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n    valid_date_str\
    \ = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n    valid_date_str\
    \ = valid_date_str[valid_date_str.length()-1:valid_date_str.length()]\n    ",
  "    \n    valid_date_regex = Regex(\"^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-[0-9]{4}$\"\
    )\n    \n    if valid_date_regex.match(date) == nil \n        return false\n \
    \   end\n    \n    valid_date_days_regex = Regex(\"^((0?[1-9]|[12][0-9]|3[01])-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])).+$\"\
    )\n    \n    if valid_date_days_regex.match(date) == nil \n        return false\n\
    \    end\n    \n    valid_date_month_regex = Regex(\"^(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])$\"\
    )\n    \n    if valid_date_month_regex.match(date) == nil \n        return false\n\
    \    end\n    \n    valid_date_year_regex = Regex(\"^(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])-[0-9]{4}$\"\
    )\n    \n    if valid_date_year_regex.match(date) == nil \n        return false\n\
    \    end\n    \n    return true\nend\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    03-11-2000\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"04-0-2040\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06-04-2020\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06/04/2020\")\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a string and returns the number of words in the string.", "    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    days_str = valid_date_str.days()\n    if days_str < 1 or days_str >\
    \ 31\n        return false\n    end\n    months_str = valid_date_str.months()\n\
    \    if months_str < 1 or months_str > 12\n        return false\n    end\n   \
    \ years_str = valid_date_str.years()\n    if years_str < 1 or years_str > 9999\n\
    \        return false\n    end\n    return true\nend", "    \n    date_array =\
    \ string.split(date, \"-\")\n    \n    if date_array[1] < 1 || date_array[1] >\
    \ 12 || date_array[2] < 1 || date_array[2] > 31 || date_array[1] < 1 || date_array[1]\
    \ > 31 || date_array[2] < 1 || date_array[2] > 30 || date_array[1] < 1 || date_array[1]\
    \ > 29 || date_array[2] < 1 || date_array[2] > 29\n        return false\n    else\n\
    \        return true\n    end\nend\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    03-11-2000\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"04-0-2040\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06-04-2020\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06/04/2020\")\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ accepts a string and returns the number of characters in the string.", "   \
    \ \n    valid_date_regex = Regex(\"^((0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-((19|20)[0-9]{2}))$\"\
    )\n    valid_date_match = valid_date_regex.match(date)\n    \n    if valid_date_match\
    \ != nil\n        return true\n    else\n        return false\n    end\nend",
  "    \n    if date == \"\"\n        return false\n    endDate = Date.parse(date)\n\
    \    if endDate == nil\n        return false\n    endDate = endDate.day\n    if\
    \ endDate < 1 or endDate > 31\n        return false\n    endDate = endDate.month\n\
    \    if endDate < 1 or endDate > 12\n        return false\n    endDate = endDate.year\n\
    \    if endDate < 1 or endDate > 9999\n        return false\n    endDate = endDate.month\n\
    \    if endDate < 1 or endDate > 12\n        return false\n    endDate = endDate.day\n\
    \    if endDate < 1 or endDate > 31\n        return false\n    endDate = endDate.month\n\
    \    if endDate < 1 or endDate > 30\n        return false\n    endDate = endDate.day\n\
    \    if endDate < 1 or endDate > 29\n        return false\n    endDate = endDate.month\n\
    \    if endDate < 1 or endDate > 12\n        return false\n    endDate = endDate.day\n\
    \    if endDate < 1 or endDate > 31\n        return false\n    endDate = endDate.month\n\
    \    if endDate < 1 or endDate > 30\n        return false\n    endDate = endDate.day\n\
    \    if endDate < 1 or endDate > 29\n        return false\n    endDate = endDate.month\n\
    \    if endDate < 1 or endDate > 12\n        return false\n    endDate = endDate.day\n\
    \    if endDate < 1 or endDate > 31\n        return false\n    endDate = endDate.month\n\
    \    if endDate < 1 or endDate > 30\n        return false\n    endDate = endDate.day\n\
    \    if endDate < 1 or endDate > 29\n        return false\n    endDate = endDate.month\n\
    \    if endDate < 1 or endDate > 12\n        return false\n    endDate = endDate.day\n\
    \    if endDate < 1 or endDate > 31\n        return false\n    endDate = endDate.month\n\
    \    if endDate < 1 or endDate > 30\n        return false\n    endDate = endDate.day\n\
    \    if endDate < 1 or endDate > 29\n        return false\n    endDate = endDate.month\n\
    \    if endDate < 1 or endDate > 12\n        return false\n    endDate = endDate.day\n\
    \    if endDate < 1 or endDate > 31\n        return false\n    endDate = endDate.month\n\
    \    if endDate < 1 or endDate > 30\n        return false\n    endDate = endDate.day\n\
    \    if endDate < 1 or endDate > 29\n        return false\n    endDate = endDate.month\n\
    \    if endDate < 1 or endDate > 12\n        return false\n    endDate = endDate.day\n\
    \    if endDate < 1 or endDate > 31\n        return false\n    endDate = endDate.month\n\
    \    if endDate < 1 or end", "    \n    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n\
    \    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n\
    \    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n\
    \    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n\
    \    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n\
    \    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n\
    \    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n\
    \    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n\
    \    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n\
    \    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n\
    \    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n\
    \    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n\
    \    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n\
    \    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n\
    \    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n    days_month = [31,",
  "    \n    valid_date_str = date\n    valid_date_str = valid_date_str.replace(\"\
    \ \", \"\")\n    valid_date_str = valid_date_str.replace(\"-\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"/\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    :\", \"\")\n    valid_date_str = valid_date_str.replace(\"'\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"\\\"\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    ,\", \"\")\n    valid_date_str = valid_date_str.replace(\"\\\\\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"\\n\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    \\t\", \"\")\n    valid_date_str = valid_date_str.replace(\"\\r\", \"\")\n   \
    \ valid_date_str = valid_date_str.replace(\"!\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    ?\", \"\")\n    valid_date_str = valid_date_str.replace(\"(\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\")\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    [\", \"\")\n    valid_date_str = valid_date_str.replace(\"]\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"{\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    }\", \"\")\n    valid_date_str = valid_date_str.replace(\"(\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\")\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    ,\", \"\")\n    valid_date_str = valid_date_str.replace(\"<\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\">\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    ?\", \"\")\n    valid_date_str = valid_date_str.replace(\"!\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\",\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    :\", \"\")\n    valid_date_str = valid_date_str.replace(\";\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"'\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    !\", \"\")\n    valid_date_str = valid_date_str.replace(\"-\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"_\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    +\", \"\")\n    valid_date_str = valid_date_str.replace(\"*\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"%\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    ^\", \"\")\n    valid_date_str = valid_date_str.replace(\"~\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"%\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    &\", \"\")\n    valid_date_str = valid_date_str.replace(\"(\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\")\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    ,\", \"\")\n    valid_date_str = valid_date_str.replace(\"[\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"]\", \"\")\n    valid_date_str = valid_", "    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n \
    \       return false\n    end\n    valid_date_str = Date.parse(date)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n \
    \       return false\n    end\n    valid_date_str = Date.parse(date)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n \
    \       return false\n    end\n    valid_date_str = Date.parse(date)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n \
    \       return false\n    end\n    valid_date_str = Date.parse(date)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n \
    \       return false\n    end\n    valid_date_str = Date.parse(date)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n \
    \       return false\n    end\n    valid_date_str = Date.parse(date)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str", "    \n    if date == \"\"\n   \
    \     error(\"The date string cannot be empty\")\n    end"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

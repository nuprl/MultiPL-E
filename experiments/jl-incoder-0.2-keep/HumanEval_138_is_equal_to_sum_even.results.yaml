name: HumanEval_138_is_equal_to_sum_even
language: julia
results:
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\n\
    \        true\n    else\n        sum_of_four_evens(n) == n\nend\n</cell>\n<code\
    \ language=julia-1.4>\n@assert is_equal_to_sum_even(5) == false\n@assert is_equal_to_sum_even(6)\
    \ == false\n@assert is_equal_to_sum_even(8) == true\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that checks whether a given number n is divisible by another\
    \ number k. \nExample\nis_divisible(4, 2) == true\nis_divisible(4, 3) == false\n\
    is_divisible(4, 4) == true\nHint: use modulo division.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5i6t0bdg.jl:13\nin expression starting at\
    \ /tmp/tmp5i6t0bdg.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return False\n    else if n == 1 \n        then return True\n\
    \    else if n % 2 == 0 \n        then return is_equal_to_sum_even(n - 1)\n  \
    \  else if n % 2 == 1 \n        then return is_equal_to_sum_even(n - 2)\n    else\
    \ if n % 3 == 0 \n        then return is_equal_to_sum_even(n - 3)\n    else if\
    \ n % 3 == 1 \n        then return is_equal_to_sum_even(n - 4)\n    else if n\
    \ % 5 == 0 \n        then return is_equal_to_sum_even(n - 5)\n    else if n %\
    \ 5 == 1 \n        then return is_equal_to_sum_even(n - 6)\n    else if n % 7\
    \ == 0 \n        then return is_equal_to_sum_even(n - 7)\n    else if n % 7 ==\
    \ 1 \n        then return is_equal_to_sum_even(n - 8)\n    else return False\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"Evaluate whether the given number\
    \ n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    is_equal_to_sum_odd(4) == False\n    is_equal_to_sum_odd(6) == False\n  \
    \  is_equal_to_sum_odd(8) == True\n    \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsio6eo75.jl:9\nin expression starting at /tmp/tmpsio6eo75.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\n\
    \        true\n    else\n        if n%2==0\n            false\n        else\n\
    \            if n%3==0\n                false\n            else\n            \
    \    if n%4==0\n                    true\n                else\n             \
    \       false\n    end\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(8)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(9)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(11)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(12)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(13)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(14)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(15)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(16)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(17)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(18)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(19)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(20)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(21)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(22)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(23)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(24)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(25)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(26)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(27)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(28)\n</cell>\n<code language=julia-1.5>\n@code_\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcv_ki3wu.jl:23\nin expression starting at\
    \ /tmp/tmpcv_ki3wu.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return true\n    else if n % 2 == 0 \n        then return false\n\
    \    else if n % 4 == 0 \n        then return true\n    else if n % 8 == 0 \n\
    \        then return true\n    else if n % 16 == 0 \n        then return true\n\
    \    else if n % 32 == 0 \n        then return true\n    else if n % 64 == 0 \n\
    \        then return true\n    else if n % 128 == 0 \n        then return true\n\
    \    else if n % 256 == 0 \n        then return true\n    else if n % 512 == 0\
    \ \n        then return true\n    else if n % 1024 == 0 \n        then return\
    \ true\n    else if n % 2048 == 0 \n        then return true\n    else if n %\
    \ 4096 == 0 \n        then return true\n    else if n % 8192 == 0 \n        then\
    \ return true\n    else if n % 16384 == 0 \n        then return true\n    else\
    \ if n % 32768 == 0 \n        then return true\n    else if n % 65536 == 0 \n\
    \        then return true\n    else if n % 131072 == 0 \n        then return true\n\
    \    else if n % 262144 == 0 \n        then return true\n    else if n % 524288\
    \ == 0 \n        then return true\n    else if n % 1048576 == 0 \n        then\
    \ return true\n    else if n % 2097152 == 0 \n        then return true\n    else\
    \ if n % 4194304 == 0 \n        then return true\n    else if n % 8388608 == 0\
    \ \n        then return true\n    else if n % 16777216 == 0 \n        then return\
    \ true\n    else if n % 33554432 == 0 \n        then return true\n    else if\
    \ n % 67108864 == 0 \n        then return true\n    else if n % 134217728 == 0\
    \ \n        then return true\n    else if n % 268435456 == 0 \n        then return\
    \ true\n    else if n % 536870912 == 0 \n        then return true\n    else if\
    \ n % 1073741824 == 0 \n        then return true\n    else if n % 2147483648 ==\
    \ 0 \n        then return true\n    else if n % 4294967296 == 0 \n        then\
    \ return true\n    else if n % 8589934592 == 0 \n        then return true\n  \
    \  else if n % 17179869184 == 0 \n        then return true\n    else if n % 34359738368\
    \ == 0 \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t\
    @test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphvi3hwda.jl:9\nin expression starting at /tmp/tmphvi3hwda.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n<4\
    \ return false\n    else if n%2==0 return false\n    else if n%3==0 return false\n\
    \    else if n%5==0 return false\n    else return true\nend\n</cell>\n<code language=julia-1.0>\n\
    \"\"\"Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    is_equal_to_sum_odd(4) == False\n \
    \   is_equal_to_sum_odd(6) == False\n    is_equal_to_sum_odd(8) == True\n    \"\
    \"\"\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf6i8jpr5.jl:9\nin expression starting at /tmp/tmpf6i8jpr5.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\n\
    \    then return true\n    else if n==1\n    then return true\n    else if n==2\n\
    \    then return true\n    else if n==3\n    then return true\n    else if n==4\n\
    \    then return true\n    else if n==5\n    then return true\n    else if n==6\n\
    \    then return true\n    else if n==7\n    then return true\n    else if n==8\n\
    \    then return true\n    else if n==9\n    then return true\n    else if n==10\n\
    \    then return true\n    else if n==11\n    then return true\n    else if n==12\n\
    \    then return true\n    else if n==13\n    then return true\n    else if n==14\n\
    \    then return true\n    else if n==15\n    then return true\n    else if n==16\n\
    \    then return true\n    else if n==17\n    then return true\n    else if n==18\n\
    \    then return true\n    else if n==19\n    then return true\n    else if n==20\n\
    \    then return true\n    else if n==21\n    then return true\n    else if n==22\n\
    \    then return true\n    else if n==23\n    then return true\n    else if n==24\n\
    \    then return true\n    else if n==25\n    then return true\n    else if n==26\n\
    \    then return true\n    else if n==27\n    then return true\n    else if n==28\n\
    \    then return true\n    else if n==29\n    then return true\n    else if n==30\n\
    \    then return true\n    else if n==31\n    then return true\n    else if n==32\n\
    \    then return true\n    else if n==33\n    then return true\n    else if n==34\n\
    \    then return true\n    else if n==35\n    then return true\n    else if n==36\n\
    \    then return true\n    else if n==37\n    then return true\n    else if n==38\n\
    \    then return true\n    else if n==39\n    then return true\n    else if n==40\n\
    \    then return true\n    else if n==41\n    then return true\n    else if n==42\n\
    \    then return \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpucg25j32.jl:9\nin expression starting at /tmp/tmpucg25j32.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n<4\
    \ \n        return false\n    else if n%2==0 \n        return false\n    else\
    \ if n%3==0 \n        return false\n    else if n%5==0 \n        return false\n\
    \    else if n%7==0 \n        return false\n    else \n        return true\nend\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"Evaluate whether the given number n\
    \ can be written as the sum of exactly 4 positive odd numbers\n    Example\n \
    \   is_equal_to_sum_odd(4) == False\n    is_equal_to_sum_odd(6) == False\n   \
    \ is_equal_to_sum_odd(8) == True\n    \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppgx865dd.jl:10\nin expression starting at\
    \ /tmp/tmppgx865dd.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n<4\
    \ then return false\n    else if n%2==0 then return false\n    else if n%3==0\
    \ then return false\n    else if n%4==0 then return false\n    else return true\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"Evaluate whether the given number\
    \ n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    is_equal_to_sum_odd(4) == False\n    is_equal_to_sum_odd(6) == False\n  \
    \  is_equal_to_sum_odd(8) == True\n    \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7rv1k4mk.jl:8\nin expression starting at /tmp/tmp7rv1k4mk.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return True \n    else if n % 2 == 0 \n        then return\
    \ False \n    else if n % 4 == 0 \n        then return False \n    else if n %\
    \ 8 == 0 \n        then return False \n    else if n % 16 == 0 \n        then\
    \ return False \n    else if n % 32 == 0 \n        then return False \n    else\
    \ if n % 64 == 0 \n        then return False \n    else if n % 128 == 0 \n   \
    \     then return False \n    else if n % 256 == 0 \n        then return False\
    \ \n    else if n % 512 == 0 \n        then return False \n    else if n % 1024\
    \ == 0 \n        then return False \n    else if n % 2048 == 0 \n        then\
    \ return False \n    else if n % 4096 == 0 \n        then return False \n    else\
    \ if n % 8192 == 0 \n        then return False \n    else if n % 16384 == 0 \n\
    \        then return False \n    else if n % 32768 == 0 \n        then return\
    \ False \n    else if n % 65536 == 0 \n        then return False \n    else if\
    \ n % 131072 == 0 \n        then return False \n    else if n % 262144 == 0 \n\
    \        then return False \n    else if n % 524288 == 0 \n        then return\
    \ False \n    else if n % 1048576 == 0 \n        then return False \n    else\
    \ if n % 2097152 == 0 \n        then return False \n    else if n % 4194304 ==\
    \ 0 \n        then return False \n    else if n % 8388608 == 0 \n        then\
    \ return False \n    else if n % 16777216 == 0 \n        then return False \n\
    \    else if n % 33554432 == 0 \n        then return False \n    else if n % 67108864\
    \ == 0 \n        then return False \n    else if n % 134217728 == 0 \n       \
    \ then return False \n    else if n % 268435456 == 0 \n        then return False\
    \ \n    else if n % 536870912 == 0 \n        then return False \n    else if n\
    \ % 1073741824 == 0 \n        then return False \n    else if n % 2147483648 ==\
    \ 0 \n        then return False \n    else if n % 4294967296 == 0 \n        then\
    \ return False \n    else if n % 8589934592 == 0 \n        then return False \n\
    \    else if n % 17179869184 == 0 \n        then return False \n    else if n\
    \ % 34359738368 == 0 \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfrh9qikk.jl:9\nin expression starting at /tmp/tmpfrh9qikk.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return False\n    else if n % 2 == 0 \n        then return\
    \ False\n    else if n % 4 == 0 \n        then return False\n    else if n % 8\
    \ == 0 \n        then return False\n    else if n % 16 == 0 \n        then return\
    \ False\n    else if n % 32 == 0 \n        then return False\n    else if n %\
    \ 64 == 0 \n        then return False\n    else if n % 128 == 0 \n        then\
    \ return False\n    else if n % 256 == 0 \n        then return False\n    else\
    \ if n % 512 == 0 \n        then return False\n    else if n % 1024 == 0 \n  \
    \      then return False\n    else if n % 2048 == 0 \n        then return False\n\
    \    else if n % 4096 == 0 \n        then return False\n    else if n % 8192 ==\
    \ 0 \n        then return False\n    else if n % 16384 == 0 \n        then return\
    \ False\n    else if n % 32768 == 0 \n        then return False\n    else if n\
    \ % 65536 == 0 \n        then return False\n    else if n % 131072 == 0 \n   \
    \     then return False\n    else if n % 262144 == 0 \n        then return False\n\
    \    else if n % 524288 == 0 \n        then return False\n    else if n % 1048576\
    \ == 0 \n        then return False\n    else if n % 2097152 == 0 \n        then\
    \ return False\n    else if n % 4194304 == 0 \n        then return False\n   \
    \ else if n % 8388608 == 0 \n        then return False\n    else if n % 16777216\
    \ == 0 \n        then return False\n    else if n % 33554432 == 0 \n        then\
    \ return False\n    else if n % 67108864 == 0 \n        then return False\n  \
    \  else if n % 134217728 == 0 \n        then return False\n    else if n % 268435456\
    \ == 0 \n        then return False\n    else if n % 536870912 == 0 \n        then\
    \ return False\n    else if n % 1073741824 == 0 \n        then return False\n\
    \    else if n % 2147483648 == 0 \n        then return False\n    else if n %\
    \ 4294967296 == 0 \n        then return False\n    else if n % 8589934592 == 0\
    \ \n        then return False\n    else if n % 17179869184 == 0 \n        then\
    \ return False\n    else if n % 34359738368 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppoyzpumw.jl:9\nin expression starting at /tmp/tmppoyzpumw.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even_helper(n)\
    \ == True \n    else \n        error(\"The given number $n cannot be written as\
    \ the sum of exactly 4 positive even numbers\")\nend\n\"\"\"\n    \nusing Test\n\
    \n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) ==\
    \ false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprtvgqkvc.jl:1\nin expression starting at /tmp/tmprtvgqkvc.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even_helper(n)\
    \ == True\n    else \n        return false\nend\n\"\"\"\n    Evaluate whether\
    \ the given number n can be written as the sum of exactly 4 positive odd numbers\n\
    \    Example\n    is_equal_to_sum_odd(4) == False\n    is_equal_to_sum_odd(6)\
    \ == False\n    is_equal_to_sum_odd(8) == True\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjsqiikln.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjsqiikln.jl:1\n\
    in expression starting at /tmp/tmpjsqiikln.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <\
    \ 4 \n        return false \n    else \n        return is_equal_to_sum_even(n\
    \ - 4) == true \nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(8)\
    \ == true\n@assert is_equal_to_sum_even(6) == false\n@assert is_equal_to_sum_even(5)\
    \ == false\n@assert is_equal_to_sum_even(2) == false\n@assert is_equal_to_sum_even(10)\
    \ == false\n@assert is_equal_to_sum_even(11) == false\n@assert is_equal_to_sum_even(12)\
    \ == false\n@assert is_equal_to_sum_even(13) == false\n@assert is_equal_to_sum_even(14)\
    \ == false\n@assert is_equal_to_sum_even(15) == false\n@assert is_equal_to_sum_even(16)\
    \ == false\n@assert is_equal_to_sum_even(17) == false\n@assert is_equal_to_sum_even(18)\
    \ == false\n@assert is_equal_to_sum_even(19) == false\n@assert is_equal_to_sum_even(20)\
    \ == false\n@assert is_equal_to_sum_even(21) == false\n@assert is_equal_to_sum_even(22)\
    \ == false\n@assert is_equal_to_sum_even(23) == false\n@assert is_equal_to_sum_even(24)\
    \ == false\n@assert is_equal_to_sum_even(25) == false\n@assert is_equal_to_sum_even(26)\
    \ == false\n@assert is_equal_to_sum_even(27) == false\n@assert is_equal_to_sum_even(28)\
    \ == false\n@assert is_equal_to_sum_even(29) == false\n@assert is_equal_to_sum_even(30)\
    \ == false\n@assert is_equal_to_sum_even(31) == false\n@assert is_equal_to_sum_even(32)\
    \ == false\n@assert is_equal_to_sum_even(33) == false\n@assert is_equal_to_sum_even(34)\
    \ == false\n@assert is_equal_to_sum_even(35) == false\n@assert is_equal_to_sum_even(36)\
    \ == false\n@assert is_equal_to_sum_even(37) == false\n@assert is_equal_to_sum_even(38)\
    \ == false\n@assert is_equal_to_sum_even(39) == false\n@assert is_equal_to_sum_even(40)\
    \ == false\n@assert is_equal_to_sum_even(41) == false\n@assert is_equal_to_sum_even(42)\
    \ == false\n@assert is_equal_to_sum_even(43) == false\n@assert is_equal_to_sum_even(44)\
    \ == false\n@assert is_equal_to_sum_even(45) == false\n@assert is_equal_to_sum_even(46)\
    \ == false\n@assert is_equal_to_sum_even(47) == false\n@assert is_equal_to_sum_even(48)\
    \ == false\n@assert is_equal_to_sum_\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcxahc9gn.jl:13\nin expression starting at\
    \ /tmp/tmpcxahc9gn.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <=\
    \ 0\n    then return False\n    else if n == 1\n    then return True\n    else\
    \ if n % 2 == 0\n    then return is_equal_to_sum_even(n - 1)\n    else return\
    \ is_equal_to_sum_even(n - 3) && is_equal_to_sum_even(n - 2)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) ==\
    \ false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7pce0hp7.jl:9\nin expression starting at /tmp/tmp7pce0hp7.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return True \n    else if n % 2 == 0 \n        then return\
    \ is_equal_to_sum_even(n - 1) \n        else return False \nend\n</cell>\n<code\
    \ language=julia-1.3>\n\"\"\"Evaluate whether the given number n can be written\
    \ as the sum of exactly 4 positive odd numbers\n    Example\n    is_equal_to_sum_odd(4)\
    \ == False\n    is_equal_to_sum_odd(6) == False\n    is_equal_to_sum_odd(8) ==\
    \ True\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpoa9d03yk.jl:9\nin expression starting at /tmp/tmpoa9d03yk.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <=\
    \ 0\n        error(\"n must be positive\")\n    else if n == 0\n        true\n\
    \    else\n        sum_of_four_evens(n) == n\nend\n</cell>\n<code language=julia-1.3>\n\
    @assert is_equal_to_sum_even(10) == true\n@assert is_equal_to_sum_even(12) ==\
    \ false\n@assert is_equal_to_sum_even(13) == false\n@assert is_equal_to_sum_even(14)\
    \ == true\n@assert is_equal_to_sum_even(15) == false\n@assert is_equal_to_sum_even(16)\
    \ == true\n@assert is_equal_to_sum_even(17) == false\n@assert is_equal_to_sum_even(18)\
    \ == true\n@assert is_equal_to_sum_even(19) == false\n@assert is_equal_to_sum_even(20)\
    \ == true\n@assert is_equal_to_sum_even(21) == false\n@assert is_equal_to_sum_even(22)\
    \ == true\n@assert is_equal_to_sum_even(23) == false\n@assert is_equal_to_sum_even(24)\
    \ == true\n@assert is_equal_to_sum_even(25) == false\n@assert is_equal_to_sum_even(26)\
    \ == true\n@assert is_equal_to_sum_even(27) == false\n@assert is_equal_to_sum_even(28)\
    \ == true\n@assert is_equal_to_sum_even(29) == false\n@assert is_equal_to_sum_even(30)\
    \ == true\n@assert is_equal_to_sum_even(31) == false\n@assert is_equal_to_sum_even(32)\
    \ == true\n@assert is_equal_to_sum_even(33) == false\n@assert is_equal_to_sum_even(34)\
    \ == true\n@assert is_equal_to_sum_even(35) == false\n@assert is_equal_to_sum_even(36)\
    \ == true\n@assert is_equal_to_sum_even(37) == false\n@assert is_equal_to_sum_even(38)\
    \ == true\n@assert is_equal_to_sum_even(39) == false\n@assert is_equal_to_sum_even(40)\
    \ == true\n@assert is_equal_to_sum_even(41) == false\n@assert is_equal_to_sum_even(42)\
    \ == true\n@assert is_equal_to_sum_even(43) == false\n@assert is_equal_to_sum_even(44)\
    \ == true\n@assert is_equal_to_sum_even(45) == false\n@assert is_equal_to_sum_even(46)\
    \ == true\n@assert is_equal_to_sum_even(47) == false\n@assert is_equal_to_sum_even(48)\
    \ == true\n@assert is_equal_to_sum_even(49) == false\n@assert is_equal_to_sum_even(50)\
    \ == true\n@assert is_equal_to_sum_even(51) == false\n@assert is_equal_to_sum_even(52)\
    \ == true\n@assert is_equal_\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp_frcq48.jl:10\nin expression starting at\
    \ /tmp/tmpp_frcq48.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <=\
    \ 0\n        error(\"n must be positive\")\n    else if n % 2 == 0\n        error(\"\
    n must be even\")\n    else if n < 4\n        true\n    else\n        false\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(2) == true\n\
    @assert is_equal_to_sum_even(6) == false\n@assert is_equal_to_sum_even(8) == true\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the sum of the first\
    \ n positive integers. Your function should raise an error if n is less than or\
    \ equal to 0.\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppvx7r3hm.jl:10\nin expression starting at\
    \ /tmp/tmppvx7r3hm.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return False\n    else if n % 2 == 0 \n        then return\
    \ False\n    else if n % 4 == 0 \n        then return True\n    else if n % 8\
    \ == 0 \n        then return True\n    else if n % 16 == 0 \n        then return\
    \ True\n    else if n % 32 == 0 \n        then return True\n    else if n % 64\
    \ == 0 \n        then return True\n    else if n % 128 == 0 \n        then return\
    \ True\n    else if n % 256 == 0 \n        then return True\n    else if n % 512\
    \ == 0 \n        then return True\n    else if n % 1024 == 0 \n        then return\
    \ True\n    else if n % 2048 == 0 \n        then return True\n    else if n %\
    \ 4096 == 0 \n        then return True\n    else if n % 8192 == 0 \n        then\
    \ return True\n    else if n % 16384 == 0 \n        then return True\n    else\
    \ if n % 32768 == 0 \n        then return True\n    else if n % 65536 == 0 \n\
    \        then return True\n    else if n % 131072 == 0 \n        then return True\n\
    \    else if n % 262144 == 0 \n        then return True\n    else if n % 524288\
    \ == 0 \n        then return True\n    else if n % 1048576 == 0 \n        then\
    \ return True\n    else if n % 2097152 == 0 \n        then return True\n    else\
    \ if n % 4194304 == 0 \n        then return True\n    else if n % 8388608 == 0\
    \ \n        then return True\n    else if n % 16777216 == 0 \n        then return\
    \ True\n    else if n % 33554432 == 0 \n        then return True\n    else if\
    \ n % 67108864 == 0 \n        then return True\n    else if n % 134217728 == 0\
    \ \n        then return True\n    else if n % 268435456 == 0 \n        then return\
    \ True\n    else if n % 536870912 == 0 \n        then return True\n    else if\
    \ n % 1073741824 == 0 \n        then return True\n    else if n % 2147483648 ==\
    \ 0 \n        then return True\n    else if n % 4294967296 == 0 \n        then\
    \ return True\n    else if n % 8589934592 == 0 \n        then return True\n  \
    \  else if n % 17179869184 == 0 \n        then return True\n    else if n % 34359738368\
    \ == 0 \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t\
    @test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpv1h08am5.jl:9\nin expression starting at /tmp/tmpv1h08am5.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return False \n    else if n % 2 == 0 \n        then return\
    \ is_equal_to_sum_even(n - 1) \n    else \n        then return is_equal_to_sum_even(n\
    \ - 2) \n    else \n        then return is_equal_to_sum_even(n - 3) \n    else\
    \ \n        then return is_equal_to_sum_even(n - 4) \n    else \n        then\
    \ return True \nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(5)\
    \ == false\n@assert is_equal_to_sum_even(6) == false\n@assert is_equal_to_sum_even(8)\
    \ == true\n</cell>\n<text>\nExercise 2\nWrite a function that checks whether a\
    \ given number n is equal to the sum of exactly 4 positive odd numbers.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_nxb3_7k.jl:9\nin expression starting at /tmp/tmp_nxb3_7k.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return False\n    else if n % 2 == 0 \n        then return\
    \ False\n    else if n % 4 == 0 \n        then return True\n    else \n      \
    \  return is_equal_to_sum_even(n - 1)\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(10) == False\n@assert is_equal_to_sum_even(12) ==\
    \ False\n@assert is_equal_to_sum_even(14) == True\n</cell>\n<text>\nProblem 7:\
    \ Write a function that returns True if n is a prime number. You may assume that\
    \ n is positive.\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpf9zm7cz5.jl:9\nin expression starting at /tmp/tmpf9zm7cz5.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return True\n    else if n % 2 == 0 \n        then return False\n\
    \    else if n % 4 == 0 \n        then return True\n    else if n % 8 == 0 \n\
    \        then return False\n    else if n % 16 == 0 \n        then return True\n\
    \    else if n % 32 == 0 \n        then return False\n    else if n % 64 == 0\
    \ \n        then return True\n    else if n % 128 == 0 \n        then return False\n\
    \    else if n % 256 == 0 \n        then return True\n    else if n % 512 == 0\
    \ \n        then return False\n    else if n % 1024 == 0 \n        then return\
    \ True\n    else return False\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\
    Evaluate whether the given number n can be written as the sum of exactly 4 positive\
    \ odd numbers\n    Example\n    is_equal_to_sum_odd(4) == False\n    is_equal_to_sum_odd(6)\
    \ == False\n    is_equal_to_sum_odd(8) == True\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp86mi64g4.jl:9\nin expression starting at /tmp/tmp86mi64g4.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return true\n    else if n % 2 == 0 \n        then return false\n\
    \    else if n % 4 == 0 \n        then return true\n    else if n % 8 == 0 \n\
    \        then return false\n    else if n % 16 == 0 \n        then return true\n\
    \    else if n % 32 == 0 \n        then return false\n    else if n % 64 == 0\
    \ \n        then return true\n    else if n % 128 == 0 \n        then return false\n\
    \    else if n % 256 == 0 \n        then return true\n    else if n % 512 == 0\
    \ \n        then return false\n    else if n % 1024 == 0 \n        then return\
    \ true\n    else if n % 2048 == 0 \n        then return false\n    else if n %\
    \ 4096 == 0 \n        then return true\n    else if n % 8192 == 0 \n        then\
    \ return false\n    else if n % 16384 == 0 \n        then return true\n    else\
    \ if n % 32768 == 0 \n        then return false\n    else if n % 65536 == 0 \n\
    \        then return true\n    else if n % 131072 == 0 \n        then return false\n\
    \    else if n % 262144 == 0 \n        then return true\n    else if n % 524288\
    \ == 0 \n        then return false\n    else if n % 1048576 == 0 \n        then\
    \ return true\n    else if n % 2097152 == 0 \n        then return false\n    else\
    \ if n % 4194304 == 0 \n        then return true\n    else if n % 8388608 == 0\
    \ \n        then return false\n    else if n % 16777216 == 0 \n        then return\
    \ true\n    else if n % 33554432 == 0 \n        then return false\n    else if\
    \ n % 67108864 == 0 \n        then return true\n    else if n % 134217728 == 0\
    \ \n        then return false\n    else if n % 268435456 == 0 \n        then return\
    \ true\n    else if n % 536870912 == 0 \n        then return false\n    else if\
    \ n % 1073741824 == 0 \n        then return true\n    else if n % 2147483648 ==\
    \ 0 \n        then return false\n    else if n % 4294967296 == 0 \n        then\
    \ return true\n    else if n % 8589934592 == 0 \n        then return false\n \
    \   else if n % 17179869184 == 0 \n        then return true\n    else if n % 34359738368\
    \ == 0 \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t\
    @test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0_3ww82_.jl:9\nin expression starting at /tmp/tmp0_3ww82_.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return True \n    else if n % 2 == 0 \n        then return\
    \ False \n    else if n % 4 == 0 \n        then return True \n    else \n    \
    \    return is_equal_to_sum_even(n - 1) \nend\n</cell>\n<code language=julia-1.3>\n\
    @time is_equal_to_sum_even(10)\n</cell>\n<code language=julia-1.3>\n@time is_equal_to_sum_even(100)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that checks whether a given number\
    \ n is prime or not. \nThe function should return true if the number is prime\
    \ and false otherwise.\nThe function should work for any positive integer n.\n\
    using Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprp42_npu.jl:9\nin expression starting at /tmp/tmprp42_npu.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <\
    \ 0 \n        then return False\n    else if n == 0 \n        then return True\n\
    \    else if n % 2 == 0 \n        then return False\n    else if n % 4 == 0 \n\
    \        then return True\n    else return is_equal_to_sum_even(n - 1)\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(2) == False\n\
    @assert is_equal_to_sum_even(5) == False\n@assert is_equal_to_sum_even(8) == True\n\
    </cell>\n<text>\nProblem 3\nWrite a function that returns the number of positive\
    \ integers less than or equal to n that are divisible by 3.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpuxgbs1vn.jl:9\nin expression starting at /tmp/tmpuxgbs1vn.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <\
    \ 4 \n        return false\n    else if n == 4 \n        return true\n    else\
    \ if n % 2 == 0 \n        return is_equal_to_sum_even(n / 2)\n    else \n    \
    \    return is_equal_to_sum_even(n / 2) && is_equal_to_sum_even(3 * n + 2)\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(8) == true\n\
    @assert is_equal_to_sum_even(6) == false\n@assert is_equal_to_sum_even(5) == false\n\
    @assert is_equal_to_sum_even(7) == false\n@assert is_equal_to_sum_even(10) ==\
    \ false\n@assert is_equal_to_sum_even(11) == false\n@assert is_equal_to_sum_even(12)\
    \ == false\n@assert is_equal_to_sum_even(13) == false\n@assert is_equal_to_sum_even(14)\
    \ == false\n@assert is_equal_to_sum_even(15) == false\n@assert is_equal_to_sum_even(16)\
    \ == false\n@assert is_equal_to_sum_even(17) == false\n@assert is_equal_to_sum_even(18)\
    \ == false\n@assert is_equal_to_sum_even(19) == false\n@assert is_equal_to_sum_even(20)\
    \ == false\n@assert is_equal_to_sum_even(21) == false\n@assert is_equal_to_sum_even(22)\
    \ == false\n@assert is_equal_to_sum_even(23) == false\n@assert is_equal_to_sum_even(24)\
    \ == false\n@assert is_equal_to_sum_even(25) == false\n@assert is_equal_to_sum_even(26)\
    \ == false\n@assert is_equal_to_sum_even(27) == false\n@assert is_equal_to_sum_even(28)\
    \ == false\n@assert is_equal_to_sum_even(29) == false\n@assert is_equal_to_sum_even(30)\
    \ == false\n@assert is_equal_to_sum_even(31) == false\n@assert is_equal_to_sum_even(32)\
    \ == false\n@assert is_equal_to_sum_even(33) == false\n@assert is_equal_to_sum_even(34)\
    \ == false\n@assert is_equal_to_sum_even(35) == false\n@assert is_equal_to_sum_even(36)\
    \ == false\n@assert is_equal_to_sum_even(37) == false\n@assert is_equal_to_sum_even(38)\
    \ == false\n@assert is_equal_to_sum_even(39) == false\n@assert is_equal_to_sum_even(40)\
    \ == false\n@assert is_equal_to_sum_even(41) == false\n@assert is_equal_to_sum_even(42)\
    \ == false\n@assert is_equal_to_sum_even(43) == false\n@assert is_equal_to_sum_even(44)\
    \ == false\n@assert is_equal_to_sum_even(45) == false\n@assert is_equal_to_\n\
    using Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf_6fhq6i.jl:10\nin expression starting at\
    \ /tmp/tmpf_6fhq6i.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n<4\
    \ return false\n    else if n%2==0 return false\n    else if n%3==0 return false\n\
    \    else if n%4==0 return true\n    else return false\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(2) == false\n@assert is_equal_to_sum_even(6) == false\n\
    @assert is_equal_to_sum_even(8) == true\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that checks whether a given number n is prime or not. \nA prime number\
    \ is a natural number greater than 1 that has no positive divisors other than\
    \ 1 and itself.\nFor example 5 is a prime number.\nusing Test\n\n@testset begin\n\
    \ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplvaioaol.jl:9\nin expression starting at /tmp/tmplvaioaol.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <=\
    \ 0 \n        then return False\n    else if n == 0 \n        then return True\n\
    \    else if n % 2 == 0 \n        then return is_equal_to_sum_even(n - 1)\n  \
    \  else \n        return is_equal_to_sum_even(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(2) == False\n@assert is_equal_to_sum_even(3) == False\n\
    @assert is_equal_to_sum_even(5) == True\n@assert is_equal_to_sum_even(8) == True\n\
    @assert is_equal_to_sum_even(10) == True\n@assert is_equal_to_sum_even(11) ==\
    \ False\n@assert is_equal_to_sum_even(12) == False\n@assert is_equal_to_sum_even(13)\
    \ == False\n@assert is_equal_to_sum_even(14) == False\n@assert is_equal_to_sum_even(15)\
    \ == False\n@assert is_equal_to_sum_even(16) == False\n@assert is_equal_to_sum_even(17)\
    \ == False\n@assert is_equal_to_sum_even(18) == False\n@assert is_equal_to_sum_even(19)\
    \ == False\n@assert is_equal_to_sum_even(20) == False\n@assert is_equal_to_sum_even(21)\
    \ == False\n@assert is_equal_to_sum_even(22) == False\n@assert is_equal_to_sum_even(23)\
    \ == False\n@assert is_equal_to_sum_even(24) == False\n@assert is_equal_to_sum_even(25)\
    \ == False\n@assert is_equal_to_sum_even(26) == False\n@assert is_equal_to_sum_even(27)\
    \ == False\n@assert is_equal_to_sum_even(28) == False\n@assert is_equal_to_sum_even(29)\
    \ == False\n@assert is_equal_to_sum_even(30) == False\n@assert is_equal_to_sum_even(31)\
    \ == False\n@assert is_equal_to_sum_even(32) == False\n@assert is_equal_to_sum_even(33)\
    \ == False\n@assert is_equal_to_sum_even(34) == False\n@assert is_equal_to_sum_even(35)\
    \ == False\n@assert is_equal_to_sum_even(36) == False\n@assert is_equal_to_sum_even(37)\
    \ == False\n@assert is_equal_to_sum_even(38) == False\n@assert is_equal_to_sum_even(39)\
    \ == False\n@assert is_equal_to_sum_even(40) == False\n@assert is_equal_to_sum_even(41)\
    \ == False\n@assert is_equal_to_sum_even(42) == False\n@assert is_equal_to_sum_even(43)\
    \ == False\n@assert is_equal_to_sum_even(44) == False\n@assert is_equal_to_sum_even(45)\
    \ == False\n@assert is_equal_to_sum_even(46) == \nusing Test\n\n@testset begin\n\
    \ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsmc5fkwy.jl:9\nin expression starting at /tmp/tmpsmc5fkwy.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even_helper(n)\
    \ == true\n    else return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgtzmzq60.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgtzmzq60.jl:1\n\
    in expression starting at /tmp/tmpgtzmzq60.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\
    \ then return false \n    else if n==1 then return true \n    else if n%2==0 then\
    \ return false \n    else if n%3==0 then return false \n    else if n%4==0 then\
    \ return true \n    else return false \nend \n</cell>\n<code language=julia-1.3>\n\
    \"\"\"Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    is_equal_to_sum_odd(4) == False\n \
    \   is_equal_to_sum_odd(6) == False\n    is_equal_to_sum_odd(8) == True\n    \"\
    \"\"\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpy7w5jxhq.jl:8\nin expression starting at /tmp/tmpy7w5jxhq.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <=\
    \ 0\n        error(\"n must be positive\")\n    else if n % 2 != 0\n        error(\"\
    n must be even\")\n    else if n < 4\n        true\n    else\n        false\n\
    end\n</cell>\n<code language=julia-1.3>\n\"\"\"Evaluate whether the given number\
    \ n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    is_equal_to_sum_odd(4) == False\n    is_equal_to_sum_odd(6) == False\n  \
    \  is_equal_to_sum_odd(8) == True\n    \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp15cy3m4t.jl:10\nin expression starting at\
    \ /tmp/tmp15cy3m4t.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even_helper(n)\
    \ == true\n    else return false\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n\
    \    if n == 0 return true\n    else if n % 2 == 0 return false\n    else if n\
    \ % 4 == 0 return true\n    else return is_equal_to_sum_even_helper(n - 2)\nend\n\
    \"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n    if n == 0 return true\n\
    \    else if n % 2 == 0 return false\n    else if n % 4 == 0 return true\n   \
    \ else return is_equal_to_sum_even_helper(n - 2)\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n\
    \    if n == 0 return true\n    else if n % 2 == 0 return false\n    else if n\
    \ % 4 == 0 return true\n    else return is_equal_to_sum_even_helper(n - 2)\nend\n\
    \"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n    if n == 0 return true\n\
    \    else if n % 2 == 0 return false\n    else if n % 4 == 0 return true\n   \
    \ else return is_equal_to_sum_even_helper(n - 2)\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n\
    \    if n == 0 return true\n    else if n % 2 == 0 return false\n    else if n\
    \ % 4 == 0 return true\n    else return is_equal_to_sum_even_helper(n - 2)\nend\n\
    \"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n    if n == 0 return true\n\
    \    else if n % 2 == 0 return false\n    else if n % 4 == 0 return true\n   \
    \ else return is_equal_to_sum_even_helper(n - 2)\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n\
    \    if n == 0 return true\n    else if n % 2 == 0 return false\n    else if n\
    \ % 4 == 0 return true\n    else return is_equal_to_sum_even_helper(n - 2)\nend\n\
    \"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n    if n == 0 return true\n\
    \    else if n % 2 == 0 return false\n    else if n % 4 == 0 return true\n   \
    \ else return is_equal_to_sum_even_helper(n - 2)\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n\
    \    if n == 0 return true\n    else if n % 2 == 0 return \nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1f54mrid.jl:21\nin expression starting at\
    \ /tmp/tmp1f54mrid.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <\
    \ 0\n        error(\"n must be positive\")\n    else if n < 4\n        true\n\
    \    else\n        false\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(2)\
    \ == true\n@assert is_equal_to_sum_even(5) == false\n@assert is_equal_to_sum_even(10)\
    \ == true\n@assert is_equal_to_sum_even(11) == false\n@assert is_equal_to_sum_even(12)\
    \ == false\n@assert is_equal_to_sum_even(13) == false\n@assert is_equal_to_sum_even(14)\
    \ == true\n@assert is_equal_to_sum_even(15) == false\n@assert is_equal_to_sum_even(16)\
    \ == true\n@assert is_equal_to_sum_even(17) == false\n@assert is_equal_to_sum_even(18)\
    \ == true\n@assert is_equal_to_sum_even(19) == false\n@assert is_equal_to_sum_even(20)\
    \ == true\n@assert is_equal_to_sum_even(21) == false\n@assert is_equal_to_sum_even(22)\
    \ == true\n@assert is_equal_to_sum_even(23) == false\n@assert is_equal_to_sum_even(24)\
    \ == true\n@assert is_equal_to_sum_even(25) == false\n@assert is_equal_to_sum_even(26)\
    \ == true\n@assert is_equal_to_sum_even(27) == false\n@assert is_equal_to_sum_even(28)\
    \ == true\n@assert is_equal_to_sum_even(29) == false\n@assert is_equal_to_sum_even(30)\
    \ == true\n@assert is_equal_to_sum_even(31) == false\n@assert is_equal_to_sum_even(32)\
    \ == true\n@assert is_equal_to_sum_even(33) == false\n@assert is_equal_to_sum_even(34)\
    \ == true\n@assert is_equal_to_sum_even(35) == false\n@assert is_equal_to_sum_even(36)\
    \ == true\n@assert is_equal_to_sum_even(37) == false\n@assert is_equal_to_sum_even(38)\
    \ == true\n@assert is_equal_to_sum_even(39) == false\n@assert is_equal_to_sum_even(40)\
    \ == true\n@assert is_equal_to_sum_even(41) == false\n@assert is_equal_to_sum_even(42)\
    \ == true\n@assert is_equal_to_sum_even(43) == false\n@assert is_equal_to_sum_even(44)\
    \ == true\n@assert is_equal_to_sum_even(45) == false\n@assert is_equal_to_sum_even(46)\
    \ == true\n@assert is_equal_to_sum_even(47) == false\n@assert is_equal_to_sum_even(48)\
    \ == true\n@assert is_equal_to_sum_even(49) == false\n@assert is_equal_to_sum_even(50)\
    \ == true\n@assert \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz_tk7qj7.jl:10\nin expression starting at\
    \ /tmp/tmpz_tk7qj7.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\
    \ then return true\n    else if n==1 then return true\n    else if n==2 then return\
    \ true\n    else if n==3 then return true\n    else if n==4 then return true\n\
    \    else if n==5 then return true\n    else if n==6 then return true\n    else\
    \ if n==7 then return true\n    else if n==8 then return true\n    else if n==9\
    \ then return true\n    else if n==10 then return true\n    else if n==11 then\
    \ return true\n    else if n==12 then return true\n    else if n==13 then return\
    \ true\n    else if n==14 then return true\n    else if n==15 then return true\n\
    \    else if n==16 then return true\n    else if n==17 then return true\n    else\
    \ if n==18 then return true\n    else if n==19 then return true\n    else if n==20\
    \ then return true\n    else if n==21 then return true\n    else if n==22 then\
    \ return true\n    else if n==23 then return true\n    else if n==24 then return\
    \ true\n    else if n==25 then return true\n    else if n==26 then return true\n\
    \    else if n==27 then return true\n    else if n==28 then return true\n    else\
    \ if n==29 then return true\n    else if n==30 then return true\n    else if n==31\
    \ then return true\n    else if n==32 then return true\n    else if n==33 then\
    \ return true\n    else if n==34 then return true\n    else if n==35 then return\
    \ true\n    else if n==36 then return true\n    else if n==37 then return true\n\
    \    else if n==38 then return true\n    else if n==39 then return true\n    else\
    \ if n==40 then return true\n    else if n==41 then return true\n    else if n==42\
    \ then return true\n    else if n==43 then return true\n    else if n==44 then\
    \ return true\n    else if n==45 then return true\n    else if n==46 then return\
    \ true\n    else if n==47 then return true\n    else if n==48 then return true\n\
    \    else if n==49 then return true\n    else if n\nusing Test\n\n@testset begin\n\
    \ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprosw4byg.jl:8\nin expression starting at /tmp/tmprosw4byg.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return False \n    else if n == 1 \n        then return True\
    \ \n    else if n % 2 == 0 \n        then return is_equal_to_sum_even(n - 1) \n\
    \    else \n        then return is_equal_to_sum_even(n - 2) \n    else \n    \
    \    then return is_equal_to_sum_even(n - 3) \n    else \n        then return\
    \ is_equal_to_sum_even(n - 4) \n    else \n        then return False \nend\n</cell>\n\
    <code language=julia-1.5>\n@assert is_equal_to_sum_even(2) == true\n@assert is_equal_to_sum_even(5)\
    \ == true\n@assert is_equal_to_sum_even(8) == true\n@assert is_equal_to_sum_even(10)\
    \ == false\n@assert is_equal_to_sum_even(11) == false\n@assert is_equal_to_sum_even(12)\
    \ == false\n@assert is_equal_to_sum_even(13) == false\n@assert is_equal_to_sum_even(14)\
    \ == false\n@assert is_equal_to_sum_even(15) == false\n@assert is_equal_to_sum_even(16)\
    \ == false\n@assert is_equal_to_sum_even(17) == false\n@assert is_equal_to_sum_even(18)\
    \ == false\n@assert is_equal_to_sum_even(19) == false\n@assert is_equal_to_sum_even(20)\
    \ == false\n@assert is_equal_to_sum_even(21) == false\n@assert is_equal_to_sum_even(22)\
    \ == false\n@assert is_equal_to_sum_even(23) == false\n@assert is_equal_to_sum_even(24)\
    \ == false\n@assert is_equal_to_sum_even(25) == false\n@assert is_equal_to_sum_even(26)\
    \ == false\n@assert is_equal_to_sum_even(27) == false\n@assert is_equal_to_sum_even(28)\
    \ == false\n@assert is_equal_to_sum_even(29) == false\n@assert is_equal_to_sum_even(30)\
    \ == false\n@assert is_equal_to_sum_even(31) == false\n@assert is_equal_to_sum_even(32)\
    \ == false\n@assert is_equal_to_sum_even(33) == false\n@assert is_equal_to_sum_even(34)\
    \ == false\n@assert is_equal_to_sum_even(35) == false\n@assert is_equal_to_sum_even(36)\
    \ == false\n@assert is_equal_to_sum_even(37) == false\n@assert is_equal_to_sum_even(38)\
    \ == false\n@assert is_equal_to_sum_even(39) == false\n@assert is_equal_to_sum_even(40)\
    \ == false\n@assert is_equal_to_sum_even(41) == false\n@assert is_equal_to_sum_even(42)\
    \ == false\n@assert is_equal_to_sum_even(43) == false\n@assert is_equal_to_\n\
    using Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjuwzfcel.jl:9\nin expression starting at /tmp/tmpjuwzfcel.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even_helper(n)\
    \ == true\n    else \n        false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp39ea_5e8.jl:18\n  Test threw exception\n\
    \  Expression: candidate(4) == false\n  UndefVarError: is_equal_to_sum_even_helper\
    \ not defined\n  Stacktrace:\n   [1] is_equal_to_sum_even(n::Int64)\n     @ Main\
    \ /tmp/tmp39ea_5e8.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp39ea_5e8.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp39ea_5e8.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp39ea_5e8.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(6) == false\n  UndefVarError: is_equal_to_sum_even_helper not defined\n\
    \  Stacktrace:\n   [1] is_equal_to_sum_even(n::Int64)\n     @ Main /tmp/tmp39ea_5e8.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp39ea_5e8.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp39ea_5e8.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp39ea_5e8.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(8) == true\n  UndefVarError: is_equal_to_sum_even_helper not defined\n\
    \  Stacktrace:\n   [1] is_equal_to_sum_even(n::Int64)\n     @ Main /tmp/tmp39ea_5e8.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp39ea_5e8.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp39ea_5e8.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp39ea_5e8.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(10) == true\n  UndefVarError: is_equal_to_sum_even_helper not defined\n\
    \  Stacktrace:\n   [1] is_equal_to_sum_even(n::Int64)\n     @ Main /tmp/tmp39ea_5e8.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp39ea_5e8.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return true\n    else if n % 2 == 0 \n        then return false\n\
    \    else if n % 4 == 0 \n        then return true\n    else if n % 8 == 0 \n\
    \        then return true\n    else if n % 16 == 0 \n        then return true\n\
    \    else if n % 32 == 0 \n        then return true\n    else if n % 64 == 0 \n\
    \        then return true\n    else if n % 128 == 0 \n        then return true\n\
    \    else if n % 256 == 0 \n        then return true\n    else if n % 512 == 0\
    \ \n        then return true\n    else if n % 1024 == 0 \n        then return\
    \ true\n    else if n % 2048 == 0 \n        then return true\n    else if n %\
    \ 4096 == 0 \n        then return true\n    else if n % 8192 == 0 \n        then\
    \ return true\n    else if n % 16384 == 0 \n        then return true\n    else\
    \ if n % 32768 == 0 \n        then return true\n    else if n % 65536 == 0 \n\
    \        then return true\n    else if n % 131072 == 0 \n        then return true\n\
    \    else if n % 262144 == 0 \n        then return true\n    else if n % 524288\
    \ == 0 \n        then return true\n    else if n % 1048576 == 0 \n        then\
    \ return true\n    else if n % 2097152 == 0 \n        then return true\n    else\
    \ if n % 4194304 == 0 \n        then return true\n    else if n % 8388608 == 0\
    \ \n        then return true\n    else if n % 16777216 == 0 \n        then return\
    \ true\n    else if n % 33554432 == 0 \n        then return true\n    else if\
    \ n % 67108864 == 0 \n        then return true\n    else if n % 134217728 == 0\
    \ \n        then return true\n    else if n % 268435456 == 0 \n        then return\
    \ true\n    else if n % 536870912 == 0 \n        then return true\n    else if\
    \ n % 1073741824 == 0 \n        then return true\n    else if n % 2147483648 ==\
    \ 0 \n        then return true\n    else if n % 4294967296 == 0 \n        then\
    \ return true\n    else if n % 8589934592 == 0 \n        then return true\n  \
    \  else if n % 17179869184 == 0 \n        then return true\n    else if n % 34359738368\
    \ == 0 \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t\
    @test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4nw6ti85.jl:9\nin expression starting at /tmp/tmp4nw6ti85.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <\
    \ 4 \n        return false \n    else \n        return is_equal_to_sum_even(n\
    \ - 4) == true \nend\n</cell>\n<code language=julia-1.3>\n@assert is_equal_to_sum_even(2)\
    \ == false\n@assert is_equal_to_sum_even(6) == false\n@assert is_equal_to_sum_even(8)\
    \ == true\n</cell>\n<text>\nExercise 2\nWrite a function that checks if a given\
    \ number n is equal to the sum of exactly 4 positive odd numbers\nExample\nis_equal_to_sum_odd(4)\
    \ == false\nis_equal_to_sum_odd(6) == false\nis_equal_to_sum_odd(8) == true\n\
    Hint: use the function is_equal_to_sum_even\nusing Test\n\n@testset begin\n\n\
    candidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptj4ve6_7.jl:13\nin expression starting at\
    \ /tmp/tmptj4ve6_7.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n<4\
    \ return false\n    else if n%2==0 return false\n    else if n%3==0 return false\n\
    \    else if n%4==0 return true\n    else return false\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(2) == false\n@assert is_equal_to_sum_even(6) == false\n\
    @assert is_equal_to_sum_even(8) == true\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns true if the given number n is equal to the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    is_equal_to_sum_odd(4) == false\n \
    \   is_equal_to_sum_odd(6) == false\n    is_equal_to_sum_odd(8) == true\n    \"\
    \"\"\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpthjj7rgt.jl:9\nin expression starting at /tmp/tmpthjj7rgt.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0\n        true\n    else\n        n % 2 == 0 && is_equal_to_sum_even(n - 2)\n\
    end\n</cell>\n<code language=julia-1.3>\n\"\"\"Evaluate whether the given number\
    \ n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    is_equal_to_sum_odd(4) == False\n    is_equal_to_sum_odd(6) == False\n  \
    \  is_equal_to_sum_odd(8) == True\n    \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp47izef_i.jl:13\nin expression starting at\
    \ /tmp/tmp47izef_i.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 then return False\n    if n == 1 then return True\n    if n == 2 then return\
    \ True\n    if n % 2 == 0 then return False\n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpchccu9bk.jl:8\nin expression starting at /tmp/tmpchccu9bk.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even_helper(n)\
    \ == true\n    else \n        return false\nend\n\"\"\"\n    \nusing Test\n\n\
    @testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7fzh8m_u.jl:1\nin expression starting at /tmp/tmp7fzh8m_u.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n<4\
    \ return false\n    else if n%2==0 return false\n    else if n%3==0 return false\n\
    \    else if n%4==0 return true\n    else return false\nend\n</cell>\n<code language=julia-1.0>\n\
    @assert is_equal_to_sum_even(2) == false\n@assert is_equal_to_sum_even(6) == false\n\
    @assert is_equal_to_sum_even(8) == true\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that checks whether a given number n is prime or not. \nA prime number\
    \ is a natural number greater than 1 that has no positive divisors other than\
    \ 1 and itself.\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn0liz9ue.jl:9\nin expression starting at /tmp/tmpn0liz9ue.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <=\
    \ 0 \n        then return False \n    else if n % 2 == 0 \n        then return\
    \ is_equal_to_sum_even(n - 1) \n        else return is_equal_to_sum_even(n - 2)\
    \ \n    end\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(10)\
    \ == true\n@assert is_equal_to_sum_even(11) == false\n@assert is_equal_to_sum_even(12)\
    \ == false\n@assert is_equal_to_sum_even(13) == true\n@assert is_equal_to_sum_even(14)\
    \ == true\n@assert is_equal_to_sum_even(15) == false\n@assert is_equal_to_sum_even(16)\
    \ == true\n@assert is_equal_to_sum_even(17) == false\n@assert is_equal_to_sum_even(18)\
    \ == true\n@assert is_equal_to_sum_even(19) == false\n@assert is_equal_to_sum_even(20)\
    \ == true\n@assert is_equal_to_sum_even(21) == false\n@assert is_equal_to_sum_even(22)\
    \ == true\n@assert is_equal_to_sum_even(23) == false\n@assert is_equal_to_sum_even(24)\
    \ == true\n@assert is_equal_to_sum_even(25) == false\n@assert is_equal_to_sum_even(26)\
    \ == true\n@assert is_equal_to_sum_even(27) == false\n@assert is_equal_to_sum_even(28)\
    \ == true\n@assert is_equal_to_sum_even(29) == false\n@assert is_equal_to_sum_even(30)\
    \ == true\n@assert is_equal_to_sum_even(31) == false\n@assert is_equal_to_sum_even(32)\
    \ == true\n@assert is_equal_to_sum_even(33) == false\n@assert is_equal_to_sum_even(34)\
    \ == true\n@assert is_equal_to_sum_even(35) == false\n@assert is_equal_to_sum_even(36)\
    \ == true\n@assert is_equal_to_sum_even(37) == false\n@assert is_equal_to_sum_even(38)\
    \ == true\n@assert is_equal_to_sum_even(39) == false\n@assert is_equal_to_sum_even(40)\
    \ == true\n@assert is_equal_to_sum_even(41) == false\n@assert is_equal_to_sum_even(42)\
    \ == true\n@assert is_equal_to_sum_even(43) == false\n@assert is_equal_to_sum_even(44)\
    \ == true\n@assert is_equal_to_sum_even(45) == false\n@assert is_equal_to_sum_even(46)\
    \ == true\n@assert is_equal_to_sum_even(47) == false\n@assert is_equal_to_sum_even(48)\
    \ == true\n@assert is_equal_to_sum_even(49) == false\n@assert is_equal_to_sum_even(50)\
    \ == true\n@assert is_equal_to_sum_even(51) == \nusing Test\n\n@testset begin\n\
    \ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_luqp9th.jl:9\nin expression starting at /tmp/tmp_luqp9th.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return True \n    else if n % 2 == 0 \n        then return\
    \ False \n    else \n        sum_of_four_even = sum_of_four_even(n - 1) \n   \
    \     if sum_of_four_even == 0 \n            then return True \n        else return\
    \ False \nend \n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(5)\
    \ == False\n@assert is_equal_to_sum_even(6) == False\n@assert is_equal_to_sum_even(8)\
    \ == True\n</cell>\n<text>\nProblem 3\nWrite a function that returns the number\
    \ of positive integers less than or equal to n that are divisible by k.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgvltb3hf.jl:9\nin expression starting at /tmp/tmpgvltb3hf.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\n\
    \        true\n    else\n        ((n%2==0)&&(n%4==0))||((n%2==0)&&(n%4!=0))\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"Evaluate whether the given number\
    \ n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    is_equal_to_sum_odd(4) == False\n    is_equal_to_sum_odd(6) == False\n  \
    \  is_equal_to_sum_odd(8) == True\n    \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx3qcrs82.jl:13\nin expression starting at\
    \ /tmp/tmpx3qcrs82.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return true\n    else if n % 2 == 0 \n        then return false\n\
    \    else if n % 4 == 0 \n        then return true\n    else if n % 8 == 0 \n\
    \        then return false\n    else if n % 16 == 0 \n        then return true\n\
    \    else if n % 32 == 0 \n        then return false\n    else if n % 64 == 0\
    \ \n        then return true\n    else if n % 128 == 0 \n        then return false\n\
    \    else if n % 256 == 0 \n        then return true\n    else if n % 512 == 0\
    \ \n        then return false\n    else if n % 1024 == 0 \n        then return\
    \ true\n    else if n % 2048 == 0 \n        then return false\n    else if n %\
    \ 4096 == 0 \n        then return true\n    else if n % 8192 == 0 \n        then\
    \ return false\n    else if n % 16384 == 0 \n        then return true\n    else\
    \ if n % 32768 == 0 \n        then return false\n    else if n % 65536 == 0 \n\
    \        then return true\n    else if n % 131072 == 0 \n        then return false\n\
    \    else if n % 262144 == 0 \n        then return true\n    else if n % 524288\
    \ == 0 \n        then return false\n    else if n % 1048576 == 0 \n        then\
    \ return true\n    else if n % 2097152 == 0 \n        then return false\n    else\
    \ if n % 4194304 == 0 \n        then return true\n    else if n % 8388608 == 0\
    \ \n        then return false\n    else if n % 16777216 == 0 \n        then return\
    \ true\n    else if n % 33554432 == 0 \n        then return false\n    else if\
    \ n % 67108864 == 0 \n        then return true\n    else if n % 134217728 == 0\
    \ \n        then return false\n    else if n % 268435456 == 0 \n        then return\
    \ true\n    else if n % 536870912 == 0 \n        then return false\n    else if\
    \ n % 1073741824 == 0 \n        then return true\n    else if n % 2147483648 ==\
    \ 0 \n        then return false\n    else if n % 4294967296 == 0 \n        then\
    \ return true\n    else if n % 8589934592 == 0 \n        then return false\n \
    \   else if n % 17179869184 == 0 \n        then return true\n    else if n % 34359738368\
    \ == 0 \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t\
    @test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpegxafnyv.jl:9\nin expression starting at /tmp/tmpegxafnyv.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even_helper(n)\
    \ == True \n    else \n        return False \nend \nusing Test\n\n@testset begin\n\
    \ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpq232ziu_.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpq232ziu_.jl:1\n\
    in expression starting at /tmp/tmpq232ziu_.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even_helper(n)\
    \ == true\n    else \n        false\nend\n\"\"\"\n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp94cz1hjo.jl:1\nin expression starting at /tmp/tmp94cz1hjo.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even(n-1)\
    \ == True && n % 2 == 0 \n    then return True \n    else return False \nend \n\
    \"\"\"\n\"\"\"\n    Evaluate whether the given number n can be written as the\
    \ sum of exactly 4 positive odd numbers\n    Example\n    is_equal_to_sum_odd(4)\
    \ == False\n    is_equal_to_sum_odd(6) == False\n    is_equal_to_sum_odd(8) ==\
    \ True\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptjiu209n.jl:9\nin expression starting at /tmp/tmptjiu209n.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return True \n    else if n % 2 == 0 \n        then return\
    \ is_equal_to_sum_even(n - 1) \n        else return False \n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert is_equal_to_sum_even(10) == False\n@assert\
    \ is_equal_to_sum_even(6) == False\n@assert is_equal_to_sum_even(8) == True\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the numbers\
    \ from 1 to n inclusive.\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6ichw1qi.jl:9\nin expression starting at /tmp/tmp6ichw1qi.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return true\n    else if n % 2 == 0 \n        then return false\n\
    \    else if n % 4 == 0 \n        then return true\n    else if n % 8 == 0 \n\
    \        then return true\n    else if n % 16 == 0 \n        then return true\n\
    \    else if n % 32 == 0 \n        then return true\n    else if n % 64 == 0 \n\
    \        then return true\n    else if n % 128 == 0 \n        then return true\n\
    \    else if n % 256 == 0 \n        then return true\n    else if n % 512 == 0\
    \ \n        then return true\n    else if n % 1024 == 0 \n        then return\
    \ true\n    else if n % 2048 == 0 \n        then return true\n    else if n %\
    \ 4096 == 0 \n        then return true\n    else if n % 8192 == 0 \n        then\
    \ return true\n    else if n % 16384 == 0 \n        then return true\n    else\
    \ if n % 32768 == 0 \n        then return true\n    else if n % 65536 == 0 \n\
    \        then return true\n    else if n % 131072 == 0 \n        then return true\n\
    \    else if n % 262144 == 0 \n        then return true\n    else if n % 524288\
    \ == 0 \n        then return true\n    else if n % 1048576 == 0 \n        then\
    \ return true\n    else if n % 2097152 == 0 \n        then return true\n    else\
    \ if n % 4194304 == 0 \n        then return true\n    else if n % 8388608 == 0\
    \ \n        then return true\n    else if n % 16777216 == 0 \n        then return\
    \ true\n    else if n % 33554432 == 0 \n        then return true\n    else if\
    \ n % 67108864 == 0 \n        then return true\n    else if n % 134217728 == 0\
    \ \n        then return true\n    else if n % 268435456 == 0 \n        then return\
    \ true\n    else if n % 536870912 == 0 \n        then return true\n    else if\
    \ n % 1073741824 == 0 \n        then return true\n    else if n % 2147483648 ==\
    \ 0 \n        then return true\n    else if n % 4294967296 == 0 \n        then\
    \ return true\n    else if n % 8589934592 == 0 \n        then return true\n  \
    \  else if n % 17179869184 == 0 \n        then return true\n    else if n % 34359738368\
    \ == 0 \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t\
    @test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp03pi9kw8.jl:9\nin expression starting at /tmp/tmp03pi9kw8.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even_helper(n)\
    \ == true\n    else \n        false\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(2) == false\n@assert is_equal_to_sum_even(6) == false\n\
    @assert is_equal_to_sum_even(8) == true\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that checks whether a given number n is prime or not. \nA prime number\
    \ is a natural number greater than 1 that has no positive divisors other than\
    \ 1 and itself.\nExample\nis_prime(2) == true\nis_prime(6) == true\nis_prime(8)\
    \ == false\nis_prime(11) == true\nis_prime(12) == false\nHint: You may want to\
    \ use the isodd() function from the Base package.\nusing Test\n\n@testset begin\n\
    \ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt8zqlj4v.jl:12\nin expression starting at\
    \ /tmp/tmpt8zqlj4v.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return true\n    else if n == 1 \n        then return true\n\
    \    else if n % 2 == 0 \n        then return false\n    else if n % 3 == 0 \n\
    \        then return false\n    else if n % 4 == 0 \n        then return true\n\
    \    else if n % 5 == 0 \n        then return true\n    else if n % 6 == 0 \n\
    \        then return true\n    else if n % 7 == 0 \n        then return true\n\
    \    else if n % 8 == 0 \n        then return true\n    else if n % 9 == 0 \n\
    \        then return true\n    else if n % 10 == 0 \n        then return true\n\
    \    else if n % 11 == 0 \n        then return true\n    else if n % 12 == 0 \n\
    \        then return true\n    else if n % 13 == 0 \n        then return true\n\
    \    else if n % 14 == 0 \n        then return true\n    else if n % 15 == 0 \n\
    \        then return true\n    else if n % 16 == 0 \n        then return true\n\
    \    else if n % 17 == 0 \n        then return true\n    else if n % 18 == 0 \n\
    \        then return true\n    else if n % 19 == 0 \n        then return true\n\
    \    else if n % 20 == 0 \n        then return true\n    else if n % 21 == 0 \n\
    \        then return true\n    else if n % 22 == 0 \n        then return true\n\
    \    else if n % 23 == 0 \n        then return true\n    else if n % 24 == 0 \n\
    \        then return true\n    else if n % 25 == 0 \n        then return true\n\
    \    else if n % 26 == 0 \n        then return true\n    else if n % 27 == 0 \n\
    \        then return true\n    else if n % 28 == 0 \n        then return true\n\
    \    else if n % 29 == 0 \n        then return true\n    else if n % 30 == 0 \n\
    \        then return true\n    else if n % 31 == 0 \n        then return true\n\
    \    else if n % 32 == 0 \n        then return true\n    else if n % 33 == 0 \n\
    \        then return true\n    else if n % 34 == 0 \n        then return true\n\
    \    else if n % 35 == 0 \n        then return true\n    else if n % 36 == 0 \n\
    \        then return true\n    else if n % 37 == 0 \n        then return true\n\
    \    else if n % 38 == 0 \n        then return true\n    else if n % 39 == 0 \n\
    \        then return true\n\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7cuds9rx.jl:9\nin expression starting at /tmp/tmp7cuds9rx.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <=\
    \ 0 \n    then return False\n    else if n == 0 \n    then return True\n    else\
    \ if n % 2 == 0 \n    then return is_equal_to_sum_even(n / 2)\n    else return\
    \ is_equal_to_sum_even(n / 2) && is_equal_to_sum_even(n / 2)\nend\n</cell>\n<code\
    \ language=julia-1.0>\n@assert is_equal_to_sum_even(2) == true\n@assert is_equal_to_sum_even(6)\
    \ == true\n@assert is_equal_to_sum_even(8) == false\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that checks whether a given number is equal to the sum of\
    \ exactly 4 positive odd numbers\nExample\nis_equal_to_sum_odd(4) == False\nis_equal_to_sum_odd(6)\
    \ == True\nis_equal_to_sum_odd(8) == False\nHint: use the is_equal_to_sum_odd\
    \ function you just wrote\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0jkg9ir2.jl:9\nin expression starting at /tmp/tmp0jkg9ir2.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n<4\
    \ then return False\n    else if n%2==0 then return False\n    else if n%3==0\
    \ then return False\n    else if n%4==0 then return False\n    else if n%5==0\
    \ then return False\n    else if n%6==0 then return False\n    else if n%7==0\
    \ then return False\n    else if n%8==0 then return False\n    else if n%9==0\
    \ then return False\n    else if n%10==0 then return False\n    else if n%11==0\
    \ then return False\n    else if n%12==0 then return False\n    else if n%13==0\
    \ then return False\n    else if n%14==0 then return False\n    else if n%15==0\
    \ then return False\n    else if n%16==0 then return False\n    else if n%17==0\
    \ then return False\n    else if n%18==0 then return False\n    else if n%19==0\
    \ then return False\n    else if n%20==0 then return False\n    else if n%21==0\
    \ then return False\n    else if n%22==0 then return False\n    else if n%23==0\
    \ then return False\n    else if n%24==0 then return False\n    else if n%25==0\
    \ then return False\n    else if n%26==0 then return False\n    else if n%27==0\
    \ then return False\n    else if n%28==0 then return False\n    else if n%29==0\
    \ then return False\n    else if n%30==0 then return False\n    else if n%31==0\
    \ then return False\n    else if n%32==0 then return False\n    else if n%33==0\
    \ then return False\n    else if n%34==0 then return False\n    else if n%35==0\
    \ then return False\n    else if n%36==0 then return False\n    else if n%37==0\
    \ then return False\n    else if n%38==0 then return False\n    else if n%39==0\
    \ then return False\n    else if n%40==0 then return False\n    else if n%41==0\
    \ then return False\n    else if n%42==0 then return False\n    else if n%43==0\
    \ then return False\n    \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnz2tlott.jl:8\nin expression starting at /tmp/tmpnz2tlott.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even_helper(n)\
    \ == true \n    else \n        false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpv0boykzl.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpv0boykzl.jl:1\n\
    in expression starting at /tmp/tmpv0boykzl.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n<0\n\
    \        error(\"n must be positive\")\n    else if n==0\n        true\n    else\n\
    \        sum_even(n) == n\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(2)\
    \ == false\n@assert is_equal_to_sum_even(6) == false\n@assert is_equal_to_sum_even(8)\
    \ == true\n</cell>\n<text>\nExercise 3\nWrite a function that returns the number\
    \ of positive integers less than or equal to n that are divisible by k. \nExample\n\
    count_less_than_or_equal_to_k(4) == 3\ncount_less_than_or_equal_to_k(6) == 3\n\
    count_less_than_or_equal_to_k(8) == 3\nHint: Use a while loop and a counter.\n\
    using Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8wh3xrly.jl:10\nin expression starting at\
    \ /tmp/tmp8wh3xrly.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return True \n    else if n % 2 == 0 \n        then return\
    \ False \n    else if n % 4 == 0 \n        then return True \n    else \n    \
    \    return is_equal_to_sum_even(n - 1) \nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(10) == true\n@assert is_equal_to_sum_even(12) ==\
    \ false\n@assert is_equal_to_sum_even(8) == true\n@assert is_equal_to_sum_even(9)\
    \ == false\n@assert is_equal_to_sum_even(7) == true\n@assert is_equal_to_sum_even(5)\
    \ == false\n@assert is_equal_to_sum_even(2) == true\n@assert is_equal_to_sum_even(3)\
    \ == false\n@assert is_equal_to_sum_even(6) == true\n@assert is_equal_to_sum_even(1)\
    \ == true\n@assert is_equal_to_sum_even(-1) == false\n@assert is_equal_to_sum_even(2)\
    \ == true\n</cell>\n<text>\nExercise 3\nWrite a function that returns the number\
    \ of positive integers less than or equal to n. \nExample\ncount_positives(10)\
    \ == 5\ncount_positives(12) == 4\ncount_positives(8) == 3\ncount_positives(9)\
    \ == 3\ncount_positives(7) == 3\ncount_positives(5) == 3\ncount_positives(2) ==\
    \ 2\ncount_positives(3) == 2\ncount_positives(6) == 2\ncount_positives(1) == 3\n\
    count_positives(-1) == 3\ncount_positives(2) == 2\ncount_positives(3) == 2\ncount_positives(6)\
    \ == 2\ncount_positives(1) == 3\ncount_positives(-1) == 3\ncount_positives(2)\
    \ == 2\ncount_positives(3) == 2\ncount_positives(6) == 2\ncount_positives(1) ==\
    \ 3\ncount_positives(-1) == 3\ncount_positives(2) == 2\ncount_positives(3) ==\
    \ 2\ncount_positives(6) == 2\ncount_positives(1) == 3\ncount_positives(-1) ==\
    \ 3\ncount_positives(2) == 2\ncount_positives(3) == 2\ncount_positives(6) == 2\n\
    count_positives(1) == 3\ncount_positives(-1) == 3\ncount_positives(2) == 2\ncount_positives(3)\
    \ == 2\ncount_positives(6) == 2\ncount_positives(1) == 3\ncount_positives(-1)\
    \ == 3\ncount_positives(2) == 2\ncount_positives(3) == 2\ncount_positives(6) ==\
    \ 2\ncount_positives(1) == 3\ncount_positives(-1) == 3\ncount_positives(2) ==\
    \ 2\ncount_positives(3) == 2\ncount_positives(6) == 2\ncount_positives(1) == 3\n\
    count_positives(-1) == 3\ncount_positives(2) == 2\ncount_\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyx74jowd.jl:9\nin expression starting at /tmp/tmpyx74jowd.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <\
    \ 4 then return False \n    else if n % 2 == 0 then return False \n    else if\
    \ n % 4 == 0 then return True \n    else return is_equal_to_sum_even(n - 2)\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(10) == false\n\
    @assert is_equal_to_sum_even(6) == false\n@assert is_equal_to_sum_even(8) == true\n\
    </cell>\n<text>\nProblem 7\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpujpxxv63.jl:8\nin expression starting at /tmp/tmpujpxxv63.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n<4\
    \ return False\n    else if n%2==0 return False\n    else if n%3==0 return False\n\
    \    else if n%5==0 return False\n    else return True\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    is_equal_to_sum_odd(4) == False\n \
    \   is_equal_to_sum_odd(6) == False\n    is_equal_to_sum_odd(8) == True\n    \"\
    \"\"\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc1qu_p8y.jl:9\nin expression starting at /tmp/tmpc1qu_p8y.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even_helper(n)\
    \ == true\n    else return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpk0rk00pr.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpk0rk00pr.jl:1\n\
    in expression starting at /tmp/tmpk0rk00pr.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n<4\
    \ \n        return false\n    else if n%2==0 \n        return false\n    else\
    \ if n%3==0 \n        return false\n    else if n%5==0 \n        return false\n\
    \    else if n%7==0 \n        return false\n    else \n        return true\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(2) == false\n\
    @assert is_equal_to_sum_even(5) == false\n@assert is_equal_to_sum_even(8) == true\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of positive\
    \ integers less than or equal to n that are divisible by k.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppd_hurkq.jl:10\nin expression starting at\
    \ /tmp/tmppd_hurkq.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return True \n    else if n % 2 == 0 \n        then return\
    \ False \n    else if n % 4 == 0 \n        then return False \n    else if n %\
    \ 8 == 0 \n        then return False \n    else if n % 16 == 0 \n        then\
    \ return False \n    else if n % 32 == 0 \n        then return False \n    else\
    \ if n % 64 == 0 \n        then return False \n    else if n % 128 == 0 \n   \
    \     then return False \n    else if n % 256 == 0 \n        then return False\
    \ \n    else if n % 512 == 0 \n        then return False \n    else if n % 1024\
    \ == 0 \n        then return False \n    else if n % 2048 == 0 \n        then\
    \ return False \n    else if n % 4096 == 0 \n        then return False \n    else\
    \ if n % 8192 == 0 \n        then return False \n    else if n % 16384 == 0 \n\
    \        then return False \n    else if n % 32768 == 0 \n        then return\
    \ False \n    else if n % 65536 == 0 \n        then return False \n    else if\
    \ n % 131072 == 0 \n        then return False \n    else if n % 262144 == 0 \n\
    \        then return False \n    else if n % 524288 == 0 \n        then return\
    \ False \n    else if n % 1048576 == 0 \n        then return False \n    else\
    \ if n % 2097152 == 0 \n        then return False \n    else if n % 4194304 ==\
    \ 0 \n        then return False \n    else if n % 8388608 == 0 \n        then\
    \ return False \n    else if n % 16777216 == 0 \n        then return False \n\
    \    else if n % 33554432 == 0 \n        then return False \n    else if n % 67108864\
    \ == 0 \n        then return False \n    else if n % 134217728 == 0 \n       \
    \ then return False \n    else if n % 268435456 == 0 \n        then return False\
    \ \n    else if n % 536870912 == 0 \n        then return False \n    else if n\
    \ % 1073741824 == 0 \n        then return False \n    else if n % 2147483648 ==\
    \ 0 \n        then return False \n    else if n % 4294967296 == 0 \n        then\
    \ return False \n    else if n % 8589934592 == 0 \n        then return False \n\
    \    else if n % 17179869184 == 0 \n        then return False \n    else if n\
    \ % 34359738368 == 0 \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxtg8qrw8.jl:9\nin expression starting at /tmp/tmpxtg8qrw8.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <\
    \ 0 \n        then return False\n    else if n == 0 \n        then return True\n\
    \    else if n % 2 == 0 \n        then return False\n    else if n % 4 == 0 \n\
    \        then return False\n    else if n % 8 == 0 \n        then return False\n\
    \    else if n % 16 == 0 \n        then return False\n    else if n % 32 == 0\
    \ \n        then return False\n    else if n % 64 == 0 \n        then return False\n\
    \    else if n % 128 == 0 \n        then return False\n    else if n % 256 ==\
    \ 0 \n        then return False\n    else if n % 512 == 0 \n        then return\
    \ False\n    else if n % 1024 == 0 \n        then return False\n    else if n\
    \ % 2048 == 0 \n        then return False\n    else if n % 4096 == 0 \n      \
    \  then return False\n    else if n % 8192 == 0 \n        then return False\n\
    \    else if n % 16384 == 0 \n        then return False\n    else if n % 32768\
    \ == 0 \n        then return False\n    else if n % 65536 == 0 \n        then\
    \ return False\n    else if n % 131072 == 0 \n        then return False\n    else\
    \ if n % 262144 == 0 \n        then return False\n    else if n % 524288 == 0\
    \ \n        then return False\n    else if n % 1048576 == 0 \n        then return\
    \ False\n    else if n % 2097152 == 0 \n        then return False\n    else if\
    \ n % 4194304 == 0 \n        then return False\n    else if n % 8388608 == 0 \n\
    \        then return False\n    else if n % 16777216 == 0 \n        then return\
    \ False\n    else if n % 33554432 == 0 \n        then return False\n    else if\
    \ n % 67108864 == 0 \n        then return False\n    else if n % 134217728 ==\
    \ 0 \n        then return False\n    else if n % 268435456 == 0 \n        then\
    \ return False\n    else if n % 536870912 == 0 \n        then return False\n \
    \   else if n % 1073741824 == 0 \n        then return False\n    else if n % 2147483648\
    \ == 0 \n        then return False\n    else if n % 4294967296 == 0 \n       \
    \ then return False\n    else if n % 8589934592 == 0 \n        then return False\n\
    \    else if n % 17179869184 == 0 \n        then return False\n\nusing Test\n\n\
    @testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplz_apdef.jl:9\nin expression starting at /tmp/tmplz_apdef.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return False\n    else if n % 2 == 0 \n        then return\
    \ False\n    else if n % 4 == 0 \n        then return True\n    else \n      \
    \  return is_equal_to_sum_even(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(10) == false\n@assert is_equal_to_sum_even(12) ==\
    \ true\n@assert is_equal_to_sum_even(15) == true\n@assert is_equal_to_sum_even(20)\
    \ == true\n@assert is_equal_to_sum_even(25) == true\n@assert is_equal_to_sum_even(30)\
    \ == true\n@assert is_equal_to_sum_even(35) == true\n@assert is_equal_to_sum_even(40)\
    \ == true\n@assert is_equal_to_sum_even(45) == true\n@assert is_equal_to_sum_even(50)\
    \ == true\n@assert is_equal_to_sum_even(55) == true\n@assert is_equal_to_sum_even(60)\
    \ == true\n@assert is_equal_to_sum_even(65) == true\n@assert is_equal_to_sum_even(70)\
    \ == true\n@assert is_equal_to_sum_even(75) == true\n@assert is_equal_to_sum_even(80)\
    \ == true\n@assert is_equal_to_sum_even(85) == true\n@assert is_equal_to_sum_even(90)\
    \ == true\n@assert is_equal_to_sum_even(95) == true\n@assert is_equal_to_sum_even(100)\
    \ == true\n</cell>\n<text>\nProblem 3\nWrite a function that returns the number\
    \ of positive integers less than or equal to n that are divisible by 3.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpek9nwshh.jl:9\nin expression starting at /tmp/tmpek9nwshh.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\n\
    \    then return true\n    else if n==1\n    then return true\n    else if n==2\n\
    \    then return true\n    else if n==3\n    then return true\n    else if n==4\n\
    \    then return true\n    else if n==5\n    then return true\n    else if n==6\n\
    \    then return true\n    else if n==7\n    then return true\n    else if n==8\n\
    \    then return true\n    else if n==9\n    then return true\n    else return\
    \ false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Evaluate whether\
    \ the given number n can be written as the sum of exactly 4 positive odd numbers\n\
    \    Example\n    is_equal_to_sum_odd(4) == False\n    is_equal_to_sum_odd(6)\
    \ == False\n    is_equal_to_sum_odd(8) == True\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpunhctwvs.jl:9\nin expression starting at /tmp/tmpunhctwvs.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <\
    \ 4 \n        return false \n    else \n        return is_sum_of_even(n) == true\
    \ \nend \n</cell>\n<code language=julia-1.1>\n@assert is_equal_to_sum_even(2)\
    \ == false\n@assert is_equal_to_sum_even(3) == false\n@assert is_equal_to_sum_even(5)\
    \ == true\n@assert is_equal_to_sum_even(7) == true\n@assert is_equal_to_sum_even(10)\
    \ == true\n@assert is_equal_to_sum_even(11) == false\n@assert is_equal_to_sum_even(12)\
    \ == false\n@assert is_equal_to_sum_even(13) == false\n@assert is_equal_to_sum_even(14)\
    \ == false\n@assert is_equal_to_sum_even(15) == false\n@assert is_equal_to_sum_even(16)\
    \ == false\n@assert is_equal_to_sum_even(17) == false\n@assert is_equal_to_sum_even(18)\
    \ == false\n@assert is_equal_to_sum_even(19) == false\n@assert is_equal_to_sum_even(20)\
    \ == false\n@assert is_equal_to_sum_even(21) == false\n@assert is_equal_to_sum_even(22)\
    \ == false\n@assert is_equal_to_sum_even(23) == false\n@assert is_equal_to_sum_even(24)\
    \ == false\n@assert is_equal_to_sum_even(25) == false\n@assert is_equal_to_sum_even(26)\
    \ == false\n@assert is_equal_to_sum_even(27) == false\n@assert is_equal_to_sum_even(28)\
    \ == false\n@assert is_equal_to_sum_even(29) == false\n@assert is_equal_to_sum_even(30)\
    \ == false\n@assert is_equal_to_sum_even(31) == false\n@assert is_equal_to_sum_even(32)\
    \ == false\n@assert is_equal_to_sum_even(33) == false\n@assert is_equal_to_sum_even(34)\
    \ == false\n@assert is_equal_to_sum_even(35) == false\n@assert is_equal_to_sum_even(36)\
    \ == false\n@assert is_equal_to_sum_even(37) == false\n@assert is_equal_to_sum_even(38)\
    \ == false\n@assert is_equal_to_sum_even(39) == false\n@assert is_equal_to_sum_even(40)\
    \ == false\n@assert is_equal_to_sum_even(41) == false\n@assert is_equal_to_sum_even(42)\
    \ == false\n@assert is_equal_to_sum_even(43) == false\n@assert is_equal_to_sum_even(44)\
    \ == false\n@assert is_equal_to_sum_even(45) == false\n@assert is_equal_to_sum_even(46)\
    \ == false\n@assert is_equal_to_sum_even(47) == false\n@assert is_equal_to_sum_even(48)\
    \ == false\n@assert is_equal_to_sum_even(49\nusing Test\n\n@testset begin\n\n\
    candidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq_14d4b6.jl:13\nin expression starting at\
    \ /tmp/tmpq_14d4b6.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even(n-1)\
    \ == True && n % 2 == 0 \n    then return False \n    else return True \nend \n\
    </cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(2) == False\n\
    @assert is_equal_to_sum_even(3) == True\n@assert is_equal_to_sum_even(5) == True\n\
    @assert is_equal_to_sum_even(8) == True\n@assert is_equal_to_sum_even(10) == True\n\
    @assert is_equal_to_sum_even(11) == False\n@assert is_equal_to_sum_even(12) ==\
    \ False\n@assert is_equal_to_sum_even(13) == False\n@assert is_equal_to_sum_even(14)\
    \ == False\n@assert is_equal_to_sum_even(15) == False\n@assert is_equal_to_sum_even(16)\
    \ == False\n@assert is_equal_to_sum_even(17) == False\n@assert is_equal_to_sum_even(18)\
    \ == False\n@assert is_equal_to_sum_even(19) == False\n@assert is_equal_to_sum_even(20)\
    \ == False\n@assert is_equal_to_sum_even(21) == False\n@assert is_equal_to_sum_even(22)\
    \ == False\n@assert is_equal_to_sum_even(23) == False\n@assert is_equal_to_sum_even(24)\
    \ == False\n@assert is_equal_to_sum_even(25) == False\n@assert is_equal_to_sum_even(26)\
    \ == False\n@assert is_equal_to_sum_even(27) == False\n@assert is_equal_to_sum_even(28)\
    \ == False\n@assert is_equal_to_sum_even(29) == False\n@assert is_equal_to_sum_even(30)\
    \ == False\n@assert is_equal_to_sum_even(31) == False\n@assert is_equal_to_sum_even(32)\
    \ == False\n@assert is_equal_to_sum_even(33) == False\n@assert is_equal_to_sum_even(34)\
    \ == False\n@assert is_equal_to_sum_even(35) == False\n@assert is_equal_to_sum_even(36)\
    \ == False\n@assert is_equal_to_sum_even(37) == False\n@assert is_equal_to_sum_even(38)\
    \ == False\n@assert is_equal_to_sum_even(39) == False\n@assert is_equal_to_sum_even(40)\
    \ == False\n@assert is_equal_to_sum_even(41) == False\n@assert is_equal_to_sum_even(42)\
    \ == False\n@assert is_equal_to_sum_even(43) == False\n@assert is_equal_to_sum_even(44)\
    \ == False\n@assert is_equal_to_sum_even(45) == False\n@assert is_equal_to_sum_even(46)\
    \ == False\n@assert is_equal_to_sum_even(47) == False\n@assert is_equal_to_sum_even(48)\
    \ == False\n@assert is_\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_bjc4kfr.jl:9\nin expression starting at /tmp/tmp_bjc4kfr.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <=\
    \ 0 \n        then return False\n    else if n == 0 \n        then return True\n\
    \    else if n % 2 == 0 \n        then return False\n    else if n % 4 == 0 \n\
    \        then return True\n    else \n        return is_equal_to_sum_even(n -\
    \ 2)\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(10)\
    \ == false\n@assert is_equal_to_sum_even(12) == false\n@assert is_equal_to_sum_even(14)\
    \ == true\n@assert is_equal_to_sum_even(16) == true\n@assert is_equal_to_sum_even(18)\
    \ == true\n@assert is_equal_to_sum_even(20) == true\n@assert is_equal_to_sum_even(22)\
    \ == true\n@assert is_equal_to_sum_even(24) == true\n@assert is_equal_to_sum_even(26)\
    \ == true\n@assert is_equal_to_sum_even(28) == true\n@assert is_equal_to_sum_even(30)\
    \ == true\n@assert is_equal_to_sum_even(32) == true\n@assert is_equal_to_sum_even(34)\
    \ == true\n@assert is_equal_to_sum_even(36) == true\n@assert is_equal_to_sum_even(38)\
    \ == true\n@assert is_equal_to_sum_even(40) == true\n@assert is_equal_to_sum_even(42)\
    \ == true\n@assert is_equal_to_sum_even(44) == true\n@assert is_equal_to_sum_even(46)\
    \ == true\n@assert is_equal_to_sum_even(48) == true\n@assert is_equal_to_sum_even(50)\
    \ == true\n@assert is_equal_to_sum_even(52) == true\n@assert is_equal_to_sum_even(54)\
    \ == true\n@assert is_equal_to_sum_even(56) == true\n@assert is_equal_to_sum_even(58)\
    \ == true\n@assert is_equal_to_sum_even(60) == true\n@assert is_equal_to_sum_even(62)\
    \ == true\n@assert is_equal_to_sum_even(64) == true\n@assert is_equal_to_sum_even(66)\
    \ == true\n@assert is_equal_to_sum_even(68) == true\n@assert is_equal_to_sum_even(70)\
    \ == true\n@assert is_equal_to_sum_even(72) == true\n@assert is_equal_to_sum_even(74)\
    \ == true\n@assert is_equal_to_sum_even(76) == true\n@assert is_equal_to_sum_even(78)\
    \ == true\n@assert is_equal_to_sum_even(80) == true\n@assert is_equal_to_sum_even(82)\
    \ == true\n@assert is_equal_to_sum_even(84) == true\n@assert is_equal_to_sum_even(86)\
    \ == true\n@assert is_equal_to_sum_even(88) == true\n@assert \nusing Test\n\n\
    @testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp20kcwq7a.jl:9\nin expression starting at /tmp/tmp20kcwq7a.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even_helper(n)\
    \ == true\n    else return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd77chutu.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd77chutu.jl:1\n\
    in expression starting at /tmp/tmpd77chutu.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even(n-1)\
    \ == True && n % 2 == 0\n    else \n        return false\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nis_equal_to_sum_even(10)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns true if the given number n is divisible by\
    \ 4 and false otherwise. \nExample\nis_divisible(4) == true\nis_divisible(5) ==\
    \ false\nis_divisible(6) == false\nis_divisible(7) == true\nis_divisible(8) ==\
    \ false\nis_divisible(9) == false\nis_divisible(10) == true\nis_divisible(11)\
    \ == false\nis_divisible(12) == false\nis_divisible(13) == false\nis_divisible(14)\
    \ == false\nis_divisible(15) == false\nis_divisible(16) == false\nis_divisible(17)\
    \ == false\nis_divisible(18) == false\nis_divisible(19) == false\nis_divisible(20)\
    \ == false\nis_divisible(21) == false\nis_divisible(22) == false\nis_divisible(23)\
    \ == false\nis_divisible(24) == false\nis_divisible(25) == false\nis_divisible(26)\
    \ == false\nis_divisible(27) == false\nis_divisible(28) == false\nis_divisible(29)\
    \ == false\nis_divisible(30) == false\nis_divisible(31) == false\nis_divisible(32)\
    \ == false\nis_divisible(33) == false\nis_divisible(34) == false\nis_divisible(35)\
    \ == false\nis_divisible(36) == false\nis_divisible(37) == false\nis_divisible(38)\
    \ == false\nis_divisible(39) == false\nis_divisible(40) == false\nis_divisible(41)\
    \ == false\nis_divisible(42) == false\nis_divisible(43) == false\nis_divisible(44)\
    \ == false\nis_divisible(45) == false\nis_divisible(46) == false\nis_divisible(47)\
    \ == false\nis_divisible(48) == false\nis_divisible(49) == false\nis_divisible(50)\
    \ == false\nis_divisible(51) == false\nis_divisible(52) == false\nis_divisible(53)\
    \ == false\nis_divisible(54) == false\nis_divisible(55) == false\nis_divisible(56)\
    \ == false\nis_divisible(57) == false\nis_divisible(58) == false\nis_divisible(59)\
    \ == false\nis_divisible(60) == false\nis_divisible(61) == false\nis_divisible(62)\
    \ == false\nis_divisible(63) == false\nis_divisible(64) == false\nis_divisible(65)\
    \ == false\nis_divisible(66) == false\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp76cchboy.jl:13\nin expression starting at\
    \ /tmp/tmp76cchboy.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return true\n    else if n % 2 == 0 \n        then return false\n\
    \    else if n % 4 == 0 \n        then return true\n    else if n % 8 == 0 \n\
    \        then return false\n    else if n % 16 == 0 \n        then return true\n\
    \    else if n % 32 == 0 \n        then return false\n    else if n % 64 == 0\
    \ \n        then return true\n    else if n % 128 == 0 \n        then return false\n\
    \    else if n % 256 == 0 \n        then return true\n    else if n % 512 == 0\
    \ \n        then return false\n    else if n % 1024 == 0 \n        then return\
    \ true\n    else if n % 2048 == 0 \n        then return false\n    else if n %\
    \ 4096 == 0 \n        then return true\n    else if n % 8192 == 0 \n        then\
    \ return false\n    else if n % 16384 == 0 \n        then return true\n    else\
    \ if n % 32768 == 0 \n        then return false\n    else if n % 65536 == 0 \n\
    \        then return true\n    else if n % 131072 == 0 \n        then return false\n\
    \    else if n % 262144 == 0 \n        then return true\n    else if n % 524288\
    \ == 0 \n        then return false\n    else if n % 1048576 == 0 \n        then\
    \ return true\n    else if n % 2097152 == 0 \n        then return false\n    else\
    \ if n % 4194304 == 0 \n        then return true\n    else if n % 8388608 == 0\
    \ \n        then return false\n    else if n % 16777216 == 0 \n        then return\
    \ true\n    else if n % 33554432 == 0 \n        then return false\n    else if\
    \ n % 67108864 == 0 \n        then return true\n    else if n % 134217728 == 0\
    \ \n        then return false\n    else if n % 268435456 == 0 \n        then return\
    \ true\n    else if n % 536870912 == 0 \n        then return false\n    else if\
    \ n % 1073741824 == 0 \n        then return true\n    else if n % 2147483648 ==\
    \ 0 \n        then return false\n    else if n % 4294967296 == 0 \n        then\
    \ return true\n    else if n % 8589934592 == 0 \n        then return false\n \
    \   else if n % 17179869184 == 0 \n        then return true\n    else if n % 34359738368\
    \ == 0 \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t\
    @test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcx82_hl4.jl:9\nin expression starting at /tmp/tmpcx82_hl4.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\
    \ then return False\n    if n==1 then return True\n    if n==2 then return True\n\
    \    if n==3 then return True\n    if n==4 then return True\n    if n==5 then\
    \ return True\n    if n==6 then return True\n    if n==7 then return True\n  \
    \  if n==8 then return True\n    if n==9 then return True\n    if n==10 then return\
    \ True\n    if n==11 then return True\n    if n==12 then return True\n    if n==13\
    \ then return True\n    if n==14 then return True\n    if n==15 then return True\n\
    \    if n==16 then return True\n    if n==17 then return True\n    if n==18 then\
    \ return True\n    if n==19 then return True\n    if n==20 then return True\n\
    \    if n==21 then return True\n    if n==22 then return True\n    if n==23 then\
    \ return True\n    if n==24 then return True\n    if n==25 then return True\n\
    \    if n==26 then return True\n    if n==27 then return True\n    if n==28 then\
    \ return True\n    if n==29 then return True\n    if n==30 then return True\n\
    \    if n==31 then return True\n    if n==32 then return True\n    if n==33 then\
    \ return True\n    if n==34 then return True\n    if n==35 then return True\n\
    \    if n==36 then return True\n    if n==37 then return True\n    if n==38 then\
    \ return True\n    if n==39 then return True\n    if n==40 then return True\n\
    \    if n==41 then return True\n    if n==42 then return True\n    if n==43 then\
    \ return True\n    if n==44 then return True\n    if n==45 then return True\n\
    \    if n==46 then return True\n    if n==47 then return True\n    if n==48 then\
    \ return True\n    if n==49 then return True\n    if n==50 then return True\n\
    \    if n==51 then return True\n    if n==52 then return True\n    if n==53 then\
    \ return True\n    if n==54 then return True\n    if n==55 then return True\n\
    \    if n==56 then return True\n    if n==57 then return True\n    if n==58 then\
    \ return True\n    if n==59 then return True\n    if n==60 then return True\n\
    \    if n==61 \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp895p8v8k.jl:8\nin expression starting at /tmp/tmp895p8v8k.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return False\n    else if n == 1 \n        then return True\n\
    \    else if n % 2 == 0 \n        then return is_equal_to_sum_even(n - 1)\n  \
    \  else return is_equal_to_sum_even(n - 3) && is_equal_to_sum_even(n - 2)\nend\n\
    </cell>\n<code language=julia-1.5>\n@time is_equal_to_sum_even(4);\n@time is_equal_to_sum_even(6);\n\
    @time is_equal_to_sum_even(8);\n</cell>\n<text>\nExercise\nWrite a function that\
    \ computes the factorial of a given number. \nExample\nfactorial(4) == 24\nfactorial(5)\
    \ == 120\nfactorial(6) == 720\nfactorial(7) == 5040\nHint: Use a recursive function\n\
    Hint: Use a while loop\nHint: Use a for loop\nHint: Use a while loop\nHint: Use\
    \ a for loop\nHint: Use a while loop\nHint: Use a for loop\nHint: Use a while\
    \ loop\nHint: Use a for loop\nHint: Use a while loop\nHint: Use a for loop\nHint:\
    \ Use a while loop\nHint: Use a for loop\nHint: Use a while loop\nHint: Use a\
    \ for loop\nHint: Use a while loop\nHint: Use a for loop\nHint: Use a while loop\n\
    Hint: Use a for loop\nHint: Use a while loop\nHint: Use a for loop\nHint: Use\
    \ a while loop\nHint: Use a for loop\nHint: Use a while loop\nHint: Use a for\
    \ loop\nHint: Use a while loop\nHint: Use a for loop\nHint: Use a while loop\n\
    Hint: Use a for loop\nHint: Use a while loop\nHint: Use a for loop\nHint: Use\
    \ a while loop\nHint: Use a for loop\nHint: Use a while loop\nHint: Use a for\
    \ loop\nHint: Use a while loop\nHint: Use a for loop\nHint: Use a while loop\n\
    Hint: Use a for loop\nHint: Use a while loop\nHint: Use a for loop\nHint: Use\
    \ a while loop\nHint: Use a for loop\nHint: Use a while loop\nHint: Use a for\
    \ loop\nHint: Use a while loop\nHint: Use a for loop\nHint: Use a while loop\n\
    Hint: Use a for loop\nHint: Use a while loop\nHint: Use a for loop\nHint: Use\
    \ a while loop\nHint: Use a \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphf2zjk7h.jl:9\nin expression starting at /tmp/tmphf2zjk7h.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n<4\
    \ return false\n    else if n%2==0 return false\n    else if n%3==0 return false\n\
    \    else if n%4==0 return true\n    else return false\nend\n</cell>\n<code language=julia-1.1>\n\
    \"\"\"Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    is_equal_to_sum_odd(4) == False\n \
    \   is_equal_to_sum_odd(6) == False\n    is_equal_to_sum_odd(8) == True\n    \"\
    \"\"\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvs834xxu.jl:9\nin expression starting at /tmp/tmpvs834xxu.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 then return true\n    if n == 1 then return true\n    if n == 2 then return\
    \ true\n    if n % 2 == 0 then return false\n    if n % 4 == 0 then return false\n\
    \    if n % 8 == 0 then return false\n    if n % 16 == 0 then return false\n \
    \   if n % 32 == 0 then return false\n    if n % 64 == 0 then return false\n \
    \   if n % 128 == 0 then return false\n    if n % 256 == 0 then return false\n\
    \    if n % 512 == 0 then return false\n    if n % 1024 == 0 then return false\n\
    \    if n % 2048 == 0 then return false\n    if n % 4096 == 0 then return false\n\
    \    if n % 8192 == 0 then return false\n    if n % 16384 == 0 then return false\n\
    \    if n % 32768 == 0 then return false\n    if n % 65536 == 0 then return false\n\
    \    if n % 131072 == 0 then return false\n    if n % 262144 == 0 then return\
    \ false\n    if n % 524288 == 0 then return false\n    if n % 1048576 == 0 then\
    \ return false\n    if n % 2097152 == 0 then return false\n    if n % 4194304\
    \ == 0 then return false\n    if n % 8388608 == 0 then return false\n    if n\
    \ % 16777216 == 0 then return false\n    if n % 33554432 == 0 then return false\n\
    \    if n % 67108864 == 0 then return false\n    if n % 134217728 == 0 then return\
    \ false\n    if n % 268435456 == 0 then return false\n    if n % 536870912 ==\
    \ 0 then return false\n    if n % 1073741824 == 0 then return false\n    if n\
    \ % -2147483648 == 0 then return false\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    is_equal_to_sum_odd(4) == False\n \
    \   is_equal_to_sum_odd(6) == False\n    is_equal_to_sum_odd(8) == True\n    \"\
    \"\"\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnhiplee8.jl:8\nin expression starting at /tmp/tmpnhiplee8.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\n\
    \    then return true\n    else if n==1\n    then return true\n    else if n==2\n\
    \    then return true\n    else if n==3\n    then return true\n    else if n==4\n\
    \    then return true\n    else if n==5\n    then return true\n    else if n==6\n\
    \    then return true\n    else if n==7\n    then return true\n    else if n==8\n\
    \    then return true\n    else if n==9\n    then return true\n    else if n==10\n\
    \    then return true\n    else if n==11\n    then return true\n    else if n==12\n\
    \    then return true\n    else if n==13\n    then return true\n    else if n==14\n\
    \    then return true\n    else if n==15\n    then return true\n    else if n==16\n\
    \    then return true\n    else if n==17\n    then return true\n    else if n==18\n\
    \    then return true\n    else if n==19\n    then return true\n    else if n==20\n\
    \    then return true\n    else if n==21\n    then return true\n    else if n==22\n\
    \    then return true\n    else if n==23\n    then return true\n    else if n==24\n\
    \    then return true\n    else if n==25\n    then return true\n    else if n==26\n\
    \    then return true\n    else if n==27\n    then return true\n    else if n==28\n\
    \    then return true\n    else if n==29\n    then return true\n    else if n==30\n\
    \    then return true\n    else if n==31\n    then return true\n    else if n==32\n\
    \    then return true\n    else if n==33\n    then return true\n    else if n==34\n\
    \    then return true\n    else if n==35\n    then return true\n    else if n==36\n\
    \    then return true\n    else if n==37\n    then return true\n    else if n==38\n\
    \    then return true\n    else if n==39\n    then return true\n    else if n==40\n\
    \    then return true\n    else if n==41\n    then return true\n    else if n==42\n\
    \    then return \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpeyt_q1u6.jl:9\nin expression starting at /tmp/tmpeyt_q1u6.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <\
    \ 4\n    then return false\n    else if n == 0 \n    then return true\n    else\
    \ if n % 2 == 0 \n    then return false\n    else if n % 4 == 0 \n    then return\
    \ true\n    else return is_equal_to_sum_even(n - 2)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@assert is_equal_to_sum_even(2) == false\n@assert is_equal_to_sum_even(6)\
    \ == false\n@assert is_equal_to_sum_even(8) == true\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that evaluates whether the given number n can be written\
    \ as the sum of exactly 4 positive odd numbers\n    Example\n    is_equal_to_sum_odd(4)\
    \ == false\n    is_equal_to_sum_odd(6) == false\n    is_equal_to_sum_odd(8) ==\
    \ true\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppwa3ulua.jl:9\nin expression starting at /tmp/tmppwa3ulua.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <=\
    \ 0 \n        then return False\n    else if n == 0 \n        then return True\n\
    \    else if n % 2 == 0 \n        then return False\n    else if n % 4 == 0 \n\
    \        then return True\n    else if n % 8 == 0 \n        then return True\n\
    \    else if n % 16 == 0 \n        then return True\n    else if n % 32 == 0 \n\
    \        then return True\n    else if n % 64 == 0 \n        then return True\n\
    \    else if n % 128 == 0 \n        then return True\n    else if n % 256 == 0\
    \ \n        then return True\n    else if n % 512 == 0 \n        then return True\n\
    \    else if n % 1024 == 0 \n        then return True\n    else if n % 2048 ==\
    \ 0 \n        then return True\n    else if n % 4096 == 0 \n        then return\
    \ True\n    else if n % 8192 == 0 \n        then return True\n    else if n %\
    \ 16384 == 0 \n        then return True\n    else if n % 32768 == 0 \n       \
    \ then return True\n    else if n % 65536 == 0 \n        then return True\n  \
    \  else if n % 131072 == 0 \n        then return True\n    else if n % 262144\
    \ == 0 \n        then return True\n    else if n % 524288 == 0 \n        then\
    \ return True\n    else if n % 1048576 == 0 \n        then return True\n    else\
    \ if n % 2097152 == 0 \n        then return True\n    else if n % 4194304 == 0\
    \ \n        then return True\n    else if n % 8388608 == 0 \n        then return\
    \ True\n    else if n % 16777216 == 0 \n        then return True\n    else if\
    \ n % 33554432 == 0 \n        then return True\n    else if n % 67108864 == 0\
    \ \n        then return True\n    else if n % 134217728 == 0 \n        then return\
    \ True\n    else if n % 268435456 == 0 \n        then return True\n    else if\
    \ n % 536870912 == 0 \n        then return True\n    else if n % 1073741824 ==\
    \ 0 \n        then return True\n    else if n % 2147483648 == 0 \n        then\
    \ return True\n    else if n % 4294967296 == 0 \n        then return True\n  \
    \  else if n % 8589934592 == 0 \n        then return True\n    else if n % 17179869184\
    \ == 0 \n        then return True\nusing Test\n\n@testset begin\n\ncandidate =\
    \ is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1kl9zr2v.jl:9\nin expression starting at /tmp/tmp1kl9zr2v.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n<4\
    \ then return false \n    else if n%2==0 then return false \n    else if n%3==0\
    \ then return false \n    else if n%4==0 then return true \n    else return false\
    \ \nend \n</cell>\n<code language=julia-1.0>\n\"\"\"Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    is_equal_to_sum_odd(4) == False\n    is_equal_to_sum_odd(6) == False\n  \
    \  is_equal_to_sum_odd(8) == True\n    \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprlttr2lv.jl:8\nin expression starting at /tmp/tmprlttr2lv.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 then return true\n    if n == 1 then return true\n    if n == 2 then return\
    \ true\n    if n % 2 == 0 then return false\n    \n    \n    if n % 4 == 0 then\
    \ return true\n    \n    \n    if n % 8 == 0 then return true\n    \n    \n  \
    \  if n % 16 == 0 then return true\n    \n    \n    if n % 32 == 0 then return\
    \ true\n    \n    \n    if n % 64 == 0 then return true\n    \n    \n    if n\
    \ % 128 == 0 then return true\n    \n    \n    if n % 256 == 0 then return true\n\
    \    \n    \n    if n % 512 == 0 then return true\n    \n    \n    if n % 1024\
    \ == 0 then return true\n    \n    \n    if n % 2048 == 0 then return true\n \
    \   \n    \n    if n % 4096 == 0 then return true\n    \n    \n    if n % 8192\
    \ == 0 then return true\n    \n    \n    if n % 16384 == 0 then return true\n\
    \    \n    \n    if n % 32768 == 0 then return true\n    \n    \n    if n % 65536\
    \ == 0 then return true\n    \n    \n    if n % 131072 == 0 then return true\n\
    \    \n    \n    if n % 262144 == 0 then return true\n    \n    \n    if n % 524288\
    \ == 0 then return true\n    \n    \n    if n % 1048576 == 0 then return true\n\
    \    \n    \n    if n % 2097152 == 0 then return true\n    \n    \n    if n %\
    \ 4194304 == 0 then return true\n    \n    \n    if n % 8388608 == 0 then return\
    \ true\n    \n    \n    if n % 16777216 == 0 then return true\n    \n    \n  \
    \  if n % 33554432 == 0 then return true\n    \n    \n    if n % 67108864 == 0\
    \ then return true\n    \n    \n    if n % 134217728 == 0 then return true\n \
    \   \n    \n    if n % 268435456 == 0 then return true\n    \n    \n    if n %\
    \ 536870912 == 0 then return true\n    \n    \n    if n % 1073741824 == 0 then\
    \ return true\n    \n    \n    if n % 2147483648 == 0 then return true\n    \n\
    \    \n    if n % 4294967296 == 0 then return true\n    \n    \n    if n % 8589934592\
    \ == 0 then return true\n    \n    \n    if n % 17179869184 == 0 then return true\n\
    \    \n    \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnceamxo8.jl:8\nin expression starting at /tmp/tmpnceamxo8.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 then return true\n    else if n % 2 == 0 then return false\n    else if n\
    \ % 4 == 0 then return false\n    else if n % 8 == 0 then return false\n    else\
    \ if n % 16 == 0 then return false\n    else if n % 32 == 0 then return false\n\
    \    else if n % 64 == 0 then return false\n    else if n % 128 == 0 then return\
    \ false\n    else if n % 256 == 0 then return false\n    else if n % 512 == 0\
    \ then return false\n    else if n % 1024 == 0 then return false\n    else if\
    \ n % 2048 == 0 then return false\n    else if n % 4096 == 0 then return false\n\
    \    else if n % 8192 == 0 then return false\n    else if n % 16384 == 0 then\
    \ return false\n    else if n % 32768 == 0 then return false\n    else if n %\
    \ 65536 == 0 then return false\n    else if n % 131072 == 0 then return false\n\
    \    else if n % 262144 == 0 then return false\n    else if n % 524288 == 0 then\
    \ return false\n    else if n % 1048576 == 0 then return false\n    else if n\
    \ % 2097152 == 0 then return false\n    else if n % 4194304 == 0 then return false\n\
    \    else if n % 8388608 == 0 then return false\n    else if n % 16777216 == 0\
    \ then return false\n    else if n % 33554432 == 0 then return false\n    else\
    \ if n % 67108864 == 0 then return false\n    else if n % 134217728 == 0 then\
    \ return false\n    else if n % 268435456 == 0 then return false\n    else if\
    \ n % 536870912 == 0 then return false\n    else if n % 1073741824 == 0 then return\
    \ false\n    else if n % 2147483648 == 0 then return false\n    else if n % 4294967296\
    \ == 0 then return false\n    else if n % 8589934592 == 0 then return false\n\
    \    else if n % 17179869184 == 0 then return false\n    else if n % 34359738368\
    \ == 0 then return false\n    else if n % 68719476736 == 0 then return false\n\
    \    else if n % 137438953472 == 0 then return false\n    else if n % 274877906944\
    \ == 0 then return false\n    else if n % 549755813888 == 0 then return false\n\
    \    else if \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptlwlvfuy.jl:8\nin expression starting at /tmp/tmptlwlvfuy.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return False\n    else if n % 2 == 0 \n        then return\
    \ is_equal_to_sum_even(n - 1)\n    else if n % 4 == 0 \n        then return is_equal_to_sum_even(n\
    \ - 3)\n    else return False\nend\n</cell>\n<code language=julia-1.0>\n@time\
    \ is_equal_to_sum_even(100)\n</cell>\n<text>\nExercise 4\nWrite a function that\
    \ returns the number of positive integers less than or equal to n that are divisible\
    \ by 3.\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t\
    @test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphmosbfsa.jl:9\nin expression starting at /tmp/tmphmosbfsa.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <=\
    \ 0\n        error(\"n must be positive\")\n    else if n == 1\n        true\n\
    \    else\n        n % 2 == 0 && is_equal_to_sum_even(n - 1) || is_equal_to_sum_even(n\
    \ - 2)\nend\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps80tc34_.jl:10\nin expression starting at\
    \ /tmp/tmps80tc34_.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even_helper(n)\
    \ == true\n    else \n        false\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n\
    \    if n == 0\n        true\n    elseif n == 1\n        true\n    elseif n ==\
    \ 2\n        true\n    elseif n == 3\n        true\n    elseif n == 4\n      \
    \  true\n    elseif n == 5\n        true\n    elseif n == 6\n        true\n  \
    \  elseif n == 7\n        true\n    elseif n == 8\n        true\n    elseif n\
    \ == 9\n        true\n    elseif n == 10\n        true\n    elseif n == 11\n \
    \       true\n    elseif n == 12\n        true\n    elseif n == 13\n        true\n\
    \    elseif n == 14\n        true\n    elseif n == 15\n        true\n    elseif\
    \ n == 16\n        true\n    elseif n == 17\n        true\n    elseif n == 18\n\
    \        true\n    elseif n == 19\n        true\n    elseif n == 20\n        true\n\
    \    elseif n == 21\n        true\n    elseif n == 22\n        true\n    elseif\
    \ n == 23\n        true\n    elseif n == 24\n        true\n    elseif n == 25\n\
    \        true\n    elseif n == 26\n        true\n    elseif n == 27\n        true\n\
    \    elseif n == 28\n        true\n    elseif n == 29\n        true\n    elseif\
    \ n == 30 or n == 31\n        true\n    elseif n == 32\n        true\n    elseif\
    \ n == 33\n        true\n    elseif n == 34\n        true\n    elseif n == 35\n\
    \        true\n    elseif n == 36\n        true\n    elseif n == 37\n        true\n\
    \    elseif n == 38\n        true\n    elseif n == 39\n        true\n    elseif\
    \ n == 40 or n == 41\n        true\n    elseif n == 42\n        true\n    elseif\
    \ n == 43\n        true\n    elseif n == 44\n        true\n    elseif n == 45\n\
    \        true\n    elseif n == 46\n        true\n    elseif n == 47\n        true\n\
    \    elseif n == 48\n        true\n    elseif n == 49\n        true\n    elseif\
    \ n == 50 or n == 51\n        true\n    elseif n == 52\n        true\n    elseif\
    \ n == 53\n        true\n    elseif n == 54\n        true\n    elseif n == 55\n\
    \        true\n    elseif n == 56\n        true\n    elseif n == 57\n        true\n\
    \    elseif n == 58\n        true\n    elseif n == 59\n        true\n    elseif\
    \ n == 60 or n == 61\n        \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw9jyrdhr.jl:1\nin expression starting at /tmp/tmpw9jyrdhr.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <=\
    \ 0\n        error(\"n must be positive\")\n    else if n == 1\n        true\n\
    \    else\n        n <= 4\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(2) == true\n@assert is_equal_to_sum_even(6) == false\n\
    @assert is_equal_to_sum_even(8) == true\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns true if the given number n is divisible by 3, and false\
    \ otherwise. Hint: n % 3 == 0 will do the trick.\nusing Test\n\n@testset begin\n\
    \ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6t3em19s.jl:10\nin expression starting at\
    \ /tmp/tmp6t3em19s.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n<4\
    \ then return False \n    else if n%2==0 then return False \n    else if n%3==0\
    \ then return False \n    else if n%4==0 then return False \n    else return True\
    \ \nend \n</cell>\n<code language=julia-1.5>\n\"\"\"Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    is_equal_to_sum_odd(4) == False\n    is_equal_to_sum_odd(6) == False\n  \
    \  is_equal_to_sum_odd(8) == True\n    \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6qk3q2mm.jl:8\nin expression starting at /tmp/tmp6qk3q2mm.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return true\n    else if n % 2 == 0 \n        then return false\n\
    \    else if n % 4 == 0 \n        then return true\n    else if n % 8 == 0 \n\
    \        then return true\n    else if n % 16 == 0 \n        then return true\n\
    \    else if n % 32 == 0 \n        then return true\n    else if n % 64 == 0 \n\
    \        then return true\n    else if n % 128 == 0 \n        then return true\n\
    \    else if n % 256 == 0 \n        then return true\n    else if n % 512 == 0\
    \ \n        then return true\n    else if n % 1024 == 0 \n        then return\
    \ true\n    else return false\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ is_equal_to_sum_even(2) == false\n@assert is_equal_to_sum_even(6) == false\n\
    @assert is_equal_to_sum_even(8) == true\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that checks whether a given number n is equal to the sum of exactly\
    \ 4 positive odd numbers. \nExample\nis_equal_to_sum_odd(4) == false\nis_equal_to_sum_odd(6)\
    \ == false\nis_equal_to_sum_odd(8) == true\nHint: You can use the function is_equal_to_sum_even.\n\
    using Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1u0nel4v.jl:9\nin expression starting at /tmp/tmp1u0nel4v.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even_helper(n)\
    \ == True \n    else \n        return False \nend \nusing Test\n\n@testset begin\n\
    \ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp3r8dm0we.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp3r8dm0we.jl:1\n\
    in expression starting at /tmp/tmp3r8dm0we.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        return true\n    else if n == 1 \n        return true\n    else\
    \ if n == 2 \n        return true\n    else if n % 2 == 0 \n        return false\n\
    \    else \n        return is_equal_to_sum_even(n - 1) && is_equal_to_sum_even(n\
    \ - 2)\nend\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe5nbqfqj.jl:10\nin expression starting at\
    \ /tmp/tmpe5nbqfqj.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <\
    \ 0\n    then return False\n    else if n == 0\n    then return True\n    else\
    \ if n % 2 == 0\n    then return is_equal_to_sum_even(n - 2)\n    else return\
    \ is_equal_to_sum_even(n - 3)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\
    Evaluate whether the given number n can be written as the sum of exactly 4 positive\
    \ odd numbers\n    Example\n    is_equal_to_sum_odd(4) == False\n    is_equal_to_sum_odd(6)\
    \ == False\n    is_equal_to_sum_odd(8) == True\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqgrbgwcv.jl:9\nin expression starting at /tmp/tmpqgrbgwcv.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n<4\n\
    \        return false\n    else if n%2==0\n        return false\n    else if n%3==0\n\
    \        return false\n    else if n%4==0\n        return true\n    else\n   \
    \     return false\nend\n\"\"\"\n    \n\"\"\"\n    Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    is_equal_to_sum_odd(4) == False\n    is_equal_to_sum_odd(6) == False\n  \
    \  is_equal_to_sum_odd(8) == True\n    \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbxz2h6uc.jl:10\nin expression starting at\
    \ /tmp/tmpbxz2h6uc.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <\
    \ 0\n        error(\"n must be positive\")\n    else if n == 0\n        true\n\
    \    else\n        n % 2 == 0 && is_equal_to_sum_even(n - 2)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) ==\
    \ false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmponlcysyx.jl:10\nin expression starting at\
    \ /tmp/tmponlcysyx.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return False \n    else if n % 2 == 0 \n        then return\
    \ is_equal_to_sum_even(n - 1) \n        else return is_equal_to_sum_even(n - 3)\
    \ \n    end\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(8)\
    \ == true\n@assert is_equal_to_sum_even(6) == false\n@assert is_equal_to_sum_even(5)\
    \ == false\n@assert is_equal_to_sum_even(10) == true\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that computes the factorial of a given number. \nExample\n\
    factorial(5) == 120\nfactorial(3) == 6\nfactorial(4) == 24\nfactorial(2) == 4\n\
    factorial(0) == 1\nfactorial(-1) == -1\nHint: use recursion.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpla023xru.jl:9\nin expression starting at /tmp/tmpla023xru.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return true\n    else if n % 2 == 0 \n        then return false\n\
    \    else if n % 4 == 0 \n        then return false\n    else if n % 8 == 0 \n\
    \        then return false\n    else if n % 16 == 0 \n        then return false\n\
    \    else if n % 32 == 0 \n        then return false\n    else if n % 64 == 0\
    \ \n        then return false\n    else if n % 128 == 0 \n        then return\
    \ false\n    else if n % 256 == 0 \n        then return false\n    else if n %\
    \ 512 == 0 \n        then return false\n    else if n % 1024 == 0 \n        then\
    \ return false\n    else if n % 2048 == 0 \n        then return false\n    else\
    \ if n % 4096 == 0 \n        then return false\n    else if n % 8192 == 0 \n \
    \       then return false\n    else if n % 16384 == 0 \n        then return false\n\
    \    else if n % 32768 == 0 \n        then return false\n    else if n % 65536\
    \ == 0 \n        then return false\n    else if n % 131072 == 0 \n        then\
    \ return false\n    else if n % 262144 == 0 \n        then return false\n    else\
    \ if n % 524288 == 0 \n        then return false\n    else if n % 1048576 == 0\
    \ \n        then return false\n    else if n % 2097152 == 0 \n        then return\
    \ false\n    else if n % 4194304 == 0 \n        then return false\n    else if\
    \ n % 8388608 == 0 \n        then return false\n    else if n % 16777216 == 0\
    \ \n        then return false\n    else if n % 33554432 == 0 \n        then return\
    \ false\n    else if n % 67108864 == 0 \n        then return false\n    else if\
    \ n % 134217728 == 0 \n        then return false\n    else if n % 268435456 ==\
    \ 0 \n        then return false\n    else if n % 536870912 == 0 \n        then\
    \ return false\n    else if n % 1073741824 == 0 \n        then return false\n\
    \    else if n % 2147483648 == 0 \n        then return false\n    else if n %\
    \ 4294967296 == 0 \n        then return false\n    else if n % 8589934592 == 0\
    \ \n        then return false\n    else if n % 17179869184 == 0 \n        then\
    \ return false\n    else if n % 34359738368 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp03eoceb_.jl:9\nin expression starting at /tmp/tmp03eoceb_.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\
    \ then return true\n    if n==1 then return true\n    if n==2 then return true\n\
    \    if n==3 then return true\n    if n==4 then return true\n    if n==5 then\
    \ return true\n    if n==6 then return true\n    if n==7 then return true\n  \
    \  if n==8 then return true\n    if n==9 then return true\n    if n==10 then return\
    \ true\n    if n==11 then return true\n    if n==12 then return true\n    if n==13\
    \ then return true\n    if n==14 then return true\n    if n==15 then return true\n\
    \    if n==16 then return true\n    if n==17 then return true\n    if n==18 then\
    \ return true\n    if n==19 then return true\n    if n==20 then return true\n\
    \    if n==21 then return true\n    if n==22 then return true\n    if n==23 then\
    \ return true\n    if n==24 then return true\n    if n==25 then return true\n\
    \    if n==26 then return true\n    if n==27 then return true\n    if n==28 then\
    \ return true\n    if n==29 then return true\n    if n==30 then return true\n\
    \    if n==31 then return true\n    if n==32 then return true\n    if n==33 then\
    \ return true\n    if n==34 then return true\n    if n==35 then return true\n\
    \    if n==36 then return true\n    if n==37 then return true\n    if n==38 then\
    \ return true\n    if n==39 then return true\n    if n==40 then return true\n\
    \    if n==41 then return true\n    if n==42 then return true\n    if n==43 then\
    \ return true\n    if n==44 then return true\n    if n==45 then return true\n\
    \    if n==46 then return true\n    if n==47 then return true\n    if n==48 then\
    \ return true\n    if n==49 then return true\n    if n==50 then return true\n\
    \    if n==51 then return true\n    if n==52 then return true\n    if n==53 then\
    \ return true\n    if n==54 then return true\n    if n==55 then return true\n\
    \    if n==56 then return true\n    if n==57 then return true\n    if n==58 then\
    \ return true\n    if n==59 then return true\n    if n==60 then return true\n\
    \    if n==61 \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpio9lycat.jl:8\nin expression starting at /tmp/tmpio9lycat.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return False\n    else if n == 1 \n        then return True\n\
    \    else if n % 2 == 0 \n        then return False\n    else if n % 4 == 0 \n\
    \        then return True\n    else if n % 8 == 0 \n        then return False\n\
    \    else if n % 16 == 0 \n        then return True\n    else if n % 32 == 0 \n\
    \        then return False\n    else if n % 64 == 0 \n        then return True\n\
    \    else return False\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(2)\
    \ == False\n@assert is_equal_to_sum_even(6) == False\n@assert is_equal_to_sum_even(8)\
    \ == True\n</cell>\n<text>\nExercise 3\nWrite a function that evaluates whether\
    \ the given number n can be written as the sum of exactly 4 positive odd numbers\n\
    Example\nis_equal_to_sum_odd(4) == False\nis_equal_to_sum_odd(6) == False\nis_equal_to_sum_odd(8)\
    \ == True\nis_equal_to_sum_odd(9) == False\nis_equal_to_sum_odd(10) == True\n\
    is_equal_to_sum_odd(11) == False\nis_equal_to_sum_odd(12) == True\nis_equal_to_sum_odd(13)\
    \ == False\nis_equal_to_sum_odd(14) == True\nis_equal_to_sum_odd(15) == False\n\
    is_equal_to_sum_odd(16) == True\nis_equal_to_sum_odd(17) == False\nis_equal_to_sum_odd(18)\
    \ == True\nis_equal_to_sum_odd(19) == False\nis_equal_to_sum_odd(20) == True\n\
    is_equal_to_sum_odd(21) == False\nis_equal_to_sum_odd(22) == True\nis_equal_to_sum_odd(23)\
    \ == False\nis_equal_to_sum_odd(24) == True\nis_equal_to_sum_odd(25) == False\n\
    is_equal_to_sum_odd(26) == True\nis_equal_to_sum_odd(27) == False\nis_equal_to_sum_odd(28)\
    \ == True\nis_equal_to_sum_odd(29) == False\nis_equal_to_sum_odd(30) == True\n\
    is_equal_to_sum_odd(31) == False\nis_equal_to_sum_odd(32) == True\nis_equal_to_sum_odd(33)\
    \ == False\nis_equal_to_sum_odd(34) == True\nis_equal_to_sum_odd(35) == False\n\
    is_equal_to_sum_odd(36) == True\nis_equal_to_sum_odd(37) == False\nis_equal_to_sum_odd(38)\
    \ == True\nis_equal_to_sum_\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2p_usz3p.jl:9\nin expression starting at /tmp/tmp2p_usz3p.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return true\n    else if n % 2 == 0 \n        then return false\n\
    \    else if n % 4 == 0 \n        then return true\n    else if n % 8 == 0 \n\
    \        then return false\n    else if n % 16 == 0 \n        then return true\n\
    \    else if n % 32 == 0 \n        then return false\n    else if n % 64 == 0\
    \ \n        then return true\n    else if n % 128 == 0 \n        then return false\n\
    \    else if n % 256 == 0 \n        then return true\n    else if n % 512 == 0\
    \ \n        then return false\n    else if n % 1024 == 0 \n        then return\
    \ true\n    else if n % 2048 == 0 \n        then return false\n    else if n %\
    \ 4096 == 0 \n        then return true\n    else if n % 8192 == 0 \n        then\
    \ return false\n    else if n % 16384 == 0 \n        then return true\n    else\
    \ if n % 32768 == 0 \n        then return false\n    else if n % 65536 == 0 \n\
    \        then return true\n    else if n % 131072 == 0 \n        then return false\n\
    \    else if n % 262144 == 0 \n        then return true\n    else if n % 524288\
    \ == 0 \n        then return false\n    else if n % 1048576 == 0 \n        then\
    \ return true\n    else if n % 2097152 == 0 \n        then return false\n    else\
    \ if n % 4194304 == 0 \n        then return true\n    else if n % 8388608 == 0\
    \ \n        then return false\n    else if n % 16777216 == 0 \n        then return\
    \ true\n    else if n % 33554432 == 0 \n        then return false\n    else if\
    \ n % 67108864 == 0 \n        then return true\n    else if n % 134217728 == 0\
    \ \n        then return false\n    else if n % 268435456 == 0 \n        then return\
    \ true\n    else if n % 536870912 == 0 \n        then return false\n    else if\
    \ n % 1073741824 == 0 \n        then return true\n    else if n % 2147483648 ==\
    \ 0 \n        then return false\n    else if n % 4294967296 == 0 \n        then\
    \ return true\n    else if n % 8589934592 == 0 \n        then return false\n \
    \   else if n % 17179869184 == 0 \n        then return true\n    else if n % 34359738368\
    \ == 0 \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t\
    @test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplzayl_x2.jl:9\nin expression starting at /tmp/tmplzayl_x2.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return True\n    else if n % 2 == 0 \n        then return False\n\
    \    else if n % 4 == 0 \n        then return True\n    else \n        return\
    \ is_equal_to_sum_even(n - 1)\nend\n</cell>\n<code language=julia-1.0>\n@assert\
    \ is_equal_to_sum_even(2) == False\n@assert is_equal_to_sum_even(3) == False\n\
    @assert is_equal_to_sum_even(5) == True\n@assert is_equal_to_sum_even(8) == True\n\
    </cell>\n<text>\nExercise 5\nWrite a function that checks whether a given number\
    \ n is a prime number. \nThe function should return True if n is a prime number\
    \ and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnt9g0fg4.jl:9\nin expression starting at /tmp/tmpnt9g0fg4.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even_helper(n)\
    \ == true\n    else \n        false\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n\
    \    if n == 0\n        true\n    elseif n == 1\n        true\n    elseif n %\
    \ 2 == 0\n        is_equal_to_sum_even_helper(n - 1)\n    else\n        is_equal_to_sum_even_helper(n\
    \ - 2)\n    end\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n  \
    \  if n == 0\n        true\n    elseif n == 1\n        true\n    elseif n % 2\
    \ == 0\n        is_equal_to_sum_even_helper(n - 1)\n    else\n        is_equal_to_sum_even_helper(n\
    \ - 2)\n    end\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n  \
    \  if n == 0\n        true\n    elseif n == 1\n        true\n    elseif n % 2\
    \ == 0\n        is_equal_to_sum_even_helper(n - 1)\n    else\n        is_equal_to_sum_even_helper(n\
    \ - 2)\n    end\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n  \
    \  if n == 0\n        true\n    elseif n == 1\n        true\n    elseif n % 2\
    \ == 0\n        is_equal_to_sum_even_helper(n - 1)\n    else\n        is_equal_to_sum_even_helper(n\
    \ - 2)\n    end\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n  \
    \  if n == 0\n        true\n    elseif n == 1\n        true\n    elseif n % 2\
    \ == 0\n        is_equal_to_sum_even_helper(n - 1)\n    else\n        is_equal_to_sum_even_helper(n\
    \ - 2)\n    end\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n  \
    \  if n == 0\n        true\n    elseif n == 1\n        true\n    elseif n % 2\
    \ == 0\n        is_equal_to_sum_even_helper(n - 1)\n    else\n        is_equal_to_sum_even_helper(n\
    \ - 2)\n    end\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n  \
    \  if n == 0\n        true\n    elseif n == 1\n        true\n    elseif n % 2\
    \ == 0\n        is_equal_to_sum_even_helper(n - 1)\n    else\n        is_equal_to_sum_even_helper(n\
    \ - 2)\n    end\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n  \
    \  if n == 0\n        true\n    elseif n == 1\n        true\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nis_equal_to_sum_even_helper(n::Int64)::Bool\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp9ap_uh65.jl:36\nin expression starting at /tmp/tmp9ap_uh65.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n<4\
    \ return false\n    else if n%2==0 return false\n    else if n%3==0 return false\n\
    \    else if n%4==0 return true\n    else return false\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    is_equal_to_sum_odd(4) == False\n \
    \   is_equal_to_sum_odd(6) == False\n    is_equal_to_sum_odd(8) == True\n    \"\
    \"\"\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeu_gd581.jl:9\nin expression starting at /tmp/tmpeu_gd581.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n<4\
    \ return false\n    else if n%2==0 return false\n    else if n%3==0 return false\n\
    \    else if n%4==0 return true\n    else return false\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    is_equal_to_sum_odd(4) == False\n \
    \   is_equal_to_sum_odd(6) == False\n    is_equal_to_sum_odd(8) == True\n    \"\
    \"\"\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkzwkkilm.jl:9\nin expression starting at /tmp/tmpkzwkkilm.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <=\
    \ 0 \n        then return False\n    else if n == 0 \n        then return True\n\
    \    else if n % 2 == 0 \n        then return False\n    else if n % 4 == 0 \n\
    \        then return True\n    else \n        return is_equal_to_sum_even(n -\
    \ 1)\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(10)\
    \ == false\n@assert is_equal_to_sum_even(11) == false\n@assert is_equal_to_sum_even(12)\
    \ == false\n@assert is_equal_to_sum_even(13) == true\n@assert is_equal_to_sum_even(14)\
    \ == true\n@assert is_equal_to_sum_even(15) == true\n@assert is_equal_to_sum_even(16)\
    \ == true\n@assert is_equal_to_sum_even(17) == true\n@assert is_equal_to_sum_even(18)\
    \ == true\n@assert is_equal_to_sum_even(19) == true\n@assert is_equal_to_sum_even(20)\
    \ == true\n@assert is_equal_to_sum_even(21) == true\n@assert is_equal_to_sum_even(22)\
    \ == true\n@assert is_equal_to_sum_even(23) == true\n@assert is_equal_to_sum_even(24)\
    \ == true\n@assert is_equal_to_sum_even(25) == true\n@assert is_equal_to_sum_even(26)\
    \ == true\n@assert is_equal_to_sum_even(27) == true\n@assert is_equal_to_sum_even(28)\
    \ == true\n@assert is_equal_to_sum_even(29) == true\n@assert is_equal_to_sum_even(30)\
    \ == true\n@assert is_equal_to_sum_even(31) == true\n@assert is_equal_to_sum_even(32)\
    \ == true\n@assert is_equal_to_sum_even(33) == true\n@assert is_equal_to_sum_even(34)\
    \ == true\n@assert is_equal_to_sum_even(35) == true\n@assert is_equal_to_sum_even(36)\
    \ == true\n@assert is_equal_to_sum_even(37) == true\n@assert is_equal_to_sum_even(38)\
    \ == true\n@assert is_equal_to_sum_even(39) == true\n@assert is_equal_to_sum_even(40)\
    \ == true\n@assert is_equal_to_sum_even(41) == true\n@assert is_equal_to_sum_even(42)\
    \ == true\n@assert is_equal_to_sum_even(43) == true\n@assert is_equal_to_sum_even(44)\
    \ == true\n@assert is_equal_to_sum_even(45) == true\n@assert is_equal_to_sum_even(46)\
    \ == true\n@assert is_equal_to_sum_even(47) == true\n@assert is_equal_to_sum_even(48)\
    \ == true\n@assert is_equal_to_sum_even(49) == true\n@assert \nusing Test\n\n\
    @testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpefod02l0.jl:9\nin expression starting at /tmp/tmpefod02l0.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0\n        true\n    else\n        n % 2 == 0 && is_equal_to_sum_even(n - 1)\
    \ || is_equal_to_sum_even(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ is_equal_to_sum_even(2) == false\n@assert is_equal_to_sum_even(3) == true\n\
    @assert is_equal_to_sum_even(5) == true\n@assert is_equal_to_sum_even(7) == true\n\
    @assert is_equal_to_sum_even(10) == true\n@assert is_equal_to_sum_even(15) ==\
    \ true\n@assert is_equal_to_sum_even(20) == true\n@assert is_equal_to_sum_even(25)\
    \ == true\n@assert is_equal_to_sum_even(30) == true\n@assert is_equal_to_sum_even(35)\
    \ == true\n@assert is_equal_to_sum_even(40) == true\n@assert is_equal_to_sum_even(45)\
    \ == true\n@assert is_equal_to_sum_even(50) == true\n@assert is_equal_to_sum_even(55)\
    \ == true\n@assert is_equal_to_sum_even(60) == true\n@assert is_equal_to_sum_even(65)\
    \ == true\n@assert is_equal_to_sum_even(70) == true\n@assert is_equal_to_sum_even(75)\
    \ == true\n@assert is_equal_to_sum_even(80) == true\n@assert is_equal_to_sum_even(85)\
    \ == true\n@assert is_equal_to_sum_even(90) == true\n@assert is_equal_to_sum_even(95)\
    \ == true\n@assert is_equal_to_sum_even(100) == true\n@assert is_equal_to_sum_even(101)\
    \ == true\n@assert is_equal_to_sum_even(102) == true\n@assert is_equal_to_sum_even(103)\
    \ == true\n@assert is_equal_to_sum_even(104) == true\n@assert is_equal_to_sum_even(105)\
    \ == true\n@assert is_equal_to_sum_even(106) == true\n@assert is_equal_to_sum_even(107)\
    \ == true\n@assert is_equal_to_sum_even(108) == true\n@assert is_equal_to_sum_even(109)\
    \ == true\n@assert is_equal_to_sum_even(110) == true\n@assert is_equal_to_sum_even(111)\
    \ == true\n@assert is_equal_to_sum_even(112) == true\n@assert is_equal_to_sum_even(113)\
    \ == true\n@assert is_equal_to_sum_even(114) == true\n@assert is_equal_to_sum_even(115)\
    \ == true\n@assert is_equal_to_sum_even(116) == true\n@assert is_equal_to_sum_even(117)\
    \ == true\n@assert is_equal_to_sum_even(118) == true\n@assert is_equal_to_sum_even(119)\
    \ == true\n@assert is_equal_to_sum_even(120\nusing Test\n\n@testset begin\n\n\
    candidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbel9aiha.jl:13\nin expression starting at\
    \ /tmp/tmpbel9aiha.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even_helper(n)\
    \ == true \n    else \n        false\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n\
    \    if n == 0 \n        true \n    else \n        if n % 2 == 0 \n          \
    \  false \n        else \n            if n % 4 == 0 \n                true \n\
    \            else \n                is_equal_to_sum_even_helper(n - 1) \n    \
    \        end\n        end\n    end\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n\
    \    if n == 0 \n        true \n    else \n        if n % 2 == 0 \n          \
    \  false \n        else \n            if n % 4 == 0 \n                true \n\
    \            else \n                is_equal_to_sum_even_helper(n - 1) \n    \
    \        end\n        end\n    end\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n\
    \    if n == 0 \n        true \n    else \n        if n % 2 == 0 \n          \
    \  false \n        else \n            if n % 4 == 0 \n                true \n\
    \            else \n                is_equal_to_sum_even_helper(n - 1) \n    \
    \        end\n        end\n    end\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n\
    \    if n == 0 \n        true \n    else \n        if n % 2 == 0 \n          \
    \  false \n        else \n            if n % 4 == 0 \n                true \n\
    \            else \n                is_equal_to_sum_even_helper(n - 1) \n    \
    \        end\n        end\n    end\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n\
    \    if n == 0 \n        true \n    else \n        if n % 2 == 0 \n          \
    \  false \n        else \n            if n % 4 == 0 \n                true \n\
    \            else \n                is_equal_to_sum_even_helper(n - 1) \n    \
    \        end\n        end\n    end\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n\
    \    if n == 0 \n        true \n    else \n        if n % 2 == 0 \n          \
    \  false \n        else \n            if n % 4 == 0 \n                true \n\
    \            else \n                is_equal_to_sum_even_helper(n - 1) \n    \
    \        end\n        end\n    end\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n\
    \    if n == 0 \n        true \n    else \n        if n % 2 == 0 \n          \
    \  false \n        else \n            if n % 4 == 0 \n                true \n\
    \            else \n                is_equal_to_sum_even_helper(n - 1) \n    \
    \        end\n        end\n    end\nend\n\"\"\"\nis_equal_to_sum_even_helper(n\n\
    using Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nis_equal_to_sum_even_helper(n::Int64)::Bool\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpem_h8yi0.jl:44\nin expression starting at /tmp/tmpem_h8yi0.jl:44\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\
    \ then return true\n    else if n==1 then return true\n    else if n==2 then return\
    \ true\n    else if n==3 then return true\n    else if n==4 then return true\n\
    \    else if n==5 then return true\n    else if n==6 then return true\n    else\
    \ if n==7 then return true\n    else if n==8 then return true\n    else if n==9\
    \ then return true\n    else return false\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    is_equal_to_sum_odd(4) == False\n \
    \   is_equal_to_sum_odd(6) == False\n    is_equal_to_sum_odd(8) == True\n    \"\
    \"\"\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8w0f0hln.jl:8\nin expression starting at /tmp/tmp8w0f0hln.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_odd_even(n)\
    \ == False \n    else \n        return true\nend\n\"\"\"\nEvaluate whether the\
    \ given number n can be written as the sum of exactly 4 positive odd numbers\n\
    \    Example\n    is_equal_to_sum_odd(4) == False\n    is_equal_to_sum_odd(6)\
    \ == False\n    is_equal_to_sum_odd(8) == True\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpap3qotx1.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpap3qotx1.jl:1\n\
    in expression starting at /tmp/tmpap3qotx1.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return False \n    else if n % 2 == 0 \n        then return\
    \ is_equal_to_sum_even(n - 1) \n    else \n        then return is_equal_to_sum_even(n\
    \ - 3) \n    end\nend\n</cell>\n<code language=julia-1.0>\n@assert is_equal_to_sum_even(2)\
    \ == False\n@assert is_equal_to_sum_even(3) == False\n@assert is_equal_to_sum_even(5)\
    \ == True\n@assert is_equal_to_sum_even(7) == True\n@assert is_equal_to_sum_even(10)\
    \ == True\n@assert is_equal_to_sum_even(15) == True\n@assert is_equal_to_sum_even(20)\
    \ == False\n@assert is_equal_to_sum_even(25) == False\n@assert is_equal_to_sum_even(30)\
    \ == True\n@assert is_equal_to_sum_even(35) == True\n@assert is_equal_to_sum_even(40)\
    \ == False\n@assert is_equal_to_sum_even(45) == False\n@assert is_equal_to_sum_even(50)\
    \ == True\n@assert is_equal_to_sum_even(55) == True\n@assert is_equal_to_sum_even(60)\
    \ == False\n@assert is_equal_to_sum_even(65) == False\n@assert is_equal_to_sum_even(70)\
    \ == True\n@assert is_equal_to_sum_even(75) == True\n@assert is_equal_to_sum_even(80)\
    \ == False\n@assert is_equal_to_sum_even(85) == False\n@assert is_equal_to_sum_even(90)\
    \ == True\n@assert is_equal_to_sum_even(95) == True\n@assert is_equal_to_sum_even(100)\
    \ == False\n@assert is_equal_to_sum_even(105) == False\n@assert is_equal_to_sum_even(110)\
    \ == True\n@assert is_equal_to_sum_even(115) == True\n@assert is_equal_to_sum_even(120)\
    \ == False\n@assert is_equal_to_sum_even(125) == False\n@assert is_equal_to_sum_even(130)\
    \ == True\n@assert is_equal_to_sum_even(135) == True\n@assert is_equal_to_sum_even(140)\
    \ == False\n@assert is_equal_to_sum_even(145) == False\n@assert is_equal_to_sum_even(150)\
    \ == True\n@assert is_equal_to_sum_even(155) == True\n@assert is_equal_to_sum_even(160)\
    \ == False\n@assert is_equal_to_sum_even(165) == False\n@assert is_equal_to_sum_even(170)\
    \ == True\n@assert is_equal_to_sum_even(175) == True\n@assert is_equal_to_sum_even(180)\
    \ == False\n@assert is_equal_to_sum_even(185) == False\n@assert is_equal_to_sum_even(190)\
    \ == True\n@assert is_equal_to_sum_\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaf04kyst.jl:9\nin expression starting at /tmp/tmpaf04kyst.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <=\
    \ 0\n    then return False\n    else if n == 1\n    then return True\n    else\
    \ if n % 2 == 0\n    then return is_equal_to_sum_even(n / 2)\n    else return\
    \ is_equal_to_sum_even(n / 2) && is_equal_to_sum_even(n / 2)\nend\n</cell>\n<code\
    \ language=julia-1.4>\n@time is_equal_to_sum_even(100)\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that returns true if the given number n is divisible by\
    \ 3 or 5\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t\
    @test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9krm1reh.jl:9\nin expression starting at /tmp/tmp9krm1reh.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return true\n    else if n % 2 == 0 \n        then return false\n\
    \    else if n % 4 == 0 \n        then return true\n    else if n % 8 == 0 \n\
    \        then return false\n    else if n % 16 == 0 \n        then return true\n\
    \    else if n % 32 == 0 \n        then return false\n    else if n % 64 == 0\
    \ \n        then return true\n    else if n % 128 == 0 \n        then return false\n\
    \    else if n % 256 == 0 \n        then return true\n    else if n % 512 == 0\
    \ \n        then return false\n    else if n % 1024 == 0 \n        then return\
    \ true\n    else if n % 2048 == 0 \n        then return false\n    else if n %\
    \ 4096 == 0 \n        then return true\n    else if n % 8192 == 0 \n        then\
    \ return false\n    else if n % 16384 == 0 \n        then return true\n    else\
    \ if n % 32768 == 0 \n        then return false\n    else if n % 65536 == 0 \n\
    \        then return true\n    else if n % 131072 == 0 \n        then return false\n\
    \    else if n % 262144 == 0 \n        then return true\n    else if n % 524288\
    \ == 0 \n        then return false\n    else if n % 1048576 == 0 \n        then\
    \ return true\n    else if n % 2097152 == 0 \n        then return false\n    else\
    \ if n % 4194304 == 0 \n        then return true\n    else if n % 8388608 == 0\
    \ \n        then return false\n    else if n % 16777216 == 0 \n        then return\
    \ true\n    else if n % 33554432 == 0 \n        then return false\n    else if\
    \ n % 67108864 == 0 \n        then return true\n    else if n % 134217728 == 0\
    \ \n        then return false\n    else if n % 268435456 == 0 \n        then return\
    \ true\n    else if n % 536870912 == 0 \n        then return false\n    else if\
    \ n % 1073741824 == 0 \n        then return true\n    else if n % 2147483648 ==\
    \ 0 \n        then return false\n    else if n % 4294967296 == 0 \n        then\
    \ return true\n    else if n % 8589934592 == 0 \n        then return false\n \
    \   else if n % 17179869184 == 0 \n        then return true\n    else if n % 34359738368\
    \ == 0 \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t\
    @test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpv7dsimzr.jl:9\nin expression starting at /tmp/tmpv7dsimzr.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0\n        true\n    else\n        n % 2 == 0 && is_equal_to_sum_even(n - 1)\
    \ || is_equal_to_sum_even(n - 2)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpm8w8nd3s.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpm8w8nd3s.jl:1\n\
    in expression starting at /tmp/tmpm8w8nd3s.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n<4\
    \ return false\n    else if n%2==0 return false\n    else if n%3==0 return false\n\
    \    else if n%5==0 return false\n    else return true\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(2) == false\n@assert is_equal_to_sum_even(3) == false\n\
    @assert is_equal_to_sum_even(5) == true\n@assert is_equal_to_sum_even(8) == true\n\
    @assert is_equal_to_sum_even(10) == false\n@assert is_equal_to_sum_even(11) ==\
    \ false\n@assert is_equal_to_sum_even(12) == false\n@assert is_equal_to_sum_even(13)\
    \ == false\n@assert is_equal_to_sum_even(14) == false\n@assert is_equal_to_sum_even(15)\
    \ == false\n@assert is_equal_to_sum_even(16) == false\n@assert is_equal_to_sum_even(17)\
    \ == false\n@assert is_equal_to_sum_even(18) == false\n@assert is_equal_to_sum_even(19)\
    \ == false\n@assert is_equal_to_sum_even(20) == false\n@assert is_equal_to_sum_even(21)\
    \ == false\n@assert is_equal_to_sum_even(22) == false\n@assert is_equal_to_sum_even(23)\
    \ == false\n@assert is_equal_to_sum_even(24) == false\n@assert is_equal_to_sum_even(25)\
    \ == false\n@assert is_equal_to_sum_even(26) == false\n@assert is_equal_to_sum_even(27)\
    \ == false\n@assert is_equal_to_sum_even(28) == false\n@assert is_equal_to_sum_even(29)\
    \ == false\n@assert is_equal_to_sum_even(30) == false\n@assert is_equal_to_sum_even(31)\
    \ == false\n@assert is_equal_to_sum_even(32) == false\n@assert is_equal_to_sum_even(33)\
    \ == false\n@assert is_equal_to_sum_even(34) == false\n@assert is_equal_to_sum_even(35)\
    \ == false\n@assert is_equal_to_sum_even(36) == false\n@assert is_equal_to_sum_even(37)\
    \ == false\n@assert is_equal_to_sum_even(38) == false\n@assert is_equal_to_sum_even(39)\
    \ == false\n@assert is_equal_to_sum_even(40) == false\n@assert is_equal_to_sum_even(41)\
    \ == false\n@assert is_equal_to_sum_even(42) == false\n@assert is_equal_to_sum_even(43)\
    \ == false\n@assert is_equal_to_sum_even(44) == false\n@assert is_equal_to_sum_even(45)\
    \ == false\n@assert is_equal_to_sum_even(46) == false\n@assert is_equal_to_\n\
    using Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq8pgolgx.jl:9\nin expression starting at /tmp/tmpq8pgolgx.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return true\n    else if n == 1 \n        then return true\n\
    \    else if n == 2 \n        then return true\n    else if n % 2 == 0 \n    \
    \    then return false\n    else if n % 3 == 0 \n        then return false\n \
    \   else if n % 5 == 0 \n        then return false\n    else if n % 7 == 0 \n\
    \        then return false\n    else if n % 11 == 0 \n        then return false\n\
    \    else if n % 13 == 0 \n        then return false\n    else if n % 17 == 0\
    \ \n        then return false\n    else if n % 19 == 0 \n        then return false\n\
    \    else if n % 23 == 0 \n        then return false\n    else if n % 29 == 0\
    \ \n        then return false\n    else if n % 37 == 0 \n        then return false\n\
    \    else if n % 43 == 0 \n        then return false\n    else if n % 47 == 0\
    \ \n        then return false\n    else if n % 53 == 0 \n        then return false\n\
    \    else if n % 59 == 0 \n        then return false\n    else if n % 67 == 0\
    \ \n        then return false\n    else if n % 71 == 0 \n        then return false\n\
    \    else if n % 73 == 0 \n        then return false\n    else if n % 79 == 0\
    \ \n        then return false\n    else if n % 83 == 0 \n        then return false\n\
    \    else if n % 89 == 0 \n        then return false\n    else if n % 97 == 0\
    \ \n        then return false\n    else if n % 101 == 0 \n        then return\
    \ false\n    else if n % 103 == 0 \n        then return false\n    else if n %\
    \ 107 == 0 \n        then return false\n    else if n % 111 == 0 \n        then\
    \ return false\n    else if n % 115 == 0 \n        then return false\n    else\
    \ if n % 117 == 0 \n        then return false\n    else if n % 121 == 0 \n   \
    \     then return false\n    else if n % 123 == 0 \n        then return false\n\
    \    else if n % 127 == 0 \n        then return false\n    else if n % 131 ==\
    \ 0 \n        then return false\n    else if n % 135 == 0 \n        then return\
    \ false\n    else if n % 137 == 0 \n        then return false\n    else if n %\
    \ 141 == 0 \n        then return false\n    else if n % 143 == 0 \n        then\
    \ return false\n    else if n % 147 == 0 \n        then return false\n    else\
    \ \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzu6ugukt.jl:9\nin expression starting at /tmp/tmpzu6ugukt.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\n\
    \    then return true\n    else if n==1\n    then return false\n    else if n==2\n\
    \    then return true\n    else if n==3\n    then return true\n    else if n==4\n\
    \    then return true\n    else if n==5\n    then return true\n    else if n==6\n\
    \    then return true\n    else if n==7\n    then return true\n    else if n==8\n\
    \    then return true\n    else if n==9\n    then return true\n    else if n==10\n\
    \    then return true\n    else if n==11\n    then return true\n    else if n==12\n\
    \    then return true\n    else if n==13\n    then return true\n    else if n==14\n\
    \    then return true\n    else if n==15\n    then return true\n    else if n==16\n\
    \    then return true\n    else if n==17\n    then return true\n    else if n==18\n\
    \    then return true\n    else if n==19\n    then return true\n    else if n==20\n\
    \    then return true\n    else if n==21\n    then return true\n    else if n==22\n\
    \    then return true\n    else if n==23\n    then return true\n    else if n==24\n\
    \    then return true\n    else if n==25\n    then return true\n    else if n==26\n\
    \    then return true\n    else if n==27\n    then return true\n    else if n==28\n\
    \    then return true\n    else if n==29\n    then return true\n    else if n==30\n\
    \    then return true\n    else if n==31\n    then return true\n    else if n==32\n\
    \    then return true\n    else if n==33\n    then return true\n    else if n==34\n\
    \    then return true\n    else if n==35\n    then return true\n    else if n==36\n\
    \    then return true\n    else if n==37\n    then return true\n    else if n==38\n\
    \    then return true\n    else if n==39\n    then return true\n    else if n==40\n\
    \    then return true\n    else if n==41\n    then return true\n    else if n==42\n\
    \    then return \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1y0kdss8.jl:9\nin expression starting at /tmp/tmp1y0kdss8.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <=\
    \ 0 \n        then return False\n    else if n == 0 \n        then return True\n\
    \    else if n % 2 == 0 \n        then return False\n    else if n % 4 == 0 \n\
    \        then return True\n    else \n        return is_equal_to_sum_even(n -\
    \ 1)\nend\n</cell>\n<code language=julia-1.3>\n@time is_equal_to_sum_even(4);\n\
    @time is_equal_to_sum_even(6);\n@time is_equal_to_sum_even(8);\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that computes the factorial of a given number. \n\
    Example\nfactorial(4) == 24\nfactorial(5) == 120\nfactorial(6) == 720\nfactorial(7)\
    \ == 5040\nfactorial(8) == 40320\nfactorial(9) == 362880\nfactorial(10) == 3628800\n\
    Hint: Use a recursive function and memoization.\nusing Test\n\n@testset begin\n\
    \ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdx1sj4ax.jl:9\nin expression starting at /tmp/tmpdx1sj4ax.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n<4\
    \ return False\n    else if n%2==0 return False\n    else if n%3==0 return False\n\
    \    else if n%5==0 return False\n    else return True\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    is_equal_to_sum_odd(4) == False\n \
    \   is_equal_to_sum_odd(6) == False\n    is_equal_to_sum_odd(8) == True\n    \"\
    \"\"\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbj7dcjzu.jl:9\nin expression starting at /tmp/tmpbj7dcjzu.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n<4\
    \ return false\n    else if n%2==0 return false\n    else if n%3==0 return false\n\
    \    else if n%4==0 return true\n    else return false\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(2) == false\n@assert is_equal_to_sum_even(6) == false\n\
    @assert is_equal_to_sum_even(8) == true\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that checks whether a given number n is prime or not. \nA prime number\
    \ is a natural number greater than 1 that has no positive divisors other than\
    \ 1 and itself.\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp61ze7nhm.jl:9\nin expression starting at /tmp/tmp61ze7nhm.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <=\
    \ 0 \n        then return False\n    else if n == 0 \n        then return True\n\
    \    else if n % 2 == 0 \n        then return False\n    else if n % 4 == 0 \n\
    \        then return False\n    else if n % 8 == 0 \n        then return False\n\
    \    else if n % 16 == 0 \n        then return False\n    else if n % 32 == 0\
    \ \n        then return False\n    else if n % 64 == 0 \n        then return False\n\
    \    else if n % 128 == 0 \n        then return False\n    else if n % 256 ==\
    \ 0 \n        then return False\n    else if n % 512 == 0 \n        then return\
    \ False\n    else if n % 1024 == 0 \n        then return False\n    else if n\
    \ % 2048 == 0 \n        then return False\n    else if n % 4096 == 0 \n      \
    \  then return False\n    else if n % 8192 == 0 \n        then return False\n\
    \    else if n % 16384 == 0 \n        then return False\n    else if n % 32768\
    \ == 0 \n        then return False\n    else if n % 65536 == 0 \n        then\
    \ return False\n    else if n % 131072 == 0 \n        then return False\n    else\
    \ if n % 262144 == 0 \n        then return False\n    else if n % 524288 == 0\
    \ \n        then return False\n    else if n % 1048576 == 0 \n        then return\
    \ False\n    else if n % 2097152 == 0 \n        then return False\n    else if\
    \ n % 4194304 == 0 \n        then return False\n    else if n % 8388608 == 0 \n\
    \        then return False\n    else if n % 16777216 == 0 \n        then return\
    \ False\n    else if n % 33554432 == 0 \n        then return False\n    else if\
    \ n % 67108864 == 0 \n        then return False\n    else if n % 134217728 ==\
    \ 0 \n        then return False\n    else if n % 268435456 == 0 \n        then\
    \ return False\n    else if n % 536870912 == 0 \n        then return False\n \
    \   else if n % 1073741824 == 0 \n        then return False\n    else if n % 2147483648\
    \ == 0 \n        then return False\n    else if n % 4294967296 == 0 \n       \
    \ then return False\n    else if n % 8589934592 == 0 \n        then return False\n\
    \    else if n % 17179869184 == 0 \n        then return False\nusing Test\n\n\
    @testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp54oukcm7.jl:9\nin expression starting at /tmp/tmp54oukcm7.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <\
    \ 4 \n        return false \n    else \n        return is_equal_to_sum_even(n\
    \ - 4) == true \nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(8)\
    \ == true\n@assert is_equal_to_sum_even(6) == false\n@assert is_equal_to_sum_even(5)\
    \ == false\n@assert is_equal_to_sum_even(2) == false\n@assert is_equal_to_sum_even(3)\
    \ == false\n@assert is_equal_to_sum_even(10) == false\n@assert is_equal_to_sum_even(11)\
    \ == false\n@assert is_equal_to_sum_even(12) == false\n@assert is_equal_to_sum_even(13)\
    \ == false\n@assert is_equal_to_sum_even(14) == false\n@assert is_equal_to_sum_even(15)\
    \ == false\n@assert is_equal_to_sum_even(16) == false\n@assert is_equal_to_sum_even(17)\
    \ == false\n@assert is_equal_to_sum_even(18) == false\n@assert is_equal_to_sum_even(19)\
    \ == false\n@assert is_equal_to_sum_even(20) == false\n@assert is_equal_to_sum_even(21)\
    \ == false\n@assert is_equal_to_sum_even(22) == false\n@assert is_equal_to_sum_even(23)\
    \ == false\n@assert is_equal_to_sum_even(24) == false\n@assert is_equal_to_sum_even(25)\
    \ == false\n@assert is_equal_to_sum_even(26) == false\n@assert is_equal_to_sum_even(27)\
    \ == false\n@assert is_equal_to_sum_even(28) == false\n@assert is_equal_to_sum_even(29)\
    \ == false\n@assert is_equal_to_sum_even(30) == false\n@assert is_equal_to_sum_even(31)\
    \ == false\n@assert is_equal_to_sum_even(32) == false\n@assert is_equal_to_sum_even(33)\
    \ == false\n@assert is_equal_to_sum_even(34) == false\n@assert is_equal_to_sum_even(35)\
    \ == false\n@assert is_equal_to_sum_even(36) == false\n@assert is_equal_to_sum_even(37)\
    \ == false\n@assert is_equal_to_sum_even(38) == false\n@assert is_equal_to_sum_even(39)\
    \ == false\n@assert is_equal_to_sum_even(40) == false\n@assert is_equal_to_sum_even(41)\
    \ == false\n@assert is_equal_to_sum_even(42) == false\n@assert is_equal_to_sum_even(43)\
    \ == false\n@assert is_equal_to_sum_even(44) == false\n@assert is_equal_to_sum_even(45)\
    \ == false\n@assert is_equal_to_sum_even(46) == false\n@assert is_equal_to_sum_even(47)\
    \ == false\n@assert is_equal_to_sum_\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv1oq98dq.jl:13\nin expression starting at\
    \ /tmp/tmpv1oq98dq.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <=\
    \ 0\n        then return False\n    else if n == 1\n        then return True\n\
    \    else if n % 2 == 0\n        then return False\n    else if n % 4 == 0\n \
    \       then return True\n    else return is_equal_to_sum_even(n - 1)\nend\n</cell>\n\
    <code language=julia-1.4>\n@assert is_equal_to_sum_even(2) == true\n@assert is_equal_to_sum_even(3)\
    \ == false\n@assert is_equal_to_sum_even(5) == true\n@assert is_equal_to_sum_even(8)\
    \ == true\n@assert is_equal_to_sum_even(10) == false\n@assert is_equal_to_sum_even(11)\
    \ == false\n@assert is_equal_to_sum_even(12) == true\n@assert is_equal_to_sum_even(13)\
    \ == false\n@assert is_equal_to_sum_even(14) == true\n@assert is_equal_to_sum_even(15)\
    \ == false\n@assert is_equal_to_sum_even(16) == true\n@assert is_equal_to_sum_even(17)\
    \ == false\n@assert is_equal_to_sum_even(18) == true\n@assert is_equal_to_sum_even(19)\
    \ == false\n@assert is_equal_to_sum_even(20) == true\n@assert is_equal_to_sum_even(21)\
    \ == false\n@assert is_equal_to_sum_even(22) == true\n@assert is_equal_to_sum_even(23)\
    \ == false\n@assert is_equal_to_sum_even(24) == true\n@assert is_equal_to_sum_even(25)\
    \ == false\n@assert is_equal_to_sum_even(26) == true\n@assert is_equal_to_sum_even(27)\
    \ == false\n@assert is_equal_to_sum_even(28) == true\n@assert is_equal_to_sum_even(29)\
    \ == false\n@assert is_equal_to_sum_even(30) == true\n@assert is_equal_to_sum_even(31)\
    \ == false\n@assert is_equal_to_sum_even(32) == true\n@assert is_equal_to_sum_even(33)\
    \ == false\n@assert is_equal_to_sum_even(34) == true\n@assert is_equal_to_sum_even(35)\
    \ == false\n@assert is_equal_to_sum_even(36) == true\n@assert is_equal_to_sum_even(37)\
    \ == false\n@assert is_equal_to_sum_even(38) == true\n@assert is_equal_to_sum_even(39)\
    \ == false\n@assert is_equal_to_sum_even(40) == true\n@assert is_equal_to_sum_even(41)\
    \ == false\n@assert is_equal_to_sum_even(42) == true\n@assert is_equal_to_sum_even(43)\
    \ == false\n@assert is_equal_to_sum_even(44) == true\n@assert is_equal_to_sum_even(45)\
    \ == false\n@assert is_equal_\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp26fmxnvh.jl:9\nin expression starting at /tmp/tmp26fmxnvh.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even_helper(n)\
    \ == true\n    else \n        return false\nend\n\"\"\"\n    \nusing Test\n\n\
    @testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6a0ysgb0.jl:1\nin expression starting at /tmp/tmp6a0ysgb0.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\
    \ \n        then return true\n    else if n==1 \n        then return true\n  \
    \  else if n==2 \n        then return true\n    else if n==3 \n        then return\
    \ true\n    else if n==4 \n        then return true\n    else if n==5 \n     \
    \   then return true\n    else if n==6 \n        then return true\n    else if\
    \ n==7 \n        then return true\n    else if n==8 \n        then return true\n\
    \    else if n==9 \n        then return true\n    else if n==10 \n        then\
    \ return true\n    else if n==11 \n        then return true\n    else if n==12\
    \ \n        then return true\n    else if n==13 \n        then return true\n \
    \   else if n==14 \n        then return true\n    else if n==15 \n        then\
    \ return true\n    else if n==16 \n        then return true\n    else if n==17\
    \ \n        then return true\n    else if n==18 \n        then return true\n \
    \   else if n==19 \n        then return true\n    else if n==20 \n        then\
    \ return true\n    else if n==21 \n        then return true\n    else if n==22\
    \ \n        then return true\n    else if n==23 \n        then return true\n \
    \   else if n==24 \n        then return true\n    else if n==25 \n        then\
    \ return true\n    else if n==26 \n        then return true\n    else if n==27\
    \ \n        then return true\n    else if n==28 \n        then return true\n \
    \   else if n==29 \n        then return true\n    else if n==30 \n        then\
    \ return true\n    else if n==31 \n        then return true\n    else if n==32\
    \ \n        then return true\n    else if n==33 \n        then return true\n \
    \   else if n==34 \n        then return true\n    else if n==35 \n        then\
    \ return true\n    else if n==36 \n        then return true\n    else if n==37\
    \ \n        then return true\n    else if n==38 \n        then return true\n \
    \   else if n==39 \n        then return true\n    else if n==40 \n        then\
    \ return true\n    else if n==41 \n        then return true\n    else if n==4\n\
    using Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpo7zeev_j.jl:9\nin expression starting at /tmp/tmpo7zeev_j.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return False\n    else if n % 2 == 0 \n        then return\
    \ False\n    else if n % 4 == 0 \n        then return False\n    else if n % 8\
    \ == 0 \n        then return False\n    else if n % 16 == 0 \n        then return\
    \ False\n    else if n % 32 == 0 \n        then return False\n    else if n %\
    \ 64 == 0 \n        then return False\n    else if n % 128 == 0 \n        then\
    \ return False\n    else if n % 256 == 0 \n        then return False\n    else\
    \ if n % 512 == 0 \n        then return False\n    else if n % 1024 == 0 \n  \
    \      then return False\n    else if n % 2048 == 0 \n        then return False\n\
    \    else if n % 4096 == 0 \n        then return False\n    else if n % 8192 ==\
    \ 0 \n        then return False\n    else if n % 16384 == 0 \n        then return\
    \ False\n    else if n % 32768 == 0 \n        then return False\n    else if n\
    \ % 65536 == 0 \n        then return False\n    else if n % 131072 == 0 \n   \
    \     then return False\n    else if n % 262144 == 0 \n        then return False\n\
    \    else if n % 524288 == 0 \n        then return False\n    else if n % 1048576\
    \ == 0 \n        then return False\n    else if n % 2097152 == 0 \n        then\
    \ return False\n    else if n % 4194304 == 0 \n        then return False\n   \
    \ else if n % 8388608 == 0 \n        then return False\n    else if n % 16777216\
    \ == 0 \n        then return False\n    else if n % 33554432 == 0 \n        then\
    \ return False\n    else if n % 67108864 == 0 \n        then return False\n  \
    \  else if n % 134217728 == 0 \n        then return False\n    else if n % 268435456\
    \ == 0 \n        then return False\n    else if n % 536870912 == 0 \n        then\
    \ return False\n    else if n % 1073741824 == 0 \n        then return False\n\
    \    else if n % 2147483648 == 0 \n        then return False\n    else if n %\
    \ 4294967296 == 0 \n        then return False\n    else if n % 8589934592 == 0\
    \ \n        then return False\n    else if n % 17179869184 == 0 \n        then\
    \ return False\n    else if n % 34359738368 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2pbc2hup.jl:9\nin expression starting at /tmp/tmp2pbc2hup.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return true\n    else if n % 2 == 0 \n        then return false\n\
    \    else if n % 4 == 0 \n        then return true\n    else if n % 8 == 0 \n\
    \        then return true\n    else if n % 16 == 0 \n        then return true\n\
    \    else if n % 32 == 0 \n        then return true\n    else if n % 64 == 0 \n\
    \        then return true\n    else if n % 128 == 0 \n        then return true\n\
    \    else if n % 256 == 0 \n        then return true\n    else if n % 512 == 0\
    \ \n        then return true\n    else if n % 1024 == 0 \n        then return\
    \ true\n    else return false\nend\n</cell>\n<code language=julia-1.3>\n@assert\
    \ is_equal_to_sum_even(2) == false\n@assert is_equal_to_sum_even(6) == false\n\
    @assert is_equal_to_sum_even(8) == true\n@assert is_equal_to_sum_even(10) == true\n\
    @assert is_equal_to_sum_even(12) == true\n@assert is_equal_to_sum_even(14) ==\
    \ true\n@assert is_equal_to_sum_even(16) == true\n@assert is_equal_to_sum_even(18)\
    \ == true\n@assert is_equal_to_sum_even(20) == true\n@assert is_equal_to_sum_even(22)\
    \ == true\n@assert is_equal_to_sum_even(24) == true\n@assert is_equal_to_sum_even(26)\
    \ == true\n@assert is_equal_to_sum_even(28) == true\n@assert is_equal_to_sum_even(30)\
    \ == true\n@assert is_equal_to_sum_even(32) == true\n@assert is_equal_to_sum_even(34)\
    \ == true\n@assert is_equal_to_sum_even(36) == true\n@assert is_equal_to_sum_even(38)\
    \ == true\n@assert is_equal_to_sum_even(40) == true\n@assert is_equal_to_sum_even(42)\
    \ == true\n@assert is_equal_to_sum_even(44) == true\n@assert is_equal_to_sum_even(46)\
    \ == true\n@assert is_equal_to_sum_even(48) == true\n@assert is_equal_to_sum_even(50)\
    \ == true\n@assert is_equal_to_sum_even(52) == true\n@assert is_equal_to_sum_even(54)\
    \ == true\n@assert is_equal_to_sum_even(56) == true\n@assert is_equal_to_sum_even(58)\
    \ == true\n@assert is_equal_to_sum_even(60) == true\n@assert is_equal_to_sum_even(62)\
    \ == true\n@assert is_equal_to_sum_even(64) == true\n@assert is_equal_to_sum_even(66)\
    \ == true\n@assert is_equal_to_\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppiy7dw_r.jl:9\nin expression starting at /tmp/tmppiy7dw_r.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 then return False \n    else if n == 1 then return True \n    else if n %\
    \ 2 == 0 then return is_equal_to_sum_even(n - 1) \n    else return is_equal_to_sum_even(n\
    \ - 2) \nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(8)\
    \ == true\n@assert is_equal_to_sum_even(6) == false\n@assert is_equal_to_sum_even(5)\
    \ == false\n@assert is_equal_to_sum_even(10) == false\n@assert is_equal_to_sum_even(2)\
    \ == true\n@assert is_equal_to_sum_even(7) == false\n@assert is_equal_to_sum_even(9)\
    \ == true\n</cell>\n<text>\nExercise 3\nWrite a function that checks whether a\
    \ given number is equal to the sum of exactly 4 positive odd numbers\nExample\n\
    is_equal_to_sum_odd(4) == False\nis_equal_to_sum_odd(6) == False\nis_equal_to_sum_odd(8)\
    \ == True\nHint: use the function is_equal_to_sum_even\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_plq7tml.jl:8\nin expression starting at /tmp/tmp_plq7tml.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\n\
    \        true\n    else\n        if n%2==0\n            false\n        else\n\
    \            if n%3==0\n                false\n            else\n            \
    \    if n%4==0\n                    true\n                else\n             \
    \       false\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(2)\
    \ == false\n@assert is_equal_to_sum_even(3) == false\n@assert is_equal_to_sum_even(5)\
    \ == true\n@assert is_equal_to_sum_even(8) == true\n@assert is_equal_to_sum_even(10)\
    \ == true\n@assert is_equal_to_sum_even(15) == true\n@assert is_equal_to_sum_even(20)\
    \ == true\n@assert is_equal_to_sum_even(25) == true\n@assert is_equal_to_sum_even(30)\
    \ == true\n@assert is_equal_to_sum_even(35) == true\n@assert is_equal_to_sum_even(40)\
    \ == true\n@assert is_equal_to_sum_even(45) == true\n@assert is_equal_to_sum_even(50)\
    \ == true\n@assert is_equal_to_sum_even(55) == true\n@assert is_equal_to_sum_even(60)\
    \ == true\n@assert is_equal_to_sum_even(65) == true\n@assert is_equal_to_sum_even(70)\
    \ == true\n@assert is_equal_to_sum_even(75) == true\n@assert is_equal_to_sum_even(80)\
    \ == true\n@assert is_equal_to_sum_even(85) == true\n@assert is_equal_to_sum_even(90)\
    \ == true\n@assert is_equal_to_sum_even(95) == true\n@assert is_equal_to_sum_even(100)\
    \ == true\n@assert is_equal_to_sum_even(101) == true\n@assert is_equal_to_sum_even(102)\
    \ == true\n@assert is_equal_to_sum_even(103) == true\n@assert is_equal_to_sum_even(104)\
    \ == true\n@assert is_equal_to_sum_even(105) == true\n@assert is_equal_to_sum_even(106)\
    \ == true\n@assert is_equal_to_sum_even(107) == true\n@assert is_equal_to_sum_even(108)\
    \ == true\n@assert is_equal_to_sum_even(109) == true\n@assert is_equal_to_sum_even(110)\
    \ == true\n@assert is_equal_to_sum_even(111) == true\n@assert is_equal_to_sum_even(112)\
    \ == true\n@assert is_equal_to_sum_even(113) == true\n@assert is_equal_to_sum_even(114)\
    \ == true\n@assert is_equal_to_sum_even(115) == true\n@assert is_equal_to_sum_even(116)\
    \ == true\n@assert is_equal_to_sum_even(117) == true\n@assert is_equal_to_sum_even(118)\
    \ == \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0oad41ze.jl:22\nin expression starting at\
    \ /tmp/tmp0oad41ze.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\n\
    \        true\n    else\n        if n==1\n            true\n        else\n   \
    \         if n==2\n                true\n            else\n                if\
    \ n==3\n                    true\n                else\n                    if\
    \ n==4\n                        true\n                    else\n             \
    \           if n==5\n                            true\n                      \
    \  else\n                            if n==6\n                               \
    \ true\n                            else\n                                if n==7\n\
    \                                    true\n                                else\n\
    \                                    if n==8\n                               \
    \         true\n                                    else\n                   \
    \                     if n==9\n                                            true\n\
    \                                        else\n                              \
    \              if n==10\n                                                true\n\
    \                                            else\n                          \
    \                      if n==11\n                                            \
    \        true\n                                                else\n        \
    \                                            if n==12\n                      \
    \                                  true\n                                    \
    \                else\n                                                      \
    \  if n==13\n                                                            true\n\
    \                                                        else\n              \
    \                                              if n==14\n                    \
    \                                            true\n                          \
    \                                  else\n                                    \
    \                            if n==15\n                                      \
    \                              true\n                                        \
    \                        else\n                                              \
    \                      if n==16\n                                            \
    \                            true\n                                          \
    \                          else\n                                            \
    \            if n==17\n                                                      \
    \      true\n                                                        else\n  \
    \                                                          if n==18\n        \
    \                                                        true\n              \
    \                                              else\n                        \
    \                                        if n==19\n                          \
    \                                          true\n                            \
    \                                    else\n                                  \
    \                                  if n==20\n                                \
    \                                        true\n                              \
    \                                      else\n                                \
    \                        if n==21\n                                          \
    \                  true\n                                                    \
    \    else\n                                                            if n==22\n\
    \                                                                true\n      \
    \                                                      else\n                \
    \                                                if n==23\n                  \
    \                                                  true\n                    \
    \                                            else\n                          \
    \                                          if n==24\n                        \
    \                                                true\n                      \
    \                                              else\n                        \
    \                                if n==25\n                                  \
    \                          true\n                                            \
    \            else\n                                                          \
    \  if n==26\n                                                                true\n\
    \                                                            else\n          \
    \                                                      if n==27\n            \
    \                                                        true\n              \
    \                                                  else\n                    \
    \                                                if n==28\n                  \
    \                                                      true\n                \
    \                                                    else\n                  \
    \                                      if n==29\n                            \
    \                                true\n                                      \
    \                  else\n                                                    \
    \        if n==30\n                                                          \
    \      true\n                                                            else\n\
    \                                                                if n==31\n  \
    \                                                                  true\n    \
    \                                                            else\n          \
    \                                                          if n==32\n        \
    \                                                                true\n      \
    \                                                              else\n        \
    \                                                if n==33\n                  \
    \                                          true\n                            \
    \                            else\n                                          \
    \                  if n==34\n                                                \
    \                true\n                                                      \
    \      else\n                                                                if\
    \ n==35\n                                                                    true\n\
    \                                                                else\n      \
    \                                                              if n==36\n    \
    \                                                                    true\n  \
    \                                                                  else\n    \
    \                                                    if n==37\n              \
    \                                              true\n                        \
    \                                else\n                                      \
    \                      if n==38\n                                            \
    \                    true\n                                                  \
    \          else\n                                                            \
    \    if n==39\n                                                              \
    \      true\n                                                                else\n\
    \                                                                    if n==40\n\
    \                                                                        true\n\
    \                                                                    else\n  \
    \                                                      if \nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing condition in \"if\" at /tmp/tmp97mfhlqm.jl:131\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/tmp97mfhlqm.jl:132\nin expression\
    \ starting at /tmp/tmp97mfhlqm.jl:132\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\
    \ \n        return true\n    else if n==1 \n        return true\n    else if n==2\
    \ \n        return true\n    else if n==3 \n        return true\n    else if n==4\
    \ \n        return true\n    else if n==5 \n        return true\n    else if n==6\
    \ \n        return true\n    else if n==7 \n        return true\n    else if n==8\
    \ \n        return true\n    else if n==9 \n        return true\n    else if n==10\
    \ \n        return true\n    else if n==11 \n        return true\n    else if\
    \ n==12 \n        return true\n    else if n==13 \n        return true\n    else\
    \ if n==14 \n        return true\n    else if n==15 \n        return true\n  \
    \  else if n==16 \n        return true\n    else if n==17 \n        return true\n\
    \    else if n==18 \n        return true\n    else if n==19 \n        return true\n\
    \    else if n==20 \n        return true\n    else if n==21 \n        return true\n\
    \    else if n==22 \n        return true\n    else if n==23 \n        return true\n\
    \    else if n==24 \n        return true\n    else if n==25 \n        return true\n\
    \    else if n==26 \n        return true\n    else if n==27 \n        return true\n\
    \    else if n==28 \n        return true\n    else if n==29 \n        return true\n\
    \    else if n==30 \n        return true\n    else if n==31 \n        return true\n\
    \    else if n==32 \n        return true\n    else if n==33 \n        return true\n\
    \    else if n==34 \n        return true\n    else if n==35 \n        return true\n\
    \    else if n==36 \n        return true\n    else if n==37 \n        return true\n\
    \    else if n==38 \n        return true\n    else if n==39 \n        return true\n\
    \    else if n==40 \n        return true\n    else if n==41 \n        return true\n\
    \    else if n==42 \n        return true\n    else if n==43 \n        return true\n\
    \    else if n==44 \n        return true\n    else if n==45 \n        return true\n\
    \    else if n==46 \n        return true\n    else if n==47 \n        return true\n\
    \    else if n==48 \n        return true\n    else if n==49 \n        return true\n\
    \    else if n\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8jqnfsd3.jl:10\nin expression starting at\
    \ /tmp/tmp8jqnfsd3.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return true\n    else if n == 1 \n        then return true\n\
    \    else if n % 2 == 0 \n        then return false\n    else if n % 4 == 0 \n\
    \        then return true\n    else if n % 8 == 0 \n        then return true\n\
    \    else if n % 16 == 0 \n        then return true\n    else if n % 32 == 0 \n\
    \        then return true\n    else if n % 64 == 0 \n        then return true\n\
    \    else if n % 128 == 0 \n        then return true\n    else if n % 256 == 0\
    \ \n        then return true\n    else if n % 512 == 0 \n        then return true\n\
    \    else if n % 1024 == 0 \n        then return true\n    else if n % 2048 ==\
    \ 0 \n        then return true\n    else if n % 4096 == 0 \n        then return\
    \ true\n    else if n % 8192 == 0 \n        then return true\n    else if n %\
    \ 16384 == 0 \n        then return true\n    else if n % 32768 == 0 \n       \
    \ then return true\n    else if n % 65536 == 0 \n        then return true\n  \
    \  else if n % 131072 == 0 \n        then return true\n    else if n % 262144\
    \ == 0 \n        then return true\n    else if n % 524288 == 0 \n        then\
    \ return true\n    else if n % 1048576 == 0 \n        then return true\n    else\
    \ if n % 2097152 == 0 \n        then return true\n    else if n % 4194304 == 0\
    \ \n        then return true\n    else if n % 8388608 == 0 \n        then return\
    \ true\n    else if n % 16777216 == 0 \n        then return true\n    else if\
    \ n % 33554432 == 0 \n        then return true\n    else if n % 67108864 == 0\
    \ \n        then return true\n    else if n % 134217728 == 0 \n        then return\
    \ true\n    else if n % 268435456 == 0 \n        then return true\n    else if\
    \ n % 536870912 == 0 \n        then return true\n    else if n % 1073741824 ==\
    \ 0 \n        then return true\n    else if n % 2147483648 == 0 \n        then\
    \ return true\n    else if n % 4294967296 == 0 \n        then return true\n  \
    \  else if n % 8589934592 == 0 \n        then return true\n    else if n % 17179869184\
    \ == 0 \n        then return true\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmnkg49s_.jl:9\nin expression starting at /tmp/tmpmnkg49s_.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return true\n    else if n % 2 == 0 \n        then return false\n\
    \    else if n % 4 == 0 \n        then return false\n    else if n % 8 == 0 \n\
    \        then return false\n    else if n % 16 == 0 \n        then return false\n\
    \    else if n % 32 == 0 \n        then return false\n    else if n % 64 == 0\
    \ \n        then return false\n    else if n % 128 == 0 \n        then return\
    \ false\n    else if n % 256 == 0 \n        then return false\n    else if n %\
    \ 512 == 0 \n        then return false\n    else if n % 1024 == 0 \n        then\
    \ return false\n    else if n % 2048 == 0 \n        then return false\n    else\
    \ if n % 4096 == 0 \n        then return false\n    else if n % 8192 == 0 \n \
    \       then return false\n    else if n % 16384 == 0 \n        then return false\n\
    \    else if n % 32768 == 0 \n        then return false\n    else if n % 65536\
    \ == 0 \n        then return false\n    else if n % 131072 == 0 \n        then\
    \ return false\n    else if n % 262144 == 0 \n        then return false\n    else\
    \ if n % 524288 == 0 \n        then return false\n    else if n % 1048576 == 0\
    \ \n        then return false\n    else if n % 2097152 == 0 \n        then return\
    \ false\n    else if n % 4194304 == 0 \n        then return false\n    else if\
    \ n % 8388608 == 0 \n        then return false\n    else if n % 16777216 == 0\
    \ \n        then return false\n    else if n % 33554432 == 0 \n        then return\
    \ false\n    else if n % 67108864 == 0 \n        then return false\n    else if\
    \ n % 134217728 == 0 \n        then return false\n    else if n % 268435456 ==\
    \ 0 \n        then return false\n    else if n % 536870912 == 0 \n        then\
    \ return false\n    else if n % 1073741824 == 0 \n        then return false\n\
    \    else if n % 2147483648 == 0 \n        then return false\n    else if n %\
    \ 4294967296 == 0 \n        then return false\n    else if n % 8589934592 == 0\
    \ \n        then return false\n    else if n % 17179869184 == 0 \n        then\
    \ return false\n    else if n % 34359738368 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp39ofmq0o.jl:9\nin expression starting at /tmp/tmp39ofmq0o.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\n\
    \    then return true\n    else if n==1\n    then return true\n    else if n==2\n\
    \    then return true\n    else if n==3\n    then return true\n    else if n==4\n\
    \    then return true\n    else if n==5\n    then return true\n    else if n==6\n\
    \    then return true\n    else if n==7\n    then return true\n    else if n==8\n\
    \    then return true\n    else if n==9\n    then return true\n    else if n==10\n\
    \    then return true\n    else if n==11\n    then return true\n    else if n==12\n\
    \    then return true\n    else if n==13\n    then return true\n    else if n==14\n\
    \    then return true\n    else if n==15\n    then return true\n    else if n==16\n\
    \    then return true\n    else if n==17\n    then return true\n    else if n==18\n\
    \    then return true\n    else if n==19\n    then return true\n    else if n==20\n\
    \    then return true\n    else if n==21\n    then return true\n    else if n==22\n\
    \    then return true\n    else if n==23\n    then return true\n    else if n==24\n\
    \    then return true\n    else if n==25\n    then return true\n    else if n==26\n\
    \    then return true\n    else if n==27\n    then return true\n    else if n==28\n\
    \    then return true\n    else if n==29\n    then return true\n    else if n==30\n\
    \    then return true\n    else if n==31\n    then return true\n    else if n==32\n\
    \    then return true\n    else if n==33\n    then return true\n    else if n==34\n\
    \    then return true\n    else if n==35\n    then return true\n    else if n==36\n\
    \    then return true\n    else if n==37\n    then return true\n    else if n==38\n\
    \    then return true\n    else if n==39\n    then return true\n    else if n==40\n\
    \    then return true\n    else if n==41\n    then return true\n    else if n==42\n\
    \    then return \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpy8vla5up.jl:9\nin expression starting at /tmp/tmpy8vla5up.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even_helper(n)\
    \ == true\n    else \n        return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp038pzhfo.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp038pzhfo.jl:1\n\
    in expression starting at /tmp/tmp038pzhfo.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return False\n    else if n % 2 == 0 \n        then return\
    \ is_equal_to_sum_even(n - 1)\n        else return is_equal_to_sum_even(n - 3)\
    \ && is_equal_to_sum_even(n - 2)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\
    \"Evaluate whether the given number n can be written as the sum of exactly 4 positive\
    \ odd numbers\n    Example\n    is_equal_to_sum_odd(4) == False\n    is_equal_to_sum_odd(6)\
    \ == False\n    is_equal_to_sum_odd(8) == True\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpl4uxohec.jl:9\nin expression starting at /tmp/tmpl4uxohec.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even_helper(n)\
    \ == true\n    else \n        return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpha968c_y.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpha968c_y.jl:1\n\
    in expression starting at /tmp/tmpha968c_y.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even_helper(n)\
    \ == True\n    else \n        false\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n\
    \    if n == 0\n        true\n    elseif n == 1\n        true\n    elseif is_equal_to_sum_even_helper(n-1)\
    \ == true\n        true\n    else\n        false\n    end\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n\
    \    if n == 0\n        true\n    elseif n == 1\n        true\n    elseif is_equal_to_sum_even_helper(n-1)\
    \ == true\n        true\n    else\n        false\n    end\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n\
    \    if n == 0\n        true\n    elseif n == 1\n        true\n    elseif is_equal_to_sum_even_helper(n-1)\
    \ == true\n        true\n    else\n        false\n    end\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n\
    \    if n == 0\n        true\n    elseif n == 1\n        true\n    elseif is_equal_to_sum_even_helper(n-1)\
    \ == true\n        true\n    else\n        false\n    end\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n\
    \    if n == 0\n        true\n    elseif n == 1\n        true\n    elseif is_equal_to_sum_even_helper(n-1)\
    \ == true\n        true\n    else\n        false\n    end\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n\
    \    if n == 0\n        true\n    elseif n == 1\n        true\n    elseif is_equal_to_sum_even_helper(n-1)\
    \ == true\n        true\n    else\n        false\n    end\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n\
    \    if n == 0\n        true\n    elseif n == 1\n        true\n    elseif is_equal_to_sum_even_helper(n-1)\
    \ == true\n        true\n    else\n        false\n    end\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n\
    \    if n == 0\n        true\n    elseif n == 1\n        true\n    elseif is_equal_to_sum_even_helper(n-1)\
    \ == true\n        true\n    else\n        false\n    end\nend\n\"\"\"\nis_equal_to_sum_even_helper(n::Int64)::Bool\n\
    \    if n == 0\n        true\n    elseif n == 1\n\nusing Test\n\n@testset begin\n\
    \ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nis_equal_to_sum_even_helper(n::Int64)::Bool\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpw52leq_q.jl:36\nin expression starting at /tmp/tmpw52leq_q.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <=\
    \ 0\n    then return False\n    else if n == 1\n    then return True\n    else\
    \ if n % 2 == 0\n    then return is_equal_to_sum_even(n - 2)\n    else return\
    \ is_equal_to_sum_even(n - 3)\nend\n</cell>\n<code language=julia-1.3>\n@time\
    \ is_equal_to_sum_even(4);\n@time is_equal_to_sum_even(6);\n@time is_equal_to_sum_even(8);\n\
    </cell>\n<text>\nExercise 3\nWrite a function that computes the factorial of a\
    \ given number. \nExample\nfactorial(4) == 24\nfactorial(5) == 120\nfactorial(6)\
    \ == 720\nfactorial(7) == 5040\nfactorial(8) == 40320\nfactorial(9) == 362880\n\
    factorial(10) == 3628800\nfactorial(11) == 39916800\nfactorial(12) == 479001600\n\
    factorial(13) == 6227020800\nfactorial(14) == 87178291200\nfactorial(15) == 1307674368000\n\
    factorial(16) == 20922789888000\nfactorial(17) == 355687428096000\nfactorial(18)\
    \ == 6402373705728000\nfactorial(19) == 121645100408832000\nfactorial(20) == 2432902008176640000\n\
    factorial(21) == 51090942171709440000\nfactorial(22) == 1124000727777607680000\n\
    factorial(23) == 25852016738884976640000\nfactorial(24) == 620448401733239439360000\n\
    factorial(25) == 15511210043330985984000000\nfactorial(26) == 403291461126605635584000000\n\
    factorial(27) == 10888869450418352160768000000\nfactorial(28) == 304888344611713860501504000000\n\
    factorial(29) == 8841761993739701954543616000000\nfactorial(30) == 265252859812191058636308480000000\n\
    factorial(31) == 8222838654177922817725562880000000\nfactorial(32) == 263130836933693530167218012160000000\n\
    factorial(33) == 8683317618811886495518194401280000000\nfactorial(34) == 3351731687688437446756336249600000000\n\
    factorial(35) == 77717703056757597394804709171200000000\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpg1udjc12.jl:9\nin expression starting at /tmp/tmpg1udjc12.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <=\
    \ 0 \n    then return False\n    else if n == 0 \n    then return True\n    else\
    \ if n % 2 == 0 \n    then return is_equal_to_sum_even(n - 1)\n    else return\
    \ is_equal_to_sum_even(n - 3) + 1\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ is_equal_to_sum_even(10) == False\n@assert is_equal_to_sum_even(11) == False\n\
    @assert is_equal_to_sum_even(12) == True\n@assert is_equal_to_sum_even(13) ==\
    \ True\n@assert is_equal_to_sum_even(14) == True\n@assert is_equal_to_sum_even(15)\
    \ == True\n@assert is_equal_to_sum_even(16) == True\n@assert is_equal_to_sum_even(17)\
    \ == True\n@assert is_equal_to_sum_even(18) == True\n@assert is_equal_to_sum_even(19)\
    \ == True\n@assert is_equal_to_sum_even(20) == True\n@assert is_equal_to_sum_even(21)\
    \ == True\n@assert is_equal_to_sum_even(22) == True\n@assert is_equal_to_sum_even(23)\
    \ == True\n@assert is_equal_to_sum_even(24) == True\n@assert is_equal_to_sum_even(25)\
    \ == True\n@assert is_equal_to_sum_even(26) == True\n@assert is_equal_to_sum_even(27)\
    \ == True\n@assert is_equal_to_sum_even(28) == True\n@assert is_equal_to_sum_even(29)\
    \ == True\n@assert is_equal_to_sum_even(30) == True\n@assert is_equal_to_sum_even(31)\
    \ == True\n@assert is_equal_to_sum_even(32) == True\n@assert is_equal_to_sum_even(33)\
    \ == True\n@assert is_equal_to_sum_even(34) == True\n@assert is_equal_to_sum_even(35)\
    \ == True\n@assert is_equal_to_sum_even(36) == True\n@assert is_equal_to_sum_even(37)\
    \ == True\n@assert is_equal_to_sum_even(38) == True\n@assert is_equal_to_sum_even(39)\
    \ == True\n@assert is_equal_to_sum_even(40) == True\n@assert is_equal_to_sum_even(41)\
    \ == True\n@assert is_equal_to_sum_even(42) == True\n@assert is_equal_to_sum_even(43)\
    \ == True\n@assert is_equal_to_sum_even(44) == True\n@assert is_equal_to_sum_even(45)\
    \ == True\n@assert is_equal_to_sum_even(46) == True\n@assert is_equal_to_sum_even(47)\
    \ == True\n@assert is_equal_to_sum_even(48) == True\n@assert is_equal_to_sum_even(49)\
    \ == True\n@assert is_equal_to_sum_even(50) == \nusing Test\n\n@testset begin\n\
    \ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9qb0mgt0.jl:9\nin expression starting at /tmp/tmp9qb0mgt0.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return False\n    else if n == 1 \n        then return True\n\
    \    else if n % 2 == 0 \n        then return is_equal_to_sum_even(n - 2)\n  \
    \  else if n % 3 == 0 \n        then return is_equal_to_sum_even(n - 3)\n    else\
    \ if n % 5 == 0 \n        then return is_equal_to_sum_even(n - 5)\n    else return\
    \ False\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(10)\
    \ == false\n@assert is_equal_to_sum_even(11) == false\n@assert is_equal_to_sum_even(12)\
    \ == true\n@assert is_equal_to_sum_even(13) == true\n@assert is_equal_to_sum_even(14)\
    \ == true\n@assert is_equal_to_sum_even(15) == true\n@assert is_equal_to_sum_even(16)\
    \ == true\n@assert is_equal_to_sum_even(17) == true\n@assert is_equal_to_sum_even(18)\
    \ == true\n@assert is_equal_to_sum_even(19) == true\n@assert is_equal_to_sum_even(20)\
    \ == true\n@assert is_equal_to_sum_even(21) == true\n@assert is_equal_to_sum_even(22)\
    \ == true\n@assert is_equal_to_sum_even(23) == true\n@assert is_equal_to_sum_even(24)\
    \ == true\n@assert is_equal_to_sum_even(25) == true\n@assert is_equal_to_sum_even(26)\
    \ == true\n@assert is_equal_to_sum_even(27) == true\n@assert is_equal_to_sum_even(28)\
    \ == true\n@assert is_equal_to_sum_even(29) == true\n@assert is_equal_to_sum_even(30)\
    \ == true\n@assert is_equal_to_sum_even(31) == true\n@assert is_equal_to_sum_even(32)\
    \ == true\n@assert is_equal_to_sum_even(33) == true\n@assert is_equal_to_sum_even(34)\
    \ == true\n@assert is_equal_to_sum_even(35) == true\n@assert is_equal_to_sum_even(36)\
    \ == true\n@assert is_equal_to_sum_even(37) == true\n@assert is_equal_to_sum_even(38)\
    \ == true\n@assert is_equal_to_sum_even(39) == true\n@assert is_equal_to_sum_even(40)\
    \ == true\n@assert is_equal_to_sum_even(41) == true\n@assert is_equal_to_sum_even(42)\
    \ == true\n@assert is_equal_to_sum_even(43) == true\n@assert is_equal_to_sum_even(44)\
    \ == true\n@assert is_equal_to_sum_even(45) == true\n@assert is_equal_to_sum_even(46)\
    \ == true\n@assert is_equal_to_sum_even(47) == true\n@assert \nusing Test\n\n\
    @testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2p71lopl.jl:9\nin expression starting at /tmp/tmp2p71lopl.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\n\
    \        true\n    else\n        ((n%2==0)&&(n%4==0))||((n%2==0)&&(n%4!=0))\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"Evaluate whether the given number\
    \ n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    is_equal_to_sum_odd(4) == False\n    is_equal_to_sum_odd(6) == False\n  \
    \  is_equal_to_sum_odd(8) == True\n    \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzg8twuwy.jl:13\nin expression starting at\
    \ /tmp/tmpzg8twuwy.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n<4\n\
    \        return false\n    else if n==4\n        return true\n    else if n%2==0\n\
    \        return false\n    else if n%3==0\n        return false\n    else if n%4==0\n\
    \        return true\n    else if n%6==0\n        return true\n    else if n%8==0\n\
    \        return true\n    else if n%10==0\n        return true\n    else if n%12==0\n\
    \        return true\n    else if n%14==0\n        return true\n    else if n%16==0\n\
    \        return true\n    else if n%18==0\n        return true\n    else if n%20==0\n\
    \        return true\n    else if n%22==0\n        return true\n    else if n%24==0\n\
    \        return true\n    else if n%26==0\n        return true\n    else if n%28==0\n\
    \        return true\n    else if n%30==0\n        return true\n    else if n%32==0\n\
    \        return true\n    else if n%34==0\n        return true\n    else if n%36==0\n\
    \        return true\n    else if n%38==0\n        return true\n    else if n%40==0\n\
    \        return true\n    else if n%42==0\n        return true\n    else if n%44==0\n\
    \        return true\n    else if n%46==0\n        return true\n    else if n%48==0\n\
    \        return true\n    else if n%50==0\n        return true\n    else if n%52==0\n\
    \        return true\n    else if n%54==0\n        return true\n    else if n%56==0\n\
    \        return true\n    else if n%58==0\n        return true\n    else if n%60==0\n\
    \        return true\n    else if n%62==0\n        return true\n    else if n%64==0\n\
    \        return true\n    else if n%66==0\n        return true\n    else if n%68==0\n\
    \        return true\n    else if n%70==0\n        return true\n    else if n%72==0\n\
    \        return true\n    else if n%74==0\n        return true\n    else if n%76==0\n\
    \        return true\n    else if n%78==0\n        return true\n    else if n%80==0\n\
    \        return true\n    else if \nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxmnbvv56.jl:10\nin expression starting at\
    \ /tmp/tmpxmnbvv56.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even_helper(n)\
    \ == true\n    else \n        return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp4ia1u2ys.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp4ia1u2ys.jl:1\n\
    in expression starting at /tmp/tmp4ia1u2ys.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n<4\
    \ \n        return false \n    else if n%2==0 \n        return false \n    else\
    \ if n%3==0 \n        return false \n    else if n%4==0 \n        return true\
    \ \n    else \n        return false \nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    is_equal_to_sum_odd(4) == False\n \
    \   is_equal_to_sum_odd(6) == False\n    is_equal_to_sum_odd(8) == True\n    \"\
    \"\"\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfyzz81iu.jl:10\nin expression starting at\
    \ /tmp/tmpfyzz81iu.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return False \n    else if n % 2 == 0 \n        then return\
    \ is_equal_to_sum_even(n - 1) \n    else \n        sum_even = is_equal_to_sum_even(n\
    \ / 2) \n        if sum_even \n            then return True \n        else \n\
    \            return False \nend \n</cell>\n<code language=julia-1.3>\n\"\"\"Evaluate\
    \ whether the given number n can be written as the sum of exactly 4 positive odd\
    \ numbers\n    Example\n    is_equal_to_sum_odd(4) == False\n    is_equal_to_sum_odd(6)\
    \ == False\n    is_equal_to_sum_odd(8) == True\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpri2a0bh3.jl:9\nin expression starting at /tmp/tmpri2a0bh3.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\n\
    \        true\n    else\n        if n%2==0\n            false\n        else\n\
    \            if n%3==0\n                false\n            else\n            \
    \    if n%4==0\n                    true\n                else\n             \
    \       false\n        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype is_equal_to_sum_even(8)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(10)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(100)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(1000)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(10000)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(100000)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(1000000)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(10000000)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(100000000)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(1000000000)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(10000000000)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(100000000000)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(1000000000000)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(10000000000000)\n</cell>\n<code language=julia-1.5>\n@code_warntype\
    \ is_equal_to_sum_even(100000000000000)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype is_equal_to_sum_even(1000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype is_equal_to_sum_even(10000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype is_equal_to_sum_even(100000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype is_equal_to_sum_even(1000000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype is_equal_to_sum_even(10000000000000000000)\n</cell>\n\nusing Test\n\
    \n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) ==\
    \ false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_iz1ll2e.jl:24\nin expression starting at\
    \ /tmp/tmp_iz1ll2e.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <\
    \ 4\n    then return false\n    else if n == 4 || n == 6 || n == 8 || n == 12\n\
    \    then return true\n    else return false\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    is_equal_to_sum_odd(4) == False\n \
    \   is_equal_to_sum_odd(6) == False\n    is_equal_to_sum_odd(8) == True\n    \"\
    \"\"\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjoyev7xn.jl:9\nin expression starting at /tmp/tmpjoyev7xn.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n<4\
    \ return false\n    else if n%2==0 return false\n    else if n%3==0 return false\n\
    \    else if n%4==0 return true\n    else return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbhqrsupg.jl:9\nin expression starting at /tmp/tmpbhqrsupg.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <\
    \ 0\n        error(\"n must be positive\")\n    else if n == 0\n        true\n\
    \    else\n        n % 2 == 0 && is_equal_to_sum_even(n - 1) && is_equal_to_sum_even(n\
    \ - 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(10)\
    \ == false\n@assert is_equal_to_sum_even(11) == true\n@assert is_equal_to_sum_even(12)\
    \ == true\n@assert is_equal_to_sum_even(13) == true\n@assert is_equal_to_sum_even(14)\
    \ == true\n@assert is_equal_to_sum_even(15) == true\n@assert is_equal_to_sum_even(16)\
    \ == true\n@assert is_equal_to_sum_even(17) == true\n@assert is_equal_to_sum_even(18)\
    \ == true\n@assert is_equal_to_sum_even(19) == true\n@assert is_equal_to_sum_even(20)\
    \ == true\n@assert is_equal_to_sum_even(21) == true\n@assert is_equal_to_sum_even(22)\
    \ == true\n@assert is_equal_to_sum_even(23) == true\n@assert is_equal_to_sum_even(24)\
    \ == true\n@assert is_equal_to_sum_even(25) == true\n@assert is_equal_to_sum_even(26)\
    \ == true\n@assert is_equal_to_sum_even(27) == true\n@assert is_equal_to_sum_even(28)\
    \ == true\n@assert is_equal_to_sum_even(29) == true\n@assert is_equal_to_sum_even(30)\
    \ == true\n@assert is_equal_to_sum_even(31) == true\n@assert is_equal_to_sum_even(32)\
    \ == true\n@assert is_equal_to_sum_even(33) == true\n@assert is_equal_to_sum_even(34)\
    \ == true\n@assert is_equal_to_sum_even(35) == true\n@assert is_equal_to_sum_even(36)\
    \ == true\n@assert is_equal_to_sum_even(37) == true\n@assert is_equal_to_sum_even(38)\
    \ == true\n@assert is_equal_to_sum_even(39) == true\n@assert is_equal_to_sum_even(40)\
    \ == true\n@assert is_equal_to_sum_even(41) == true\n@assert is_equal_to_sum_even(42)\
    \ == true\n@assert is_equal_to_sum_even(43) == true\n@assert is_equal_to_sum_even(44)\
    \ == true\n@assert is_equal_to_sum_even(45) == true\n@assert is_equal_to_sum_even(46)\
    \ == true\n@assert is_equal_to_sum_even(47) == true\n@assert is_equal_to_sum_even(48)\
    \ == true\n@assert is_equal_to_sum_even(49) == true\n@assert is_equal_to_sum_even(50)\
    \ == true\n@assert is_equal_to_\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq686h8h6.jl:10\nin expression starting at\
    \ /tmp/tmpq686h8h6.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return true\n    else if n == 1 \n        then return true\n\
    \    else if n % 2 == 0 \n        then return false\n    else if n % 3 == 0 \n\
    \        then return false\n    else if n % 4 == 0 \n        then return true\n\
    \    else if n % 5 == 0 \n        then return true\n    else if n % 6 == 0 \n\
    \        then return true\n    else if n % 7 == 0 \n        then return true\n\
    \    else if n % 8 == 0 \n        then return true\n    else if n % 9 == 0 \n\
    \        then return true\n    else if n % 10 == 0 \n        then return true\n\
    \    else if n % 11 == 0 \n        then return true\n    else if n % 12 == 0 \n\
    \        then return true\n    else if n % 13 == 0 \n        then return true\n\
    \    else if n % 14 == 0 \n        then return true\n    else if n % 15 == 0 \n\
    \        then return true\n    else if n % 16 == 0 \n        then return true\n\
    \    else if n % 17 == 0 \n        then return true\n    else if n % 18 == 0 \n\
    \        then return true\n    else if n % 19 == 0 \n        then return true\n\
    \    else if n % 20 == 0 \n        then return true\n    else if n % 21 == 0 \n\
    \        then return true\n    else if n % 22 == 0 \n        then return true\n\
    \    else if n % 23 == 0 \n        then return true\n    else if n % 24 == 0 \n\
    \        then return true\n    else if n % 25 == 0 \n        then return true\n\
    \    else if n % 26 == 0 \n        then return true\n    else if n % 27 == 0 \n\
    \        then return true\n    else if n % 28 == 0 \n        then return true\n\
    \    else if n % 29 == 0 \n        then return true\n    else if n % 30 == 0 \n\
    \        then return true\n    else if n % 31 == 0 \n        then return true\n\
    \    else if n % 32 == 0 \n        then return true\n    else if n % 33 == 0 \n\
    \        then return true\n    else if n % 34 == 0 \n        then return true\n\
    \    else if n % 35 == 0 \n        then return true\n    else if n % 36 == 0 \n\
    \        then return true\n    else if n % 37 == 0 \n        then return true\n\
    \    else if n % 38 == 0 \n        then return true\n    else if n % 39 == 0 \n\
    \        then return true\n\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfq6wegsj.jl:9\nin expression starting at /tmp/tmpfq6wegsj.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return True\n    else if n % 2 == 0 \n        then return False\n\
    \    else if n % 4 == 0 \n        then return False\n    else if n % 8 == 0 \n\
    \        then return False\n    else if n % 16 == 0 \n        then return False\n\
    \    else if n % 32 == 0 \n        then return False\n    else if n % 64 == 0\
    \ \n        then return False\n    else if n % 128 == 0 \n        then return\
    \ False\n    else if n % 256 == 0 \n        then return False\n    else if n %\
    \ 512 == 0 \n        then return False\n    else if n % 1024 == 0 \n        then\
    \ return False\n    else if n % 2048 == 0 \n        then return False\n    else\
    \ if n % 4096 == 0 \n        then return False\n    else if n % 8192 == 0 \n \
    \       then return False\n    else if n % 16384 == 0 \n        then return False\n\
    \    else if n % 32768 == 0 \n        then return False\n    else if n % 65536\
    \ == 0 \n        then return False\n    else if n % 131072 == 0 \n        then\
    \ return False\n    else if n % 262144 == 0 \n        then return False\n    else\
    \ if n % 524288 == 0 \n        then return False\n    else if n % 1048576 == 0\
    \ \n        then return False\n    else if n % 2097152 == 0 \n        then return\
    \ False\n    else if n % 4194304 == 0 \n        then return False\n    else if\
    \ n % 8388608 == 0 \n        then return False\n    else if n % 16777216 == 0\
    \ \n        then return False\n    else if n % 33554432 == 0 \n        then return\
    \ False\n    else if n % 67108864 == 0 \n        then return False\n    else if\
    \ n % 134217728 == 0 \n        then return False\n    else if n % 268435456 ==\
    \ 0 \n        then return False\n    else if n % 536870912 == 0 \n        then\
    \ return False\n    else if n % 1073741824 == 0 \n        then return False\n\
    \    else if n % 2147483648 == 0 \n        then return False\n    else if n %\
    \ 4294967296 == 0 \n        then return False\n    else if n % 8589934592 == 0\
    \ \n        then return False\n    else if n % 17179869184 == 0 \n        then\
    \ return False\n    else if n % 34359738368 == 0 \nusing Test\n\n@testset begin\n\
    \ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpabpetrg7.jl:9\nin expression starting at /tmp/tmpabpetrg7.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0\n        true\n    else\n        n % 2 == 0 && is_equal_to_sum_even(n - 1)\
    \ || is_equal_to_sum_even(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ is_equal_to_sum_even(2) == false\n@assert is_equal_to_sum_even(6) == false\n\
    @assert is_equal_to_sum_even(8) == true\n</cell>\n<text>\nExercise 3.2\nWrite\
    \ a function that computes the sum of the first n positive integers, where n is\
    \ given as an input argument.\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_am167i0.jl:13\nin expression starting at\
    \ /tmp/tmp_am167i0.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even_helper(n)\
    \ == True \n    else \n        error(\"The given number $n cannot be written as\
    \ the sum of exactly 4 positive even numbers\")\nend\n\"\"\"\n    \nusing Test\n\
    \n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) ==\
    \ false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpctx8dehs.jl:1\nin expression starting at /tmp/tmpctx8dehs.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <\
    \ 4 \n        return false\n    else if n % 2 == 0 \n        return true\n   \
    \ else \n        return is_equal_to_sum_even(n - 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(2) == false\n@assert is_equal_to_sum_even(6) == false\n\
    @assert is_equal_to_sum_even(8) == true\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the number of positive integers less than or equal to\
    \ n that are divisible by 3.\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvgo4q5ls.jl:10\nin expression starting at\
    \ /tmp/tmpvgo4q5ls.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return true\n    else if n % 2 == 0 \n        then return false\n\
    \    else if n % 4 == 0 \n        then return true\n    else if n % 8 == 0 \n\
    \        then return false\n    else if n % 16 == 0 \n        then return true\n\
    \    else if n % 32 == 0 \n        then return false\n    else if n % 64 == 0\
    \ \n        then return true\n    else if n % 128 == 0 \n        then return false\n\
    \    else if n % 256 == 0 \n        then return true\n    else if n % 512 == 0\
    \ \n        then return false\n    else if n % 1024 == 0 \n        then return\
    \ true\n    else if n % 2048 == 0 \n        then return false\n    else if n %\
    \ 4096 == 0 \n        then return true\n    else if n % 8192 == 0 \n        then\
    \ return false\n    else if n % 16384 == 0 \n        then return true\n    else\
    \ if n % 32768 == 0 \n        then return false\n    else if n % 65536 == 0 \n\
    \        then return true\n    else if n % 131072 == 0 \n        then return false\n\
    \    else if n % 262144 == 0 \n        then return true\n    else if n % 524288\
    \ == 0 \n        then return false\n    else if n % 1048576 == 0 \n        then\
    \ return true\n    else if n % 2097152 == 0 \n        then return false\n    else\
    \ if n % 4194304 == 0 \n        then return true\n    else if n % 8388608 == 0\
    \ \n        then return false\n    else if n % 16777216 == 0 \n        then return\
    \ true\n    else if n % 33554432 == 0 \n        then return false\n    else if\
    \ n % 67108864 == 0 \n        then return true\n    else if n % 134217728 == 0\
    \ \n        then return false\n    else if n % 268435456 == 0 \n        then return\
    \ true\n    else if n % 536870912 == 0 \n        then return false\n    else if\
    \ n % 1073741824 == 0 \n        then return true\n    else if n % 2147483648 ==\
    \ 0 \n        then return false\n    else if n % 4294967296 == 0 \n        then\
    \ return true\n    else if n % 8589934592 == 0 \n        then return false\n \
    \   else if n % 17179869184 == 0 \n        then return true\n    else if n % 34359738368\
    \ == 0 \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t\
    @test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpznhzpmxe.jl:9\nin expression starting at /tmp/tmpznhzpmxe.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n<4\
    \ return false\n    else if n%2==0 return false\n    else if n%3==0 return false\n\
    \    else if n%5==0 return false\n    else if n%7==0 return false\n    else return\
    \ true\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    is_equal_to_sum_odd(4) == False\n    is_equal_to_sum_odd(6) == False\n  \
    \  is_equal_to_sum_odd(8) == True\n    \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa_r4j6k4.jl:9\nin expression starting at /tmp/tmpa_r4j6k4.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even_helper(n)\
    \ == true\n        return true\n    else\n        return false\n    end\nend\n\
    \"\"\"\n    \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn8iqkih0.jl:14\nin expression starting at\
    \ /tmp/tmpn8iqkih0.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return true\n    else if n % 2 == 0 \n        then return false\n\
    \    else if n % 4 == 0 \n        then return true\n    else if n % 8 == 0 \n\
    \        then return false\n    else if n % 16 == 0 \n        then return true\n\
    \    else if n % 32 == 0 \n        then return false\n    else if n % 64 == 0\
    \ \n        then return true\n    else if n % 128 == 0 \n        then return false\n\
    \    else if n % 256 == 0 \n        then return true\n    else if n % 512 == 0\
    \ \n        then return false\n    else if n % 1024 == 0 \n        then return\
    \ true\n    else if n % 2048 == 0 \n        then return false\n    else if n %\
    \ 4096 == 0 \n        then return true\n    else if n % 8192 == 0 \n        then\
    \ return false\n    else if n % 16384 == 0 \n        then return true\n    else\
    \ if n % 32768 == 0 \n        then return false\n    else if n % 65536 == 0 \n\
    \        then return true\n    else if n % 131072 == 0 \n        then return false\n\
    \    else if n % 262144 == 0 \n        then return true\n    else if n % 524288\
    \ == 0 \n        then return false\n    else if n % 1048576 == 0 \n        then\
    \ return true\n    else if n % 2097152 == 0 \n        then return false\n    else\
    \ if n % 4194304 == 0 \n        then return true\n    else if n % 8388608 == 0\
    \ \n        then return false\n    else if n % 16777216 == 0 \n        then return\
    \ true\n    else if n % 33554432 == 0 \n        then return false\n    else if\
    \ n % 67108864 == 0 \n        then return true\n    else if n % 134217728 == 0\
    \ \n        then return false\n    else if n % 268435456 == 0 \n        then return\
    \ true\n    else if n % 536870912 == 0 \n        then return false\n    else if\
    \ n % 1073741824 == 0 \n        then return true\n    else if n % 2147483648 ==\
    \ 0 \n        then return false\n    else if n % 4294967296 == 0 \n        then\
    \ return true\n    else if n % 8589934592 == 0 \n        then return false\n \
    \   else if n % 17179869184 == 0 \n        then return true\n    else if n % 34359738368\
    \ == 0 \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t\
    @test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpztar0ceo.jl:9\nin expression starting at /tmp/tmpztar0ceo.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even_helper(n)\
    \ == true\n    else \n        false\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpggapk7mz.jl:18\n  Test threw exception\n\
    \  Expression: candidate(4) == false\n  UndefVarError: is_equal_to_sum_even_helper\
    \ not defined\n  Stacktrace:\n   [1] is_equal_to_sum_even(n::Int64)\n     @ Main\
    \ /tmp/tmpggapk7mz.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpggapk7mz.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpggapk7mz.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpggapk7mz.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(6) == false\n  UndefVarError: is_equal_to_sum_even_helper not defined\n\
    \  Stacktrace:\n   [1] is_equal_to_sum_even(n::Int64)\n     @ Main /tmp/tmpggapk7mz.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpggapk7mz.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpggapk7mz.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpggapk7mz.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(8) == true\n  UndefVarError: is_equal_to_sum_even_helper not defined\n\
    \  Stacktrace:\n   [1] is_equal_to_sum_even(n::Int64)\n     @ Main /tmp/tmpggapk7mz.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpggapk7mz.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpggapk7mz.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpggapk7mz.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(10) == true\n  UndefVarError: is_equal_to_sum_even_helper not defined\n\
    \  Stacktrace:\n   [1] is_equal_to_sum_even(n::Int64)\n     @ Main /tmp/tmpggapk7mz.j"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 8 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpggapk7mz.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <=\
    \ 0\n    then return False\n    else if n % 2 == 0\n    then return True\n   \
    \ else if n % 4 == 0\n    then return True\n    else return False\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert is_equal_to_sum_even(2) == true\n@assert is_equal_to_sum_even(3)\
    \ == true\n@assert is_equal_to_sum_even(5) == true\n@assert is_equal_to_sum_even(7)\
    \ == true\n@assert is_equal_to_sum_even(10) == true\n@assert is_equal_to_sum_even(15)\
    \ == true\n@assert is_equal_to_sum_even(20) == true\n@assert is_equal_to_sum_even(25)\
    \ == true\n@assert is_equal_to_sum_even(30) == true\n@assert is_equal_to_sum_even(35)\
    \ == true\n@assert is_equal_to_sum_even(40) == true\n@assert is_equal_to_sum_even(45)\
    \ == true\n@assert is_equal_to_sum_even(50) == true\n@assert is_equal_to_sum_even(55)\
    \ == true\n@assert is_equal_to_sum_even(60) == true\n@assert is_equal_to_sum_even(65)\
    \ == true\n@assert is_equal_to_sum_even(70) == true\n@assert is_equal_to_sum_even(75)\
    \ == true\n@assert is_equal_to_sum_even(80) == true\n@assert is_equal_to_sum_even(85)\
    \ == true\n@assert is_equal_to_sum_even(90) == true\n@assert is_equal_to_sum_even(95)\
    \ == true\n@assert is_equal_to_sum_even(100) == true\n@assert is_equal_to_sum_even(101)\
    \ == true\n@assert is_equal_to_sum_even(102) == true\n@assert is_equal_to_sum_even(103)\
    \ == true\n@assert is_equal_to_sum_even(104) == true\n@assert is_equal_to_sum_even(105)\
    \ == true\n@assert is_equal_to_sum_even(106) == true\n@assert is_equal_to_sum_even(107)\
    \ == true\n@assert is_equal_to_sum_even(108) == true\n@assert is_equal_to_sum_even(109)\
    \ == true\n@assert is_equal_to_sum_even(110) == true\n@assert is_equal_to_sum_even(111)\
    \ == true\n@assert is_equal_to_sum_even(112) == true\n@assert is_equal_to_sum_even(113)\
    \ == true\n@assert is_equal_to_sum_even(114) == true\n@assert is_equal_to_sum_even(115)\
    \ == true\n@assert is_equal_to_sum_even(116) == true\n@assert is_equal_to_sum_even(117)\
    \ == true\n@assert is_equal_to_sum_even(118) == true\n@assert is_equal_to_sum_even(119)\
    \ == \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpw40h5usb.jl:9\nin expression starting at /tmp/tmpw40h5usb.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even_helper(n)\
    \ == true \n        return true\n    else \n        return false\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) ==\
    \ false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmprh32wmif.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprh32wmif.jl:1\n\
    in expression starting at /tmp/tmprh32wmif.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\
    \ then return false \n    if n==1 then return true \n    if n==2 then return true\
    \ \n    if n==3 then return true \n    if n==4 then return true \n    if n==5\
    \ then return true \n    if n==6 then return true \n    if n==7 then return true\
    \ \n    if n==8 then return true \n    if n==9 then return true \n    if n==10\
    \ then return true \n    if n==11 then return true \n    if n==12 then return\
    \ true \n    if n==13 then return true \n    if n==14 then return true \n    if\
    \ n==15 then return true \n    if n==16 then return true \n    if n==17 then return\
    \ true \n    if n==18 then return true \n    if n==19 then return true \n    if\
    \ n==20 then return true \n    if n==21 then return true \n    if n==22 then return\
    \ true \n    if n==23 then return true \n    if n==24 then return true \n    if\
    \ n==25 then return true \n    if n==26 then return true \n    if n==27 then return\
    \ true \n    if n==28 then return true \n    if n==29 then return true \n    if\
    \ n==30 then return true \n    if n==31 then return true \n    if n==32 then return\
    \ true \n    if n==33 then return true \n    if n==34 then return true \n    if\
    \ n==35 then return true \n    if n==36 then return true \n    if n==37 then return\
    \ true \n    if n==38 then return true \n    if n==39 then return true \n    if\
    \ n==40 then return true \n    if n==41 then return true \n    if n==42 then return\
    \ true \n    if n==43 then return true \n    if n==44 then return true \n    if\
    \ n==45 then return true \n    if n==46 then return true \n    if n==47 then return\
    \ true \n    if n==48 then return true \n    if n==49 then return true \n    if\
    \ n==50 then return true \n    if n==51 then return true \n    if n==52 then return\
    \ true \n    if n==53 then return true \n    if n==54 then return true \n    if\
    \ n==55 then return true \n    if n==56 then return true \n    if n==57 then return\
    \ true \n    if n==58 then return true \n    if n==59 then return true \n    if\
    \ n==60 then return true \n    if n==61 \nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzl4i8wh8.jl:8\nin expression starting at /tmp/tmpzl4i8wh8.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\
    \ then return true\n    if n==1 then return true\n    if n==2 then return true\n\
    \    if n==3 then return true\n    if n==4 then return true\n    if n==5 then\
    \ return true\n    if n==6 then return true\n    if n==7 then return true\n  \
    \  if n==8 then return true\n    if n==9 then return true\n    if n==10 then return\
    \ true\n    if n==11 then return true\n    if n==12 then return true\n    if n==13\
    \ then return true\n    if n==14 then return true\n    if n==15 then return true\n\
    \    if n==16 then return true\n    if n==17 then return true\n    if n==18 then\
    \ return true\n    if n==19 then return true\n    if n==20 then return true\n\
    \    if n==21 then return true\n    if n==22 then return true\n    if n==23 then\
    \ return true\n    if n==24 then return true\n    if n==25 then return true\n\
    \    if n==26 then return true\n    if n==27 then return true\n    if n==28 then\
    \ return true\n    if n==29 then return true\n    if n==30 then return true\n\
    \    if n==31 then return true\n    if n==32 then return true\n    if n==33 then\
    \ return true\n    if n==34 then return true\n    if n==35 then return true\n\
    \    if n==36 then return true\n    if n==37 then return true\n    if n==38 then\
    \ return true\n    if n==39 then return true\n    if n==40 then return true\n\
    \    if n==41 then return true\n    if n==42 then return true\n    if n==43 then\
    \ return true\n    if n==44 then return true\n    if n==45 then return true\n\
    \    if n==46 then return true\n    if n==47 then return true\n    if n==48 then\
    \ return true\n    if n==49 then return true\n    if n==50 then return true\n\
    \    if n==51 then return true\n    if n==52 then return true\n    if n==53 then\
    \ return true\n    if n==54 then return true\n    if n==55 then return true\n\
    \    if n==56 then return true\n    if n==57 then return true\n    if n==58 then\
    \ return true\n    if n==59 then return true\n    if n==60 then return true\n\
    \    if n==61 \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgybkzc2m.jl:8\nin expression starting at /tmp/tmpgybkzc2m.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even(n-1)\
    \ == True \n    else \n        return False \nend \n</cell>\n<code language=julia-1.3>\n\
    is_equal_to_sum_even(10)\n</cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(11)\n\
    </cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(12)\n</cell>\n<code language=julia-1.3>\n\
    is_equal_to_sum_even(13)\n</cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(14)\n\
    </cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(15)\n</cell>\n<code language=julia-1.3>\n\
    is_equal_to_sum_even(16)\n</cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(17)\n\
    </cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(18)\n</cell>\n<code language=julia-1.3>\n\
    is_equal_to_sum_even(19)\n</cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(20)\n\
    </cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(21)\n</cell>\n<code language=julia-1.3>\n\
    is_equal_to_sum_even(22)\n</cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(23)\n\
    </cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(24)\n</cell>\n<code language=julia-1.3>\n\
    is_equal_to_sum_even(25)\n</cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(26)\n\
    </cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(27)\n</cell>\n<code language=julia-1.3>\n\
    is_equal_to_sum_even(28)\n</cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(29)\n\
    </cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(30)\n</cell>\n<code language=julia-1.3>\n\
    is_equal_to_sum_even(31)\n</cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(32)\n\
    </cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(33)\n</cell>\n<code language=julia-1.3>\n\
    is_equal_to_sum_even(34)\n</cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(35)\n\
    </cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(36)\n</cell>\n<code language=julia-1.3>\n\
    is_equal_to_sum_even(37)\n</cell>\n<code language=juli\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyh551bwj.jl:12\nin expression starting at\
    \ /tmp/tmpyh551bwj.jl:12\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\n\
    \    then return true\n    else if n==1\n    then return true\n    else if n==2\n\
    \    then return true\n    else if n==3\n    then return true\n    else if n==4\n\
    \    then return true\n    else if n==5\n    then return true\n    else if n==6\n\
    \    then return true\n    else if n==7\n    then return true\n    else if n==8\n\
    \    then return true\n    else if n==9\n    then return true\n    else if n==10\n\
    \    then return true\n    else if n==11\n    then return true\n    else if n==12\n\
    \    then return true\n    else if n==13\n    then return true\n    else if n==14\n\
    \    then return true\n    else if n==15\n    then return true\n    else if n==16\n\
    \    then return true\n    else if n==17\n    then return true\n    else if n==18\n\
    \    then return true\n    else if n==19\n    then return true\n    else if n==20\n\
    \    then return true\n    else if n==21\n    then return true\n    else if n==22\n\
    \    then return true\n    else if n==23\n    then return true\n    else if n==24\n\
    \    then return true\n    else if n==25\n    then return true\n    else if n==26\n\
    \    then return true\n    else if n==27\n    then return true\n    else if n==28\n\
    \    then return true\n    else if n==29\n    then return true\n    else if n==30\n\
    \    then return true\n    else if n==31\n    then return true\n    else if n==32\n\
    \    then return true\n    else if n==33\n    then return true\n    else if n==34\n\
    \    then return true\n    else if n==35\n    then return true\n    else if n==36\n\
    \    then return true\n    else if n==37\n    then return true\n    else if n==38\n\
    \    then return true\n    else if n==39\n    then return true\n    else if n==40\n\
    \    then return true\n    else if n==41\n    then return true\n    else if n==42\n\
    \    then return \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdv014v6r.jl:9\nin expression starting at /tmp/tmpdv014v6r.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\n\
    \    then return True\n    else if n==1\n    then return True\n    else if n==2\n\
    \    then return True\n    else if n==3\n    then return True\n    else if n==4\n\
    \    then return True\n    else if n==5\n    then return True\n    else if n==6\n\
    \    then return True\n    else if n==7\n    then return True\n    else if n==8\n\
    \    then return True\n    else if n==9\n    then return True\n    else return\
    \ False\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(5)\
    \ == False\n@assert is_equal_to_sum_even(6) == False\n@assert is_equal_to_sum_even(7)\
    \ == True\n@assert is_equal_to_sum_even(8) == True\n@assert is_equal_to_sum_even(9)\
    \ == True\n@assert is_equal_to_sum_even(10) == True\n@assert is_equal_to_sum_even(11)\
    \ == True\n@assert is_equal_to_sum_even(12) == True\n@assert is_equal_to_sum_even(13)\
    \ == True\n@assert is_equal_to_sum_even(14) == True\n@assert is_equal_to_sum_even(15)\
    \ == True\n@assert is_equal_to_sum_even(16) == True\n@assert is_equal_to_sum_even(17)\
    \ == True\n@assert is_equal_to_sum_even(18) == True\n@assert is_equal_to_sum_even(19)\
    \ == True\n@assert is_equal_to_sum_even(20) == True\n@assert is_equal_to_sum_even(21)\
    \ == True\n@assert is_equal_to_sum_even(22) == True\n@assert is_equal_to_sum_even(23)\
    \ == True\n@assert is_equal_to_sum_even(24) == True\n@assert is_equal_to_sum_even(25)\
    \ == True\n@assert is_equal_to_sum_even(26) == True\n@assert is_equal_to_sum_even(27)\
    \ == True\n@assert is_equal_to_sum_even(28) == True\n@assert is_equal_to_sum_even(29)\
    \ == True\n@assert is_equal_to_sum_even(30) == True\n@assert is_equal_to_sum_even(31)\
    \ == True\n@assert is_equal_to_sum_even(32) == True\n@assert is_equal_to_sum_even(33)\
    \ == True\n@assert is_equal_to_sum_even(34) == True\n@assert is_equal_to_sum_even(35)\
    \ == True\n@assert is_equal_to_sum_even(36) == True\n@assert is_equal_to_sum_even(37)\
    \ == True\n@assert is_equal_to_sum_even(38) == True\n@assert is_\nusing Test\n\
    \n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) ==\
    \ false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm49gpjvk.jl:9\nin expression starting at /tmp/tmpm49gpjvk.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n<4\
    \ return false\n    else if n%2==0 return false\n    else if n%3==0 return false\n\
    \    else if n%4==0 return false\n    else return true\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(10) == false\n@assert is_equal_to_sum_even(12) ==\
    \ false\n@assert is_equal_to_sum_even(14) == true\n@assert is_equal_to_sum_even(16)\
    \ == true\n@assert is_equal_to_sum_even(18) == true\n@assert is_equal_to_sum_even(20)\
    \ == true\n@assert is_equal_to_sum_even(22) == true\n@assert is_equal_to_sum_even(24)\
    \ == true\n@assert is_equal_to_sum_even(26) == true\n@assert is_equal_to_sum_even(28)\
    \ == true\n@assert is_equal_to_sum_even(30) == true\n@assert is_equal_to_sum_even(32)\
    \ == true\n@assert is_equal_to_sum_even(34) == true\n@assert is_equal_to_sum_even(36)\
    \ == true\n@assert is_equal_to_sum_even(38) == true\n@assert is_equal_to_sum_even(40)\
    \ == true\n@assert is_equal_to_sum_even(42) == true\n@assert is_equal_to_sum_even(44)\
    \ == true\n@assert is_equal_to_sum_even(46) == true\n@assert is_equal_to_sum_even(48)\
    \ == true\n@assert is_equal_to_sum_even(50) == true\n@assert is_equal_to_sum_even(52)\
    \ == true\n@assert is_equal_to_sum_even(54) == true\n@assert is_equal_to_sum_even(56)\
    \ == true\n@assert is_equal_to_sum_even(58) == true\n@assert is_equal_to_sum_even(60)\
    \ == true\n@assert is_equal_to_sum_even(62) == true\n@assert is_equal_to_sum_even(64)\
    \ == true\n@assert is_equal_to_sum_even(66) == true\n@assert is_equal_to_sum_even(68)\
    \ == true\n@assert is_equal_to_sum_even(70) == true\n@assert is_equal_to_sum_even(72)\
    \ == true\n@assert is_equal_to_sum_even(74) == true\n@assert is_equal_to_sum_even(76)\
    \ == true\n@assert is_equal_to_sum_even(78) == true\n@assert is_equal_to_sum_even(80)\
    \ == true\n@assert is_equal_to_sum_even(82) == true\n@assert is_equal_to_sum_even(84)\
    \ == true\n@assert is_equal_to_sum_even(86) == true\n@assert is_equal_to_sum_even(88)\
    \ == true\n@assert is_equal_to_sum_even(90) == true\n@assert is_equal_to_\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgmgqzfo4.jl:9\nin expression starting at /tmp/tmpgmgqzfo4.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <=\
    \ 0\n    then return False\n    else if n == 1\n    then return True\n    else\
    \ if n % 2 == 0\n    then return False\n    else if n % 4 == 0\n    then return\
    \ True\n    else return is_equal_to_sum_even(n - 1)\nend\n</cell>\n<code language=julia-1.3>\n\
    @time is_equal_to_sum_even(10)\n</cell>\n<code language=julia-1.3>\n@time is_equal_to_sum_even(100)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that checks whether a number is\
    \ divisible by another number. \nExample\nis_divisible(7, 3) == True\nis_divisible(7,\
    \ 5) == False\nis_divisible(7, 7) == True\nHint: use the modulo operator (%)\n\
    using Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkd10zhl3.jl:9\nin expression starting at /tmp/tmpkd10zhl3.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <\
    \ 4\n    then return False\n    else if n == 4 || n == 6 || n == 8 || n == 10\n\
    \    then return True\n    else return False\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    is_equal_to_sum_odd(4) == False\n \
    \   is_equal_to_sum_odd(6) == False\n    is_equal_to_sum_odd(8) == True\n    \"\
    \"\"\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0la7eu1m.jl:9\nin expression starting at /tmp/tmp0la7eu1m.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 then return False\n    else if n % 2 == 0 then return False\n    else if n\
    \ % 4 == 0 then return False\n    else if n % 8 == 0 then return False\n    else\
    \ if n % 16 == 0 then return False\n    else if n % 32 == 0 then return False\n\
    \    else if n % 64 == 0 then return False\n    else if n % 128 == 0 then return\
    \ False\n    else if n % 256 == 0 then return False\n    else if n % 512 == 0\
    \ then return False\n    else if n % 1024 == 0 then return False\n    else if\
    \ n % 2048 == 0 then return False\n    else if n % 4096 == 0 then return False\n\
    \    else if n % 8192 == 0 then return False\n    else if n % 16384 == 0 then\
    \ return False\n    else if n % 32768 == 0 then return False\n    else if n %\
    \ 65536 == 0 then return False\n    else if n % 131072 == 0 then return False\n\
    \    else if n % 262144 == 0 then return False\n    else if n % 524288 == 0 then\
    \ return False\n    else if n % 1048576 == 0 then return False\n    else if n\
    \ % 2097152 == 0 then return False\n    else if n % 4194304 == 0 then return False\n\
    \    else if n % 8388608 == 0 then return False\n    else if n % 16777216 == 0\
    \ then return False\n    else if n % 33554432 == 0 then return False\n    else\
    \ if n % 67108864 == 0 then return False\n    else if n % 134217728 == 0 then\
    \ return False\n    else if n % 268435456 == 0 then return False\n    else if\
    \ n % 536870912 == 0 then return False\n    else if n % 1073741824 == 0 then return\
    \ False\n    else if n % 2147483648 == 0 then return False\n    else if n % 4294967296\
    \ == 0 then return False\n    else if n % 8589934592 == 0 then return False\n\
    \    else if n % 17179869184 == 0 then return False\n    else if n % 34359738368\
    \ == 0 then return False\n    else if n % 68719476736 == 0 then return False\n\
    \    else if n % 137438953472 == 0 then return False\n    else if n % 274877906944\
    \ == 0 then return False\n    else if n % 549755813888 == 0 then return False\n\
    \    else if \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5yu5fsnh.jl:8\nin expression starting at /tmp/tmp5yu5fsnh.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\n\
    \        true\n    else\n        if n%2==0\n            false\n        else\n\
    \            if n%3==0\n                false\n            else\n            \
    \    if n%4==0\n                    true\n                else\n             \
    \       false\n        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @code_native is_equal_to_sum_even(4)\n</cell>\n<code language=julia-1.5>\n@code_native\
    \ is_equal_to_sum_even(6)\n</cell>\n<code language=julia-1.5>\n@code_native is_equal_to_sum_even(8)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes an integer n and returns\
    \ the number of positive even numbers less than or equal to n\nusing Test\n\n\
    @testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps2e7m1bd.jl:24\nin expression starting at\
    \ /tmp/tmps2e7m1bd.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even(n-1)\
    \ == False && n % 2 == 0 \n    then return True\n    else return False\nend\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(10)\n</cell>\n<code language=julia-1.5>\n\
    is_equal_to_sum_even(11)\n</cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(12)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(13)\n</cell>\n<code language=julia-1.5>\n\
    is_equal_to_sum_even(14)\n</cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(15)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(16)\n</cell>\n<code language=julia-1.5>\n\
    is_equal_to_sum_even(17)\n</cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(18)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(19)\n</cell>\n<code language=julia-1.5>\n\
    is_equal_to_sum_even(20)\n</cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(21)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(22)\n</cell>\n<code language=julia-1.5>\n\
    is_equal_to_sum_even(23)\n</cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(24)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(25)\n</cell>\n<code language=julia-1.5>\n\
    is_equal_to_sum_even(26)\n</cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(27)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(28)\n</cell>\n<code language=julia-1.5>\n\
    is_equal_to_sum_even(29)\n</cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(30)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(31)\n</cell>\n<code language=julia-1.5>\n\
    is_equal_to_sum_even(32)\n</cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(33)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(34)\n</cell>\n<code language=julia-1.5>\n\
    is_equal_to_sum_even(35)\n</cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(36)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(37\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpd4ux8g7i.jl:9\nin expression starting at /tmp/tmpd4ux8g7i.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return True \n    else if n % 2 == 0 \n        then return\
    \ False \n    else if n % 4 == 0 \n        then return True \n    else if n %\
    \ 8 == 0 \n        then return False \n    else return is_equal_to_sum_even(n\
    \ - 1) \nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(8)\
    \ == true\n@assert is_equal_to_sum_even(6) == false\n@assert is_equal_to_sum_even(5)\
    \ == false\n@assert is_equal_to_sum_even(2) == false\n@assert is_equal_to_sum_even(0)\
    \ == true\n</cell>\n<text>\nExercise 5\nWrite a function that checks whether a\
    \ given number n is equal to the sum of exactly 4 positive odd numbers. \nExample\n\
    is_equal_to_sum_odd(4) == False\nis_equal_to_sum_odd(6) == False\nis_equal_to_sum_odd(8)\
    \ == True\nHint: You can use the function is_equal_to_sum_even.\nusing Test\n\n\
    @testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkcgqqzce.jl:9\nin expression starting at /tmp/tmpkcgqqzce.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\n\
    \        true\n    else\n        n % 2 == 0 && is_equal_to_sum_even(n - 1) ||\
    \ is_equal_to_sum_even(n - 2)\nend\n</cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(10)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(20)\n</cell>\n<code language=julia-1.5>\n\
    is_equal_to_sum_even(30)\n</cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(100)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(1000)\n</cell>\n<code\
    \ language=julia-1.5>\nis_equal_to_sum_even(10000)\n</cell>\n<code language=julia-1.5>\n\
    is_equal_to_sum_even(100000)\n</cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(1000000)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(100000000)\n</cell>\n\
    <code language=julia-1.5>\nis_equal_to_sum_even(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    is_equal_to_sum_even(10000000000)\n</cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(100000000000)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(1000000000000)\n</cell>\n\
    <code language=julia-1.5>\nis_equal_to_sum_even(10000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\nis_equal_to_sum_even(100000000000000)\n</cell>\n<code language=julia-1.5>\n\
    is_equal_to_sum_even(1000000000000000)\n</cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(10000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(100000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(1000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(10000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(100000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(1000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(10000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(100000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nis_equal_to_sum_even(1000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\nis_\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0rvj2gqj.jl:13\nin expression starting at\
    \ /tmp/tmp0rvj2gqj.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n<4\
    \ then return False\n    else if n%2==0 then return False\n    else if n%3==0\
    \ then return False\n    else if n%4==0 then return False\n    else return True\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(10) == false\n\
    @assert is_equal_to_sum_even(12) == false\n@assert is_equal_to_sum_even(14) ==\
    \ true\n@assert is_equal_to_sum_even(16) == true\n@assert is_equal_to_sum_even(18)\
    \ == true\n@assert is_equal_to_sum_even(20) == true\n@assert is_equal_to_sum_even(22)\
    \ == true\n@assert is_equal_to_sum_even(24) == true\n@assert is_equal_to_sum_even(26)\
    \ == true\n@assert is_equal_to_sum_even(28) == true\n@assert is_equal_to_sum_even(30)\
    \ == true\n@assert is_equal_to_sum_even(32) == true\n@assert is_equal_to_sum_even(34)\
    \ == true\n@assert is_equal_to_sum_even(36) == true\n@assert is_equal_to_sum_even(38)\
    \ == true\n@assert is_equal_to_sum_even(40) == true\n@assert is_equal_to_sum_even(42)\
    \ == true\n@assert is_equal_to_sum_even(44) == true\n@assert is_equal_to_sum_even(46)\
    \ == true\n@assert is_equal_to_sum_even(48) == true\n@assert is_equal_to_sum_even(50)\
    \ == true\n@assert is_equal_to_sum_even(52) == true\n@assert is_equal_to_sum_even(54)\
    \ == true\n@assert is_equal_to_sum_even(56) == true\n@assert is_equal_to_sum_even(58)\
    \ == true\n@assert is_equal_to_sum_even(60) == true\n@assert is_equal_to_sum_even(62)\
    \ == true\n@assert is_equal_to_sum_even(64) == true\n@assert is_equal_to_sum_even(66)\
    \ == true\n@assert is_equal_to_sum_even(68) == true\n@assert is_equal_to_sum_even(70)\
    \ == true\n@assert is_equal_to_sum_even(72) == true\n@assert is_equal_to_sum_even(74)\
    \ == true\n@assert is_equal_to_sum_even(76) == true\n@assert is_equal_to_sum_even(78)\
    \ == true\n@assert is_equal_to_sum_even(80) == true\n@assert is_equal_to_sum_even(82)\
    \ == true\n@assert is_equal_to_sum_even(84) == true\n@assert is_equal_to_sum_even(86)\
    \ == true\n@assert is_equal_to_sum_even(88) == true\n@assert is_equal_to_sum_even(90)\
    \ == true\n@\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpp6y3r3d_.jl:8\nin expression starting at /tmp/tmpp6y3r3d_.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\
    \ then return false\n    if n==1 then return true\n    if n==2 then return true\n\
    \    if n==3 then return true\n    if n==4 then return true\n    if n==5 then\
    \ return true\n    if n==6 then return true\n    if n==7 then return true\n  \
    \  if n==8 then return true\n    if n==9 then return true\n    if n==10 then return\
    \ true\n    if n==11 then return true\n    if n==12 then return true\n    if n==13\
    \ then return true\n    if n==14 then return true\n    if n==15 then return true\n\
    \    if n==16 then return true\n    if n==17 then return true\n    if n==18 then\
    \ return true\n    if n==19 then return true\n    if n==20 then return true\n\
    \    if n==21 then return true\n    if n==22 then return true\n    if n==23 then\
    \ return true\n    if n==24 then return true\n    if n==25 then return true\n\
    \    if n==26 then return true\n    if n==27 then return true\n    if n==28 then\
    \ return true\n    if n==29 then return true\n    if n==30 then return true\n\
    \    if n==31 then return true\n    if n==32 then return true\n    if n==33 then\
    \ return true\n    if n==34 then return true\n    if n==35 then return true\n\
    \    if n==36 then return true\n    if n==37 then return true\n    if n==38 then\
    \ return true\n    if n==39 then return true\n    if n==40 then return true\n\
    \    if n==41 then return true\n    if n==42 then return true\n    if n==43 then\
    \ return true\n    if n==44 then return true\n    if n==45 then return true\n\
    \    if n==46 then return true\n    if n==47 then return true\n    if n==48 then\
    \ return true\n    if n==49 then return true\n    if n==50 then return true\n\
    \    if n==51 then return true\n    if n==52 then return true\n    if n==53 then\
    \ return true\n    if n==54 then return true\n    if n==55 then return true\n\
    \    if n==56 then return true\n    if n==57 then return true\n    if n==58 then\
    \ return true\n    if n==59 then return true\n    if n==60 then return true\n\
    \    if n==61 \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpb2ephxvp.jl:8\nin expression starting at /tmp/tmpb2ephxvp.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <\
    \ 4 \n        return false\n    else \n        return true\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@assert is_equal_to_sum_even(2) == false\n@assert is_equal_to_sum_even(6)\
    \ == false\n@assert is_equal_to_sum_even(8) == true\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that checks whether a given number n is a power of two.\
    \ \nExample\nis_power_of_two(16) == true\nis_power_of_two(17) == false\nis_power_of_two(32)\
    \ == true\nis_power_of_two(33) == false\nis_power_of_two(64) == true\nis_power_of_two(65)\
    \ == false\nHint: use the bitwise and (&) operator\nusing Test\n\n@testset begin\n\
    \ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp90s8_ra0.jl:13\nin expression starting at\
    \ /tmp/tmp90s8_ra0.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even(n-1)\
    \ == True && n % 2 == 0\n    else \n        return false\n    end\nend\n\"\"\"\
    \nEvaluate whether the given number n can be written as the sum of exactly 4 positive\
    \ odd numbers\n    Example\n    is_equal_to_sum_odd(4) == False\n    is_equal_to_sum_odd(6)\
    \ == False\n    is_equal_to_sum_odd(8) == True\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmps0xd7ulp.jl:13\nin expression starting at /tmp/tmps0xd7ulp.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <=\
    \ 0\n        then return False\n    else if n == 1\n        then return True\n\
    \    else if n % 2 == 0\n        then return is_equal_to_sum_even(n - 1)\n   \
    \ else if n % 2 == 1\n        then return is_equal_to_sum_even(n - 2)\n    else\
    \ return False\nend\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(2)\
    \ == true\n@assert is_equal_to_sum_even(3) == true\n@assert is_equal_to_sum_even(5)\
    \ == true\n@assert is_equal_to_sum_even(8) == true\n@assert is_equal_to_sum_even(10)\
    \ == true\n@assert is_equal_to_sum_even(15) == true\n@assert is_equal_to_sum_even(20)\
    \ == true\n@assert is_equal_to_sum_even(25) == true\n@assert is_equal_to_sum_even(30)\
    \ == true\n@assert is_equal_to_sum_even(35) == true\n@assert is_equal_to_sum_even(40)\
    \ == true\n@assert is_equal_to_sum_even(45) == true\n@assert is_equal_to_sum_even(50)\
    \ == true\n@assert is_equal_to_sum_even(55) == true\n@assert is_equal_to_sum_even(60)\
    \ == true\n@assert is_equal_to_sum_even(65) == true\n@assert is_equal_to_sum_even(70)\
    \ == true\n@assert is_equal_to_sum_even(75) == true\n@assert is_equal_to_sum_even(80)\
    \ == true\n@assert is_equal_to_sum_even(85) == true\n@assert is_equal_to_sum_even(90)\
    \ == true\n@assert is_equal_to_sum_even(95) == true\n@assert is_equal_to_sum_even(100)\
    \ == true\n@assert is_equal_to_sum_even(101) == true\n@assert is_equal_to_sum_even(102)\
    \ == true\n@assert is_equal_to_sum_even(103) == true\n@assert is_equal_to_sum_even(104)\
    \ == true\n@assert is_equal_to_sum_even(105) == true\n@assert is_equal_to_sum_even(106)\
    \ == true\n@assert is_equal_to_sum_even(107) == true\n@assert is_equal_to_sum_even(108)\
    \ == true\n@assert is_equal_to_sum_even(109) == true\n@assert is_equal_to_sum_even(110)\
    \ == true\n@assert is_equal_to_sum_even(111) == true\n@assert is_equal_to_sum_even(112)\
    \ == true\n@assert is_equal_to_sum_even(113) == true\n@assert is_equal_to_sum_even(114)\
    \ == true\n@assert is_equal_to_sum_even(115) == true\n@assert is_equal_to_sum_even(116)\
    \ == true\n@assert is_equal_to_sum_even(117\nusing Test\n\n@testset begin\n\n\
    candidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpy95r6nag.jl:9\nin expression starting at /tmp/tmpy95r6nag.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n<4\
    \ \n        return false\n    else \n        return true\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@assert is_equal_to_sum_even(2) == true\n@assert is_equal_to_sum_even(6)\
    \ == false\n@assert is_equal_to_sum_even(8) == true\n</cell>\n<text>\nExercise\
    \ 5\nWrite a function that computes the sum of the first n positive integers.\
    \ \nExample\nsum_of_first_n(5) == 15\nsum_of_first_n(10) == 55\nsum_of_first_n(20)\
    \ == 110\nHint: Use a loop to compute the sum of the first n positive integers.\
    \ \nHint: Use a recursive function to compute the sum of the first n positive\
    \ integers. \nHint: Use a while loop to compute the sum of the first n positive\
    \ integers. \nHint: Use a for loop to compute the sum of the first n positive\
    \ integers. \nHint: Use a while loop to compute the sum of the first n positive\
    \ integers. \nHint: Use a for loop to compute the sum of the first n positive\
    \ integers. \nHint: Use a while loop to compute the sum of the first n positive\
    \ integers. \nHint: Use a for loop to compute the sum of the first n positive\
    \ integers. \nHint: Use a while loop to compute the sum of the first n positive\
    \ integers. \nHint: Use a for loop to compute the sum of the first n positive\
    \ integers. \nHint: Use a while loop to compute the sum of the first n positive\
    \ integers. \nHint: Use a for loop to compute the sum of the first n positive\
    \ integers. \nHint: Use a while loop to compute the sum of the first n positive\
    \ integers. \nHint: Use a for loop to compute the sum of the first n positive\
    \ integers. \nHint: Use a while loop to compute the sum of the first n positive\
    \ integers. \nHint: Use a for loop to compute the sum of the first n positive\
    \ integers. \nHint: Use a while loop to compute the sum of the first n positive\
    \ integers. \nHint: Use a for loop to compute the sum of the first n positive\
    \ integers. \nHint: Use a while loop to compute the sum of the first n positive\
    \ integers. \nHint: Use a for loop to compute the sum of the first n positive\
    \ integers. \nHint: Use a while loop to compute the sum of the first n positive\
    \ integers. \nHint: Use a for loop to compute the sum of the first n positive\
    \ integers. \nHint: Use a while loop to compute the sum of the first n positive\
    \ integers. \nHint: Use a for loop to compute the sum of the first n positive\
    \ integers. \nHint: Use a while loop to compute the sum of the first n positive\
    \ integers. \nHint: Use a for loop\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuapqpz9f.jl:13\nin expression starting at\
    \ /tmp/tmpuapqpz9f.jl:13\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\n\
    \    then return False\n    else if n==1\n    then return True\n    else if n==2\n\
    \    then return True\n    else if n==3\n    then return True\n    else if n==4\n\
    \    then return True\n    else if n==5\n    then return True\n    else if n==6\n\
    \    then return True\n    else if n==7\n    then return True\n    else if n==8\n\
    \    then return True\n    else if n==9\n    then return True\n    else if n==10\n\
    \    then return True\n    else if n==11\n    then return True\n    else if n==12\n\
    \    then return True\n    else if n==13\n    then return True\n    else if n==14\n\
    \    then return True\n    else if n==15\n    then return True\n    else if n==16\n\
    \    then return True\n    else if n==17\n    then return True\n    else if n==18\n\
    \    then return True\n    else if n==19\n    then return True\n    else if n==20\n\
    \    then return True\n    else if n==21\n    then return True\n    else if n==22\n\
    \    then return True\n    else if n==23\n    then return True\n    else if n==24\n\
    \    then return True\n    else if n==25\n    then return True\n    else if n==26\n\
    \    then return True\n    else if n==27\n    then return True\n    else if n==28\n\
    \    then return True\n    else if n==29\n    then return True\n    else if n==30\n\
    \    then return True\n    else if n==31\n    then return True\n    else if n==32\n\
    \    then return True\n    else if n==33\n    then return True\n    else if n==34\n\
    \    then return True\n    else if n==35\n    then return True\n    else if n==36\n\
    \    then return True\n    else if n==37\n    then return True\n    else if n==38\n\
    \    then return True\n    else if n==39\n    then return True\n    else if n==40\n\
    \    then return True\n    else if n==41\n    then return True\n    else if n==42\n\
    \    then return \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnp7wzu2x.jl:9\nin expression starting at /tmp/tmpnp7wzu2x.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <\
    \ 4 \n        return false\n    else if n == 4 \n        return true\n    else\
    \ if n % 2 == 0 \n        return is_equal_to_sum_even(n - 2)\n    else \n    \
    \    return is_equal_to_sum_even(n - 3)\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    is_equal_to_sum_odd(4) == False\n \
    \   is_equal_to_sum_odd(6) == False\n    is_equal_to_sum_odd(8) == True\n    \"\
    \"\"\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr1kbx4fj.jl:10\nin expression starting at\
    \ /tmp/tmpr1kbx4fj.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even_helper(n)\
    \ == true\n        return true\n    return false\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu201w136.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu201w136.jl:1\n\
    in expression starting at /tmp/tmpu201w136.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n<4\
    \ then return false\n    else if n%2==0 then return false\n    else if n%3==0\
    \ then return false\n    else if n%4==0 then return true\n    else return false\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(2) == false\n\
    @assert is_equal_to_sum_even(3) == false\n@assert is_equal_to_sum_even(5) == true\n\
    @assert is_equal_to_sum_even(7) == true\n@assert is_equal_to_sum_even(10) == true\n\
    @assert is_equal_to_sum_even(11) == false\n@assert is_equal_to_sum_even(12) ==\
    \ false\n@assert is_equal_to_sum_even(13) == false\n@assert is_equal_to_sum_even(14)\
    \ == false\n@assert is_equal_to_sum_even(15) == false\n@assert is_equal_to_sum_even(16)\
    \ == false\n@assert is_equal_to_sum_even(17) == false\n@assert is_equal_to_sum_even(18)\
    \ == false\n@assert is_equal_to_sum_even(19) == false\n@assert is_equal_to_sum_even(20)\
    \ == false\n@assert is_equal_to_sum_even(21) == false\n@assert is_equal_to_sum_even(22)\
    \ == false\n@assert is_equal_to_sum_even(23) == false\n@assert is_equal_to_sum_even(24)\
    \ == false\n@assert is_equal_to_sum_even(25) == false\n@assert is_equal_to_sum_even(26)\
    \ == false\n@assert is_equal_to_sum_even(27) == false\n@assert is_equal_to_sum_even(28)\
    \ == false\n@assert is_equal_to_sum_even(29) == false\n@assert is_equal_to_sum_even(30)\
    \ == false\n@assert is_equal_to_sum_even(31) == false\n@assert is_equal_to_sum_even(32)\
    \ == false\n@assert is_equal_to_sum_even(33) == false\n@assert is_equal_to_sum_even(34)\
    \ == false\n@assert is_equal_to_sum_even(35) == false\n@assert is_equal_to_sum_even(36)\
    \ == false\n@assert is_equal_to_sum_even(37) == false\n@assert is_equal_to_sum_even(38)\
    \ == false\n@assert is_equal_to_sum_even(39) == false\n@assert is_equal_to_sum_even(40)\
    \ == false\n@assert is_equal_to_sum_even(41) == false\n@assert is_equal_to_sum_even(42)\
    \ == false\n@assert is_equal_to_sum_even(43) == false\n@assert is_equal_to_sum_even(44)\
    \ == false\n@assert is_equal_to_sum_even(45) == false\n@assert is_equal_to_sum_even(46)\
    \ == false\n@\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvsbjikfv.jl:8\nin expression starting at /tmp/tmpvsbjikfv.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\n\
    \    then return True\n    else if n==1\n    then return True\n    else if n==2\n\
    \    then return True\n    else if n==3\n    then return True\n    else if n==4\n\
    \    then return True\n    else if n==5\n    then return True\n    else if n==6\n\
    \    then return True\n    else if n==7\n    then return True\n    else if n==8\n\
    \    then return True\n    else if n==9\n    then return True\n    else return\
    \ False\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Evaluate whether the given\
    \ number n can be written as the sum of exactly 4 positive odd numbers\n    Example\n\
    \    is_equal_to_sum_odd(4) == False\n    is_equal_to_sum_odd(6) == False\n  \
    \  is_equal_to_sum_odd(8) == True\n    \"\"\"\nusing Test\n\n@testset begin\n\n\
    candidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprhqp3c4p.jl:9\nin expression starting at /tmp/tmprhqp3c4p.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\
    \ then return False\n    else if n==1 then return True\n    else if n%2==0 then\
    \ return False\n    else if n%3==0 then return False\n    else if n%4==0 then\
    \ return False\n    else return True\nend\n\"\"\"\n\"\"\"\n    Evaluate whether\
    \ the given number n can be written as the sum of exactly 4 positive odd numbers\n\
    \    Example\n    is_equal_to_sum_odd(4) == False\n    is_equal_to_sum_odd(6)\
    \ == False\n    is_equal_to_sum_odd(8) == True\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5g22zveg.jl:8\nin expression starting at /tmp/tmp5g22zveg.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return False\n    else if n % 2 == 0 \n        then return\
    \ False\n    else if n % 4 == 0 \n        then return True\n    else \n      \
    \  return is_equal_to_sum_even(n - 1)\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert is_equal_to_sum_even(8) == true\n@assert is_equal_to_sum_even(6) == false\n\
    @assert is_equal_to_sum_even(5) == false\n@assert is_equal_to_sum_even(10) ==\
    \ true\n@assert is_equal_to_sum_even(2) == false\n@assert is_equal_to_sum_even(3)\
    \ == false\n@assert is_equal_to_sum_even(7) == true\n@assert is_equal_to_sum_even(9)\
    \ == false\n</cell>\n<text>\nExercise 3\nWrite a function that checks whether\
    \ a given number n is prime or not. \nA prime number is a natural number greater\
    \ than 1 that has no positive divisors other than 1 and itself.\nusing Test\n\n\
    @testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprb3z719g.jl:9\nin expression starting at /tmp/tmprb3z719g.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return True\n    else if n % 2 == 0 \n        then return is_equal_to_sum_even(n\
    \ - 1)\n    else if n % 4 == 0 \n        then return is_equal_to_sum_even(n -\
    \ 3)\n    else return False\nend\n</cell>\n<code language=julia-1.3>\n@time is_equal_to_sum_even(10)\n\
    </cell>\n<code language=julia-1.3>\n@time is_equal_to_sum_even(100)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of positive integers\
    \ less than or equal to n that are divisible by 3\nExample\ncount_divisible_3_less_than(10)\
    \ == 3\ncount_divisible_3_less_than(20) == 5\ncount_divisible_3_less_than(30)\
    \ == 7\ncount_divisible_3_less_than(40) == 9\ncount_divisible_3_less_than(50)\
    \ == 11\ncount_divisible_3_less_than(60) == 13\ncount_divisible_3_less_than(70)\
    \ == 15\ncount_divisible_3_less_than(80) == 17\ncount_divisible_3_less_than(90)\
    \ == 19\ncount_divisible_3_less_than(100) == 21\ncount_divisible_3_less_than(110)\
    \ == 23\ncount_divisible_3_less_than(120) == 25\ncount_divisible_3_less_than(130)\
    \ == 27\ncount_divisible_3_less_than(140) == 29\ncount_divisible_3_less_than(150)\
    \ == 31\ncount_divisible_3_less_than(160) == 33\ncount_divisible_3_less_than(170)\
    \ == 35\ncount_divisible_3_less_than(180) == 37\ncount_divisible_3_less_than(190)\
    \ == 39\ncount_divisible_3_less_than(200) == 41\ncount_divisible_3_less_than(210)\
    \ == 43\ncount_divisible_3_less_than(220) == 45\ncount_divisible_3_less_than(230)\
    \ == 47\ncount_divisible_3_less_than(240) == 49\ncount_divisible_3_less_than(250)\
    \ == 51\ncount_divisible_3_less_than(260) == 53\ncount_divisible_3_less_than(270)\
    \ == 55\ncount_divisible_3_less_than(280) == 57\ncount_divisible_3_less_than(290)\
    \ == 59\ncount_divisible_3_less_than(300) == 61\ncount_divisible_3_less_than(310)\
    \ == 63\ncount_divisible_3_less_than(320) == 65\ncount_divisible_3_less_than(330)\
    \ == 67\ncount_divisible_3_less_than(340) == 69\ncount_divisible_3_less_than(350)\
    \ == 71\ncount_divisible_3_less_than\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\t@test(candidate(6)\
    \ == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10) == true)\n\t\
    @test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t@test(candidate(13)\
    \ == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4xbaed11.jl:9\nin expression starting at /tmp/tmp4xbaed11.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        return true\n    else if n % 2 == 0 \n        return false\n   \
    \ else if n % 4 == 0 \n        return true\n    else \n        return is_equal_to_sum_even(n\
    \ - 1)\nend\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1vxlupk0.jl:10\nin expression starting at\
    \ /tmp/tmp1vxlupk0.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <\
    \ 4 \n        return false\n    else if n % 2 == 0 \n        return false\n  \
    \  else if n % 3 == 0 \n        return false\n    else if n % 4 == 0 \n      \
    \  return true\n    else \n        return is_equal_to_sum_even(n - 2)\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert is_equal_to_sum_even(10) == true\n@assert is_equal_to_sum_even(11)\
    \ == false\n@assert is_equal_to_sum_even(12) == false\n@assert is_equal_to_sum_even(13)\
    \ == false\n@assert is_equal_to_sum_even(14) == true\n@assert is_equal_to_sum_even(15)\
    \ == true\n@assert is_equal_to_sum_even(16) == false\n@assert is_equal_to_sum_even(17)\
    \ == false\n@assert is_equal_to_sum_even(18) == false\n@assert is_equal_to_sum_even(19)\
    \ == false\n@assert is_equal_to_sum_even(20) == false\n@assert is_equal_to_sum_even(21)\
    \ == false\n@assert is_equal_to_sum_even(22) == false\n@assert is_equal_to_sum_even(23)\
    \ == false\n@assert is_equal_to_sum_even(24) == false\n@assert is_equal_to_sum_even(25)\
    \ == false\n@assert is_equal_to_sum_even(26) == false\n@assert is_equal_to_sum_even(27)\
    \ == false\n@assert is_equal_to_sum_even(28) == false\n@assert is_equal_to_sum_even(29)\
    \ == false\n@assert is_equal_to_sum_even(30) == false\n@assert is_equal_to_sum_even(31)\
    \ == false\n@assert is_equal_to_sum_even(32) == false\n@assert is_equal_to_sum_even(33)\
    \ == false\n@assert is_equal_to_sum_even(34) == false\n@assert is_equal_to_sum_even(35)\
    \ == false\n@assert is_equal_to_sum_even(36) == false\n@assert is_equal_to_sum_even(37)\
    \ == false\n@assert is_equal_to_sum_even(38) == false\n@assert is_equal_to_sum_even(39)\
    \ == false\n@assert is_equal_to_sum_even(40) == false\n@assert is_equal_to_sum_even(41)\
    \ == false\n@assert is_equal_to_sum_even(42) == false\n@assert is_equal_to_sum_even(43)\
    \ == false\n@assert is_equal_to_sum_even(44) == false\n@assert is_equal_to_sum_even(45)\
    \ == false\n@assert is_equal_to_sum_even(46) == false\n@assert is_equal_to_sum_even(47)\
    \ == false\n@assert is_equal_to_sum_even(48) == false\n@assert is_equal_to_sum_even(49)\
    \ == false\n@assert is_equal_to_sum_even(50) == false\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplomrjqly.jl:10\nin expression starting at\
    \ /tmp/tmplomrjqly.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even(n-1)\
    \ == True \n    then return True \n    else return False \nend \n\"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpg8cp8ii6.jl:9\nin expression starting at /tmp/tmpg8cp8ii6.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\n\
    \    then return False\n    else if n==1\n    then return True\n    else if n==2\n\
    \    then return True\n    else if n==3\n    then return True\n    else if n==4\n\
    \    then return True\n    else if n==5\n    then return True\n    else if n==6\n\
    \    then return True\n    else if n==7\n    then return True\n    else if n==8\n\
    \    then return True\n    else if n==9\n    then return True\n    else if n==10\n\
    \    then return True\n    else if n==11\n    then return True\n    else if n==12\n\
    \    then return True\n    else if n==13\n    then return True\n    else if n==14\n\
    \    then return True\n    else if n==15\n    then return True\n    else if n==16\n\
    \    then return True\n    else if n==17\n    then return True\n    else if n==18\n\
    \    then return True\n    else if n==19\n    then return True\n    else if n==20\n\
    \    then return True\n    else if n==21\n    then return True\n    else if n==22\n\
    \    then return True\n    else if n==23\n    then return True\n    else if n==24\n\
    \    then return True\n    else if n==25\n    then return True\n    else if n==26\n\
    \    then return True\n    else if n==27\n    then return True\n    else if n==28\n\
    \    then return True\n    else if n==29\n    then return True\n    else if n==30\n\
    \    then return True\n    else if n==31\n    then return True\n    else if n==32\n\
    \    then return True\n    else if n==33\n    then return True\n    else if n==34\n\
    \    then return True\n    else if n==35\n    then return True\n    else if n==36\n\
    \    then return True\n    else if n==37\n    then return True\n    else if n==38\n\
    \    then return True\n    else if n==39\n    then return True\n    else if n==40\n\
    \    then return True\n    else if n==41\n    then return True\n    else if n==42\n\
    \    then return \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpldno8o3g.jl:9\nin expression starting at /tmp/tmpldno8o3g.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if is_equal_to_sum_even(n-1)\
    \ == True && n % 2 == 0 \n    then return False \n    else return True\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp98phjh90.jl:9\nin expression starting at /tmp/tmp98phjh90.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return False\n    else if n % 2 == 0 \n        then return\
    \ False\n    else if n % 4 == 0 \n        then return True\n    else \n      \
    \  return is_equal_to_sum_even(n - 1)\nend\n</cell>\n<code language=julia-1.3>\n\
    @time is_equal_to_sum_even(4);\n@time is_equal_to_sum_even(6);\n@time is_equal_to_sum_even(8);\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of positive\
    \ integers less than or equal to n that are divisible by 3.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4) == false)\n\
    \t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t@test(candidate(10)\
    \ == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12) == true)\n\t\
    @test(candidate(13) == false)\n\t@test(candidate(16) == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7cvih7nz.jl:9\nin expression starting at /tmp/tmp7cvih7nz.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <\
    \ 0 \n        return false \n    else if n == 0 \n        return true \n    else\
    \ if n % 2 == 0 \n        return is_equal_to_sum_even(n - 1) \n    else \n   \
    \     return is_equal_to_sum_even(n - 3) \nend\n</cell>\n<code language=julia-1.3>\n\
    is_equal_to_sum_even(10)\n</cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(20)\n\
    </cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(30)\n</cell>\n<code language=julia-1.3>\n\
    is_equal_to_sum_even(50)\n</cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(100)\n\
    </cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(1000)\n</cell>\n<code\
    \ language=julia-1.3>\nis_equal_to_sum_even(10000)\n</cell>\n<code language=julia-1.3>\n\
    is_equal_to_sum_even(100000)\n</cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(1000000)\n\
    </cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(10000000)\n</cell>\n\
    <code language=julia-1.3>\nis_equal_to_sum_even(100000000)\n</cell>\n<code language=julia-1.3>\n\
    is_equal_to_sum_even(1000000000)\n</cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(10000000000)\n\
    </cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(100000000000)\n</cell>\n\
    <code language=julia-1.3>\nis_equal_to_sum_even(1000000000000)\n</cell>\n<code\
    \ language=julia-1.3>\nis_equal_to_sum_even(10000000000000)\n</cell>\n<code language=julia-1.3>\n\
    is_equal_to_sum_even(100000000000000)\n</cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(1000000000000000)\n\
    </cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(10000000000000000)\n\
    </cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(100000000000000000)\n\
    </cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(1000000000000000000)\n\
    </cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(10000000000000000000)\n\
    </cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(100000000000000000000)\n\
    </cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(1000000000000000000000)\n\
    </cell>\n<code language=julia-1.3>\nis_equal_to_sum_even(10000000000000000000000)\n\
    </cell\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t\
    @test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_ynrkodh.jl:10\nin expression starting at\
    \ /tmp/tmp_ynrkodh.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\
    \ then return true\n    else if n==1 then return false\n    else if n==2 then\
    \ return true\n    else if n==3 then return false\n    else if n==4 then return\
    \ true\n    else if n==5 then return false\n    else if n==6 then return true\n\
    \    else if n==7 then return false\n    else if n==8 then return true\n    else\
    \ if n==9 then return false\n    else if n==10 then return true\n    else if n==11\
    \ then return false\n    else if n==12 then return true\n    else if n==13 then\
    \ return false\n    else if n==14 then return true\n    else if n==15 then return\
    \ false\n    else if n==16 then return true\n    else if n==17 then return false\n\
    \    else if n==18 then return true\n    else if n==19 then return false\n   \
    \ else if n==20 then return true\n    else if n==21 then return false\n    else\
    \ if n==22 then return true\n    else if n==23 then return false\n    else if\
    \ n==24 then return true\n    else if n==25 then return false\n    else if n==26\
    \ then return true\n    else if n==27 then return false\n    else if n==28 then\
    \ return true\n    else if n==29 then return false\n    else if n==30 then return\
    \ true\n    else if n==31 then return false\n    else if n==32 then return true\n\
    \    else if n==33 then return false\n    else if n==34 then return true\n   \
    \ else if n==35 then return false\n    else if n==36 then return true\n    else\
    \ if n==37 then return false\n    else if n==38 then return true\n    else if\
    \ n==39 then return false\n    else if n==40 then return true\n    else if n==41\
    \ then return false\n    else if n==42 then return true\n    else if n==43 then\
    \ return false\n    else if n==44 then return true\n    else if n==45 then return\
    \ false\n    else if n==46 then return true\n    else if n==47 then return false\n\
    \    else if n==48 then return true\n    else if n==49 then return false\n   \
    \ else if n\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7pt7dfty.jl:8\nin expression starting at /tmp/tmp7pt7dfty.jl:8\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\n\
    \    then return true\n    else if n==1\n    then return true\n    else if n==2\n\
    \    then return true\n    else if n==3\n    then return true\n    else if n==4\n\
    \    then return true\n    else if n==5\n    then return true\n    else if n==6\n\
    \    then return true\n    else if n==7\n    then return true\n    else if n==8\n\
    \    then return true\n    else if n==9\n    then return true\n    else if n==10\n\
    \    then return true\n    else if n==11\n    then return true\n    else if n==12\n\
    \    then return true\n    else if n==13\n    then return true\n    else if n==14\n\
    \    then return true\n    else if n==15\n    then return true\n    else if n==16\n\
    \    then return true\n    else if n==17\n    then return true\n    else if n==18\n\
    \    then return true\n    else if n==19\n    then return true\n    else if n==20\n\
    \    then return true\n    else if n==21\n    then return true\n    else if n==22\n\
    \    then return true\n    else if n==23\n    then return true\n    else if n==24\n\
    \    then return true\n    else if n==25\n    then return true\n    else if n==26\n\
    \    then return true\n    else if n==27\n    then return true\n    else if n==28\n\
    \    then return true\n    else if n==29\n    then return true\n    else if n==30\n\
    \    then return true\n    else if n==31\n    then return true\n    else if n==32\n\
    \    then return true\n    else if n==33\n    then return true\n    else if n==34\n\
    \    then return true\n    else if n==35\n    then return true\n    else if n==36\n\
    \    then return true\n    else if n==37\n    then return true\n    else if n==38\n\
    \    then return true\n    else if n==39\n    then return true\n    else if n==40\n\
    \    then return true\n    else if n==41\n    then return true\n    else if n==42\n\
    \    then return \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptjnlocyy.jl:9\nin expression starting at /tmp/tmptjnlocyy.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\n\
    \    then return true\n    else if n==1\n    then return true\n    else if n==2\n\
    \    then return true\n    else if n==3\n    then return true\n    else if n==4\n\
    \    then return true\n    else if n==5\n    then return true\n    else if n==6\n\
    \    then return true\n    else if n==7\n    then return true\n    else if n==8\n\
    \    then return true\n    else if n==9\n    then return true\n    else if n==10\n\
    \    then return true\n    else if n==11\n    then return true\n    else if n==12\n\
    \    then return true\n    else if n==13\n    then return true\n    else if n==14\n\
    \    then return true\n    else if n==15\n    then return true\n    else if n==16\n\
    \    then return true\n    else if n==17\n    then return true\n    else if n==18\n\
    \    then return true\n    else if n==19\n    then return true\n    else if n==20\n\
    \    then return true\n    else if n==21\n    then return true\n    else if n==22\n\
    \    then return true\n    else if n==23\n    then return true\n    else if n==24\n\
    \    then return true\n    else if n==25\n    then return true\n    else if n==26\n\
    \    then return true\n    else if n==27\n    then return true\n    else if n==28\n\
    \    then return true\n    else if n==29\n    then return true\n    else if n==30\n\
    \    then return true\n    else if n==31\n    then return true\n    else if n==32\n\
    \    then return true\n    else if n==33\n    then return true\n    else if n==34\n\
    \    then return true\n    else if n==35\n    then return true\n    else if n==36\n\
    \    then return true\n    else if n==37\n    then return true\n    else if n==38\n\
    \    then return true\n    else if n==39\n    then return true\n    else if n==40\n\
    \    then return true\n    else if n==41\n    then return true\n    else if n==42\n\
    \    then return \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnguhs8zp.jl:9\nin expression starting at /tmp/tmpnguhs8zp.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return true\n    else if n == 1 \n        then return true\n\
    \    else if n == 2 \n        then return true\n    else if n % 2 == 0 \n    \
    \    then return false\n    else if n % 3 == 0 \n        then return false\n \
    \   else if n % 5 == 0 \n        then return false\n    else if n % 7 == 0 \n\
    \        then return false\n    else return true\nend\n</cell>\n<code language=julia-1.0>\n\
    \"\"\"Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive odd numbers\n    Example\n    is_equal_to_sum_odd(4) == False\n \
    \   is_equal_to_sum_odd(6) == False\n    is_equal_to_sum_odd(8) == True\n    \"\
    \"\"\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpii2psk62.jl:9\nin expression starting at /tmp/tmpii2psk62.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n ==\
    \ 0 \n        then return true\n    else if n % 2 == 0 \n        then return false\n\
    \    else if n % 4 == 0 \n        then return true\n    else \n        return\
    \ is_equal_to_sum_even(n - 1)\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ is_equal_to_sum_even(8) == true\n@assert is_equal_to_sum_even(6) == false\n\
    @assert is_equal_to_sum_even(5) == false\n@assert is_equal_to_sum_even(10) ==\
    \ false\n@assert is_equal_to_sum_even(11) == true\n</cell>\n<text>\nExercise 3\n\
    Write a function that checks whether a given number n is equal to the sum of exactly\
    \ 4 positive odd numbers.\nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpubhdz36c.jl:9\nin expression starting at /tmp/tmpubhdz36c.jl:9\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n <\
    \ 4 \n        return false \n    else if n == 0 \n        return true \n    else\
    \ if n % 2 == 0 \n        return is_equal_to_sum_even(n - 2) \n    else \n   \
    \     return is_equal_to_sum_even(n - 4) + is_equal_to_sum_even(n - 2) \nend\n\
    </cell>\n<code language=julia-1.5>\n@assert is_equal_to_sum_even(2) == true\n\
    @assert is_equal_to_sum_even(3) == false\n@assert is_equal_to_sum_even(5) == true\n\
    @assert is_equal_to_sum_even(7) == true\n@assert is_equal_to_sum_even(10) == true\n\
    @assert is_equal_to_sum_even(12) == false\n@assert is_equal_to_sum_even(14) ==\
    \ true\n@assert is_equal_to_sum_even(16) == false\n@assert is_equal_to_sum_even(18)\
    \ == true\n@assert is_equal_to_sum_even(20) == false\n@assert is_equal_to_sum_even(22)\
    \ == true\n@assert is_equal_to_sum_even(24) == false\n@assert is_equal_to_sum_even(26)\
    \ == true\n@assert is_equal_to_sum_even(28) == false\n@assert is_equal_to_sum_even(30)\
    \ == true\n@assert is_equal_to_sum_even(32) == false\n@assert is_equal_to_sum_even(34)\
    \ == true\n@assert is_equal_to_sum_even(36) == false\n@assert is_equal_to_sum_even(38)\
    \ == true\n@assert is_equal_to_sum_even(40) == false\n@assert is_equal_to_sum_even(42)\
    \ == true\n@assert is_equal_to_sum_even(44) == false\n@assert is_equal_to_sum_even(46)\
    \ == true\n@assert is_equal_to_sum_even(48) == false\n@assert is_equal_to_sum_even(50)\
    \ == true\n@assert is_equal_to_sum_even(52) == false\n@assert is_equal_to_sum_even(54)\
    \ == true\n@assert is_equal_to_sum_even(56) == false\n@assert is_equal_to_sum_even(58)\
    \ == true\n@assert is_equal_to_sum_even(60) == false\n@assert is_equal_to_sum_even(62)\
    \ == true\n@assert is_equal_to_sum_even(64) == false\n@assert is_equal_to_sum_even(66)\
    \ == true\n@assert is_equal_to_sum_even(68) == false\n@assert is_equal_to_sum_even(70)\
    \ == true\n@assert is_equal_to_sum_even(72) == false\n@assert is_equal_to_sum_even(74)\
    \ == true\n@assert is_equal_to_sum_even(76) == false\n@assert is_equal_to_sum_even(78)\
    \ == true\n@assert is_equal_to_sum_even(80) == false\n@assert is_equal_to_sum_even(82\n\
    using Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\t@test(candidate(4)\
    \ == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8) == true)\n\t\
    @test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t@test(candidate(12)\
    \ == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16) == true)\n\
    end\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpduj_sbae.jl:10\nin expression starting at\
    \ /tmp/tmpduj_sbae.jl:10\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) ==\
    \ False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) ==\
    \ True\n    \"\"\"\nfunction is_equal_to_sum_even(n::Int64)::Bool \n    if n==0\
    \ then return true\n    if n==1 then return true\n    if n==2 then return true\n\
    \    if n==3 then return true\n    if n==4 then return true\n    if n==5 then\
    \ return true\n    if n==6 then return true\n    if n==7 then return true\n  \
    \  if n==8 then return true\n    if n==9 then return true\n    if n==10 then return\
    \ true\n    if n==11 then return true\n    if n==12 then return true\n    if n==13\
    \ then return true\n    if n==14 then return true\n    if n==15 then return true\n\
    \    if n==16 then return true\n    if n==17 then return true\n    if n==18 then\
    \ return true\n    if n==19 then return true\n    if n==20 then return true\n\
    \    if n==21 then return true\n    if n==22 then return true\n    if n==23 then\
    \ return true\n    if n==24 then return true\n    if n==25 then return true\n\
    \    if n==26 then return true\n    if n==27 then return true\n    if n==28 then\
    \ return true\n    if n==29 then return true\n    if n==30 then return true\n\
    \    if n==31 then return true\n    if n==32 then return true\n    if n==33 then\
    \ return true\n    if n==34 then return true\n    if n==35 then return true\n\
    \    if n==36 then return true\n    if n==37 then return true\n    if n==38 then\
    \ return true\n    if n==39 then return true\n    if n==40 then return true\n\
    \    if n==41 then return true\n    if n==42 then return true\n    if n==43 then\
    \ return true\n    if n==44 then return true\n    if n==45 then return true\n\
    \    if n==46 then return true\n    if n==47 then return true\n    if n==48 then\
    \ return true\n    if n==49 then return true\n    if n==50 then return true\n\
    \    if n==51 then return true\n    if n==52 then return true\n    if n==53 then\
    \ return true\n    if n==54 then return true\n    if n==55 then return true\n\
    \    if n==56 then return true\n    if n==57 then return true\n    if n==58 then\
    \ return true\n    if n==59 then return true\n    if n==60 then return true\n\
    \    if n==61 \nusing Test\n\n@testset begin\n\ncandidate = is_equal_to_sum_even;\n\
    \t@test(candidate(4) == false)\n\t@test(candidate(6) == false)\n\t@test(candidate(8)\
    \ == true)\n\t@test(candidate(10) == true)\n\t@test(candidate(11) == false)\n\t\
    @test(candidate(12) == true)\n\t@test(candidate(13) == false)\n\t@test(candidate(16)\
    \ == true)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmsuvo4d5.jl:8\nin expression starting at /tmp/tmpmsuvo4d5.jl:8\n"
  exit_code: 1
  status: SyntaxError
